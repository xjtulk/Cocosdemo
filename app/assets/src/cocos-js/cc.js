System.register([],(function(e,t){"use strict";return{execute:function(){e({BitMask:je,CCClass:zt,CacheMode:void 0,DebugMode:void 0,EAxisDirection:void 0,ERigidBodyType:void 0,Enum:qe,Eventify:ql,ExtrapolationMode:void 0,HorizontalTextAlignment:void 0,InstanceMaterialType:void 0,KeyCode:void 0,NodeEventType:void 0,NodeSpace:void 0,Overflow:void 0,PipelineEventType:void 0,QuatInterpolationMode:void 0,RealInterpolationMode:void 0,SystemEventType:void 0,TangentWeightMode:void 0,TransformBit:void 0,VerticalTextAlignment:void 0,WorldNode3DToLocalNodeUI:nE,WorldNode3DToWorldNodeUI:iE,absMax:hn,absMaxComponent:ln,approx:qt,assert:E,assertID:L,bezier:_d,bezierByTime:yd,ccenum:Ke,clamp:Xt,clamp01:Yt,color:pn,computeRatioByType:kQ,createDefaultPipeline:WP,debug:T,deserialize:Eu,earcut:iG,enumerableProps:un,equals:Wt,error:C,errorID:N,find:tP,fragmentText:LO,getBaselineOffset:function(){return 0},getEnglishWordPartAtFirst:NO,getEnglishWordPartAtLast:MO,getError:F,getPathFromRoot:function(e,t){let n=e,i="";for(;null!==n&&n!==t;)i=`${n.name}/${i}`,n=n.parent;return i.slice(0,-1)},getSerializationMetadata:function(e){return e[Ec]},getWorldTransformUntilRoot:sX,instantiate:Iu,inverseLerp:cn,isDisplayStats:z,isEnglishWordPartAtFirst:function(e){return wO.test(e)},isEnglishWordPartAtLast:function(e){return PO.test(e)},isUnicodeCJK:IO,isUnicodeSpace:RO,isValid:cl,lerp:Kt,log:x,logID:I,markAsWarning:void 0,mat4:Ln,murmurhash2_32_gc:fo,nextPow2:on,pingPong:an,pseudoRandom:tn,pseudoRandomRange:nn,pseudoRandomRangeInt:sn,quat:Rn,randomRange:Zt,randomRangeInt:en,rect:qn,removeProperty:void 0,repeat:rn,replaceProperty:void 0,safeMeasureText:DO,sampleAnimationCurve:HQ,setDefaultLogTimes:function(e){e>0&&(X=e)},setDisplayStats:U,size:jn,toDegree:Qt,toRadian:$t,tween:Gme,tweenUtil:Vme,v2:Un,v3:xn,v4:Vn,warn:S,warnID:D});const n=2147483647;function i(e){return(e>0)-(e<0)}function s(e){let t,n;return t=(e>65535)<<4,n=((e>>>=t)>255)<<3,t|=n,n=((e>>>=n)>15)<<2,t|=n,n=((e>>>=n)>3)<<1,t|=n,t|(e>>>=n)>>1}function o(e){return 16843009*((e=(858993459&(e-=e>>>1&1431655765))+(e>>>2&858993459))+(e>>>4)&252645135)>>>24}function r(e){let t=32;return(e&=-e)&&t--,65535&e&&(t-=16),16711935&e&&(t-=8),252645135&e&&(t-=4),858993459&e&&(t-=2),1431655765&e&&(t-=1),t}function a(e){return--e,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,1+(e|=e>>>16)}const c=new Array(256);(e=>{for(let t=0;t<256;++t){let n=t,i=t,s=7;for(n>>>=1;n;n>>>=1)i<<=1,i|=1&n,--s;e[t]=i<<s&255}})(c);var l=Object.freeze({__proto__:null,INT_BITS:32,INT_MAX:n,INT_MIN:-2147483648,sign:i,abs:function(e){const t=e>>31;return(e^t)-t},min:function(e,t){return t^(e^t)&-(e<t)},max:function(e,t){return e^(e^t)&-(e<t)},isPow2:function(e){return!(e&e-1||!e)},log2:s,log10:function(e){return e>=1e9?9:e>=1e8?8:e>=1e7?7:e>=1e6?6:e>=1e5?5:e>=1e4?4:e>=1e3?3:e>=100?2:e>=10?1:0},popCount:o,countTrailingZeros:r,nextPow2:a,prevPow2:function(e){return e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,(e|=e>>>16)-(e>>>1)},parity:function(e){return e^=e>>>16,e^=e>>>8,e^=e>>>4,27030>>>(e&=15)&1},reverse:function(e){return c[255&e]<<24|c[e>>>8&255]<<16|c[e>>>16&255]<<8|c[e>>>24&255]},interleave2:function(e,t){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e&=65535)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t&=65535)|t<<8))|t<<4))|t<<2))|t<<1))<<1},deinterleave2:function(e,t){return(e=65535&((e=16711935&((e=252645135&((e=858993459&((e=e>>>t&1431655765)|e>>>1))|e>>>2))|e>>>4))|e>>>16))<<16>>16},interleave3:function(e,t,n){return e=1227133513&((e=3272356035&((e=251719695&((e=4278190335&((e&=1023)|e<<16))|e<<8))|e<<4))|e<<2),(e|=(t=1227133513&((t=3272356035&((t=251719695&((t=4278190335&((t&=1023)|t<<16))|t<<8))|t<<4))|t<<2))<<1)|(n=1227133513&((n=3272356035&((n=251719695&((n=4278190335&((n&=1023)|n<<16))|n<<8))|n<<4))|n<<2))<<2},deinterleave3:function(e,t){return(e=1023&((e=4278190335&((e=251719695&((e=3272356035&((e=e>>>t&1227133513)|e>>>2))|e>>>4))|e>>>8))|e>>>16))<<22>>22},nextCombination:function(e){const t=e|e-1;return t+1|(~t&-~t)-1>>>r(e)+1}});e("bits",l);const h="undefined"==typeof window?global:window,u=e("cclegacy",{_global:h});u.internal={},h.CC_BUILD=!0,h.CC_TEST=!1,h.CC_EDITOR=false,h.CC_PREVIEW=!1,h.CC_DEV=!1,h.CC_DEBUG=!1,h.CC_JSB=!0,h.CC_BYTEDANCE=!1,h.CC_WECHAT=!1,h.CC_ALIPAY=!1,h.CC_XIAOMI=!1,h.CC_BAIDU=!1,h.CC_COCOSPLAY=!1,h.CC_HUAWEI=!1,h.CC_OPPO=!1,h.CC_VIVO=!1,h.CC_MINIGAME=!1,h.CC_RUNTIME_BASED=!1,h.CC_SUPPORT_JIT=!0;const _=e("VERSION","3.5.2");h.CocosEngine=u.ENGINE_VERSION=_,h.cc=u;let d=null,p=console.log.bind(console),f=p,m=p,g=(e,t,...n)=>{e||console.log(`ASSERT: ${y(t,...n)}`)},v=p;function y(e,...t){return u.js.formatStr.apply(null,[e].concat(t))}function x(e,...t){return p(e,...t)}function S(e,...t){return f(e,...t)}function C(e,...t){return m(e,...t)}function E(e,t,...n){return g(e,t,...n)}function T(...e){return v(...e)}function b(e){if(p=f=m=g=v=()=>{},e!==B.NONE){if(e>B.ERROR){const t=e=>{if(u.game.canvas){if(!d){const e=document.createElement("Div");e.setAttribute("id","logInfoDiv"),e.setAttribute("width","200"),e.setAttribute("height",u.game.canvas.height);const t=e.style;t.zIndex="99999",t.position="absolute",t.top=t.left="0",d=document.createElement("textarea"),d.setAttribute("rows","20"),d.setAttribute("cols","30"),d.setAttribute("disabled","true");const n=d.style;n.backgroundColor="transparent",n.borderBottom="1px solid #cccccc",n.borderTopWidth=n.borderLeftWidth=n.borderRightWidth="0px",n.borderTopStyle=n.borderLeftStyle=n.borderRightStyle="none",n.padding="0px",n.margin="0px",e.appendChild(d),u.game.canvas.parentNode.appendChild(e)}d.value=`${d.value+e}\r\n`,d.scrollTop=d.scrollHeight}};m=(e,...n)=>{t(`ERROR :  ${y(e,...n)}`)},g=(e,n,...i)=>{e||t(`ASSERT: ${y(n,...i)}`)},e!==B.ERROR_FOR_WEB_PAGE&&(f=(e,...n)=>{t(`WARN :  ${y(e,...n)}`)}),e===B.INFO_FOR_WEB_PAGE&&(p=(e,...n)=>{t(y(e,...n))})}else console&&(console.error||(console.error=console.log),console.warn||(console.warn=console.log),m=console.error.bind?console.error.bind(console):console.error,g=(e,t,...n)=>{if(!e){const e=y(t,...n);throw new Error(e)}});if(e!==B.ERROR&&(f=console.warn.bind?console.warn.bind(console):console.warn),e<=B.INFO&&(p="JavaScriptCore"===scriptEngineType?(e,...t)=>console.log.apply(console,[e,...t]):console.log),e<=B.VERBOSE&&"function"==typeof console.debug){const e=console.debug.bind(console);v=(...t)=>e(...t)}}}function A(e){{const t=e.stack;return void C(t?`${e}\n${t}`:e)}}function P(e){return(t,...n)=>{const i=`${e} ${t}, please go to https://github.com/cocos-creator/engine/blob/develop/EngineErrorMap.md#${t} to see details.`;return 0===n.length?i:`${i} Arguments: ${n.join(", ")}`}}const w=P("Log");function I(e,...t){x(w(e,...t))}const R=P("Warning");function D(e,...t){S(R(e,...t))}const O=P("Error");function N(e,...t){C(O(e,...t))}const M=P("Assert");function L(e,t,...n){e||E(!1,M(t,...n))}let B;function F(e,...t){return O(e,...t)}function z(){return!!u.profiler&&u.profiler.isShowingStats()}function U(e){u.profiler&&(e?u.profiler.showStats():u.profiler.hideStats(),u.game.config.showFPS=!!e)}!function(e){e[e.NONE=0]="NONE",e[e.VERBOSE=1]="VERBOSE",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.ERROR=4]="ERROR",e[e.INFO_FOR_WEB_PAGE=5]="INFO_FOR_WEB_PAGE",e[e.WARN_FOR_WEB_PAGE=6]="WARN_FOR_WEB_PAGE",e[e.ERROR_FOR_WEB_PAGE=7]="ERROR_FOR_WEB_PAGE"}(B||(B=e("DebugMode",{})));var G=Object.freeze({__proto__:null,log:x,warn:S,error:C,assert:E,debug:T,_resetDebugSetting:b,_throw:A,logID:I,warnID:D,errorID:N,assertID:L,get DebugMode(){return B},getError:F,isDisplayStats:z,setDisplayStats:U});let V,H,k,j,W,q,X=10,Y=0;const K=new Map;j=(e,t,n,i,s,o,r)=>{const a=K.get(o);a&&a.logTimes>a.count&&(s(`'%s' is deprecated, please use '%s' instead. ${r}`,`${e}.${t}`,`${n}.${i}`),a.count++)},V=e("replaceProperty",((e,t,n)=>{null!=e&&n.forEach((n=>{const i=Y++;K.set(i,{id:i,count:0,logTimes:void 0!==n.logTimes?n.logTimes:X});const s=null!=n.target?n.target:e,o=null!=n.newName?n.newName:n.name,r=null!=n.targetName?n.targetName:t,a=s===e,c=n.suggest?`(${n.suggest})`:"";if(null!=n.customFunction)e[n.name]=function(){return j(t,n.name,r,o,S,i,c),n.customFunction.call(this,...arguments)};else if(null!=n.customSetter||null!=n.customGetter){const s=null!=n.customSetter,a=null!=n.customGetter;s&&a?Object.defineProperty(e,n.name,{get(){return j(t,n.name,r,o,S,i,c),n.customGetter.call(this)},set(e){j(t,n.name,r,o,S,i,c),n.customSetter.call(this,e)},enumerable:!1}):s?Object.defineProperty(e,n.name,{set(e){j(t,n.name,r,o,S,i,c),n.customSetter.call(this,e)},enumerable:!1}):a&&Object.defineProperty(e,n.name,{get(){return j(t,n.name,r,o,S,i,c),n.customGetter.call(this)},enumerable:!1})}else Object.defineProperty(e,n.name,{get(){return j(t,n.name,r,o,S,i,c),a?this[o]:s[o]},set(e){j(t,n.name,r,o,S,i,c),a?this[o]=e:s[o]=e},enumerable:!1})}))})),q=(e,t,n,i,s)=>{const o=K.get(i);o&&o.logTimes>o.count&&(n(`'%s' has been removed. ${s}`,`${e}.${t}`),o.count++)},H=e("removeProperty",((e,t,n)=>{null!=e&&n.forEach((n=>{const i=Y++;K.set(i,{id:i,count:0,logTimes:void 0!==n.logTimes?n.logTimes:X});const s=n.suggest?`(${n.suggest})`:"";Object.defineProperty(e,n.name,{get:()=>q(t,n.name,C,i,s),set(){q(t,n.name,C,i,s)},enumerable:!1})}))})),W=(e,t,n,i,s)=>{const o=K.get(i);o&&o.logTimes>o.count&&(n(`'%s' is deprecated. ${s}`,`${e}.${t}`),o.count++)},k=e("markAsWarning",((e,t,n)=>{if(null==e)return;const i=(t,n,i,s,o,r)=>{if(t.get){const e=t.get;t.get=function(){return W(n,i,s,o,r),e.call(this)}}if(t.set){const e=t.set;t.set=function(t){W(n,i,s,o,r),e.call(this,t)}}Object.defineProperty(e,i,t)};n.forEach((n=>{const s=n.name,o=Object.getOwnPropertyDescriptor(e,s);if(!o||!o.configurable)return;const r=Y++;K.set(r,{id:r,count:0,logTimes:void 0!==n.logTimes?n.logTimes:X});const a=n.suggest?`(${n.suggest})`:"";if(void 0!==o.value)if("function"==typeof o.value){const n=o.value;e[s]=function(){return W(t,s,S,r,a),n.call(this,...arguments)}}else{let n=o.value;Object.defineProperty(e,s,{configurable:!0,get:()=>(W(t,s,S,r,a),n)}),o.writable&&Object.defineProperty(e,s,{set(e){W(t,s,S,r,a),n=e}})}else i(o,t,s,S,r,a);Object.defineProperty(e,s,{enumerable:!1})}))}));class ${constructor(e){this.i=0,this.array=e}get length(){return this.array.length}set length(e){this.array.length=e,this.i>=e&&(this.i=e-1)}remove(e){const t=this.array.indexOf(e);t>=0&&this.removeAt(t)}removeAt(e){this.array.splice(e,1),e<=this.i&&--this.i}fastRemove(e){const t=this.array.indexOf(e);t>=0&&this.fastRemoveAt(t)}fastRemoveAt(e){const t=this.array;t[e]=t[t.length-1],--t.length,e<=this.i&&--this.i}push(e){this.array.push(e)}}function Q(e,t){e.splice(t,1)}function J(e,t){const n=e.length;t<0||t>=n||(e[t]=e[n-1],e.length=n-1)}function Z(e,t){const n=e.indexOf(t);return n>=0&&(Q(e,n),!0)}function ee(e,t){const n=e.findIndex(t);if(n>=0){const t=e[n];return Q(e,n),t}}function te(e,t){return e.indexOf(t)>=0}var ne=Object.freeze({__proto__:null,removeAt:Q,fastRemoveAt:J,remove:Z,fastRemove:function(e,t){const n=e.indexOf(t);n>=0&&(e[n]=e[e.length-1],--e.length)},removeIf:ee,verifyType:function(e,t){if(e&&e.length>0)for(const n of e)if(!(n instanceof t))return I(1300),!1;return!0},removeArray:function(e,t){for(let n=0,i=t.length;n<i;n++)Z(e,t[n])},appendObjectsAt:function(e,t,n){return e.splice.apply(e,[n,0,...t]),e},contains:te,copy:function(e){const t=e.length,n=new Array(t);for(let i=0;i<t;i+=1)n[i]=e[i];return n},MutableForwardIterator:$});class ie{constructor(e){this.id=void 0,this.prefix=void 0,this.id=0|998*Math.random(),this.prefix=e?e+".":""}getNewId(){return this.prefix+ ++this.id}}ie.global=new ie("global");const se=new ie("TmpCId."),oe="undefined"==typeof Symbol?"__aliases__":Symbol("[[Aliases]]"),re="__cid__";function ae(e){return"number"==typeof e||e instanceof Number}function ce(e){return"string"==typeof e||e instanceof String}function le(e){for(const t in e)return!1;return!0}const he=(()=>{const e={value:void 0,enumerable:!1,writable:!1,configurable:!0};return(t,n,i,s,o)=>{e.value=i,e.writable=s,e.enumerable=o,Object.defineProperty(t,n,e),e.value=void 0}})(),ue=(()=>{const e={get:void 0,set:void 0,enumerable:!1};return(t,n,i,s,o=!1,r=!1)=>{"boolean"==typeof s&&(o=s,s=void 0),e.get=i,e.set=s,e.enumerable=o,e.configurable=r,Object.defineProperty(t,n,e),e.get=void 0,e.set=void 0}})(),_e=(()=>{const e={get:void 0,enumerable:!1,configurable:!1};return(t,n,i,s,o)=>{e.get=i,e.enumerable=s,e.configurable=o,Object.defineProperty(t,n,e),e.get=void 0}})(),de=(()=>{const e={set:void 0,enumerable:!1,configurable:!1};return(t,n,i,s,o)=>{e.set=i,e.enumerable=s,e.configurable=o,Object.defineProperty(t,n,e),e.set=void 0}})();function pe(e){const t=Object.create(null);if(e){const e=".",n="/";t[e]=1,t[n]=1,delete t[e],delete t[n]}return t}function fe(e){if("function"==typeof e){const t=e.prototype;if(t&&t.hasOwnProperty("__classname__")&&t.__classname__)return t.__classname__;let n="";if(e.name&&(n=e.name),e.toString){let t;const i=e.toString();t="["===i.charAt(0)?/\[\w+\s*(\w+)\]/.exec(i):/function\s*(\w+)/.exec(i),t&&2===t.length&&(n=t[1])}return"Object"!==n?n:""}return e&&e.constructor?fe(e.constructor):""}function me(e,t,n,i){const s=/([^.]+)$/,o=s.exec(t)[0],r=s.exec(n)[0];function a(){return this[r]}i?ue(e,o,a,(function(e){this[r]=e})):_e(e,o,a)}function ge(e,t,n,i){for(const s in n)me(e,`${t}.${s}`,n[s],i)}const ve=/(%d)|(%s)/,ye=/%s/;function xe(e,...t){if(0===arguments.length)return"";if(0===t.length)return`${e}`;const n="string"==typeof e&&ve.test(e);if(n)for(const n of t){const t="number"==typeof n?ve:ye;if(t.test(e)){const i=`${n}`;e=e.replace(t,i)}else e+=` ${n}`}else for(const n of t)e+=` ${n}`;return e}function Se(){const e=arguments.length-1,t=new Array(e);for(let n=0;n<e;++n)t[n]=arguments[n+1];return t}function Ce(e,t){for(;e;){const n=Object.getOwnPropertyDescriptor(e,t);if(n)return n;e=Object.getPrototypeOf(e)}return null}function Ee(e,t,n){const i=Ce(t,e);i&&Object.defineProperty(n,e,i)}function Te(e,...t){e=e||{};for(const n of t)if(n){if("object"!=typeof n){N(5402,n);continue}for(const t in n)t in e||Ee(t,n,e)}return e}function be(e,...t){e=e||{};for(const n of t)if(n){if("object"!=typeof n){N(5403,n);continue}for(const t in n)Ee(t,n,e)}return e}function Ae(e,t){for(const n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e.prototype=Object.create(t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),e}function Pe(e){const t=e.prototype,n=t&&Object.getPrototypeOf(t);return n&&n.constructor}function we(e,t){if(e&&t){if("function"!=typeof e)return!1;if("function"!=typeof t)return!1;if(e===t)return!0;for(;;){if(!(e=Pe(e)))return!1;if(e===t)return!0}}return!1}function Ie(e){for(const t of Object.keys(e))delete e[t]}const Re=pe(!0),De=pe(!0);function Oe(e,t){return function(n,i){if(i.prototype.hasOwnProperty(e)&&delete t[i.prototype[e]],he(i.prototype,e,n),n){const s=t[n];s&&s!==i?C(`A Class already exists with the same ${e} : "${n}".`):t[n]=i}}}const Ne=Oe("__cid__",Re),Me=Oe("__classname__",De);function Le(e,t){if(Me(e,t),!t.prototype.hasOwnProperty(re)){const n=e||se.getNewId();n&&Ne(n,t)}}function Be(e,t){const n=De[t],i=Re[t];let s=!0;if(n&&n!==e&&(C(`"${t}" has already been set as name or alias of another class.`),s=!1),i&&i!==e&&(C(`"${t}" has already been set as id or alias of another class.`),s=!1),s){let n=e[oe];n||(n=[],e[oe]=n),n.push(t),De[t]=e,Re[t]=e}}function Fe(...e){for(const t of e){const e=t.prototype,n=e.__cid__;n&&delete Re[n];const i=e.__classname__;i&&delete De[i];const s=e[oe];if(s)for(let e=0;e<s.length;++e){const t=s[e];delete De[t],delete Re[t]}}}function ze(e){return Re[e]}function Ue(e){return De[e]}function Ge(e,t){let n;if(t=void 0===t||t,"function"==typeof e&&e.prototype.hasOwnProperty(re))return n=e.prototype.__cid__,n;if(e&&e.constructor){const t=e.constructor.prototype;if(t&&t.hasOwnProperty(re))return n=e.__cid__,n}return""}class Ve{get(){return this._get()}constructor(e,t){this.count=void 0,this._pool=void 0,this._cleanup=void 0;const n=void 0===t?e:t,i=void 0===t?null:e;this.count=0,this._pool=new Array(n),this._cleanup=i}_get(){if(this.count>0){--this.count;const e=this._pool[this.count];return this._pool[this.count]=null,e}return null}put(e){const t=this._pool;if(this.count<t.length){if(this._cleanup&&!1===this._cleanup(e))return;t[this.count]=e,++this.count}}resize(e){e>=0&&(this._pool.length=e,this.count>e&&(this.count=e))}}const He=ne,ke={IDGenerator:ie,Pool:Ve,array:ne,isNumber:ae,isString:ce,isEmptyObject:le,getPropertyDescriptor:Ce,addon:Te,mixin:be,extend:Ae,getSuper:Pe,isChildClassOf:we,clear:Ie,value:he,getset:ue,get:_e,set:de,unregisterClass:Fe,getClassName:fe,setClassName:Le,setClassAlias:Be,getClassByName:Ue,get _registeredClassNames(){return{...De}},set _registeredClassNames(e){Ie(De),Object.assign(De,e)},get _registeredClassIds(){return{...Re}},set _registeredClassIds(e){Ie(Re),Object.assign(Re,e)},_getClassId:Ge,_setClassId:Ne,_getClassById:ze,obsolete:me,obsoletes:ge,formatStr:xe,shiftArguments:Se,createMap:pe};function je(e){if("__bitmask__"in e)return e;he(e,"__bitmask__",null,!0);let t=-1;const n=Object.keys(e);for(let i=0;i<n.length;i++){const s=n[i];let o=e[s];if(-1===o)o=++t,e[s]=o;else if("number"==typeof o)t=o;else if("string"==typeof o&&Number.isInteger(parseFloat(s)))continue;const r=`${o}`;s!==r&&he(e,r,s)}return e}function We(e,t){t>=0&&e.length,e.length}function qe(e){return"__enums__"in e?e:(he(e,"__enums__",null,!0),qe.update(e))}function Xe(e){e.hasOwnProperty("__enums__")}function Ye(e){Xe(e);const t=e.__enums__||[];t.length=0;for(const n in e){const i=e[n];Number.isInteger(i)&&t.push({name:n,value:i})}return t.sort(((e,t)=>e.value-t.value)),e.__enums__=t,t}function Ke(e){"__enums__"in e||he(e,"__enums__",null,!0)}u.js=ke,e("js",Object.freeze({__proto__:null,array:He,js:ke,IDGenerator:ie,Pool:Ve,isNumber:ae,isString:ce,isEmptyObject:le,value:he,getset:ue,get:_e,set:de,createMap:pe,getClassName:fe,obsolete:me,obsoletes:ge,formatStr:xe,shiftArguments:Se,getPropertyDescriptor:Ce,addon:Te,mixin:be,extend:Ae,getSuper:Pe,isChildClassOf:we,clear:Ie,_idToClass:Re,_nameToClass:De,_setClassId:Ne,setClassName:Le,setClassAlias:Be,unregisterClass:Fe,_getClassById:ze,getClassByName:Ue,_getClassId:Ge})),je.isBitMask=e=>e&&e.hasOwnProperty("__bitmask__"),je.getList=e=>{if(e.__bitmask__)return e.__bitmask__;const t=e.__bitmask__=[];for(const n in e){const i=e[n];Number.isInteger(i)&&t.push({name:n,value:i})}return t.sort(((e,t)=>e.value-t.value)),t},u.BitMask=je,qe.update=e=>{let t=-1;const n=Object.keys(e);for(let i=0;i<n.length;i++){const s=n[i];let o=e[s];if(-1===o)o=++t,e[s]=o;else if("number"==typeof o)t=o;else if("string"==typeof o&&Number.isInteger(parseFloat(s)))continue;const r=`${o}`;s!==r&&he(e,r,s)}return Array.isArray(e.__enums__)&&Ye(e),e},qe||(qe=e("Enum",{})),qe.isEnum=e=>e&&e.hasOwnProperty("__enums__"),qe.getList=e=>(Xe(e),e.__enums__?e.__enums__:Ye(e)),u.Enum=qe;class $e{clone(){return N(100,`${fe(this)}.clone`),this}equals(e){return!1}set(e){N(100,`${fe(this)}.set`)}toString(){return""}}e("ValueType",$e),Le("cc.ValueType",$e),u.ValueType=$e;const Qe=e("macro",{SUPPORT_TEXTURE_FORMATS:[".astc",".pkm",".pvr",".webp",".jpg",".jpeg",".bmp",".png"],KEY:{none:0,back:6,menu:18,backspace:8,tab:9,enter:13,shift:16,ctrl:17,alt:18,pause:19,capslock:20,escape:27,space:32,pageup:33,pagedown:34,end:35,home:36,left:37,up:38,right:39,down:40,select:41,insert:45,Delete:46,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,a:65,b:66,c:67,d:68,e:69,f:70,g:71,h:72,i:73,j:74,k:75,l:76,m:77,n:78,o:79,p:80,q:81,r:82,s:83,t:84,u:85,v:86,w:87,x:88,y:89,z:90,num0:96,num1:97,num2:98,num3:99,num4:100,num5:101,num6:102,num7:103,num8:104,num9:105,"*":106,"+":107,"-":109,numdel:110,"/":111,f1:112,f2:113,f3:114,f4:115,f5:116,f6:117,f7:118,f8:119,f9:120,f10:121,f11:122,f12:123,numlock:144,scrolllock:145,";":186,semicolon:186,equal:187,"=":187,",":188,comma:188,dash:189,".":190,period:190,forwardslash:191,grave:192,"[":219,openbracket:219,backslash:220,"]":221,closebracket:221,quote:222,dpadLeft:1e3,dpadRight:1001,dpadUp:1003,dpadDown:1004,dpadCenter:1005},RAD:Math.PI/180,DEG:180/Math.PI,REPEAT_FOREVER:Number.MAX_VALUE-1,FLT_EPSILON:1.192092896e-7,ORIENTATION_PORTRAIT:1,ORIENTATION_LANDSCAPE:2,ORIENTATION_AUTO:3,ENABLE_TILEDMAP_CULLING:!0,TOUCH_TIMEOUT:5e3,ENABLE_TRANSPARENT_CANVAS:!1,ENABLE_WEBGL_ANTIALIAS:!0,ENABLE_ANTIALIAS_FXAA:!1,ENABLE_BLOOM:!1,CLEANUP_IMAGE_CACHE:!1,ENABLE_MULTI_TOUCH:!0,MAX_LABEL_CANVAS_POOL_SIZE:20,ENABLE_WEBGL_HIGHP_STRUCT_VALUES:!1,BATCHER2D_MEM_INCREMENT:144});u.macro=Qe;const Je=/^(?:cc|dragonBones|sp|ccsg)\..+/,Ze=new Array(123);for(let e=0;e<123;++e)Ze[e]=64;for(let e=0;e<64;++e)Ze["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charCodeAt(e)]=e;const et=Ze;function tt(e,t,n){function i(e,t,n,i){const s=Object.getOwnPropertyDescriptor(e,t);if(s)s.get&&(e[n]=s.get),s.set&&i&&(e[i]=s.set);else{const s=e[n];ue(e,t,s,e[i])}}let s;const o=e.prototype;for(let e=0;e<t.length;e++){s=t[e];const n=s[0].toUpperCase()+s.slice(1);i(o,s,`get${n}`,`set${n}`)}for(s in n){const e=n[s];i(o,s,e[0],e[1])}}function nt(e,t,n,i){const s=e[t];s?Array.isArray(s)?i?(s.push(s[0]),s[0]=n):s.push(n):e[t]=i?[n,s]:[s,n]:e[t]=n}function it(e,t){if("function"==typeof e.contains)return e.contains(t);if("function"==typeof e.compareDocumentPosition)return!!(16&e.compareDocumentPosition(t));{let n=t.parentNode;if(n)do{if(n===e)return!0;n=n.parentNode}while(null!==n);return!1}}function st(e){return"object"==typeof window&&"function"==typeof Node?e instanceof Node:e&&"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName}function ot(e,t,n){e&&setTimeout((()=>{e(t,n)}),0)}function rt(e){return!(!e||e.constructor!==Object)&&le(e)}function at(e,t,n){if(t>n){const e=t;t=n,n=e}return e<t?t:e<n?e:n}function ct(e){return e*Qe.RAD}function lt(e){return e*Qe.DEG}u.misc={BUILTIN_CLASSID_RE:Je,BASE64_VALUES:et,propertyDefine:tt,pushToMap:nt,contains:it,isDomNode:st,callInNextTick:ot,isPlainEmptyObj_DEV:rt,clampf:at,degreesToRadians:ct,radiansToDegrees:lt},e("misc",Object.freeze({__proto__:null,BUILTIN_CLASSID_RE:Je,BASE64_VALUES:et,propertyDefine:tt,pushToMap:nt,contains:it,isDomNode:st,callInNextTick:ot,tryCatchFunctor_EDITOR:function(e){return Function("target",`try {\n  target.${e}();\n}\ncatch (e) {\n  cc._throw(e);\n}`)},isPlainEmptyObj_DEV:rt,clampf:at,degreesToRadians:ct,radiansToDegrees:lt}));const ht="$_$";function ut(e,t){const n=t?Object.create(t):{};return he(e,"__attrs__",n),n}function _t(e){if("function"!=typeof e)return ut(e,pt(e.constructor));let t;const n=u.Class.getInheritanceChain(e);for(let e=n.length-1;e>=0;e--){const i=n[e];i.hasOwnProperty("__attrs__")&&i.__attrs__||(t=n[e+1],ut(i,t&&t.__attrs__))}return t=n[0],ut(e,t&&t.__attrs__),e.__attrs__}function dt(e,t){const n=pt(e),i=t+ht,s={};for(const e in n)e.startsWith(i)&&(s[e.slice(i.length)]=n[e]);return s}function pt(e){return e.hasOwnProperty("__attrs__")&&e.__attrs__||_t(e)}function ft(e,t,n,i){pt(e)[t+ht+n]=i}class mt{constructor(e,t){this.name=void 0,this.default=void 0,this.name=e,this.default=t}toString(){return this.name}}const gt=e("CCInteger",new mt("Integer",0));u.Integer=gt,u.CCInteger=gt;const vt=e("CCFloat",new mt("Float",0));u.Float=vt,u.CCFloat=vt;const yt=e("CCBoolean",new mt("Boolean",!1));u.Boolean=yt,u.CCBoolean=yt;const xt=e("CCString",new mt("String",""));function St(e,t){return function(n,i){const s=`"${fe(n)}.${i}"`,o=dt(n,i);let r=o.type;if(r===gt||r===vt?r="Number":r!==xt&&r!==yt||(r=`${r}`),r!==e)return void D(3604,s);if(!o.hasOwnProperty("default"))return;const a=o.default;if(void 0===a)return;if(Array.isArray(a)||rt(a))return;const c=typeof a,l=e.toLowerCase();if(c===l)if("object"===l){if(!a||a instanceof o.ctor)return;D(3605,s,fe(o.ctor))}else"Number"!==e&&D(3606,t,s,e);else{if("function"===c)return;e===xt.default&&null==a?D(3607,s):D(3611,t,s,c)}delete o.type}}u.String=xt,u.CCString=xt;var Ct=Object.freeze({__proto__:null,DELIMETER:ht,createAttrsSingle:ut,createAttrs:_t,attr:dt,getClassAttrs:pt,setClassAttr:ft,PrimitiveType:mt,CCInteger:gt,CCFloat:vt,CCBoolean:yt,CCString:xt,getTypeChecker_ET:St,getObjTypeChecker_ET:function(e){return function(t,n){St("Object","type")(t,n);const i=pt(t)[`${n+ht}default`],s=u.Class.getDefault(i);if(!Array.isArray(s)&&we(e,u.ValueType)){const s=fe(e),o=xe('No need to specify the "type" of "%s.%s" because %s is a child class of ValueType.',fe(t),n,s);i?x(o):D(3612,o,s,fe(t),n,s)}}}});const Et={default:{},serializable:{},editorOnly:{},formerlySerializedAs:{}};function Tt(e,t,n,i){if(!e.get&&!e.set&&e.hasOwnProperty("default")){const s=`_N$${t}`;e.get=function(){return this[s]},e.set=function(e){const t=this[s];this[s]=e,n.call(this,t)};const o={};i[s]=o;for(const t in Et){const n=Et[t];e.hasOwnProperty(t)&&(o[t]=e[t],n.canUsedInGet||delete e[t])}}}function bt(e,t,n,i){if(Array.isArray(t)){if(!(t.length>0))return N(5508,n,i);e.type=t=t[0]}"function"==typeof t&&(t===String?e.type=u.String:t===Boolean?e.type=u.Boolean:t===Number&&(e.type=u.Float))}function At(e,t,n){const i=e?{_short:!0}:{_short:!0,default:t};return n&&(i.type=n),i}function Pt(e,t){if(!e||e.constructor!==Object){if(Array.isArray(e)&&e.length>0)return At(t,[],e);if("function"==typeof e){const n=e;return At(t,we(n,u.ValueType)?new n:null,n)}return At(t,e instanceof mt?e.default:e)}return null}let wt,It=[];function Rt(){return It[It.length-1]}u._RF={push:function(e,t,n,i){void 0===n&&(n=t,t=""),It.push({uuid:t,script:n,module:e,exports:e.exports,beh:null,importMeta:i})},pop:function(){const e=It.pop(),t=e.module;let n=t.exports;if(n===e.exports){for(const e in n)return;t.exports=n=e.cls}},peek:Rt},function(e){e[e.STANDALONE=1]="STANDALONE",e[e.IMPLICIT_VISIBLE=2]="IMPLICIT_VISIBLE",e[e.IMPLICIT_SERIALIZABLE=4]="IMPLICIT_SERIALIZABLE"}(wt||(wt={}));const Dt=ht,Ot={datas:null,push(e){if(this.datas)this.datas.push(e);else{this.datas=[e];const t=this;setTimeout((()=>{t.init()}),0)}},init(){const e=this.datas;if(e){for(let t=0;t<e.length;++t){const n=e[t],i=n.cls;let s=n.props;"function"==typeof s&&(s=s());const o=fe(i);s?Ft(i,o,s,i.$super,n.mixins):N(3633,o)}this.datas=null}}};function Nt(e,t,n,i){!function(e,t){!function(e,t){e.indexOf(t)<0&&e.push(t)}(e.__props__,t)}(e,n),Vt(e,i,t,n)}function Mt(e,t,n,i){const s=i.get;i.set,s&&(Vt(e,i,t,n),ft(e,n,"serializable",!1))}function Lt(e){return"function"==typeof e?e():e}function Bt(e,t,n){for(const i in t)e.hasOwnProperty(i)||n&&!n(i)||Object.defineProperty(e,i,Ce(t,i))}function Ft(e,t,n,i,s){if(e.__props__=[],i&&i.__props__&&(e.__props__=i.__props__.slice()),s)for(let t=0;t<s.length;++t){const n=s[t];n.__props__&&(e.__props__=e.__props__.concat(n.__props__.filter((t=>e.__props__.indexOf(t)<0))))}if(n){!function(e,t){for(const n in e){let i=e[n];const s=Pt(i,!1);if(s&&(i=e[n]=s),i){const s=i.notify;s&&Tt(i,n,s,e),"type"in i&&bt(i,i.type,t,n)}}}(n,t);for(const i in n){const s=n[i];s.get||s.set?Mt(e,t,i,s):Nt(e,t,i,s)}}const o=pt(e);e.__values__=e.__props__.filter((e=>!1!==o[`${e+Dt}serializable`]))}function zt(e){let t=e.name;const n=e.extends,i=e.mixins,s=function(e,t,n,i){const s=u.Component,o=Rt();if(o&&we(t,s)){if(we(o.cls,s))return N(3615),null;e=e||o.script}const r=function(e,t,n,i){const s=i.ctor,o=[s],r=s;he(r,"__ctors__",o.length>0?o:null,!0);const a=r.prototype;if(t&&(r.$super=t),n){for(let e=n.length-1;e>=0;e--){const t=n[e];Bt(a,t.prototype),zt._isCCClass(t)&&Bt(pt(r),pt(t))}a.constructor=r}return Le(e,r),r}(e,t,n,i);if(o)if(we(t,s)){const e=o.uuid;e&&Ne(e,r),o.cls=r}else we(o.cls,s)||(o.cls=r);return r}(t,n,i,e);t||(t=u.js.getClassName(s)),s._sealed=!0,n&&(n._sealed=!1);const o=e.properties;"function"==typeof o||n&&null===n.__props__||i&&i.some((e=>null===e.__props__))?(Ot.push({cls:s,props:o,mixins:i}),s.__props__=s.__values__=null):Ft(s,t,o,n,e.mixins);const r=e.editor;return r&&we(n,u.Component)&&u.Component._registerEditorProps(s,r),s}function Ut(e){var t;return null==e||null===(t=e.hasOwnProperty)||void 0===t?void 0:t.call(e,"__values__")}zt._isCCClass=function(e){var t;return null==e||null===(t=e.hasOwnProperty)||void 0===t?void 0:t.call(e,"__ctors__")},zt.fastDefine=function(e,t,n){Le(e,t);const i=t.__props__=t.__values__=Object.keys(n),s=pt(t);for(let e=0;e<i.length;e++){const t=i[e];s[`${t+Dt}visible`]=!1,s[`${t+Dt}default`]=n[t]}},zt.Attr=Ct,zt.attr=dt,zt.getInheritanceChain=function(e){const t=[];for(;e=Pe(e);)e!==Object&&t.push(e);return t};const Gt={Integer:"Number",Float:"Number",Boolean:"Boolean",String:"String"};function Vt(e,t,n,i){let s=null,o="";function r(){return o=i+Dt,s=pt(e)}"type"in t&&void 0===t.type&&D(3660,i,n);const a=t.type;a&&(Gt[a]?(s||r())[`${o}type`]=a:"Object"===a||("object"==typeof a?qe.isEnum(a)?((s||r())[`${o}type`]="Enum",s[`${o}enumList`]=qe.getList(a)):je.isBitMask(a)&&((s||r())[`${o}type`]="BitMask",s[`${o}bitmaskList`]=je.getList(a)):"function"==typeof a&&((s||r())[`${o}type`]="Object",s[`${o}ctor`]=a))),"default"in t&&((s||r())[`${o}default`]=t.default);const c=(e,n)=>{if(e in t){const i=t[e];typeof i===n&&((s||r())[o+e]=i)}};let l;t.editorOnly&&((s||r())[`${o}editorOnly`]=!0),t.__internalFlags&wt.STANDALONE?l=!0===t.serializable||0!=(t.__internalFlags&wt.IMPLICIT_SERIALIZABLE):!1===t.serializable&&(l=!1),void 0!==l&&((s||r())[`${o}serializable`]=l),c("formerlySerializedAs","string");const h=t.range;h&&Array.isArray(h)&&h.length>=2&&((s||r())[`${o}min`]=h[0],s[`${o}max`]=h[1],h.length>2&&(s[`${o}step`]=h[2])),c("min","number"),c("max","number"),c("step","number")}zt.isArray=function(e){return e=Lt(e),Array.isArray(e)},zt.getDefault=Lt,zt.escapeForJS=function(e){return JSON.stringify(e).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")},zt.IDENTIFIER_RE=/^[A-Za-z_$][0-9A-Za-z_$]*$/,zt.getNewValueTypeCode=function(e){const t=fe(e),n=e.constructor;let i=`new ${t}(`;for(let t=0;t<n.__props__.length;t++)i+=e[n.__props__[t]],t<n.__props__.length-1&&(i+=",");return`${i})`},u.Class=zt;const Ht=Math.PI/180,kt=180/Math.PI,jt=e("EPSILON",1e-6);function Wt(e,t){return Math.abs(e-t)<=jt*Math.max(1,Math.abs(e),Math.abs(t))}function qt(e,t,n){return n=n||jt,Math.abs(e-t)<=n}function Xt(e,t,n){if(t>n){const e=t;t=n,n=e}return e<t?t:e>n?n:e}function Yt(e){return e<0?0:e>1?1:e}function Kt(e,t,n){return e+(t-e)*n}function $t(e){return e*Ht}function Qt(e){return e*kt}const Jt=e("random",Math.random);function Zt(e,t){return Math.random()*(t-e)+e}function en(e,t){return Math.floor(Zt(e,t))}function tn(e){return(e=(9301*e+49297)%233280)/233280}function nn(e,t,n){return tn(e)*(n-t)+t}function sn(e,t,n){return Math.floor(nn(e,t,n))}function on(e){return--e,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e}function rn(e,t){return e-Math.floor(e/t)*t}function an(e,t){return e=rn(e,2*t),t-Math.abs(e-t)}function cn(e,t,n){return(n-e)/(t-e)}function ln(e){return Math.abs(e.x)>Math.abs(e.y)?Math.abs(e.x)>Math.abs(e.z)?e.x:e.z:Math.abs(e.y)>Math.abs(e.z)?e.y:e.z}function hn(e,t){return Math.abs(e)>Math.abs(t)?e:t}function un(e,t){t.forEach((t=>{Object.defineProperty(e,t,{enumerable:!0})}))}const _n=1/255;class dn extends $e{static clone(e){const t=new dn;return e._val?t._val=e._val:t._val=(e.a<<24>>>0)+(e.b<<16)+(e.g<<8)+e.r,t}static copy(e,t){return e.r=t.r,e.g=t.g,e.b=t.b,e.a=t.a,e}static set(e,t,n,i,s){return e.r=t,e.g=n,e.b=i,e.a=s,e}static fromHEX(e,t){t=0===t.indexOf("#")?t.substring(1):t,e.r=parseInt(t.substr(0,2),16)||0,e.g=parseInt(t.substr(2,2),16)||0,e.b=parseInt(t.substr(4,2),16)||0;const n=parseInt(t.substr(6,2),16);return e.a=Number.isNaN(n)?255:n,e._val=(e.a<<24>>>0)+(e.b<<16)+(e.g<<8)+e.r,e}static add(e,t,n){return e.r=t.r+n.r,e.g=t.g+n.g,e.b=t.b+n.b,e.a=t.a+n.a,e}static subtract(e,t,n){return e.r=t.r-n.r,e.g=t.g-n.g,e.b=t.b-n.b,e.a=t.a-n.a,e}static multiply(e,t,n){return e.r=t.r*n.r,e.g=t.g*n.g,e.b=t.b*n.b,e.a=t.a*n.a,e}static divide(e,t,n){return e.r=t.r/n.r,e.g=t.g/n.g,e.b=t.b/n.b,e.a=t.a/n.a,e}static scale(e,t,n){return e.r=t.r*n,e.g=t.g*n,e.b=t.b*n,e.a=t.a*n,e}static lerp(e,t,n,i){let s=t.r,o=t.g,r=t.b,a=t.a;return s+=(n.r-s)*i,o+=(n.g-o)*i,r+=(n.b-r)*i,a+=(n.a-a)*i,e._val=Math.floor((a<<24>>>0)+(r<<16)+(o<<8)+s),e}static toArray(e,t,n=0){const i=t instanceof dn||t.a>1?1/255:1;return e[n+0]=t.r*i,e[n+1]=t.g*i,e[n+2]=t.b*i,e[n+3]=t.a*i,e}static fromArray(e,t,n=0){return t.r=255*e[n+0],t.g=255*e[n+1],t.b=255*e[n+2],t.a=255*e[n+3],t}static strictEquals(e,t){return e.r===t.r&&e.g===t.g&&e.b===t.b&&e.a===t.a}static equals(e,t,n=jt){return Math.abs(e.r-t.r)<=n*Math.max(1,Math.abs(e.r),Math.abs(t.r))&&Math.abs(e.g-t.g)<=n*Math.max(1,Math.abs(e.g),Math.abs(t.g))&&Math.abs(e.b-t.b)<=n*Math.max(1,Math.abs(e.b),Math.abs(t.b))&&Math.abs(e.a-t.a)<=n*Math.max(1,Math.abs(e.a),Math.abs(t.a))}static hex(e){return(255*e.r<<24|255*e.g<<16|255*e.b<<8|255*e.a)>>>0}get r(){return 255&this._val}set r(e){e=~~Xt(e,0,255),this._val=(4294967040&this._val|e)>>>0}get g(){return(65280&this._val)>>8}set g(e){e=~~Xt(e,0,255),this._val=(4294902015&this._val|e<<8)>>>0}get b(){return(16711680&this._val)>>16}set b(e){e=~~Xt(e,0,255),this._val=(4278255615&this._val|e<<16)>>>0}get a(){return(4278190080&this._val)>>>24}set a(e){e=~~Xt(e,0,255),this._val=(16777215&this._val|e<<24)>>>0}get x(){return this.r*_n}set x(e){this.r=255*e}get y(){return this.g*_n}set y(e){this.g=255*e}get z(){return this.b*_n}set z(e){this.b=255*e}get w(){return this.a*_n}set w(e){this.a=255*e}constructor(e,t,n,i){super(),this._val=0,"string"==typeof e?this.fromHEX(e):void 0!==t?this.set(e,t,n,i):this.set(e)}clone(){const e=new dn;return e._val=this._val,e}equals(e){return e&&this._val===e._val}lerp(e,t){let n=this.r,i=this.g,s=this.b,o=this.a;return n+=(e.r-n)*t,i+=(e.g-i)*t,s+=(e.b-s)*t,o+=(e.a-o)*t,this._val=Math.floor((o<<24>>>0)+(s<<16)+(i<<8)+n),this}toString(){return`rgba(${this.r.toFixed()}, ${this.g.toFixed()}, ${this.b.toFixed()}, ${this.a.toFixed()})`}toCSS(e="rgba"){return"rgba"===e?`rgba(${this.r},${this.g},${this.b},${(this.a*_n).toFixed(2)})`:"rgb"===e?`rgb(${this.r},${this.g},${this.b})`:`#${this.toHEX(e)}`}fromHEX(e){e=0===e.indexOf("#")?e.substring(1):e;const t=parseInt(e.substr(0,2),16)||0,n=parseInt(e.substr(2,2),16)||0,i=parseInt(e.substr(4,2),16)||0;let s=parseInt(e.substr(6,2),16);return s=Number.isNaN(s)?255:s,this._val=(s<<24>>>0)+(i<<16)+(n<<8)+(0|t),this}toHEX(e="#rrggbb"){const t="0",n=[(this.r<16?t:"")+this.r.toString(16),(this.g<16?t:"")+this.g.toString(16),(this.b<16?t:"")+this.b.toString(16)];return"#rgb"===e?(n[0]=n[0][0],n[1]=n[1][0],n[2]=n[2][0]):"#rrggbbaa"===e&&n.push((this.a<16?t:"")+this.a.toString(16)),n.join("")}toRGBValue(){return 16777215&this._val}fromHSV(e,t,n){let i=0,s=0,o=0;if(0===t)i=s=o=n;else if(0===n)i=s=o=0;else{1===e&&(e=0),e*=6;const r=Math.floor(e),a=e-r,c=n*(1-t),l=n*(1-t*a),h=n*(1-t*(1-a));switch(r){case 0:i=n,s=h,o=c;break;case 1:i=l,s=n,o=c;break;case 2:i=c,s=n,o=h;break;case 3:i=c,s=l,o=n;break;case 4:i=h,s=c,o=n;break;case 5:i=n,s=c,o=l}}return i*=255,s*=255,o*=255,this._val=(this.a<<24>>>0)+(o<<16)+(s<<8)+(0|i),this}toHSV(){const e=this.r*_n,t=this.g*_n,n=this.b*_n,i={h:0,s:0,v:0},s=Math.max(e,t,n),o=Math.min(e,t,n);let r=0;return i.v=s,i.s=s?(s-o)/s:0,i.s?(r=s-o,i.h=e===s?(t-n)/r:t===s?2+(n-e)/r:4+(e-t)/r,i.h/=6,i.h<0&&(i.h+=1)):i.h=0,i}set(e,t,n,i){return"object"==typeof e?null!=e._val?this._val=e._val:(t=e.g||0,n=e.b||0,i="number"==typeof e.a?e.a:255,e=e.r||0,this._val=(i<<24>>>0)+(n<<16)+(t<<8)+(0|e)):(e=e||0,t=t||0,n=n||0,i="number"==typeof i?i:255,this._val=(i<<24>>>0)+(n<<16)+(t<<8)+(0|e)),this}multiply(e){const t=(255&this._val)*e.r>>8,n=(65280&this._val)*e.g>>8,i=(16711680&this._val)*e.b>>8,s=((4278190080&this._val)>>>8)*e.a;return this._val=4278190080&s|16711680&i|65280&n|255&t,this}_set_r_unsafe(e){return this._val=(4294967040&this._val|e)>>>0,this}_set_g_unsafe(e){return this._val=(4294902015&this._val|e<<8)>>>0,this}_set_b_unsafe(e){return this._val=(4278255615&this._val|e<<16)>>>0,this}_set_a_unsafe(e){return this._val=(16777215&this._val|e<<24)>>>0,this}}function pn(e,t,n,i){return new dn(e,t,n,i)}e("Color",dn),dn.WHITE=Object.freeze(new dn(255,255,255,255)),dn.GRAY=Object.freeze(new dn(127,127,127,255)),dn.BLACK=Object.freeze(new dn(0,0,0,255)),dn.TRANSPARENT=Object.freeze(new dn(0,0,0,0)),dn.RED=Object.freeze(new dn(255,0,0,255)),dn.GREEN=Object.freeze(new dn(0,255,0,255)),dn.BLUE=Object.freeze(new dn(0,0,255,255)),dn.CYAN=Object.freeze(new dn(0,255,255,255)),dn.MAGENTA=Object.freeze(new dn(255,0,255,255)),dn.YELLOW=Object.freeze(new dn(255,255,0,255)),zt.fastDefine("cc.Color",dn,{r:0,g:0,b:0,a:255}),u.Color=dn,u.color=pn;const fn=e("MATH_FLOAT_ARRAY",Float32Array);class mn extends $e{static createFloatArray(e){return new fn(e)}get array(){return this._array}}e("MathBase",mn);class gn extends mn{static zero(e){return e.x=0,e.y=0,e.z=0,e}static clone(e){return new gn(e.x,e.y,e.z)}static copy(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e}static set(e,t,n,i){return e.x=t,e.y=n,e.z=i,e}static add(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e.z=t.z+n.z,e}static subtract(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e.z=t.z-n.z,e}static multiply(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e.z=t.z*n.z,e}static divide(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e.z=t.z/n.z,e}static ceil(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e.z=Math.ceil(t.z),e}static floor(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e.z=Math.floor(t.z),e}static min(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e.z=Math.min(t.z,n.z),e}static max(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e.z=Math.max(t.z,n.z),e}static round(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e.z=Math.round(t.z),e}static multiplyScalar(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e}static scaleAndAdd(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e}static distance(e,t){const n=t.x-e.x,i=t.y-e.y,s=t.z-e.z;return Math.sqrt(n*n+i*i+s*s)}static squaredDistance(e,t){const n=t.x-e.x,i=t.y-e.y,s=t.z-e.z;return n*n+i*i+s*s}static len(e){const t=e.x,n=e.y,i=e.z;return Math.sqrt(t*t+n*n+i*i)}static lengthSqr(e){const t=e.x,n=e.y,i=e.z;return t*t+n*n+i*i}static negate(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e}static invert(e,t){return e.x=1/t.x,e.y=1/t.y,e.z=1/t.z,e}static invertSafe(e,t){const n=t.x,i=t.y,s=t.z;return Math.abs(n)<jt?e.x=0:e.x=1/n,Math.abs(i)<jt?e.y=0:e.y=1/i,Math.abs(s)<jt?e.z=0:e.z=1/s,e}static normalize(e,t){const n=t.x,i=t.y,s=t.z;let o=n*n+i*i+s*s;return o>0&&(o=1/Math.sqrt(o),e.x=n*o,e.y=i*o,e.z=s*o),e}static dot(e,t){return e.x*t.x+e.y*t.y+e.z*t.z}static cross(e,t,n){const{x:i,y:s,z:o}=t,{x:r,y:a,z:c}=n;return e.x=s*c-o*a,e.y=o*r-i*c,e.z=i*a-s*r,e}static lerp(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e}static random(e,t){t=t||1;const n=2*Jt()*Math.PI,i=2*Jt()-1,s=Math.sqrt(1-i*i);return e.x=s*Math.cos(n)*t,e.y=s*Math.sin(n)*t,e.z=i*t,e}static transformMat4(e,t,n){const i=t.x,s=t.y,o=t.z;let r=n.m03*i+n.m07*s+n.m11*o+n.m15;return r=r?Math.abs(1/r):1,e.x=(n.m00*i+n.m04*s+n.m08*o+n.m12)*r,e.y=(n.m01*i+n.m05*s+n.m09*o+n.m13)*r,e.z=(n.m02*i+n.m06*s+n.m10*o+n.m14)*r,e}static transformMat4Normal(e,t,n){const i=t.x,s=t.y,o=t.z;let r=n.m03*i+n.m07*s+n.m11*o;return r=r?Math.abs(1/r):1,e.x=(n.m00*i+n.m04*s+n.m08*o)*r,e.y=(n.m01*i+n.m05*s+n.m09*o)*r,e.z=(n.m02*i+n.m06*s+n.m10*o)*r,e}static transformMat3(e,t,n){const i=t.x,s=t.y,o=t.z;return e.x=i*n.m00+s*n.m03+o*n.m06,e.y=i*n.m01+s*n.m04+o*n.m07,e.z=i*n.m02+s*n.m05+o*n.m08,e}static transformAffine(e,t,n){const i=t.x,s=t.y,o=t.z;return e.x=n.m00*i+n.m04*s+n.m08*o+n.m12,e.y=n.m01*i+n.m05*s+n.m09*o+n.m13,e.x=n.m02*i+n.m06*s+n.m10*o+n.m14,e}static transformQuat(e,t,n){const i=n.w*t.x+n.y*t.z-n.z*t.y,s=n.w*t.y+n.z*t.x-n.x*t.z,o=n.w*t.z+n.x*t.y-n.y*t.x,r=-n.x*t.x-n.y*t.y-n.z*t.z;return e.x=i*n.w+r*-n.x+s*-n.z-o*-n.y,e.y=s*n.w+r*-n.y+o*-n.x-i*-n.z,e.z=o*n.w+r*-n.z+i*-n.y-s*-n.x,e}static transformRTS(e,t,n,i,s){const o=t.x*s.x,r=t.y*s.y,a=t.z*s.z,c=n.w*o+n.y*a-n.z*r,l=n.w*r+n.z*o-n.x*a,h=n.w*a+n.x*r-n.y*o,u=-n.x*o-n.y*r-n.z*a;return e.x=c*n.w+u*-n.x+l*-n.z-h*-n.y+i.x,e.y=l*n.w+u*-n.y+h*-n.x-c*-n.z+i.y,e.z=h*n.w+u*-n.z+c*-n.y-l*-n.x+i.z,e}static transformInverseRTS(e,t,n,i,s){const o=t.x-i.x,r=t.y-i.y,a=t.z-i.z,c=n.w*o-n.y*a+n.z*r,l=n.w*r-n.z*o+n.x*a,h=n.w*a-n.x*r+n.y*o,u=n.x*o+n.y*r+n.z*a;return e.x=(c*n.w+u*n.x+l*n.z-h*n.y)/s.x,e.y=(l*n.w+u*n.y+h*n.x-c*n.z)/s.y,e.z=(h*n.w+u*n.z+c*n.y-l*n.x)/s.z,e}static rotateX(e,t,n,i){const s=t.x-n.x,o=t.y-n.y,r=t.z-n.z,a=Math.cos(i),c=Math.sin(i),l=s,h=o*a-r*c,u=o*c+r*a;return e.x=l+n.x,e.y=h+n.y,e.z=u+n.z,e}static rotateY(e,t,n,i){const s=t.x-n.x,o=t.y-n.y,r=t.z-n.z,a=Math.cos(i),c=Math.sin(i),l=r*c+s*a,h=o,u=r*a-s*c;return e.x=l+n.x,e.y=h+n.y,e.z=u+n.z,e}static rotateZ(e,t,n,i){const s=t.x-n.x,o=t.y-n.y,r=t.z-n.z,a=Math.cos(i),c=Math.sin(i),l=s*a-o*c,h=s*c+o*a,u=r;return e.x=l+n.x,e.y=h+n.y,e.z=u+n.z,e}static toArray(e,t,n=0){return e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e}static fromArray(e,t,n=0){return e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e}static strictEquals(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z}static equals(e,t,n=jt){const{x:i,y:s,z:o}=e,{x:r,y:a,z:c}=t;return Math.abs(i-r)<=n*Math.max(1,Math.abs(i),Math.abs(r))&&Math.abs(s-a)<=n*Math.max(1,Math.abs(s),Math.abs(a))&&Math.abs(o-c)<=n*Math.max(1,Math.abs(o),Math.abs(c))}static angle(e,t){gn.normalize(vn,e),gn.normalize(yn,t);const n=gn.dot(vn,yn);return n>1?0:n<-1?Math.PI:Math.acos(n)}static projectOnPlane(e,t,n){return gn.subtract(e,t,gn.project(e,t,n))}static project(e,t,n){const i=gn.lengthSqr(n);return i<1e-6?gn.set(e,0,0,0):gn.multiplyScalar(e,n,gn.dot(t,n)/i)}get x(){return this._array[0]}set x(e){this._array[0]=e}get y(){return this._array[1]}set y(e){this._array[1]=e}get z(){return this._array[2]}set z(e){this._array[2]=e}constructor(e,t,n){if(super(),e&&"object"==typeof e)if(ArrayBuffer.isView(e))this._array=e,this._array.fill(0);else{const t=e.array;this._array=mn.createFloatArray(3),this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2]}else this._array=mn.createFloatArray(3),this._array[0]=e||0,this._array[1]=t||0,this._array[2]=n||0}clone(){return new gn(this._array[0],this._array[1],this._array[2])}set(e,t,n){return e&&"object"==typeof e?(this._array[0]=e.x,this._array[1]=e.y,this._array[2]=e.z):(this._array[0]=e||0,this._array[1]=t||0,this._array[2]=n||0),this}equals(e,t=jt){const n=e.array;return Math.abs(this._array[0]-n[0])<=t*Math.max(1,Math.abs(this._array[0]),Math.abs(n[0]))&&Math.abs(this._array[1]-n[1])<=t*Math.max(1,Math.abs(this._array[1]),Math.abs(n[1]))&&Math.abs(this._array[2]-n[2])<=t*Math.max(1,Math.abs(this._array[2]),Math.abs(n[2]))}equals3f(e,t,n,i=jt){return Math.abs(this._array[0]-e)<=i*Math.max(1,Math.abs(this._array[0]),Math.abs(e))&&Math.abs(this._array[1]-t)<=i*Math.max(1,Math.abs(this._array[1]),Math.abs(t))&&Math.abs(this._array[2]-n)<=i*Math.max(1,Math.abs(this._array[2]),Math.abs(n))}strictEquals(e){const t=e.array;return this._array[0]===t[0]&&this._array[1]===t[1]&&this._array[2]===t[2]}strictEquals3f(e,t,n){return this._array[0]===e&&this._array[1]===t&&this._array[2]===n}toString(){return`(${this._array[0].toFixed(2)}, ${this._array[1].toFixed(2)}, ${this._array[2].toFixed(2)})`}lerp(e,t){return this._array[0]+=t*(e.x-this._array[0]),this._array[1]+=t*(e.y-this._array[1]),this._array[2]+=t*(e.z-this._array[2]),this}add(e){const t=e.array;return this._array[0]+=t[0],this._array[1]+=t[1],this._array[2]+=t[2],this}add3f(e,t,n){return this._array[0]+=e,this._array[1]+=t,this._array[2]+=n,this}subtract(e){const t=e.array;return this._array[0]-=t[0],this._array[1]-=t[1],this._array[2]-=t[2],this}subtract3f(e,t,n){return this._array[0]-=e,this._array[1]-=t,this._array[2]-=n,this}multiplyScalar(e){return"object"==typeof e&&console.warn("should use Vec3.multiply for vector * vector operation"),this._array[0]*=e,this._array[1]*=e,this._array[2]*=e,this}multiply(e){"object"!=typeof e&&console.warn("should use Vec3.scale for vector * scalar operation");const t=e.array;return this._array[0]*=t[0],this._array[1]*=t[1],this._array[2]*=t[2],this}multiply3f(e,t,n){return this._array[0]*=e,this._array[1]*=t,this._array[2]*=n,this}divide(e){const t=e.array;return this._array[0]/=t[0],this._array[1]/=t[1],this._array[2]/=t[2],this}divide3f(e,t,n){return this._array[0]/=e,this._array[1]/=t,this._array[2]/=n,this}negative(){return this._array[0]=-this._array[0],this._array[1]=-this._array[1],this._array[2]=-this._array[2],this}clampf(e,t){const n=e.array,i=t.array;return this._array[0]=Xt(this._array[0],n[0],i[0]),this._array[1]=Xt(this._array[1],n[1],i[1]),this._array[2]=Xt(this._array[2],n[2],i[2]),this}dot(e){const t=e.array;return this._array[0]*t[0]+this._array[1]*t[1]+this._array[2]*t[2]}cross(e){const t=this._array[0],n=this._array[1],i=this._array[2],s=e.array[0],o=e.array[1],r=e.array[2];return this._array[0]=n*r-i*o,this._array[1]=i*s-t*r,this._array[2]=t*o-n*s,this}length(){return Math.sqrt(this._array[0]*this._array[0]+this._array[1]*this._array[1]+this._array[2]*this._array[2])}lengthSqr(){return this._array[0]*this._array[0]+this._array[1]*this._array[1]+this._array[2]*this._array[2]}normalize(){const e=this._array[0],t=this._array[1],n=this._array[2];let i=e*e+t*t+n*n;return i>0&&(i=1/Math.sqrt(i),this._array[0]=e*i,this._array[1]=t*i,this._array[2]=n*i),this}transformMat4(e){const t=this._array[0],n=this._array[1],i=this._array[2],s=e.array;let o=s[3]*t+s[7]*n+s[11]*i+s[15];return o=o?1/o:1,this._array[0]=(s[0]*t+s[4]*n+s[8]*i+s[12])*o,this._array[1]=(s[1]*t+s[5]*n+s[9]*i+s[13])*o,this._array[2]=(s[2]*t+s[6]*n+s[10]*i+s[14])*o,this}}e("Vec3",gn),gn.UNIT_X=Object.freeze(new gn(1,0,0)),gn.UNIT_Y=Object.freeze(new gn(0,1,0)),gn.UNIT_Z=Object.freeze(new gn(0,0,1)),gn.RIGHT=Object.freeze(new gn(1,0,0)),gn.UP=Object.freeze(new gn(0,1,0)),gn.FORWARD=Object.freeze(new gn(0,0,-1)),gn.ZERO=Object.freeze(new gn(0,0,0)),gn.ONE=Object.freeze(new gn(1,1,1)),gn.NEG_ONE=Object.freeze(new gn(-1,-1,-1));const vn=new gn,yn=new gn;function xn(e,t,n){return new gn(e,t,n)}un(gn.prototype,["x","y","z"]),zt.fastDefine("cc.Vec3",gn,{x:0,y:0,z:0}),u.Vec3=gn,u.v3=xn;class Sn extends mn{static clone(e){return new Sn(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08)}static copy(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e}static set(e,t,n,i,s,o,r,a,c,l){return e.m00=t,e.m01=n,e.m02=i,e.m03=s,e.m04=o,e.m05=r,e.m06=a,e.m07=c,e.m08=l,e}static identity(e){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=1,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e}static transpose(e,t){if(e===t){const n=t.m01,i=t.m02,s=t.m05;e.m01=t.m03,e.m02=t.m06,e.m03=n,e.m05=t.m07,e.m06=i,e.m07=s}else e.m00=t.m00,e.m01=t.m03,e.m02=t.m06,e.m03=t.m01,e.m04=t.m04,e.m05=t.m07,e.m06=t.m02,e.m07=t.m05,e.m08=t.m08;return e}static invert(e,t){const n=t.m00,i=t.m01,s=t.m02,o=t.m03,r=t.m04,a=t.m05,c=t.m06,l=t.m07,h=t.m08,u=h*r-a*l,_=-h*o+a*c,d=l*o-r*c;let p=n*u+i*_+s*d;return 0===p?(e.m00=0,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=0,e.m06=0,e.m07=0,e.m08=0,e):(p=1/p,e.m00=u*p,e.m01=(-h*i+s*l)*p,e.m02=(a*i-s*r)*p,e.m03=_*p,e.m04=(h*n-s*c)*p,e.m05=(-a*n+s*o)*p,e.m06=d*p,e.m07=(-l*n+i*c)*p,e.m08=(r*n-i*o)*p,e)}static determinant(e){const t=e.m00,n=e.m01,i=e.m02,s=e.m03,o=e.m04,r=e.m05,a=e.m06,c=e.m07,l=e.m08;return t*(l*o-r*c)+n*(-l*s+r*a)+i*(c*s-o*a)}static multiply(e,t,n){const i=t.m00,s=t.m01,o=t.m02,r=t.m03,a=t.m04,c=t.m05,l=t.m06,h=t.m07,u=t.m08,_=n.m00,d=n.m01,p=n.m02,f=n.m03,m=n.m04,g=n.m05,v=n.m06,y=n.m07,x=n.m08;return e.m00=_*i+d*r+p*l,e.m01=_*s+d*a+p*h,e.m02=_*o+d*c+p*u,e.m03=f*i+m*r+g*l,e.m04=f*s+m*a+g*h,e.m05=f*o+m*c+g*u,e.m06=v*i+y*r+x*l,e.m07=v*s+y*a+x*h,e.m08=v*o+y*c+x*u,e}static multiplyMat4(e,t,n){const i=t.m00,s=t.m01,o=t.m02,r=t.m03,a=t.m04,c=t.m05,l=t.m06,h=t.m07,u=t.m08,_=n.m00,d=n.m01,p=n.m02,f=n.m04,m=n.m05,g=n.m06,v=n.m08,y=n.m09,x=n.m10;return e.m00=_*i+d*r+p*l,e.m01=_*s+d*a+p*h,e.m02=_*o+d*c+p*u,e.m03=f*i+m*r+g*l,e.m04=f*s+m*a+g*h,e.m05=f*o+m*c+g*u,e.m06=v*i+y*r+x*l,e.m07=v*s+y*a+x*h,e.m08=v*o+y*c+x*u,e}static transform(e,t,n){const i=t.m00,s=t.m01,o=t.m02,r=t.m03,a=t.m04,c=t.m05,l=t.m06,h=t.m07,u=t.m08,_=n.x,d=n.y;return e.m00=i,e.m01=s,e.m02=o,e.m03=r,e.m04=a,e.m05=c,e.m06=_*i+d*r+l,e.m07=_*s+d*a+h,e.m08=_*o+d*c+u,e}static scale(e,t,n){const i=n.x,s=n.y;return e.m00=i*t.m00,e.m01=i*t.m01,e.m02=i*t.m02,e.m03=s*t.m03,e.m04=s*t.m04,e.m05=s*t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e}static rotate(e,t,n){const i=t.m00,s=t.m01,o=t.m02,r=t.m03,a=t.m04,c=t.m05,l=t.m06,h=t.m07,u=t.m08,_=Math.sin(n),d=Math.cos(n);return e.m00=d*i+_*r,e.m01=d*s+_*a,e.m02=d*o+_*c,e.m03=d*r-_*i,e.m04=d*a-_*s,e.m05=d*c-_*o,e.m06=l,e.m07=h,e.m08=u,e}static fromMat4(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m04,e.m04=t.m05,e.m05=t.m06,e.m06=t.m08,e.m07=t.m09,e.m08=t.m10,e}static fromViewUp(e,t,n){return gn.lengthSqr(t)<jt*jt?(Sn.identity(e),e):(gn.normalize(Cn,gn.cross(Cn,n||gn.UNIT_Y,t)),gn.lengthSqr(Cn)<jt*jt?(Sn.identity(e),e):(gn.cross(En,t,Cn),Sn.set(e,Cn.x,Cn.y,Cn.z,En.x,En.y,En.z,t.x,t.y,t.z),e))}static fromTranslation(e,t){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=1,e.m05=0,e.m06=t.x,e.m07=t.y,e.m08=1,e}static fromScaling(e,t){return e.m00=t.x,e.m01=0,e.m02=0,e.m03=0,e.m04=t.y,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e}static fromRotation(e,t){const n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=n,e.m02=0,e.m03=-n,e.m04=i,e.m05=0,e.m06=0,e.m07=0,e.m08=1,e}static fromQuat(e,t){const n=t.x,i=t.y,s=t.z,o=t.w,r=n+n,a=i+i,c=s+s,l=n*r,h=i*r,u=i*a,_=s*r,d=s*a,p=s*c,f=o*r,m=o*a,g=o*c;return e.m00=1-u-p,e.m03=h-g,e.m06=_+m,e.m01=h+g,e.m04=1-l-p,e.m07=d-f,e.m02=_-m,e.m05=d+f,e.m08=1-l-u,e}static inverseTransposeMat4(e,t){const n=t.m00,i=t.m01,s=t.m02,o=t.m03,r=t.m04,a=t.m05,c=t.m06,l=t.m07,h=t.m08,u=t.m09,_=t.m10,d=t.m11,p=t.m12,f=t.m13,m=t.m14,g=t.m15,v=n*a-i*r,y=n*c-s*r,x=n*l-o*r,S=i*c-s*a,C=i*l-o*a,E=s*l-o*c,T=h*f-u*p,b=h*m-_*p,A=h*g-d*p,P=u*m-_*f,w=u*g-d*f,I=_*g-d*m;let R=v*I-y*w+x*P+S*A-C*b+E*T;return R?(R=1/R,e.m00=(a*I-c*w+l*P)*R,e.m01=(c*A-r*I-l*b)*R,e.m02=(r*w-a*A+l*T)*R,e.m03=(s*w-i*I-o*P)*R,e.m04=(n*I-s*A+o*b)*R,e.m05=(i*A-n*w-o*T)*R,e.m06=(f*E-m*C+g*S)*R,e.m07=(m*x-p*E-g*y)*R,e.m08=(p*C-f*x+g*v)*R,e):null}static toArray(e,t,n=0){return e[n+0]=t.m00,e[n+1]=t.m01,e[n+2]=t.m02,e[n+3]=t.m03,e[n+4]=t.m04,e[n+5]=t.m05,e[n+6]=t.m06,e[n+7]=t.m07,e[n+8]=t.m08,e}static fromArray(e,t,n=0){return e.m00=t[n+0],e.m01=t[n+1],e.m02=t[n+2],e.m03=t[n+3],e.m04=t[n+4],e.m05=t[n+5],e.m06=t[n+6],e.m07=t[n+7],e.m08=t[n+8],e}static add(e,t,n){return e.m00=t.m00+n.m00,e.m01=t.m01+n.m01,e.m02=t.m02+n.m02,e.m03=t.m03+n.m03,e.m04=t.m04+n.m04,e.m05=t.m05+n.m05,e.m06=t.m06+n.m06,e.m07=t.m07+n.m07,e.m08=t.m08+n.m08,e}static subtract(e,t,n){return e.m00=t.m00-n.m00,e.m01=t.m01-n.m01,e.m02=t.m02-n.m02,e.m03=t.m03-n.m03,e.m04=t.m04-n.m04,e.m05=t.m05-n.m05,e.m06=t.m06-n.m06,e.m07=t.m07-n.m07,e.m08=t.m08-n.m08,e}static multiplyScalar(e,t,n){return e.m00=t.m00*n,e.m01=t.m01*n,e.m02=t.m02*n,e.m03=t.m03*n,e.m04=t.m04*n,e.m05=t.m05*n,e.m06=t.m06*n,e.m07=t.m07*n,e.m08=t.m08*n,e}static multiplyScalarAndAdd(e,t,n,i){return e.m00=n.m00*i+t.m00,e.m01=n.m01*i+t.m01,e.m02=n.m02*i+t.m02,e.m03=n.m03*i+t.m03,e.m04=n.m04*i+t.m04,e.m05=n.m05*i+t.m05,e.m06=n.m06*i+t.m06,e.m07=n.m07*i+t.m07,e.m08=n.m08*i+t.m08,e}static strictEquals(e,t){return e.m00===t.m00&&e.m01===t.m01&&e.m02===t.m02&&e.m03===t.m03&&e.m04===t.m04&&e.m05===t.m05&&e.m06===t.m06&&e.m07===t.m07&&e.m08===t.m08}static equals(e,t,n=jt){return Math.abs(e.m00-t.m00)<=n*Math.max(1,Math.abs(e.m00),Math.abs(t.m00))&&Math.abs(e.m01-t.m01)<=n*Math.max(1,Math.abs(e.m01),Math.abs(t.m01))&&Math.abs(e.m02-t.m02)<=n*Math.max(1,Math.abs(e.m02),Math.abs(t.m02))&&Math.abs(e.m03-t.m03)<=n*Math.max(1,Math.abs(e.m03),Math.abs(t.m03))&&Math.abs(e.m04-t.m04)<=n*Math.max(1,Math.abs(e.m04),Math.abs(t.m04))&&Math.abs(e.m05-t.m05)<=n*Math.max(1,Math.abs(e.m05),Math.abs(t.m05))&&Math.abs(e.m06-t.m06)<=n*Math.max(1,Math.abs(e.m06),Math.abs(t.m06))&&Math.abs(e.m07-t.m07)<=n*Math.max(1,Math.abs(e.m07),Math.abs(t.m07))&&Math.abs(e.m08-t.m08)<=n*Math.max(1,Math.abs(e.m08),Math.abs(t.m08))}get m00(){return this._array[0]}set m00(e){this._array[0]=e}get m01(){return this._array[1]}set m01(e){this._array[1]=e}get m02(){return this._array[2]}set m02(e){this._array[2]=e}get m03(){return this._array[3]}set m03(e){this._array[3]=e}get m04(){return this._array[4]}set m04(e){this._array[4]=e}get m05(){return this._array[5]}set m05(e){this._array[5]=e}get m06(){return this._array[6]}set m06(e){this._array[6]=e}get m07(){return this._array[7]}set m07(e){this._array[7]=e}get m08(){return this._array[8]}set m08(e){this._array[8]=e}constructor(e=1,t=0,n=0,i=0,s=1,o=0,r=0,a=0,c=1){if(super(),e&&"object"==typeof e)if(ArrayBuffer.isView(e))this._array=e,this._array.set([1,0,0,0,1,0,0,0,1]);else{const t=e.array;this._array=mn.createFloatArray(9),this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3],this._array[4]=t[4],this._array[5]=t[5],this._array[6]=t[6],this._array[7]=t[7],this._array[8]=t[8]}else this._array=mn.createFloatArray(9),this._array[0]=e,this._array[1]=t,this._array[2]=n,this._array[3]=i,this._array[4]=s,this._array[5]=o,this._array[6]=r,this._array[7]=a,this._array[8]=c}clone(){const e=this._array;return new Sn(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8])}set(e=1,t=0,n=0,i=0,s=1,o=0,r=0,a=0,c=1){if(e&&"object"==typeof e){const t=e.array;this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3],this._array[4]=t[4],this._array[5]=t[5],this._array[6]=t[6],this._array[7]=t[7],this._array[8]=t[8]}else this._array[0]=e,this._array[1]=t,this._array[2]=n,this._array[3]=i,this._array[4]=s,this._array[5]=o,this._array[6]=r,this._array[7]=a,this._array[8]=c;return this}equals(e,t=jt){const n=e.array;return Math.abs(this._array[0]-n[0])<=t*Math.max(1,Math.abs(this._array[0]),Math.abs(n[0]))&&Math.abs(this._array[1]-n[1])<=t*Math.max(1,Math.abs(this._array[1]),Math.abs(n[1]))&&Math.abs(this._array[2]-n[2])<=t*Math.max(1,Math.abs(this._array[2]),Math.abs(n[2]))&&Math.abs(this._array[3]-n[3])<=t*Math.max(1,Math.abs(this._array[3]),Math.abs(n[3]))&&Math.abs(this._array[4]-n[4])<=t*Math.max(1,Math.abs(this._array[4]),Math.abs(n[4]))&&Math.abs(this._array[5]-n[5])<=t*Math.max(1,Math.abs(this._array[5]),Math.abs(n[5]))&&Math.abs(this._array[6]-n[6])<=t*Math.max(1,Math.abs(this._array[6]),Math.abs(n[6]))&&Math.abs(this._array[7]-n[7])<=t*Math.max(1,Math.abs(this._array[7]),Math.abs(n[7]))&&Math.abs(this._array[8]-n[8])<=t*Math.max(1,Math.abs(this._array[8]),Math.abs(n[8]))}strictEquals(e){const t=e.array;return this._array[0]===t[0]&&this._array[1]===t[1]&&this._array[2]===t[2]&&this._array[3]===t[3]&&this._array[4]===t[4]&&this._array[5]===t[5]&&this._array[6]===t[6]&&this._array[7]===t[7]&&this._array[8]===t[8]}toString(){return`[\n${this._array[0]}, ${this._array[1]}, ${this._array[2]},\n${this._array[3]},\n${this._array[4]}, ${this._array[5]},\n${this._array[6]}, ${this._array[7]},\n${this._array[8]}\n]`}identity(){return this._array[0]=1,this._array[1]=0,this._array[2]=0,this._array[3]=0,this._array[4]=1,this._array[5]=0,this._array[6]=0,this._array[7]=0,this._array[8]=1,this}transpose(){const e=this._array[1],t=this._array[2],n=this._array[5];return this._array[1]=this._array[3],this._array[2]=this._array[6],this._array[3]=e,this._array[5]=this._array[7],this._array[6]=t,this._array[7]=n,this}invert(){const e=this._array[0],t=this._array[1],n=this._array[2],i=this._array[3],s=this._array[4],o=this._array[5],r=this._array[6],a=this._array[7],c=this._array[8],l=c*s-o*a,h=-c*i+o*r,u=a*i-s*r;let _=e*l+t*h+n*u;return 0===_?(this.set(0,0,0,0,0,0,0,0,0),this):(_=1/_,this._array[0]=l*_,this._array[1]=(-c*t+n*a)*_,this._array[2]=(o*t-n*s)*_,this._array[3]=h*_,this._array[4]=(c*e-n*r)*_,this._array[5]=(-o*e+n*i)*_,this._array[6]=u*_,this._array[7]=(-a*e+t*r)*_,this._array[8]=(s*e-t*i)*_,this)}determinant(){const e=this._array[0],t=this._array[1],n=this._array[2],i=this._array[3],s=this._array[4],o=this._array[5],r=this._array[6],a=this._array[7],c=this._array[8];return e*(c*s-o*a)+t*(-c*i+o*r)+n*(a*i-s*r)}add(e){const t=e.array;return this._array[0]+=t[0],this._array[1]+=t[1],this._array[2]+=t[2],this._array[3]+=t[3],this._array[4]+=t[4],this._array[5]+=t[5],this._array[6]+=t[6],this._array[7]+=t[7],this._array[8]+=t[8],this}subtract(e){const t=e.array;return this._array[0]-=t[0],this._array[1]-=t[1],this._array[2]-=t[2],this._array[3]-=t[3],this._array[4]-=t[4],this._array[5]-=t[5],this._array[6]-=t[6],this._array[7]-=t[7],this._array[8]-=t[8],this}multiply(e){const t=this._array[0],n=this._array[1],i=this._array[2],s=this._array[3],o=this._array[4],r=this._array[5],a=this._array[6],c=this._array[7],l=this._array[8],h=e.array,u=h[0],_=h[1],d=h[2],p=h[3],f=h[4],m=h[5],g=h[6],v=h[7],y=h[8];return this._array[0]=u*t+_*s+d*a,this._array[1]=u*n+_*o+d*c,this._array[2]=u*i+_*r+d*l,this._array[3]=p*t+f*s+m*a,this._array[4]=p*n+f*o+m*c,this._array[5]=p*i+f*r+m*l,this._array[6]=g*t+v*s+y*a,this._array[7]=g*n+v*o+y*c,this._array[8]=g*i+v*r+y*l,this}multiplyScalar(e){return this._array[0]*=e,this._array[1]*=e,this._array[2]*=e,this._array[3]*=e,this._array[4]*=e,this._array[5]*=e,this._array[6]*=e,this._array[7]*=e,this._array[8]*=e,this}scale(e){const t=e.array[0],n=e.array[1];return this._array[0]*=t,this._array[1]*=t,this._array[2]*=t,this._array[3]*=n,this._array[4]*=n,this._array[5]*=n,this}rotate(e){const t=this._array[0],n=this._array[1],i=this._array[2],s=this._array[3],o=this._array[4],r=this._array[5],a=this._array[6],c=this._array[7],l=this._array[8],h=Math.sin(e),u=Math.cos(e);return this._array[0]=u*t+h*s,this._array[1]=u*n+h*o,this._array[2]=u*i+h*r,this._array[3]=u*s-h*t,this._array[4]=u*o-h*n,this._array[5]=u*r-h*i,this._array[6]=a,this._array[7]=c,this._array[8]=l,this}fromQuat(e){const t=e.x,n=e.y,i=e.z,s=e.w,o=t+t,r=n+n,a=i+i,c=t*o,l=n*o,h=n*r,u=i*o,_=i*r,d=i*a,p=s*o,f=s*r,m=s*a;return this._array[0]=1-h-d,this._array[3]=l-m,this._array[6]=u+f,this._array[1]=l+m,this._array[4]=1-c-d,this._array[7]=_-p,this._array[2]=u-f,this._array[5]=_+p,this._array[8]=1-c-h,this}}e("Mat3",Sn),Sn.IDENTITY=Object.freeze(new Sn);const Cn=new gn,En=new gn;un(Sn.prototype,["m00","m01","m02","m03","m04","m05","m06","m07","m08"]),zt.fastDefine("cc.Mat3",Sn,{m00:1,m01:0,m02:0,m03:0,m04:1,m05:0,m06:0,m07:0,m08:1}),u.Mat3=Sn;class Tn extends mn{static clone(e){return new Tn(e.x,e.y,e.z,e.w)}static copy(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}static set(e,t,n,i,s){return e.x=t,e.y=n,e.z=i,e.w=s,e}static identity(e){return e.x=0,e.y=0,e.z=0,e.w=1,e}static rotationTo(e,t,n){const i=gn.dot(t,n);return i<-.999999?(gn.cross(Pn,gn.UNIT_X,t),Pn.length()<1e-6&&gn.cross(Pn,gn.UNIT_Y,t),gn.normalize(Pn,Pn),Tn.fromAxisAngle(e,Pn,Math.PI),e):i>.999999?(e.x=0,e.y=0,e.z=0,e.w=1,e):(gn.cross(Pn,t,n),e.x=Pn.x,e.y=Pn.y,e.z=Pn.z,e.w=1+i,Tn.normalize(e,e))}static getAxisAngle(e,t){const n=2*Math.acos(t.w),i=Math.sin(n/2);return 0!==i?(e.x=t.x/i,e.y=t.y/i,e.z=t.z/i):(e.x=1,e.y=0,e.z=0),n}static multiply(e,t,n){const i=t.x*n.w+t.w*n.x+t.y*n.z-t.z*n.y,s=t.y*n.w+t.w*n.y+t.z*n.x-t.x*n.z,o=t.z*n.w+t.w*n.z+t.x*n.y-t.y*n.x,r=t.w*n.w-t.x*n.x-t.y*n.y-t.z*n.z;return e.x=i,e.y=s,e.z=o,e.w=r,e}static multiplyScalar(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n,e}static scaleAndAdd(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e.w=t.w+n.w*i,e}static rotateX(e,t,n){n*=.5;const i=Math.sin(n),s=Math.cos(n),{x:o,y:r,z:a,w:c}=t;return e.x=o*s+c*i,e.y=r*s+a*i,e.z=a*s-r*i,e.w=c*s-o*i,e}static rotateY(e,t,n){n*=.5;const i=Math.sin(n),s=Math.cos(n),{x:o,y:r,z:a,w:c}=t;return e.x=o*s-a*i,e.y=r*s+c*i,e.z=a*s+o*i,e.w=c*s-r*i,e}static rotateZ(e,t,n){n*=.5;const i=Math.sin(n),s=Math.cos(n),{x:o,y:r,z:a,w:c}=t;return e.x=o*s+r*i,e.y=r*s-o*i,e.z=a*s+c*i,e.w=c*s-a*i,e}static rotateAround(e,t,n,i){return Tn.invert(bn,t),gn.transformQuat(Pn,n,bn),Tn.fromAxisAngle(bn,Pn,i),Tn.multiply(e,t,bn),e}static rotateAroundLocal(e,t,n,i){return Tn.fromAxisAngle(bn,n,i),Tn.multiply(e,t,bn),e}static calculateW(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=Math.sqrt(Math.abs(1-t.x*t.x-t.y*t.y-t.z*t.z)),e}static dot(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w}static lerp(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e.w=t.w+i*(n.w-t.w),e}static slerp(e,t,n,i){let s=0,o=0,r=n.x,a=n.y,c=n.z,l=n.w,h=t.x*n.x+t.y*n.y+t.z*n.z+t.w*n.w;if(h<0&&(h=-h,r=-r,a=-a,c=-c,l=-l),1-h>1e-6){const e=Math.acos(h),t=Math.sin(e);s=Math.sin((1-i)*e)/t,o=Math.sin(i*e)/t}else s=1-i,o=i;return e.x=s*t.x+o*r,e.y=s*t.y+o*a,e.z=s*t.z+o*c,e.w=s*t.w+o*l,e}static sqlerp(e,t,n,i,s,o){return Tn.slerp(bn,t,s,o),Tn.slerp(An,n,i,o),Tn.slerp(e,bn,An,2*o*(1-o)),e}static invert(e,t){const n=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w,i=n?1/n:0;return e.x=-t.x*i,e.y=-t.y*i,e.z=-t.z*i,e.w=t.w*i,e}static conjugate(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e.w=t.w,e}static len(e){return Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w)}static lengthSqr(e){return e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w}static normalize(e,t){let n=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w;return n>0&&(n=1/Math.sqrt(n),e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n),e}static fromAxes(e,t,n,i){return Sn.set(wn,t.x,t.y,t.z,n.x,n.y,n.z,i.x,i.y,i.z),Tn.normalize(e,Tn.fromMat3(e,wn))}static fromViewUp(e,t,n){return Sn.fromViewUp(wn,t,n),Tn.normalize(e,Tn.fromMat3(e,wn))}static fromAxisAngle(e,t,n){n*=.5;const i=Math.sin(n);return e.x=i*t.x,e.y=i*t.y,e.z=i*t.z,e.w=Math.cos(n),e}static fromMat3(e,t){const{m00:n,m03:i,m06:s,m01:o,m04:r,m07:a,m02:c,m05:l,m08:h}=t,u=n+r+h;if(u>0){const t=.5/Math.sqrt(u+1);e.w=.25/t,e.x=(l-a)*t,e.y=(s-c)*t,e.z=(o-i)*t}else if(n>r&&n>h){const t=2*Math.sqrt(1+n-r-h);e.w=(l-a)/t,e.x=.25*t,e.y=(i+o)/t,e.z=(s+c)/t}else if(r>h){const t=2*Math.sqrt(1+r-n-h);e.w=(s-c)/t,e.x=(i+o)/t,e.y=.25*t,e.z=(a+l)/t}else{const t=2*Math.sqrt(1+h-n-r);e.w=(o-i)/t,e.x=(s+c)/t,e.y=(a+l)/t,e.z=.25*t}return e}static fromEuler(e,t,n,i){t*=In,n*=In,i*=In;const s=Math.sin(t),o=Math.cos(t),r=Math.sin(n),a=Math.cos(n),c=Math.sin(i),l=Math.cos(i);return e.x=s*a*l+o*r*c,e.y=o*r*l+s*a*c,e.z=o*a*c-s*r*l,e.w=o*a*l-s*r*c,e}static fromAngleZ(e,t){return t*=In,e.x=e.y=0,e.z=Math.sin(t),e.w=Math.cos(t),e}static toAxisX(e,t){const n=2*t.y,i=2*t.z;return e.x=1-n*t.y-i*t.z,e.y=n*t.x+i*t.w,e.z=i*t.x+n*t.w,e}static toAxisY(e,t){const n=2*t.x,i=2*t.y,s=2*t.z;return e.x=i*t.x-s*t.w,e.y=1-n*t.x-s*t.z,e.z=s*t.y+n*t.w,e}static toAxisZ(e,t){const n=2*t.x,i=2*t.y,s=2*t.z;return e.x=s*t.x-i*t.w,e.y=s*t.y-n*t.w,e.z=1-n*t.x-i*t.y,e}static toEuler(e,t,n){const{x:i,y:s,z:o,w:r}=t;let a=0,c=0,l=0;const h=i*s+o*r;if(h>.499999)a=0,c=Qt(2*Math.atan2(i,r)),l=90;else if(h<-.499999)a=0,c=-Qt(2*Math.atan2(i,r)),l=-90;else{const e=i*i,t=s*s,u=o*o;a=Qt(Math.atan2(2*i*r-2*s*o,1-2*e-2*u)),c=Qt(Math.atan2(2*s*r-2*i*o,1-2*t-2*u)),l=Qt(Math.asin(2*h)),n&&(a=-180*Math.sign(a+1e-6)+a,c=-180*Math.sign(c+1e-6)+c,l=180*Math.sign(l+1e-6)-l)}return e.x=a,e.y=c,e.z=l,e}static toArray(e,t,n=0){return e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e[n+3]=t.w,e}static fromArray(e,t,n=0){return e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e.w=t[n+3],e}static strictEquals(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w}static equals(e,t,n=jt){return Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))&&Math.abs(e.z-t.z)<=n*Math.max(1,Math.abs(e.z),Math.abs(t.z))&&Math.abs(e.w-t.w)<=n*Math.max(1,Math.abs(e.w),Math.abs(t.w))}get x(){return this._array[0]}set x(e){this._array[0]=e}get y(){return this._array[1]}set y(e){this._array[1]=e}get z(){return this._array[2]}set z(e){this._array[2]=e}get w(){return this._array[3]}set w(e){this._array[3]=e}constructor(e,t,n,i){if(super(),e&&"object"==typeof e)if(ArrayBuffer.isView(e))this._array=e,this._array.fill(0),this._array[3]=1;else{const t=e.array;this._array=mn.createFloatArray(4),this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3]}else this._array=mn.createFloatArray(4),this._array[0]=e||0,this._array[1]=t||0,this._array[2]=n||0,this._array[3]=null!=i?i:1}clone(){return new Tn(this._array[0],this._array[1],this._array[2],this._array[3])}set(e,t,n,i){if(e&&"object"==typeof e){const t=e.array;this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3]}else this._array[0]=e||0,this._array[1]=t||0,this._array[2]=n||0,this._array[3]=null!=i?i:1;return this}equals(e,t=jt){const n=e.array;return Math.abs(this._array[0]-n[0])<=t*Math.max(1,Math.abs(this._array[0]),Math.abs(n[0]))&&Math.abs(this._array[1]-n[1])<=t*Math.max(1,Math.abs(this._array[1]),Math.abs(n[1]))&&Math.abs(this._array[2]-n[2])<=t*Math.max(1,Math.abs(this._array[2]),Math.abs(n[2]))&&Math.abs(this._array[3]-n[3])<=t*Math.max(1,Math.abs(this._array[3]),Math.abs(n[3]))}strictEquals(e){const t=e.array;return e&&this._array[0]===t[0]&&this._array[1]===t[1]&&this._array[2]===t[2]&&this._array[3]===t[3]}getEulerAngles(e){return Tn.toEuler(e,this)}lerp(e,t){const n=e.array;return this._array[0]+=t*(n[0]-this._array[0]),this._array[1]+=t*(n[1]-this._array[1]),this._array[2]+=t*(n[2]-this._array[2]),this._array[3]+=t*(n[3]-this._array[3]),this}slerp(e,t){return Tn.slerp(this,this,e,t)}length(){const e=this._array;return Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]+e[3]*e[3])}lengthSqr(){const e=this._array;return e[0]*e[0]+e[1]*e[1]+e[2]*e[2]+e[3]*e[3]}}e("Quat",Tn),Tn.IDENTITY=Object.freeze(new Tn),un(Tn.prototype,["x","y","z","w"]);const bn=new Tn,An=new Tn,Pn=new gn,wn=new Sn,In=.5*Math.PI/180;function Rn(e=0,t=0,n=0,i=1){return new Tn(e,t,n,i)}zt.fastDefine("cc.Quat",Tn,{x:0,y:0,z:0,w:1}),u.Quat=Tn,u.quat=Rn;const Dn=Object.freeze([Object.freeze([1,0,0,1]),Object.freeze([0,1,-1,0]),Object.freeze([-1,0,0,-1]),Object.freeze([0,-1,1,0])]);class On extends mn{static clone(e){return new On(e.m00,e.m01,e.m02,e.m03,e.m04,e.m05,e.m06,e.m07,e.m08,e.m09,e.m10,e.m11,e.m12,e.m13,e.m14,e.m15)}static copy(e,t){return e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15,e}static set(e,t,n,i,s,o,r,a,c,l,h,u,_,d,p,f,m){return e.m00=t,e.m01=n,e.m02=i,e.m03=s,e.m04=o,e.m05=r,e.m06=a,e.m07=c,e.m08=l,e.m09=h,e.m10=u,e.m11=_,e.m12=d,e.m13=p,e.m14=f,e.m15=m,e}static identity(e){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e}static transpose(e,t){if(e===t){const n=t.m01,i=t.m02,s=t.m03,o=t.m06,r=t.m07,a=t.m11;e.m01=t.m04,e.m02=t.m08,e.m03=t.m12,e.m04=n,e.m06=t.m09,e.m07=t.m13,e.m08=i,e.m09=o,e.m11=t.m14,e.m12=s,e.m13=r,e.m14=a}else e.m00=t.m00,e.m01=t.m04,e.m02=t.m08,e.m03=t.m12,e.m04=t.m01,e.m05=t.m05,e.m06=t.m09,e.m07=t.m13,e.m08=t.m02,e.m09=t.m06,e.m10=t.m10,e.m11=t.m14,e.m12=t.m03,e.m13=t.m07,e.m14=t.m11,e.m15=t.m15;return e}static invert(e,t){const n=t.m00,i=t.m01,s=t.m02,o=t.m03,r=t.m04,a=t.m05,c=t.m06,l=t.m07,h=t.m08,u=t.m09,_=t.m10,d=t.m11,p=t.m12,f=t.m13,m=t.m14,g=t.m15,v=n*a-i*r,y=n*c-s*r,x=n*l-o*r,S=i*c-s*a,C=i*l-o*a,E=s*l-o*c,T=h*f-u*p,b=h*m-_*p,A=h*g-d*p,P=u*m-_*f,w=u*g-d*f,I=_*g-d*m;let R=v*I-y*w+x*P+S*A-C*b+E*T;return 0===R?(e.m00=0,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=0,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=0,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=0,e):(R=1/R,e.m00=(a*I-c*w+l*P)*R,e.m01=(s*w-i*I-o*P)*R,e.m02=(f*E-m*C+g*S)*R,e.m03=(_*C-u*E-d*S)*R,e.m04=(c*A-r*I-l*b)*R,e.m05=(n*I-s*A+o*b)*R,e.m06=(m*x-p*E-g*y)*R,e.m07=(h*E-_*x+d*y)*R,e.m08=(r*w-a*A+l*T)*R,e.m09=(i*A-n*w-o*T)*R,e.m10=(p*C-f*x+g*v)*R,e.m11=(u*x-h*C-d*v)*R,e.m12=(a*b-r*P-c*T)*R,e.m13=(n*P-i*b+s*T)*R,e.m14=(f*y-p*S-m*v)*R,e.m15=(h*S-u*y+_*v)*R,e)}static determinant(e){const t=e.m00,n=e.m01,i=e.m02,s=e.m03,o=e.m04,r=e.m05,a=e.m06,c=e.m07,l=e.m08,h=e.m09,u=e.m10,_=e.m11,d=e.m12,p=e.m13,f=e.m14,m=e.m15;return(t*r-n*o)*(u*m-_*f)-(t*a-i*o)*(h*m-_*p)+(t*c-s*o)*(h*f-u*p)+(n*a-i*r)*(l*m-_*d)-(n*c-s*r)*(l*f-u*d)+(i*c-s*a)*(l*p-h*d)}static multiply(e,t,n){const i=t.m00,s=t.m01,o=t.m02,r=t.m03,a=t.m04,c=t.m05,l=t.m06,h=t.m07,u=t.m08,_=t.m09,d=t.m10,p=t.m11,f=t.m12,m=t.m13,g=t.m14,v=t.m15;let y=n.m00,x=n.m01,S=n.m02,C=n.m03;return e.m00=y*i+x*a+S*u+C*f,e.m01=y*s+x*c+S*_+C*m,e.m02=y*o+x*l+S*d+C*g,e.m03=y*r+x*h+S*p+C*v,y=n.m04,x=n.m05,S=n.m06,C=n.m07,e.m04=y*i+x*a+S*u+C*f,e.m05=y*s+x*c+S*_+C*m,e.m06=y*o+x*l+S*d+C*g,e.m07=y*r+x*h+S*p+C*v,y=n.m08,x=n.m09,S=n.m10,C=n.m11,e.m08=y*i+x*a+S*u+C*f,e.m09=y*s+x*c+S*_+C*m,e.m10=y*o+x*l+S*d+C*g,e.m11=y*r+x*h+S*p+C*v,y=n.m12,x=n.m13,S=n.m14,C=n.m15,e.m12=y*i+x*a+S*u+C*f,e.m13=y*s+x*c+S*_+C*m,e.m14=y*o+x*l+S*d+C*g,e.m15=y*r+x*h+S*p+C*v,e}static transform(e,t,n){const i=n.x,s=n.y,o=n.z;if(t===e)e.m12=t.m00*i+t.m04*s+t.m08*o+t.m12,e.m13=t.m01*i+t.m05*s+t.m09*o+t.m13,e.m14=t.m02*i+t.m06*s+t.m10*o+t.m14,e.m15=t.m03*i+t.m07*s+t.m11*o+t.m15;else{const n=t.m00,r=t.m01,a=t.m02,c=t.m03,l=t.m04,h=t.m05,u=t.m06,_=t.m07,d=t.m08,p=t.m09,f=t.m10,m=t.m11;t.m12,t.m13,t.m14,t.m15,e.m00=n,e.m01=r,e.m02=a,e.m03=c,e.m04=l,e.m05=h,e.m06=u,e.m07=_,e.m08=d,e.m09=p,e.m10=f,e.m11=m,e.m12=n*i+l*s+d*o+t.m12,e.m13=r*i+h*s+p*o+t.m13,e.m14=a*i+u*s+f*o+t.m14,e.m15=c*i+_*s+m*o+t.m15}return e}static translate(e,t,n){return console.warn("function changed"),t===e?(e.m12+=n.x,e.m13+=n.y,e.m14+=n.z):(e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12+=n.x,e.m13+=n.y,e.m14+=n.z,e.m15=t.m15),e}static scale(e,t,n){const i=n.x,s=n.y,o=n.z;return e.m00=t.m00*i,e.m01=t.m01*i,e.m02=t.m02*i,e.m03=t.m03*i,e.m04=t.m04*s,e.m05=t.m05*s,e.m06=t.m06*s,e.m07=t.m07*s,e.m08=t.m08*o,e.m09=t.m09*o,e.m10=t.m10*o,e.m11=t.m11*o,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15,e}static rotate(e,t,n,i){let s=i.x,o=i.y,r=i.z,a=Math.sqrt(s*s+o*o+r*r);if(Math.abs(a)<jt)return null;a=1/a,s*=a,o*=a,r*=a;const c=Math.sin(n),l=Math.cos(n),h=1-l,u=t.m00,_=t.m01,d=t.m02,p=t.m03,f=t.m04,m=t.m05,g=t.m06,v=t.m07,y=t.m08,x=t.m09,S=t.m10,C=t.m11,E=s*s*h+l,T=o*s*h+r*c,b=r*s*h-o*c,A=s*o*h-r*c,P=o*o*h+l,w=r*o*h+s*c,I=s*r*h+o*c,R=o*r*h-s*c,D=r*r*h+l;return e.m00=u*E+f*T+y*b,e.m01=_*E+m*T+x*b,e.m02=d*E+g*T+S*b,e.m03=p*E+v*T+C*b,e.m04=u*A+f*P+y*w,e.m05=_*A+m*P+x*w,e.m06=d*A+g*P+S*w,e.m07=p*A+v*P+C*w,e.m08=u*I+f*R+y*D,e.m09=_*I+m*R+x*D,e.m10=d*I+g*R+S*D,e.m11=p*I+v*R+C*D,t!==e&&(e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e}static rotateX(e,t,n){const i=Math.sin(n),s=Math.cos(n),o=t.m04,r=t.m05,a=t.m06,c=t.m07,l=t.m08,h=t.m09,u=t.m10,_=t.m11;return t!==e&&(e.m00=t.m00,e.m01=t.m01,e.m02=t.m02,e.m03=t.m03,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m04=o*s+l*i,e.m05=r*s+h*i,e.m06=a*s+u*i,e.m07=c*s+_*i,e.m08=l*s-o*i,e.m09=h*s-r*i,e.m10=u*s-a*i,e.m11=_*s-c*i,e}static rotateY(e,t,n){const i=Math.sin(n),s=Math.cos(n),o=t.m00,r=t.m01,a=t.m02,c=t.m03,l=t.m08,h=t.m09,u=t.m10,_=t.m11;return t!==e&&(e.m04=t.m04,e.m05=t.m05,e.m06=t.m06,e.m07=t.m07,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m00=o*s-l*i,e.m01=r*s-h*i,e.m02=a*s-u*i,e.m03=c*s-_*i,e.m08=o*i+l*s,e.m09=r*i+h*s,e.m10=a*i+u*s,e.m11=c*i+_*s,e}static rotateZ(e,t,n){const i=Math.sin(n),s=Math.cos(n),o=t.m00,r=t.m01,a=t.m02,c=t.m03,l=t.m04,h=t.m05,u=t.m06,_=t.m07;return t!==e&&(e.m08=t.m08,e.m09=t.m09,e.m10=t.m10,e.m11=t.m11,e.m12=t.m12,e.m13=t.m13,e.m14=t.m14,e.m15=t.m15),e.m00=o*s+l*i,e.m01=r*s+h*i,e.m02=a*s+u*i,e.m03=c*s+_*i,e.m04=l*s-o*i,e.m05=h*s-r*i,e.m06=u*s-a*i,e.m07=_*s-c*i,e}static fromTranslation(e,t){return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=t.x,e.m13=t.y,e.m14=t.z,e.m15=1,e}static fromScaling(e,t){return e.m00=t.x,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=t.y,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=t.z,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e}static fromRotation(e,t,n){let i=n.x,s=n.y,o=n.z,r=Math.sqrt(i*i+s*s+o*o);if(Math.abs(r)<jt)return null;r=1/r,i*=r,s*=r,o*=r;const a=Math.sin(t),c=Math.cos(t),l=1-c;return e.m00=i*i*l+c,e.m01=s*i*l+o*a,e.m02=o*i*l-s*a,e.m03=0,e.m04=i*s*l-o*a,e.m05=s*s*l+c,e.m06=o*s*l+i*a,e.m07=0,e.m08=i*o*l+s*a,e.m09=s*o*l-i*a,e.m10=o*o*l+c,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e}static fromXRotation(e,t){const n=Math.sin(t),i=Math.cos(t);return e.m00=1,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=i,e.m06=n,e.m07=0,e.m08=0,e.m09=-n,e.m10=i,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e}static fromYRotation(e,t){const n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=0,e.m02=-n,e.m03=0,e.m04=0,e.m05=1,e.m06=0,e.m07=0,e.m08=n,e.m09=0,e.m10=i,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e}static fromZRotation(e,t){const n=Math.sin(t),i=Math.cos(t);return e.m00=i,e.m01=n,e.m02=0,e.m03=0,e.m04=-n,e.m05=i,e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=1,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e}static fromRT(e,t,n){const i=t.x,s=t.y,o=t.z,r=t.w,a=i+i,c=s+s,l=o+o,h=i*a,u=i*c,_=i*l,d=s*c,p=s*l,f=o*l,m=r*a,g=r*c,v=r*l;return e.m00=1-(d+f),e.m01=u+v,e.m02=_-g,e.m03=0,e.m04=u-v,e.m05=1-(h+f),e.m06=p+m,e.m07=0,e.m08=_+g,e.m09=p-m,e.m10=1-(h+d),e.m11=0,e.m12=n.x,e.m13=n.y,e.m14=n.z,e.m15=1,e}static getTranslation(e,t){return e.x=t.m12,e.y=t.m13,e.z=t.m14,e}static getScaling(e,t){const n=Mn.m00=t.m00,i=Mn.m01=t.m01,s=Mn.m02=t.m02,o=Mn.m03=t.m04,r=Mn.m04=t.m05,a=Mn.m05=t.m06,c=Mn.m06=t.m08,l=Mn.m07=t.m09,h=Mn.m08=t.m10;return e.x=Math.sqrt(n*n+i*i+s*s),e.y=Math.sqrt(o*o+r*r+a*a),e.z=Math.sqrt(c*c+l*l+h*h),Sn.determinant(Mn)<0&&(e.x*=-1),e}static getRotation(e,t){const n=t.m00+t.m05+t.m10;let i=0;return n>0?(i=2*Math.sqrt(n+1),e.w=.25*i,e.x=(t.m06-t.m09)/i,e.y=(t.m08-t.m02)/i,e.z=(t.m01-t.m04)/i):t.m00>t.m05&&t.m00>t.m10?(i=2*Math.sqrt(1+t.m00-t.m05-t.m10),e.w=(t.m06-t.m09)/i,e.x=.25*i,e.y=(t.m01+t.m04)/i,e.z=(t.m08+t.m02)/i):t.m05>t.m10?(i=2*Math.sqrt(1+t.m05-t.m00-t.m10),e.w=(t.m08-t.m02)/i,e.x=(t.m01+t.m04)/i,e.y=.25*i,e.z=(t.m06+t.m09)/i):(i=2*Math.sqrt(1+t.m10-t.m00-t.m05),e.w=(t.m01-t.m04)/i,e.x=(t.m08+t.m02)/i,e.y=(t.m06+t.m09)/i,e.z=.25*i),e}static toRTS(e,t,n,i){i.x=gn.set(Nn,e.m00,e.m01,e.m02).length(),Mn.m00=e.m00/i.x,Mn.m01=e.m01/i.x,Mn.m02=e.m02/i.x,i.y=gn.set(Nn,e.m04,e.m05,e.m06).length(),Mn.m03=e.m04/i.y,Mn.m04=e.m05/i.y,Mn.m05=e.m06/i.y,i.z=gn.set(Nn,e.m08,e.m09,e.m10).length(),Mn.m06=e.m08/i.z,Mn.m07=e.m09/i.z,Mn.m08=e.m10/i.z,Sn.determinant(Mn)<0&&(i.x*=-1,Mn.m00*=-1,Mn.m01*=-1,Mn.m02*=-1),Tn.fromMat3(t,Mn),gn.set(n,e.m12,e.m13,e.m14)}static fromRTS(e,t,n,i){const s=t.x,o=t.y,r=t.z,a=t.w,c=s+s,l=o+o,h=r+r,u=s*c,_=s*l,d=s*h,p=o*l,f=o*h,m=r*h,g=a*c,v=a*l,y=a*h,x=i.x,S=i.y,C=i.z;return e.m00=(1-(p+m))*x,e.m01=(_+y)*x,e.m02=(d-v)*x,e.m03=0,e.m04=(_-y)*S,e.m05=(1-(u+m))*S,e.m06=(f+g)*S,e.m07=0,e.m08=(d+v)*C,e.m09=(f-g)*C,e.m10=(1-(u+p))*C,e.m11=0,e.m12=n.x,e.m13=n.y,e.m14=n.z,e.m15=1,e}static fromRTSOrigin(e,t,n,i,s){const o=t.x,r=t.y,a=t.z,c=t.w,l=o+o,h=r+r,u=a+a,_=o*l,d=o*h,p=o*u,f=r*h,m=r*u,g=a*u,v=c*l,y=c*h,x=c*u,S=i.x,C=i.y,E=i.z,T=s.x,b=s.y,A=s.z;return e.m00=(1-(f+g))*S,e.m01=(d+x)*S,e.m02=(p-y)*S,e.m03=0,e.m04=(d-x)*C,e.m05=(1-(_+g))*C,e.m06=(m+v)*C,e.m07=0,e.m08=(p+y)*E,e.m09=(m-v)*E,e.m10=(1-(_+f))*E,e.m11=0,e.m12=n.x+T-(e.m00*T+e.m04*b+e.m08*A),e.m13=n.y+b-(e.m01*T+e.m05*b+e.m09*A),e.m14=n.z+A-(e.m02*T+e.m06*b+e.m10*A),e.m15=1,e}static fromQuat(e,t){const n=t.x,i=t.y,s=t.z,o=t.w,r=n+n,a=i+i,c=s+s,l=n*r,h=i*r,u=i*a,_=s*r,d=s*a,p=s*c,f=o*r,m=o*a,g=o*c;return e.m00=1-u-p,e.m01=h+g,e.m02=_-m,e.m03=0,e.m04=h-g,e.m05=1-l-p,e.m06=d+f,e.m07=0,e.m08=_+m,e.m09=d-f,e.m10=1-l-u,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e}static frustum(e,t,n,i,s,o,r){const a=1/(n-t),c=1/(s-i),l=1/(o-r);return e.m00=2*o*a,e.m01=0,e.m02=0,e.m03=0,e.m04=0,e.m05=2*o*c,e.m06=0,e.m07=0,e.m08=(n+t)*a,e.m09=(s+i)*c,e.m10=(r+o)*l,e.m11=-1,e.m12=0,e.m13=0,e.m14=r*o*2*l,e.m15=0,e}static perspective(e,t,n,i,s,o=!0,r=-1,a=1,c=0){const l=1/Math.tan(t/2),h=1/(i-s),u=o?l/n:l,_=(o?l:l*n)*a,d=Dn[c];return e.m00=u*d[0],e.m01=u*d[1],e.m02=0,e.m03=0,e.m04=_*d[2],e.m05=_*d[3],e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=(s-r*i)*h,e.m11=-1,e.m12=0,e.m13=0,e.m14=s*i*h*(1-r),e.m15=0,e}static ortho(e,t,n,i,s,o,r,a=-1,c=1,l=0){const h=1/(t-n),u=1/(i-s)*c,_=1/(o-r),d=-2*h,p=-2*u,f=(t+n)*h,m=(s+i)*u,g=Dn[l];return e.m00=d*g[0],e.m01=d*g[1],e.m02=0,e.m03=0,e.m04=p*g[2],e.m05=p*g[3],e.m06=0,e.m07=0,e.m08=0,e.m09=0,e.m10=_*(1-a),e.m11=0,e.m12=f*g[0]+m*g[2],e.m13=f*g[1]+m*g[3],e.m14=(o-a*r)*_,e.m15=1,e}static lookAt(e,t,n,i){const s=t.x,o=t.y,r=t.z,a=i.x,c=i.y,l=i.z;let h=s-n.x,u=o-n.y,_=r-n.z,d=1/Math.sqrt(h*h+u*u+_*_);h*=d,u*=d,_*=d;let p=c*_-l*u,f=l*h-a*_,m=a*u-c*h;d=1/Math.sqrt(p*p+f*f+m*m),p*=d,f*=d,m*=d;const g=u*m-_*f,v=_*p-h*m,y=h*f-u*p;return e.m00=p,e.m01=g,e.m02=h,e.m03=0,e.m04=f,e.m05=v,e.m06=u,e.m07=0,e.m08=m,e.m09=y,e.m10=_,e.m11=0,e.m12=-(p*s+f*o+m*r),e.m13=-(g*s+v*o+y*r),e.m14=-(h*s+u*o+_*r),e.m15=1,e}static inverseTranspose(e,t){const n=t.m00,i=t.m01,s=t.m02,o=t.m03,r=t.m04,a=t.m05,c=t.m06,l=t.m07,h=t.m08,u=t.m09,_=t.m10,d=t.m11,p=t.m12,f=t.m13,m=t.m14,g=t.m15,v=n*a-i*r,y=n*c-s*r,x=n*l-o*r,S=i*c-s*a,C=i*l-o*a,E=s*l-o*c,T=h*f-u*p,b=h*m-_*p,A=h*g-d*p,P=u*m-_*f,w=u*g-d*f,I=_*g-d*m;let R=v*I-y*w+x*P+S*A-C*b+E*T;return R?(R=1/R,e.m00=(a*I-c*w+l*P)*R,e.m01=(c*A-r*I-l*b)*R,e.m02=(r*w-a*A+l*T)*R,e.m03=0,e.m04=(s*w-i*I-o*P)*R,e.m05=(n*I-s*A+o*b)*R,e.m06=(i*A-n*w-o*T)*R,e.m07=0,e.m08=(f*E-m*C+g*S)*R,e.m09=(m*x-p*E-g*y)*R,e.m10=(p*C-f*x+g*v)*R,e.m11=0,e.m12=0,e.m13=0,e.m14=0,e.m15=1,e):null}static toArray(e,t,n=0){return e[n+0]=t.m00,e[n+1]=t.m01,e[n+2]=t.m02,e[n+3]=t.m03,e[n+4]=t.m04,e[n+5]=t.m05,e[n+6]=t.m06,e[n+7]=t.m07,e[n+8]=t.m08,e[n+9]=t.m09,e[n+10]=t.m10,e[n+11]=t.m11,e[n+12]=t.m12,e[n+13]=t.m13,e[n+14]=t.m14,e[n+15]=t.m15,e}static fromArray(e,t,n=0){return e.m00=t[n+0],e.m01=t[n+1],e.m02=t[n+2],e.m03=t[n+3],e.m04=t[n+4],e.m05=t[n+5],e.m06=t[n+6],e.m07=t[n+7],e.m08=t[n+8],e.m09=t[n+9],e.m10=t[n+10],e.m11=t[n+11],e.m12=t[n+12],e.m13=t[n+13],e.m14=t[n+14],e.m15=t[n+15],e}static add(e,t,n){return e.m00=t.m00+n.m00,e.m01=t.m01+n.m01,e.m02=t.m02+n.m02,e.m03=t.m03+n.m03,e.m04=t.m04+n.m04,e.m05=t.m05+n.m05,e.m06=t.m06+n.m06,e.m07=t.m07+n.m07,e.m08=t.m08+n.m08,e.m09=t.m09+n.m09,e.m10=t.m10+n.m10,e.m11=t.m11+n.m11,e.m12=t.m12+n.m12,e.m13=t.m13+n.m13,e.m14=t.m14+n.m14,e.m15=t.m15+n.m15,e}static subtract(e,t,n){return e.m00=t.m00-n.m00,e.m01=t.m01-n.m01,e.m02=t.m02-n.m02,e.m03=t.m03-n.m03,e.m04=t.m04-n.m04,e.m05=t.m05-n.m05,e.m06=t.m06-n.m06,e.m07=t.m07-n.m07,e.m08=t.m08-n.m08,e.m09=t.m09-n.m09,e.m10=t.m10-n.m10,e.m11=t.m11-n.m11,e.m12=t.m12-n.m12,e.m13=t.m13-n.m13,e.m14=t.m14-n.m14,e.m15=t.m15-n.m15,e}static multiplyScalar(e,t,n){return e.m00=t.m00*n,e.m01=t.m01*n,e.m02=t.m02*n,e.m03=t.m03*n,e.m04=t.m04*n,e.m05=t.m05*n,e.m06=t.m06*n,e.m07=t.m07*n,e.m08=t.m08*n,e.m09=t.m09*n,e.m10=t.m10*n,e.m11=t.m11*n,e.m12=t.m12*n,e.m13=t.m13*n,e.m14=t.m14*n,e.m15=t.m15*n,e}static multiplyScalarAndAdd(e,t,n,i){return e.m00=t.m00+n.m00*i,e.m01=t.m01+n.m01*i,e.m02=t.m02+n.m02*i,e.m03=t.m03+n.m03*i,e.m04=t.m04+n.m04*i,e.m05=t.m05+n.m05*i,e.m06=t.m06+n.m06*i,e.m07=t.m07+n.m07*i,e.m08=t.m08+n.m08*i,e.m09=t.m09+n.m09*i,e.m10=t.m10+n.m10*i,e.m11=t.m11+n.m11*i,e.m12=t.m12+n.m12*i,e.m13=t.m13+n.m13*i,e.m14=t.m14+n.m14*i,e.m15=t.m15+n.m15*i,e}static strictEquals(e,t){return e.m00===t.m00&&e.m01===t.m01&&e.m02===t.m02&&e.m03===t.m03&&e.m04===t.m04&&e.m05===t.m05&&e.m06===t.m06&&e.m07===t.m07&&e.m08===t.m08&&e.m09===t.m09&&e.m10===t.m10&&e.m11===t.m11&&e.m12===t.m12&&e.m13===t.m13&&e.m14===t.m14&&e.m15===t.m15}static equals(e,t,n=jt){return Math.abs(e.m00-t.m00)<=n*Math.max(1,Math.abs(e.m00),Math.abs(t.m00))&&Math.abs(e.m01-t.m01)<=n*Math.max(1,Math.abs(e.m01),Math.abs(t.m01))&&Math.abs(e.m02-t.m02)<=n*Math.max(1,Math.abs(e.m02),Math.abs(t.m02))&&Math.abs(e.m03-t.m03)<=n*Math.max(1,Math.abs(e.m03),Math.abs(t.m03))&&Math.abs(e.m04-t.m04)<=n*Math.max(1,Math.abs(e.m04),Math.abs(t.m04))&&Math.abs(e.m05-t.m05)<=n*Math.max(1,Math.abs(e.m05),Math.abs(t.m05))&&Math.abs(e.m06-t.m06)<=n*Math.max(1,Math.abs(e.m06),Math.abs(t.m06))&&Math.abs(e.m07-t.m07)<=n*Math.max(1,Math.abs(e.m07),Math.abs(t.m07))&&Math.abs(e.m08-t.m08)<=n*Math.max(1,Math.abs(e.m08),Math.abs(t.m08))&&Math.abs(e.m09-t.m09)<=n*Math.max(1,Math.abs(e.m09),Math.abs(t.m09))&&Math.abs(e.m10-t.m10)<=n*Math.max(1,Math.abs(e.m10),Math.abs(t.m10))&&Math.abs(e.m11-t.m11)<=n*Math.max(1,Math.abs(e.m11),Math.abs(t.m11))&&Math.abs(e.m12-t.m12)<=n*Math.max(1,Math.abs(e.m12),Math.abs(t.m12))&&Math.abs(e.m13-t.m13)<=n*Math.max(1,Math.abs(e.m13),Math.abs(t.m13))&&Math.abs(e.m14-t.m14)<=n*Math.max(1,Math.abs(e.m14),Math.abs(t.m14))&&Math.abs(e.m15-t.m15)<=n*Math.max(1,Math.abs(e.m15),Math.abs(t.m15))}get m00(){return this._array[0]}set m00(e){this._array[0]=e}get m01(){return this._array[1]}set m01(e){this._array[1]=e}get m02(){return this._array[2]}set m02(e){this._array[2]=e}get m03(){return this._array[3]}set m03(e){this._array[3]=e}get m04(){return this._array[4]}set m04(e){this._array[4]=e}get m05(){return this._array[5]}set m05(e){this._array[5]=e}get m06(){return this._array[6]}set m06(e){this._array[6]=e}get m07(){return this._array[7]}set m07(e){this._array[7]=e}get m08(){return this._array[8]}set m08(e){this._array[8]=e}get m09(){return this._array[9]}set m09(e){this._array[9]=e}get m10(){return this._array[10]}set m10(e){this._array[10]=e}get m11(){return this._array[11]}set m11(e){this._array[11]=e}get m12(){return this._array[12]}set m12(e){this._array[12]=e}get m13(){return this._array[13]}set m13(e){this._array[13]=e}get m14(){return this._array[14]}set m14(e){this._array[14]=e}get m15(){return this._array[15]}set m15(e){this._array[15]=e}constructor(e=1,t=0,n=0,i=0,s=0,o=1,r=0,a=0,c=0,l=0,h=1,u=0,_=0,d=0,p=0,f=1){if(super(),e&&"object"==typeof e)if(ArrayBuffer.isView(e))this._array=e,this._array.set([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);else{const t=e.array;this._array=mn.createFloatArray(16),this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3],this._array[4]=t[4],this._array[5]=t[5],this._array[6]=t[6],this._array[7]=t[7],this._array[8]=t[8],this._array[9]=t[9],this._array[10]=t[10],this._array[11]=t[11],this._array[12]=t[12],this._array[13]=t[13],this._array[14]=t[14],this._array[15]=t[15]}else this._array=mn.createFloatArray(16),this._array[0]=e,this._array[1]=t,this._array[2]=n,this._array[3]=i,this._array[4]=s,this._array[5]=o,this._array[6]=r,this._array[7]=a,this._array[8]=c,this._array[9]=l,this._array[10]=h,this._array[11]=u,this._array[12]=_,this._array[13]=d,this._array[14]=p,this._array[15]=f}clone(){const e=this._array;return new On(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15])}set(e=1,t=0,n=0,i=0,s=0,o=1,r=0,a=0,c=0,l=0,h=1,u=0,_=0,d=0,p=0,f=1){if(e&&"object"==typeof e){const t=e.array;this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3],this._array[4]=t[4],this._array[5]=t[5],this._array[6]=t[6],this._array[7]=t[7],this._array[8]=t[8],this._array[9]=t[9],this._array[10]=t[10],this._array[11]=t[11],this._array[12]=t[12],this._array[13]=t[13],this._array[14]=t[14],this._array[15]=t[15],this._array[0]=t[0]}else this._array[1]=t,this._array[2]=n,this._array[3]=i,this._array[4]=s,this._array[5]=o,this._array[6]=r,this._array[7]=a,this._array[8]=c,this._array[9]=l,this._array[10]=h,this._array[11]=u,this._array[12]=_,this._array[13]=d,this._array[14]=p,this._array[15]=f,this._array[0]=e;return this}equals(e,t=jt){const n=e.array;return Math.abs(this._array[0]-n[0])<=t*Math.max(1,Math.abs(this._array[0]),Math.abs(n[0]))&&Math.abs(this._array[1]-n[1])<=t*Math.max(1,Math.abs(this._array[1]),Math.abs(n[1]))&&Math.abs(this._array[2]-n[2])<=t*Math.max(1,Math.abs(this._array[2]),Math.abs(n[2]))&&Math.abs(this._array[3]-n[3])<=t*Math.max(1,Math.abs(this._array[3]),Math.abs(n[3]))&&Math.abs(this._array[4]-n[4])<=t*Math.max(1,Math.abs(this._array[4]),Math.abs(n[4]))&&Math.abs(this._array[5]-n[5])<=t*Math.max(1,Math.abs(this._array[5]),Math.abs(n[5]))&&Math.abs(this._array[6]-n[6])<=t*Math.max(1,Math.abs(this._array[6]),Math.abs(n[6]))&&Math.abs(this._array[7]-n[7])<=t*Math.max(1,Math.abs(this._array[7]),Math.abs(n[7]))&&Math.abs(this._array[8]-n[8])<=t*Math.max(1,Math.abs(this._array[8]),Math.abs(n[8]))&&Math.abs(this._array[9]-n[9])<=t*Math.max(1,Math.abs(this._array[9]),Math.abs(n[9]))&&Math.abs(this._array[10]-n[10])<=t*Math.max(1,Math.abs(this._array[10]),Math.abs(n[10]))&&Math.abs(this._array[11]-n[11])<=t*Math.max(1,Math.abs(this._array[11]),Math.abs(n[11]))&&Math.abs(this._array[12]-n[12])<=t*Math.max(1,Math.abs(this._array[12]),Math.abs(n[12]))&&Math.abs(this._array[13]-n[13])<=t*Math.max(1,Math.abs(this._array[13]),Math.abs(n[13]))&&Math.abs(this._array[14]-n[14])<=t*Math.max(1,Math.abs(this._array[14]),Math.abs(n[14]))&&Math.abs(this._array[15]-n[15])<=t*Math.max(1,Math.abs(this._array[15]),Math.abs(n[15]))}strictEquals(e){const t=e.array;return this._array[0]===e.m00&&this._array[1]===t[1]&&this._array[2]===t[2]&&this._array[3]===t[3]&&this._array[4]===t[4]&&this._array[5]===t[5]&&this._array[6]===t[6]&&this._array[7]===t[7]&&this._array[8]===t[8]&&this._array[9]===t[9]&&this._array[10]===t[10]&&this._array[11]===t[11]&&this._array[12]===t[12]&&this._array[13]===t[13]&&this._array[14]===t[14]&&this._array[15]===t[15]}toString(){return`[\n${this._array[0]}, ${this._array[1]}, ${this._array[2]}, ${this._array[3]},\n${this._array[4]}, ${this._array[5]}, ${this._array[6]}, ${this._array[7]},\n${this._array[8]}, ${this._array[9]}, ${this._array[10]}, ${this._array[11]},\n${this._array[12]}, ${this._array[13]}, ${this._array[14]}, ${this._array[15]}\n]`}identity(){return this._array[0]=1,this._array[1]=0,this._array[2]=0,this._array[3]=0,this._array[4]=0,this._array[5]=1,this._array[6]=0,this._array[7]=0,this._array[8]=0,this._array[9]=0,this._array[10]=1,this._array[11]=0,this._array[12]=0,this._array[13]=0,this._array[14]=0,this._array[15]=1,this}zero(){return this.m00=0,this.m01=0,this.m02=0,this.m03=0,this.m04=0,this.m05=0,this.m06=0,this.m07=0,this.m08=0,this.m09=0,this.m10=0,this.m11=0,this.m12=0,this.m13=0,this.m14=0,this.m15=0,this}transpose(){const e=this._array[1],t=this._array[2],n=this._array[3],i=this._array[6],s=this._array[7],o=this._array[11];return this._array[1]=this._array[4],this._array[2]=this._array[8],this._array[3]=this._array[12],this._array[4]=e,this._array[6]=this._array[9],this._array[7]=this._array[13],this._array[8]=t,this._array[9]=i,this._array[11]=this._array[14],this._array[12]=n,this._array[13]=s,this._array[14]=o,this}invert(){const e=this._array[0],t=this._array[1],n=this._array[2],i=this._array[3],s=this._array[4],o=this._array[5],r=this._array[6],a=this._array[7],c=this._array[8],l=this._array[9],h=this._array[10],u=this._array[11],_=this._array[12],d=this._array[13],p=this._array[14],f=this._array[15],m=e*o-t*s,g=e*r-n*s,v=e*a-i*s,y=t*r-n*o,x=t*a-i*o,S=n*a-i*r,C=c*d-l*_,E=c*p-h*_,T=c*f-u*_,b=l*p-h*d,A=l*f-u*d,P=h*f-u*p;let w=m*P-g*A+v*b+y*T-x*E+S*C;return 0===w?(this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this):(w=1/w,this._array[0]=(o*P-r*A+a*b)*w,this._array[1]=(n*A-t*P-i*b)*w,this._array[2]=(d*S-p*x+f*y)*w,this._array[3]=(h*x-l*S-u*y)*w,this._array[4]=(r*T-s*P-a*E)*w,this._array[5]=(e*P-n*T+i*E)*w,this._array[6]=(p*v-_*S-f*g)*w,this._array[7]=(c*S-h*v+u*g)*w,this._array[8]=(s*A-o*T+a*C)*w,this._array[9]=(t*T-e*A-i*C)*w,this._array[10]=(_*x-d*v+f*m)*w,this._array[11]=(l*v-c*x-u*m)*w,this._array[12]=(o*E-s*b-r*C)*w,this._array[13]=(e*b-t*E+n*C)*w,this._array[14]=(d*g-_*y-p*m)*w,this._array[15]=(c*y-l*g+h*m)*w,this)}determinant(){const e=this._array[0],t=this._array[1],n=this._array[2],i=this._array[3],s=this._array[4],o=this._array[5],r=this._array[6],a=this._array[7],c=this._array[8],l=this._array[9],h=this._array[10],u=this._array[11],_=this._array[12],d=this._array[13],p=this._array[14],f=this._array[15];return(e*o-t*s)*(h*f-u*p)-(e*r-n*s)*(l*f-u*d)+(e*a-i*s)*(l*p-h*d)+(t*r-n*o)*(c*f-u*_)-(t*a-i*o)*(c*p-h*_)+(n*a-i*r)*(c*d-l*_)}add(e){const t=e.array;return this._array[0]+=t[0],this._array[1]+=t[1],this._array[2]+=t[2],this._array[3]+=t[3],this._array[4]+=t[4],this._array[5]+=t[5],this._array[6]+=t[6],this._array[7]+=t[7],this._array[8]+=t[8],this._array[9]+=t[9],this._array[10]+=t[10],this._array[11]+=t[11],this._array[12]+=t[12],this._array[13]+=t[13],this._array[14]+=t[14],this._array[15]+=t[15],this}subtract(e){const t=e.array;return this._array[0]-=t[0],this._array[1]-=t[1],this._array[2]-=t[2],this._array[3]-=t[3],this._array[4]-=t[4],this._array[5]-=t[5],this._array[6]-=t[6],this._array[7]-=t[7],this._array[8]-=t[8],this._array[9]-=t[9],this._array[10]-=t[10],this._array[11]-=t[11],this._array[12]-=t[12],this._array[13]-=t[13],this._array[14]-=t[14],this._array[15]-=t[15],this}multiply(e){const t=this._array[0],n=this._array[1],i=this._array[2],s=this._array[3],o=this._array[4],r=this._array[5],a=this._array[6],c=this._array[7],l=this._array[8],h=this._array[9],u=this._array[10],_=this._array[11],d=this._array[12],p=this._array[13],f=this._array[14],m=this._array[15],g=e.array;let v=g[0],y=g[1],x=g[2],S=g[3];return this._array[0]=v*t+y*o+x*l+S*d,this._array[1]=v*n+y*r+x*h+S*p,this._array[2]=v*i+y*a+x*u+S*f,this._array[3]=v*s+y*c+x*_+S*m,v=g[4],y=g[5],x=g[6],S=g[7],this._array[4]=v*t+y*o+x*l+S*d,this._array[5]=v*n+y*r+x*h+S*p,this._array[6]=v*i+y*a+x*u+S*f,this._array[7]=v*s+y*c+x*_+S*m,v=g[8],y=g[9],x=g[10],S=g[11],this._array[8]=v*t+y*o+x*l+S*d,this._array[9]=v*n+y*r+x*h+S*p,this._array[10]=v*i+y*a+x*u+S*f,this._array[11]=v*s+y*c+x*_+S*m,v=g[12],y=g[13],x=g[14],S=g[15],this._array[12]=v*t+y*o+x*l+S*d,this._array[13]=v*n+y*r+x*h+S*p,this._array[14]=v*i+y*a+x*u+S*f,this._array[15]=v*s+y*c+x*_+S*m,this}multiplyScalar(e){return this._array[0]*=e,this._array[1]*=e,this._array[2]*=e,this._array[3]*=e,this._array[4]*=e,this._array[5]*=e,this._array[6]*=e,this._array[7]*=e,this._array[8]*=e,this._array[9]*=e,this._array[10]*=e,this._array[11]*=e,this._array[12]*=e,this._array[13]*=e,this._array[14]*=e,this._array[15]*=e,this}translate(e){console.warn("function changed");const t=e.array;return this._array[12]+=t[0],this._array[13]+=t[1],this._array[14]+=t[2],this}scale(e){const t=e.array,n=t[0],i=t[1],s=t[2];return this._array[0]*=n,this._array[1]*=n,this._array[2]*=n,this._array[3]*=n,this._array[4]*=i,this._array[5]*=i,this._array[6]*=i,this._array[7]*=i,this._array[8]*=s,this._array[9]*=s,this._array[10]*=s,this._array[11]*=s,this}rotate(e,t){let n=t.x,i=t.y,s=t.z,o=Math.sqrt(n*n+i*i+s*s);if(Math.abs(o)<jt)return null;o=1/o,n*=o,i*=o,s*=o;const r=Math.sin(e),a=Math.cos(e),c=1-a,l=this._array[0],h=this._array[1],u=this._array[2],_=this._array[3],d=this._array[4],p=this._array[5],f=this._array[6],m=this._array[7],g=this._array[8],v=this._array[9],y=this._array[10],x=this._array[11],S=n*n*c+a,C=i*n*c+s*r,E=s*n*c-i*r,T=n*i*c-s*r,b=i*i*c+a,A=s*i*c+n*r,P=n*s*c+i*r,w=i*s*c-n*r,I=s*s*c+a;return this._array[0]=l*S+d*C+g*E,this._array[1]=h*S+p*C+v*E,this._array[2]=u*S+f*C+y*E,this._array[3]=_*S+m*C+x*E,this._array[4]=l*T+d*b+g*A,this._array[5]=h*T+p*b+v*A,this._array[6]=u*T+f*b+y*A,this._array[7]=_*T+m*b+x*A,this._array[8]=l*P+d*w+g*I,this._array[9]=h*P+p*w+v*I,this._array[10]=u*P+f*w+y*I,this._array[11]=_*P+m*w+x*I,this}getTranslation(e){return e.x=this._array[12],e.y=this._array[13],e.z=this._array[14],e}getScale(e){const t=e.array,n=Mn.array,i=n[0]=this._array[0],s=n[1]=this._array[1],o=n[2]=this._array[2],r=n[3]=this._array[4],a=n[4]=this._array[5],c=n[5]=this._array[6],l=n[6]=this._array[8],h=n[7]=this._array[9],u=n[8]=this._array[10];return t[0]=Math.sqrt(i*i+s*s+o*o),t[1]=Math.sqrt(r*r+a*a+c*c),t[2]=Math.sqrt(l*l+h*h+u*u),Sn.determinant(Mn)<0&&(e.x*=-1),e}getRotation(e){const t=this._array[0]+this._array[5]+this._array[10];let n=0;return t>0?(n=2*Math.sqrt(t+1),e.w=.25*n,e.x=(this._array[6]-this._array[9])/n,e.y=(this._array[8]-this._array[2])/n,e.z=(this._array[1]-this._array[4])/n):this._array[0]>this._array[5]&&this._array[0]>this._array[10]?(n=2*Math.sqrt(1+this._array[0]-this._array[5]-this._array[10]),e.w=(this._array[6]-this._array[9])/n,e.x=.25*n,e.y=(this._array[1]+this._array[4])/n,e.z=(this._array[8]+this._array[2])/n):this._array[5]>this._array[10]?(n=2*Math.sqrt(1+this._array[5]-this._array[0]-this._array[10]),e.w=(this._array[8]-this._array[2])/n,e.x=(this._array[1]+this._array[4])/n,e.y=.25*n,e.z=(this._array[6]+this._array[9])/n):(n=2*Math.sqrt(1+this._array[10]-this._array[0]-this._array[5]),e.w=(this._array[1]-this._array[4])/n,e.x=(this._array[8]+this._array[2])/n,e.y=(this._array[6]+this._array[9])/n,e.z=.25*n),e}fromRTS(e,t,n){const i=e.x,s=e.y,o=e.z,r=e.w,a=i+i,c=s+s,l=o+o,h=i*a,u=i*c,_=i*l,d=s*c,p=s*l,f=o*l,m=r*a,g=r*c,v=r*l,y=n.x,x=n.y,S=n.z;return this._array[0]=(1-(d+f))*y,this._array[1]=(u+v)*y,this._array[2]=(_-g)*y,this._array[3]=0,this._array[4]=(u-v)*x,this._array[5]=(1-(h+f))*x,this._array[6]=(p+m)*x,this._array[7]=0,this._array[8]=(_+g)*S,this._array[9]=(p-m)*S,this._array[10]=(1-(h+d))*S,this._array[11]=0,this._array[12]=t.x,this._array[13]=t.y,this._array[14]=t.z,this._array[15]=1,this}fromQuat(e){const t=e.x,n=e.y,i=e.z,s=e.w,o=t+t,r=n+n,a=i+i,c=t*o,l=n*o,h=n*r,u=i*o,_=i*r,d=i*a,p=s*o,f=s*r,m=s*a;return this._array[0]=1-h-d,this._array[1]=l+m,this._array[2]=u-f,this._array[3]=0,this._array[4]=l-m,this._array[5]=1-c-d,this._array[6]=_+p,this._array[7]=0,this._array[8]=u+f,this._array[9]=_-p,this._array[10]=1-c-h,this._array[11]=0,this._array[12]=0,this._array[13]=0,this._array[14]=0,this._array[15]=1,this}}e("Mat4",On),On.IDENTITY=Object.freeze(new On);const Nn=new gn,Mn=new Sn;function Ln(e,t,n,i,s,o,r,a,c,l,h,u,_,d,p,f){return new On(e,t,n,i,s,o,r,a,c,l,h,u,_,d,p,f)}un(On.prototype,["m00","m01","m02","m03","m04","m05","m06","m07","m08","m09","m10","m11","m12","m13","m14","m15"]),zt.fastDefine("cc.Mat4",On,{m00:1,m01:0,m02:0,m03:0,m04:0,m05:1,m06:0,m07:0,m08:0,m09:0,m10:1,m11:0,m12:0,m13:0,m14:0,m15:1}),u.Mat4=On,u.mat4=Ln;class Bn extends $e{static clone(e){return new Bn(e.x,e.y)}static copy(e,t){return e.x=t.x,e.y=t.y,e}static set(e,t,n){return e.x=t,e.y=n,e}static add(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e}static subtract(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e}static multiply(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e}static divide(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e}static ceil(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e}static floor(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e}static min(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e}static max(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e}static round(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e}static multiplyScalar(e,t,n){return e.x=t.x*n,e.y=t.y*n,e}static scaleAndAdd(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e}static distance(e,t){const n=t.x-e.x,i=t.y-e.y;return Math.sqrt(n*n+i*i)}static squaredDistance(e,t){const n=t.x-e.x,i=t.y-e.y;return n*n+i*i}static len(e){const t=e.x,n=e.y;return Math.sqrt(t*t+n*n)}static lengthSqr(e){const t=e.x,n=e.y;return t*t+n*n}static negate(e,t){return e.x=-t.x,e.y=-t.y,e}static inverse(e,t){return e.x=1/t.x,e.y=1/t.y,e}static inverseSafe(e,t){const n=t.x,i=t.y;return Math.abs(n)<jt?e.x=0:e.x=1/n,Math.abs(i)<jt?e.y=0:e.y=1/i,e}static normalize(e,t){const n=t.x,i=t.y;let s=n*n+i*i;return s>0&&(s=1/Math.sqrt(s),e.x=n*s,e.y=i*s),e}static dot(e,t){return e.x*t.x+e.y*t.y}static cross(e,t,n){return e instanceof gn?(e.x=e.y=0,e.z=t.x*n.y-t.y*n.x,e):e.x*t.y-e.y*t.x}static lerp(e,t,n,i){const s=t.x,o=t.y;return e.x=s+i*(n.x-s),e.y=o+i*(n.y-o),e}static random(e,t){t=t||1;const n=2*Jt()*Math.PI;return e.x=Math.cos(n)*t,e.y=Math.sin(n)*t,e}static transformMat3(e,t,n){const i=t.x,s=t.y;return e.x=n.m00*i+n.m03*s+n.m06,e.y=n.m01*i+n.m04*s+n.m07,e}static transformMat4(e,t,n){const i=t.x,s=t.y;return e.x=n.m00*i+n.m04*s+n.m12,e.y=n.m01*i+n.m05*s+n.m13,e}static str(e){return`Vec2(${e.x}, ${e.y})`}static toArray(e,t,n=0){return e[n+0]=t.x,e[n+1]=t.y,e}static fromArray(e,t,n=0){return e.x=t[n+0],e.y=t[n+1],e}static strictEquals(e,t){return e.x===t.x&&e.y===t.y}static equals(e,t,n=jt){return Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))}static angle(e,t){Bn.normalize(Fn,e),Bn.normalize(zn,t);const n=Bn.dot(Fn,zn);return n>1?0:n<-1?Math.PI:Math.acos(n)}constructor(e,t){super(),e&&"object"==typeof e?(this.x=e.x,this.y=e.y):(this.x=e||0,this.y=t||0)}clone(){return new Bn(this.x,this.y)}set(e,t){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y):(this.x=e||0,this.y=t||0),this}equals(e,t=jt){return Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))}equals2f(e,t,n=jt){return Math.abs(this.x-e)<=n*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=n*Math.max(1,Math.abs(this.y),Math.abs(t))}strictEquals(e){return e&&this.x===e.x&&this.y===e.y}strictEquals2f(e,t){return this.x===e&&this.y===t}toString(){return`(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`}lerp(e,t){const n=this.x,i=this.y;return this.x=n+t*(e.x-n),this.y=i+t*(e.y-i),this}clampf(e,t){return this.x=Xt(this.x,e.x,t.x),this.y=Xt(this.y,e.y,t.y),this}add(e){return this.x+=e.x,this.y+=e.y,this}add2f(e,t){return this.x+=e,this.y+=t,this}subtract(e){return this.x-=e.x,this.y-=e.y,this}subtract2f(e,t){return this.x-=e,this.y-=t,this}multiplyScalar(e){return"object"==typeof e&&console.warn("should use Vec2.multiply for vector * vector operation"),this.x*=e,this.y*=e,this}multiply(e){return"object"!=typeof e&&console.warn("should use Vec2.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this}multiply2f(e,t){return this.x*=e,this.y*=t,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divide2f(e,t){return this.x/=e,this.y/=t,this}negative(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}lengthSqr(){return this.x*this.x+this.y*this.y}normalize(){const e=this.x,t=this.y;let n=e*e+t*t;return n>0&&(n=1/Math.sqrt(n),this.x*=n,this.y*=n),this}angle(e){const t=this.lengthSqr(),n=e.lengthSqr();if(0===t||0===n)return console.warn("Can't get angle between zero vector"),0;let i=this.dot(e)/Math.sqrt(t*n);return i=Xt(i,-1,1),Math.acos(i)}signAngle(e){const t=this.angle(e);return this.cross(e)<0?-t:t}rotate(e){const t=this.x,n=this.y,i=Math.sin(e),s=Math.cos(e);return this.x=s*t-i*n,this.y=i*t+s*n,this}project(e){const t=this.dot(e)/e.dot(e);return this.x=e.x*t,this.y=e.y*t,this}transformMat4(e){const t=this.x,n=this.y;return this.x=e.m00*t+e.m04*n+e.m12,this.y=e.m01*t+e.m05*n+e.m13,this}}e("Vec2",Bn),Bn.ZERO=Object.freeze(new Bn(0,0)),Bn.ONE=Object.freeze(new Bn(1,1)),Bn.NEG_ONE=Object.freeze(new Bn(-1,-1)),Bn.UNIT_X=Object.freeze(new Bn(1,0)),Bn.UNIT_Y=Object.freeze(new Bn(0,1));const Fn=new Bn,zn=new Bn;function Un(e,t){return new Bn(e,t)}zt.fastDefine("cc.Vec2",Bn,{x:0,y:0}),u.Vec2=Bn,u.v2=Un;class Gn extends $e{static clone(e){return new Gn(e.x,e.y,e.z,e.w)}static copy(e,t){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}static set(e,t,n,i,s){return e.x=t,e.y=n,e.z=i,e.w=s,e}static add(e,t,n){return e.x=t.x+n.x,e.y=t.y+n.y,e.z=t.z+n.z,e.w=t.w+n.w,e}static subtract(e,t,n){return e.x=t.x-n.x,e.y=t.y-n.y,e.z=t.z-n.z,e.w=t.w-n.w,e}static multiply(e,t,n){return e.x=t.x*n.x,e.y=t.y*n.y,e.z=t.z*n.z,e.w=t.w*n.w,e}static divide(e,t,n){return e.x=t.x/n.x,e.y=t.y/n.y,e.z=t.z/n.z,e.w=t.w/n.w,e}static ceil(e,t){return e.x=Math.ceil(t.x),e.y=Math.ceil(t.y),e.z=Math.ceil(t.z),e.w=Math.ceil(t.w),e}static floor(e,t){return e.x=Math.floor(t.x),e.y=Math.floor(t.y),e.z=Math.floor(t.z),e.w=Math.floor(t.w),e}static min(e,t,n){return e.x=Math.min(t.x,n.x),e.y=Math.min(t.y,n.y),e.z=Math.min(t.z,n.z),e.w=Math.min(t.w,n.w),e}static max(e,t,n){return e.x=Math.max(t.x,n.x),e.y=Math.max(t.y,n.y),e.z=Math.max(t.z,n.z),e.w=Math.max(t.w,n.w),e}static round(e,t){return e.x=Math.round(t.x),e.y=Math.round(t.y),e.z=Math.round(t.z),e.w=Math.round(t.w),e}static multiplyScalar(e,t,n){return e.x=t.x*n,e.y=t.y*n,e.z=t.z*n,e.w=t.w*n,e}static scaleAndAdd(e,t,n,i){return e.x=t.x+n.x*i,e.y=t.y+n.y*i,e.z=t.z+n.z*i,e.w=t.w+n.w*i,e}static distance(e,t){const n=t.x-e.x,i=t.y-e.y,s=t.z-e.z,o=t.w-e.w;return Math.sqrt(n*n+i*i+s*s+o*o)}static squaredDistance(e,t){const n=t.x-e.x,i=t.y-e.y,s=t.z-e.z,o=t.w-e.w;return n*n+i*i+s*s+o*o}static len(e){const t=e.x,n=e.y,i=e.z,s=e.w;return Math.sqrt(t*t+n*n+i*i+s*s)}static lengthSqr(e){const t=e.x,n=e.y,i=e.z,s=e.w;return t*t+n*n+i*i+s*s}static negate(e,t){return e.x=-t.x,e.y=-t.y,e.z=-t.z,e.w=-t.w,e}static inverse(e,t){return e.x=1/t.x,e.y=1/t.y,e.z=1/t.z,e.w=1/t.w,e}static inverseSafe(e,t){const n=t.x,i=t.y,s=t.z,o=t.w;return Math.abs(n)<jt?e.x=0:e.x=1/n,Math.abs(i)<jt?e.y=0:e.y=1/i,Math.abs(s)<jt?e.z=0:e.z=1/s,Math.abs(o)<jt?e.w=0:e.w=1/o,e}static normalize(e,t){const n=t.x,i=t.y,s=t.z,o=t.w;let r=n*n+i*i+s*s+o*o;return r>0&&(r=1/Math.sqrt(r),e.x=n*r,e.y=i*r,e.z=s*r,e.w=o*r),e}static dot(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w}static lerp(e,t,n,i){return e.x=t.x+i*(n.x-t.x),e.y=t.y+i*(n.y-t.y),e.z=t.z+i*(n.z-t.z),e.w=t.w+i*(n.w-t.w),e}static random(e,t){t=t||1;const n=2*Jt()*Math.PI,i=2*Jt()-1,s=Math.sqrt(1-i*i);return e.x=s*Math.cos(n)*t,e.y=s*Math.sin(n)*t,e.z=i*t,e.w=0,e}static transformMat4(e,t,n){const i=t.x,s=t.y,o=t.z,r=t.w;return e.x=n.m00*i+n.m04*s+n.m08*o+n.m12*r,e.y=n.m01*i+n.m05*s+n.m09*o+n.m13*r,e.z=n.m02*i+n.m06*s+n.m10*o+n.m14*r,e.w=n.m03*i+n.m07*s+n.m11*o+n.m15*r,e}static transformAffine(e,t,n){const i=t.x,s=t.y,o=t.z,r=t.w;return e.x=n.m00*i+n.m04*s+n.m08*o+n.m12*r,e.y=n.m01*i+n.m05*s+n.m09*o+n.m13*r,e.z=n.m02*i+n.m06*s+n.m10*o+n.m14*r,e.w=t.w,e}static transformQuat(e,t,n){const{x:i,y:s,z:o}=t,r=n.x,a=n.y,c=n.z,l=n.w,h=l*i+a*o-c*s,u=l*s+c*i-r*o,_=l*o+r*s-a*i,d=-r*i-a*s-c*o;return e.x=h*l+d*-r+u*-c-_*-a,e.y=u*l+d*-a+_*-r-h*-c,e.z=_*l+d*-c+h*-a-u*-r,e.w=t.w,e}static toArray(e,t,n=0){return e[n+0]=t.x,e[n+1]=t.y,e[n+2]=t.z,e[n+3]=t.w,e}static fromArray(e,t,n=0){return e.x=t[n+0],e.y=t[n+1],e.z=t[n+2],e.w=t[n+3],e}static strictEquals(e,t){return e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w}static equals(e,t,n=jt){return Math.abs(e.x-t.x)<=n*Math.max(1,Math.abs(e.x),Math.abs(t.x))&&Math.abs(e.y-t.y)<=n*Math.max(1,Math.abs(e.y),Math.abs(t.y))&&Math.abs(e.z-t.z)<=n*Math.max(1,Math.abs(e.z),Math.abs(t.z))&&Math.abs(e.w-t.w)<=n*Math.max(1,Math.abs(e.w),Math.abs(t.w))}constructor(e,t,n,i){super(),e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w):(this.x=e||0,this.y=t||0,this.z=n||0,this.w=i||0)}clone(){return new Gn(this.x,this.y,this.z,this.w)}set(e,t,n,i){return e&&"object"==typeof e?(this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w):(this.x=e||0,this.y=t||0,this.z=n||0,this.w=i||0),this}equals(e,t=jt){return Math.abs(this.x-e.x)<=t*Math.max(1,Math.abs(this.x),Math.abs(e.x))&&Math.abs(this.y-e.y)<=t*Math.max(1,Math.abs(this.y),Math.abs(e.y))&&Math.abs(this.z-e.z)<=t*Math.max(1,Math.abs(this.z),Math.abs(e.z))&&Math.abs(this.w-e.w)<=t*Math.max(1,Math.abs(this.w),Math.abs(e.w))}equals4f(e,t,n,i,s=jt){return Math.abs(this.x-e)<=s*Math.max(1,Math.abs(this.x),Math.abs(e))&&Math.abs(this.y-t)<=s*Math.max(1,Math.abs(this.y),Math.abs(t))&&Math.abs(this.z-n)<=s*Math.max(1,Math.abs(this.z),Math.abs(n))&&Math.abs(this.w-i)<=s*Math.max(1,Math.abs(this.w),Math.abs(i))}strictEquals(e){return this.x===e.x&&this.y===e.y&&this.z===e.z&&this.w===e.w}strictEquals4f(e,t,n,i){return this.x===e&&this.y===t&&this.z===n&&this.w===i}lerp(e,t){const n=this.x,i=this.y,s=this.z,o=this.w;return this.x=n+t*(e.x-n),this.y=i+t*(e.y-i),this.z=s+t*(e.z-s),this.w=o+t*(e.w-o),this}toString(){return`(${this.x.toFixed(2)}, ${this.y.toFixed(2)}, ${this.z.toFixed(2)}, ${this.w.toFixed(2)})`}clampf(e,t){return this.x=Xt(this.x,e.x,t.x),this.y=Xt(this.y,e.y,t.y),this.z=Xt(this.z,e.z,t.z),this.w=Xt(this.w,e.w,t.w),this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}add4f(e,t,n,i){return this.x+=e,this.y+=t,this.z+=n,this.w+=i,this}subtract(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subtract4f(e,t,n,i){return this.x-=e,this.y-=t,this.z-=n,this.w-=i,this}multiplyScalar(e){return"object"==typeof e&&console.warn("should use Vec4.multiply for vector * vector operation"),this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}multiply(e){return"object"!=typeof e&&console.warn("should use Vec4.scale for vector * scalar operation"),this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiply4f(e,t,n,i){return this.x*=e,this.y*=t,this.z*=n,this.w*=i,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divide4f(e,t,n,i){return this.x/=e,this.y/=t,this.z/=n,this.w/=i,this}negative(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}cross(e){const{x:t,y:n,z:i}=this,{x:s,y:o,z:r}=e;return this.x=n*r-i*o,this.y=i*s-t*r,this.z=t*o-n*s,this}length(){const e=this.x,t=this.y,n=this.z,i=this.w;return Math.sqrt(e*e+t*t+n*n+i*i)}lengthSqr(){const e=this.x,t=this.y,n=this.z,i=this.w;return e*e+t*t+n*n+i*i}normalize(){const e=this.x,t=this.y,n=this.z,i=this.w;let s=e*e+t*t+n*n+i*i;return s>0&&(s=1/Math.sqrt(s),this.x=e*s,this.y=t*s,this.z=n*s,this.w=i*s),this}transformMat4(e){const t=this.x,n=this.y,i=this.z,s=this.w;return this.x=e.m00*t+e.m04*n+e.m08*i+e.m12*s,this.y=e.m01*t+e.m05*n+e.m09*i+e.m13*s,this.z=e.m02*t+e.m06*n+e.m10*i+e.m14*s,this.w=e.m03*t+e.m07*n+e.m11*i+e.m15*s,this}}function Vn(e,t,n,i){return new Gn(e,t,n,i)}e("Vec4",Gn),Gn.ZERO=Object.freeze(new Gn(0,0,0,0)),Gn.ONE=Object.freeze(new Gn(1,1,1,1)),Gn.NEG_ONE=Object.freeze(new Gn(-1,-1,-1,-1)),zt.fastDefine("cc.Vec4",Gn,{x:0,y:0,z:0,w:0}),u.Vec4=Gn,u.v4=Vn,V(Bn,"Vec2",[{name:"sub",newName:"subtract",target:Bn,targetName:"Vec2"},{name:"mul",newName:"multiply",target:Bn,targetName:"Vec2"},{name:"div",newName:"divide",target:Bn,targetName:"Vec2"},{name:"dist",newName:"distance",target:Bn,targetName:"Vec2"},{name:"sqrDist",newName:"squaredDistance",target:Bn,targetName:"Vec2"},{name:"mag",newName:"len",target:Bn,targetName:"Vec2"},{name:"sqrMag",newName:"lengthSqr",target:Bn,targetName:"Vec2"},{name:"scale",newName:"multiplyScalar",target:Bn,targetName:"Vec2"},{name:"exactEquals",newName:"strictEquals",target:Bn,targetName:"Vec2"}]),V(Bn.prototype,"Vec2",[{name:"mag",newName:"length",target:Bn.prototype,targetName:"Vec2"},{name:"magSqr",newName:"lengthSqr",target:Bn.prototype,targetName:"Vec2"},{name:"scale",newName:"multiplyScalar",target:Bn.prototype,targetName:"Vec2"},{name:"exactEquals",newName:"strictEquals",target:Bn.prototype,targetName:"Vec2"}]),V(gn,"Vec3",[{name:"sub",newName:"subtract",target:gn,targetName:"Vec3"},{name:"mul",newName:"multiply",target:gn,targetName:"Vec3"},{name:"div",newName:"divide",target:gn,targetName:"Vec3"},{name:"dist",newName:"distance",target:gn,targetName:"Vec3"},{name:"sqrDist",newName:"squaredDistance",target:gn,targetName:"Vec3"},{name:"mag",newName:"len",target:gn,targetName:"Vec3"},{name:"sqrMag",newName:"lengthSqr",target:gn,targetName:"Vec3"},{name:"scale",newName:"multiplyScalar",target:gn,targetName:"Vec3"},{name:"exactEquals",newName:"strictEquals",target:gn,targetName:"Vec3"}]),V(gn.prototype,"Vec3",[{name:"mag",newName:"length",target:gn.prototype,targetName:"Vec3"},{name:"magSqr",newName:"lengthSqr",target:gn.prototype,targetName:"Vec3"},{name:"scale",newName:"multiplyScalar",target:gn.prototype,targetName:"Vec3"},{name:"exactEquals",newName:"strictEquals",target:gn.prototype,targetName:"Vec3"}]),V(Gn,"Vec4",[{name:"sub",newName:"subtract",target:Gn,targetName:"Vec4"},{name:"mul",newName:"multiply",target:Gn,targetName:"Vec4"},{name:"div",newName:"divide",target:Gn,targetName:"Vec4"},{name:"dist",newName:"distance",target:Gn,targetName:"Vec4"},{name:"sqrDist",newName:"squaredDistance",target:Gn,targetName:"Vec4"},{name:"mag",newName:"len",target:Gn,targetName:"Vec4"},{name:"sqrMag",newName:"lengthSqr",target:Gn,targetName:"Vec4"},{name:"scale",newName:"multiplyScalar",target:Gn,targetName:"Vec4"},{name:"exactEquals",newName:"strictEquals",target:Gn,targetName:"Vec4"}]),V(Gn.prototype,"Vec4",[{name:"mag",newName:"length",target:Gn.prototype,targetName:"Vec4"},{name:"magSqr",newName:"lengthSqr",target:Gn.prototype,targetName:"Vec4"},{name:"scale",newName:"multiplyScalar",target:Gn.prototype,targetName:"Vec4"},{name:"exactEquals",newName:"strictEquals",target:Gn.prototype,targetName:"Vec4"}]),V(Tn,"Quat",[{name:"mag",newName:"len",target:Tn,targetName:"Quat"},{name:"mul",newName:"multiply",target:Tn,targetName:"Quat"},{name:"sqrMag",newName:"lengthSqr",target:Tn,targetName:"Quat"},{name:"scale",newName:"multiplyScalar",target:Tn,targetName:"Quat"},{name:"exactEquals",newName:"strictEquals",target:Tn,targetName:"Quat"}]),V(Tn.prototype,"Quat",[{name:"scale",newName:"multiplyScalar",target:Tn.prototype,targetName:"Quat"},{name:"exactEquals",newName:"strictEquals",target:Tn.prototype,targetName:"Quat"}]),V(dn,"Color",[{name:"sub",newName:"subtract",target:dn,targetName:"Color"},{name:"mul",newName:"multiply",target:dn,targetName:"Color"},{name:"div",newName:"divide",target:dn,targetName:"Color"},{name:"exactEquals",newName:"strictEquals",target:dn,targetName:"Color"},{name:"fromHex",newName:"fromHEX",customFunction(...e){const t=e[1].toString(16);return u.Color.fromHEX(e[0],t)}}]),V(Sn,"Mat3",[{name:"sub",newName:"subtract",target:Sn,targetName:"Mat3"},{name:"mul",newName:"multiply",target:Sn,targetName:"Mat3"},{name:"exactEquals",newName:"strictEquals",target:Sn,targetName:"Mat3"},{name:"transfrom",newName:"transform",target:Sn,targetName:"Mat3"}]),V(Sn.prototype,"Mat3",[{name:"sub",newName:"subtract",target:Sn.prototype,targetName:"Mat3"},{name:"mul",newName:"multiply",target:Sn.prototype,targetName:"Mat3"},{name:"mulScalar",newName:"multiplyScalar",target:Sn.prototype,targetName:"Mat3"},{name:"exactEquals",newName:"strictEquals",target:Sn.prototype,targetName:"Mat3"}]),V(On,"Mat4",[{name:"sub",newName:"subtract",target:On,targetName:"Mat4"},{name:"mul",newName:"multiply",target:On,targetName:"Mat4"},{name:"exactEquals",newName:"strictEquals",target:On,targetName:"Mat4"}]),V(On.prototype,"Mat4",[{name:"sub",newName:"subtract",target:On.prototype,targetName:"Mat4"},{name:"mul",newName:"multiply",target:On.prototype,targetName:"Mat4"},{name:"mulScalar",newName:"multiplyScalar",target:On.prototype,targetName:"Mat4"},{name:"exactEquals",newName:"strictEquals",target:On.prototype,targetName:"Mat4"}]);class Hn{static identity(){return new Hn}static clone(e){return new Hn(e.a,e.b,e.c,e.d,e.tx,e.ty)}static concat(e,t,n){const i=t.a,s=t.b,o=t.c,r=t.d,a=t.tx,c=t.ty;e.a=i*n.a+s*n.c,e.b=i*n.b+s*n.d,e.c=o*n.a+r*n.c,e.d=o*n.b+r*n.d,e.tx=a*n.a+c*n.c+n.tx,e.ty=a*n.b+c*n.d+n.ty}static invert(e,t){const n=1/(t.a*t.d-t.b*t.c);e.a=n*t.d,e.b=-n*t.b,e.c=-n*t.c,e.d=n*t.a,e.tx=n*(t.c*t.ty-t.d*t.tx),e.ty=n*(t.b*t.tx-t.a*t.ty)}static fromMat4(e,t){e.a=t.m00,e.b=t.m01,e.c=t.m04,e.d=t.m05,e.tx=t.m12,e.ty=t.m13}static transformVec2(e,t,n,i){let s,o;i?(s=t,o=n):(i=n,s=t.x,o=t.y),e.x=i.a*s+i.c*o+i.tx,e.y=i.b*s+i.d*o+i.ty}static transformSize(e,t,n){e.width=n.a*t.width+n.c*t.height,e.height=n.b*t.width+n.d*t.height}static transformRect(e,t,n){const i=t.x+t.width,s=t.y+t.height,o=n.a*t.x+n.c*t.y+n.tx,r=n.b*t.x+n.d*t.y+n.ty,a=n.a*i+n.c*t.y+n.tx,c=n.b*i+n.d*t.y+n.ty,l=n.a*t.x+n.c*s+n.tx,h=n.b*t.x+n.d*s+n.ty,u=n.a*i+n.c*s+n.tx,_=n.b*i+n.d*s+n.ty,d=Math.min(o,a,l,u),p=Math.max(o,a,l,u),f=Math.min(r,c,h,_),m=Math.max(r,c,h,_);e.x=d,e.y=f,e.width=p-d,e.height=m-f}static transformObb(e,t,n,i,s,o){const r=o.a*s.x+o.c*s.y+o.tx,a=o.b*s.x+o.d*s.y+o.ty,c=o.a*s.width,l=o.b*s.width,h=o.c*s.height,u=o.d*s.height;t.x=r,t.y=a,n.x=c+r,n.y=l+a,e.x=h+r,e.y=u+a,i.x=c+h+r,i.y=l+u+a}constructor(e=1,t=0,n=0,i=1,s=0,o=0){this.a=e,this.b=t,this.c=n,this.d=i,this.tx=s,this.ty=o}}e("AffineTransform",Hn),u.AffineTransform=Hn;class kn extends $e{static lerp(e,t,n,i){return e.width=t.width+(n.width-t.width)*i,e.height=t.height+(n.height-t.height)*i,e}set x(e){this.width=e}get x(){return this.width}set y(e){this.height=e}get y(){return this.height}constructor(e,t){super(),e&&"object"==typeof e?(this.width=e.width,this.height=e.height):(this.width=e||0,this.height=t||0)}clone(){return new kn(this.width,this.height)}set(e,t){return e&&"object"==typeof e?(this.height=e.height,this.width=e.width):(this.width=e||0,this.height=t||0),this}equals(e){return this.width===e.width&&this.height===e.height}lerp(e,t){return this.width+=(e.width-this.width)*t,this.height+=(e.height-this.height)*t,this}toString(){return`(${this.width.toFixed(2)}, ${this.height.toFixed(2)})`}}function jn(e=0,t=0){return new kn(e,t)}e("Size",kn),kn.ZERO=Object.freeze(new kn(0,0)),kn.ONE=Object.freeze(new kn(1,1)),zt.fastDefine("cc.Size",kn,{width:0,height:0}),u.size=jn,u.Size=kn;class Wn extends $e{static fromMinMax(e,t,n){const i=Math.min(t.x,n.x),s=Math.min(t.y,n.y),o=Math.max(t.x,n.x),r=Math.max(t.y,n.y);return e.x=i,e.y=s,e.width=o-i,e.height=r-s,e}static lerp(e,t,n,i){const s=t.x,o=t.y,r=t.width,a=t.height;return e.x=s+(n.x-s)*i,e.y=o+(n.y-o)*i,e.width=r+(n.width-r)*i,e.height=a+(n.height-a)*i,e}static intersection(e,t,n){const i=t.x,s=t.y,o=t.x+t.width,r=t.y+t.height,a=n.x,c=n.y,l=n.x+n.width,h=n.y+n.height;return e.x=Math.max(i,a),e.y=Math.max(s,c),e.width=Math.min(o,l)-e.x,e.height=Math.min(r,h)-e.y,e}static union(e,t,n){const i=t.x,s=t.y,o=t.width,r=t.height,a=n.x,c=n.y,l=n.width,h=n.height;return e.x=Math.min(i,a),e.y=Math.min(s,c),e.width=Math.max(i+o,a+l)-e.x,e.height=Math.max(s+r,c+h)-e.y,e}get xMin(){return this.x}set xMin(e){this.width+=this.x-e,this.x=e}get yMin(){return this.y}set yMin(e){this.height+=this.y-e,this.y=e}get xMax(){return this.x+this.width}set xMax(e){this.width=e-this.x}get yMax(){return this.y+this.height}set yMax(e){this.height=e-this.y}get center(){return new Bn(this.x+.5*this.width,this.y+.5*this.height)}set center(e){this.x=e.x-.5*this.width,this.y=e.y-.5*this.height}get origin(){return new Bn(this.x,this.y)}set origin(e){this.x=e.x,this.y=e.y}get size(){return new kn(this.width,this.height)}set size(e){this.width=e.width,this.height=e.height}set z(e){this.width=e}get z(){return this.width}set w(e){this.height=e}get w(){return this.height}constructor(e,t,n,i){super(),e&&"object"==typeof e?(this.y=e.y,this.width=e.width,this.height=e.height,this.x=e.x):(this.x=e||0,this.y=t||0,this.width=n||0,this.height=i||0)}clone(){return new Wn(this.x,this.y,this.width,this.height)}set(e,t,n,i){return e&&"object"==typeof e?(this.y=e.y,this.width=e.width,this.height=e.height,this.x=e.x):(this.x=e||0,this.y=t||0,this.width=n||0,this.height=i||0),this}equals(e){return this.x===e.x&&this.y===e.y&&this.width===e.width&&this.height===e.height}lerp(e,t){const n=this.x,i=this.y,s=this.width,o=this.height;return this.x=n+(e.x-n)*t,this.y=i+(e.y-i)*t,this.width=s+(e.width-s)*t,this.height=o+(e.height-o)*t,this}toString(){return`(${this.x.toFixed(2)}, ${this.y.toFixed(2)}, ${this.width.toFixed(2)}, ${this.height.toFixed(2)})`}intersects(e){const t=this.x+this.width,n=this.y+this.height,i=e.x+e.width,s=e.y+e.height;return!(t<e.x||i<this.x||n<e.y||s<this.y)}contains(e){return this.x<=e.x&&this.x+this.width>=e.x&&this.y<=e.y&&this.y+this.height>=e.y}containsRect(e){return this.x<=e.x&&this.x+this.width>=e.x+e.width&&this.y<=e.y&&this.y+this.height>=e.y+e.height}transformMat4(e){const t=this.x,n=this.y,i=t+this.width,s=n+this.height,o=e.m00*t+e.m04*n+e.m12,r=e.m01*t+e.m05*n+e.m13,a=e.m00*i+e.m04*n+e.m12,c=e.m01*i+e.m05*n+e.m13,l=e.m00*t+e.m04*s+e.m12,h=e.m01*t+e.m05*s+e.m13,u=e.m00*i+e.m04*s+e.m12,_=e.m01*i+e.m05*s+e.m13,d=Math.min(o,a,l,u),p=Math.max(o,a,l,u),f=Math.min(r,c,h,_),m=Math.max(r,c,h,_);return this.x=d,this.y=f,this.width=p-d,this.height=m-f,this}transformMat4ToPoints(e,t,n,i,s){const o=this.x,r=this.y,a=o+this.width,c=r+this.height;t.x=e.m00*o+e.m04*r+e.m12,t.y=e.m01*o+e.m05*r+e.m13,s.x=e.m00*a+e.m04*r+e.m12,s.y=e.m01*a+e.m05*r+e.m13,n.x=e.m00*o+e.m04*c+e.m12,n.y=e.m01*o+e.m05*c+e.m13,i.x=e.m00*a+e.m04*c+e.m12,i.y=e.m01*a+e.m05*c+e.m13}}function qn(e=0,t=0,n=0,i=0){return new Wn(e,t,n,i)}e("Rect",Wn),zt.fastDefine("cc.Rect",Wn,{x:0,y:0,width:0,height:0}),u.Rect=Wn,u.rect=qn;var Xn=Object.freeze({__proto__:null,bits:l,Vec2:Bn,v2:Un,Vec3:gn,v3:xn,Vec4:Gn,v4:Vn,Quat:Tn,quat:Rn,Mat3:Sn,Mat4:On,mat4:Ln,AffineTransform:Hn,Size:kn,size:jn,Rect:Wn,rect:qn,Color:dn,color:pn,EPSILON:jt,equals:Wt,approx:qt,clamp:Xt,clamp01:Yt,lerp:Kt,toRadian:$t,toDegree:Qt,random:Jt,randomRange:Zt,randomRangeInt:en,pseudoRandom:tn,pseudoRandomRange:nn,pseudoRandomRangeInt:sn,nextPow2:on,repeat:rn,pingPong:an,inverseLerp:cn,absMaxComponent:ln,absMax:hn,enumerableProps:un,MATH_FLOAT_ARRAY:fn,MathBase:mn});e("math",Xn);const Yn=new class{constructor(){this._finalizationRegistry=null,this._gcObjects=new WeakMap}registerGCObject(e){return e}init(){}finalizationRegistryCallback(e){const t=this._gcObjects.get(e);t&&(this._gcObjects.delete(e),t.destroy()),this._finalizationRegistry.unregister(e)}destroy(){}},Kn=(e,t,n)=>{for(let i=0;i<t.length;++i)e.length<=i&&e.push(new n),e[i].copy(t[i]);e.length=t.length};let $n,Qn,Jn,Zn,ei,ti,ni,ii,si,oi,ri,ai,ci,li,hi,ui,_i,di,pi,fi,mi,gi,vi,yi,xi,Si,Ci,Ei,Ti,bi,Ai,Pi,wi,Ii,Ri,Di,Oi,Ni,Mi,Li,Bi,Fi,zi;!function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.SWAPCHAIN=1]="SWAPCHAIN",e[e.BUFFER=2]="BUFFER",e[e.TEXTURE=3]="TEXTURE",e[e.RENDER_PASS=4]="RENDER_PASS",e[e.FRAMEBUFFER=5]="FRAMEBUFFER",e[e.SAMPLER=6]="SAMPLER",e[e.SHADER=7]="SHADER",e[e.DESCRIPTOR_SET_LAYOUT=8]="DESCRIPTOR_SET_LAYOUT",e[e.PIPELINE_LAYOUT=9]="PIPELINE_LAYOUT",e[e.PIPELINE_STATE=10]="PIPELINE_STATE",e[e.DESCRIPTOR_SET=11]="DESCRIPTOR_SET",e[e.INPUT_ASSEMBLER=12]="INPUT_ASSEMBLER",e[e.COMMAND_BUFFER=13]="COMMAND_BUFFER",e[e.QUEUE=14]="QUEUE",e[e.QUERY_POOL=15]="QUERY_POOL",e[e.GLOBAL_BARRIER=16]="GLOBAL_BARRIER",e[e.TEXTURE_BARRIER=17]="TEXTURE_BARRIER",e[e.BUFFER_BARRIER=18]="BUFFER_BARRIER",e[e.COUNT=19]="COUNT"}($n||($n={})),function(e){e[e.UNREADY=0]="UNREADY",e[e.FAILED=1]="FAILED",e[e.SUCCESS=2]="SUCCESS"}(Qn||(Qn={})),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.GLES2=1]="GLES2",e[e.GLES3=2]="GLES3",e[e.METAL=3]="METAL",e[e.VULKAN=4]="VULKAN",e[e.NVN=5]="NVN",e[e.WEBGL=6]="WEBGL",e[e.WEBGL2=7]="WEBGL2",e[e.WEBGPU=8]="WEBGPU"}(Jn||(Jn={})),function(e){e[e.IDENTITY=0]="IDENTITY",e[e.ROTATE_90=1]="ROTATE_90",e[e.ROTATE_180=2]="ROTATE_180",e[e.ROTATE_270=3]="ROTATE_270"}(Zn||(Zn={})),function(e){e[e.ELEMENT_INDEX_UINT=0]="ELEMENT_INDEX_UINT",e[e.INSTANCED_ARRAYS=1]="INSTANCED_ARRAYS",e[e.MULTIPLE_RENDER_TARGETS=2]="MULTIPLE_RENDER_TARGETS",e[e.BLEND_MINMAX=3]="BLEND_MINMAX",e[e.COMPUTE_SHADER=4]="COMPUTE_SHADER",e[e.INPUT_ATTACHMENT_BENEFIT=5]="INPUT_ATTACHMENT_BENEFIT",e[e.COUNT=6]="COUNT"}(ei||(ei={})),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.A8=1]="A8",e[e.L8=2]="L8",e[e.LA8=3]="LA8",e[e.R8=4]="R8",e[e.R8SN=5]="R8SN",e[e.R8UI=6]="R8UI",e[e.R8I=7]="R8I",e[e.R16F=8]="R16F",e[e.R16UI=9]="R16UI",e[e.R16I=10]="R16I",e[e.R32F=11]="R32F",e[e.R32UI=12]="R32UI",e[e.R32I=13]="R32I",e[e.RG8=14]="RG8",e[e.RG8SN=15]="RG8SN",e[e.RG8UI=16]="RG8UI",e[e.RG8I=17]="RG8I",e[e.RG16F=18]="RG16F",e[e.RG16UI=19]="RG16UI",e[e.RG16I=20]="RG16I",e[e.RG32F=21]="RG32F",e[e.RG32UI=22]="RG32UI",e[e.RG32I=23]="RG32I",e[e.RGB8=24]="RGB8",e[e.SRGB8=25]="SRGB8",e[e.RGB8SN=26]="RGB8SN",e[e.RGB8UI=27]="RGB8UI",e[e.RGB8I=28]="RGB8I",e[e.RGB16F=29]="RGB16F",e[e.RGB16UI=30]="RGB16UI",e[e.RGB16I=31]="RGB16I",e[e.RGB32F=32]="RGB32F",e[e.RGB32UI=33]="RGB32UI",e[e.RGB32I=34]="RGB32I",e[e.RGBA8=35]="RGBA8",e[e.BGRA8=36]="BGRA8",e[e.SRGB8_A8=37]="SRGB8_A8",e[e.RGBA8SN=38]="RGBA8SN",e[e.RGBA8UI=39]="RGBA8UI",e[e.RGBA8I=40]="RGBA8I",e[e.RGBA16F=41]="RGBA16F",e[e.RGBA16UI=42]="RGBA16UI",e[e.RGBA16I=43]="RGBA16I",e[e.RGBA32F=44]="RGBA32F",e[e.RGBA32UI=45]="RGBA32UI",e[e.RGBA32I=46]="RGBA32I",e[e.R5G6B5=47]="R5G6B5",e[e.R11G11B10F=48]="R11G11B10F",e[e.RGB5A1=49]="RGB5A1",e[e.RGBA4=50]="RGBA4",e[e.RGB10A2=51]="RGB10A2",e[e.RGB10A2UI=52]="RGB10A2UI",e[e.RGB9E5=53]="RGB9E5",e[e.DEPTH=54]="DEPTH",e[e.DEPTH_STENCIL=55]="DEPTH_STENCIL",e[e.BC1=56]="BC1",e[e.BC1_ALPHA=57]="BC1_ALPHA",e[e.BC1_SRGB=58]="BC1_SRGB",e[e.BC1_SRGB_ALPHA=59]="BC1_SRGB_ALPHA",e[e.BC2=60]="BC2",e[e.BC2_SRGB=61]="BC2_SRGB",e[e.BC3=62]="BC3",e[e.BC3_SRGB=63]="BC3_SRGB",e[e.BC4=64]="BC4",e[e.BC4_SNORM=65]="BC4_SNORM",e[e.BC5=66]="BC5",e[e.BC5_SNORM=67]="BC5_SNORM",e[e.BC6H_UF16=68]="BC6H_UF16",e[e.BC6H_SF16=69]="BC6H_SF16",e[e.BC7=70]="BC7",e[e.BC7_SRGB=71]="BC7_SRGB",e[e.ETC_RGB8=72]="ETC_RGB8",e[e.ETC2_RGB8=73]="ETC2_RGB8",e[e.ETC2_SRGB8=74]="ETC2_SRGB8",e[e.ETC2_RGB8_A1=75]="ETC2_RGB8_A1",e[e.ETC2_SRGB8_A1=76]="ETC2_SRGB8_A1",e[e.ETC2_RGBA8=77]="ETC2_RGBA8",e[e.ETC2_SRGB8_A8=78]="ETC2_SRGB8_A8",e[e.EAC_R11=79]="EAC_R11",e[e.EAC_R11SN=80]="EAC_R11SN",e[e.EAC_RG11=81]="EAC_RG11",e[e.EAC_RG11SN=82]="EAC_RG11SN",e[e.PVRTC_RGB2=83]="PVRTC_RGB2",e[e.PVRTC_RGBA2=84]="PVRTC_RGBA2",e[e.PVRTC_RGB4=85]="PVRTC_RGB4",e[e.PVRTC_RGBA4=86]="PVRTC_RGBA4",e[e.PVRTC2_2BPP=87]="PVRTC2_2BPP",e[e.PVRTC2_4BPP=88]="PVRTC2_4BPP",e[e.ASTC_RGBA_4X4=89]="ASTC_RGBA_4X4",e[e.ASTC_RGBA_5X4=90]="ASTC_RGBA_5X4",e[e.ASTC_RGBA_5X5=91]="ASTC_RGBA_5X5",e[e.ASTC_RGBA_6X5=92]="ASTC_RGBA_6X5",e[e.ASTC_RGBA_6X6=93]="ASTC_RGBA_6X6",e[e.ASTC_RGBA_8X5=94]="ASTC_RGBA_8X5",e[e.ASTC_RGBA_8X6=95]="ASTC_RGBA_8X6",e[e.ASTC_RGBA_8X8=96]="ASTC_RGBA_8X8",e[e.ASTC_RGBA_10X5=97]="ASTC_RGBA_10X5",e[e.ASTC_RGBA_10X6=98]="ASTC_RGBA_10X6",e[e.ASTC_RGBA_10X8=99]="ASTC_RGBA_10X8",e[e.ASTC_RGBA_10X10=100]="ASTC_RGBA_10X10",e[e.ASTC_RGBA_12X10=101]="ASTC_RGBA_12X10",e[e.ASTC_RGBA_12X12=102]="ASTC_RGBA_12X12",e[e.ASTC_SRGBA_4X4=103]="ASTC_SRGBA_4X4",e[e.ASTC_SRGBA_5X4=104]="ASTC_SRGBA_5X4",e[e.ASTC_SRGBA_5X5=105]="ASTC_SRGBA_5X5",e[e.ASTC_SRGBA_6X5=106]="ASTC_SRGBA_6X5",e[e.ASTC_SRGBA_6X6=107]="ASTC_SRGBA_6X6",e[e.ASTC_SRGBA_8X5=108]="ASTC_SRGBA_8X5",e[e.ASTC_SRGBA_8X6=109]="ASTC_SRGBA_8X6",e[e.ASTC_SRGBA_8X8=110]="ASTC_SRGBA_8X8",e[e.ASTC_SRGBA_10X5=111]="ASTC_SRGBA_10X5",e[e.ASTC_SRGBA_10X6=112]="ASTC_SRGBA_10X6",e[e.ASTC_SRGBA_10X8=113]="ASTC_SRGBA_10X8",e[e.ASTC_SRGBA_10X10=114]="ASTC_SRGBA_10X10",e[e.ASTC_SRGBA_12X10=115]="ASTC_SRGBA_12X10",e[e.ASTC_SRGBA_12X12=116]="ASTC_SRGBA_12X12",e[e.COUNT=117]="COUNT"}(ti||(ti={})),function(e){e[e.NONE=0]="NONE",e[e.UNORM=1]="UNORM",e[e.SNORM=2]="SNORM",e[e.UINT=3]="UINT",e[e.INT=4]="INT",e[e.UFLOAT=5]="UFLOAT",e[e.FLOAT=6]="FLOAT"}(ni||(ni={})),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.BOOL=1]="BOOL",e[e.BOOL2=2]="BOOL2",e[e.BOOL3=3]="BOOL3",e[e.BOOL4=4]="BOOL4",e[e.INT=5]="INT",e[e.INT2=6]="INT2",e[e.INT3=7]="INT3",e[e.INT4=8]="INT4",e[e.UINT=9]="UINT",e[e.UINT2=10]="UINT2",e[e.UINT3=11]="UINT3",e[e.UINT4=12]="UINT4",e[e.FLOAT=13]="FLOAT",e[e.FLOAT2=14]="FLOAT2",e[e.FLOAT3=15]="FLOAT3",e[e.FLOAT4=16]="FLOAT4",e[e.MAT2=17]="MAT2",e[e.MAT2X3=18]="MAT2X3",e[e.MAT2X4=19]="MAT2X4",e[e.MAT3X2=20]="MAT3X2",e[e.MAT3=21]="MAT3",e[e.MAT3X4=22]="MAT3X4",e[e.MAT4X2=23]="MAT4X2",e[e.MAT4X3=24]="MAT4X3",e[e.MAT4=25]="MAT4",e[e.SAMPLER1D=26]="SAMPLER1D",e[e.SAMPLER1D_ARRAY=27]="SAMPLER1D_ARRAY",e[e.SAMPLER2D=28]="SAMPLER2D",e[e.SAMPLER2D_ARRAY=29]="SAMPLER2D_ARRAY",e[e.SAMPLER3D=30]="SAMPLER3D",e[e.SAMPLER_CUBE=31]="SAMPLER_CUBE",e[e.SAMPLER=32]="SAMPLER",e[e.TEXTURE1D=33]="TEXTURE1D",e[e.TEXTURE1D_ARRAY=34]="TEXTURE1D_ARRAY",e[e.TEXTURE2D=35]="TEXTURE2D",e[e.TEXTURE2D_ARRAY=36]="TEXTURE2D_ARRAY",e[e.TEXTURE3D=37]="TEXTURE3D",e[e.TEXTURE_CUBE=38]="TEXTURE_CUBE",e[e.IMAGE1D=39]="IMAGE1D",e[e.IMAGE1D_ARRAY=40]="IMAGE1D_ARRAY",e[e.IMAGE2D=41]="IMAGE2D",e[e.IMAGE2D_ARRAY=42]="IMAGE2D_ARRAY",e[e.IMAGE3D=43]="IMAGE3D",e[e.IMAGE_CUBE=44]="IMAGE_CUBE",e[e.SUBPASS_INPUT=45]="SUBPASS_INPUT",e[e.COUNT=46]="COUNT"}(ii||(ii={})),function(e){e[e.NONE=0]="NONE",e[e.TRANSFER_SRC=1]="TRANSFER_SRC",e[e.TRANSFER_DST=2]="TRANSFER_DST",e[e.INDEX=4]="INDEX",e[e.VERTEX=8]="VERTEX",e[e.UNIFORM=16]="UNIFORM",e[e.STORAGE=32]="STORAGE",e[e.INDIRECT=64]="INDIRECT"}(si||(si={})),function(e){e[e.NONE=0]="NONE"}(oi||(oi={})),function(e){e[e.NONE=0]="NONE",e[e.READ_ONLY=1]="READ_ONLY",e[e.WRITE_ONLY=2]="WRITE_ONLY",e[e.READ_WRITE=3]="READ_WRITE"}(ri||(ri={})),function(e){e[e.NONE=0]="NONE",e[e.DEVICE=1]="DEVICE",e[e.HOST=2]="HOST"}(ai||(ai={})),function(e){e[e.TEX1D=0]="TEX1D",e[e.TEX2D=1]="TEX2D",e[e.TEX3D=2]="TEX3D",e[e.CUBE=3]="CUBE",e[e.TEX1D_ARRAY=4]="TEX1D_ARRAY",e[e.TEX2D_ARRAY=5]="TEX2D_ARRAY"}(ci||(ci={})),function(e){e[e.NONE=0]="NONE",e[e.TRANSFER_SRC=1]="TRANSFER_SRC",e[e.TRANSFER_DST=2]="TRANSFER_DST",e[e.SAMPLED=4]="SAMPLED",e[e.STORAGE=8]="STORAGE",e[e.COLOR_ATTACHMENT=16]="COLOR_ATTACHMENT",e[e.DEPTH_STENCIL_ATTACHMENT=32]="DEPTH_STENCIL_ATTACHMENT",e[e.INPUT_ATTACHMENT=64]="INPUT_ATTACHMENT"}(li||(li={})),function(e){e[e.NONE=0]="NONE",e[e.GEN_MIPMAP=1]="GEN_MIPMAP",e[e.GENERAL_LAYOUT=2]="GENERAL_LAYOUT"}(hi||(hi={})),function(e){e[e.NONE=0]="NONE",e[e.RENDER_TARGET=1]="RENDER_TARGET",e[e.SAMPLED_TEXTURE=2]="SAMPLED_TEXTURE",e[e.LINEAR_FILTER=4]="LINEAR_FILTER",e[e.STORAGE_TEXTURE=8]="STORAGE_TEXTURE",e[e.VERTEX_ATTRIBUTE=16]="VERTEX_ATTRIBUTE"}(ui||(ui={})),function(e){e[e.ONE=0]="ONE",e[e.MULTIPLE_PERFORMANCE=1]="MULTIPLE_PERFORMANCE",e[e.MULTIPLE_BALANCE=2]="MULTIPLE_BALANCE",e[e.MULTIPLE_QUALITY=3]="MULTIPLE_QUALITY"}(_i||(_i={})),function(e){e[e.OFF=0]="OFF",e[e.ON=1]="ON",e[e.RELAXED=2]="RELAXED",e[e.MAILBOX=3]="MAILBOX",e[e.HALF=4]="HALF"}(di||(di={})),function(e){e[e.NONE=0]="NONE",e[e.POINT=1]="POINT",e[e.LINEAR=2]="LINEAR",e[e.ANISOTROPIC=3]="ANISOTROPIC"}(pi||(pi={})),function(e){e[e.WRAP=0]="WRAP",e[e.MIRROR=1]="MIRROR",e[e.CLAMP=2]="CLAMP",e[e.BORDER=3]="BORDER"}(fi||(fi={})),function(e){e[e.NEVER=0]="NEVER",e[e.LESS=1]="LESS",e[e.EQUAL=2]="EQUAL",e[e.LESS_EQUAL=3]="LESS_EQUAL",e[e.GREATER=4]="GREATER",e[e.NOT_EQUAL=5]="NOT_EQUAL",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.ALWAYS=7]="ALWAYS"}(mi||(mi={})),function(e){e[e.ZERO=0]="ZERO",e[e.KEEP=1]="KEEP",e[e.REPLACE=2]="REPLACE",e[e.INCR=3]="INCR",e[e.DECR=4]="DECR",e[e.INVERT=5]="INVERT",e[e.INCR_WRAP=6]="INCR_WRAP",e[e.DECR_WRAP=7]="DECR_WRAP"}(gi||(gi={})),function(e){e[e.ZERO=0]="ZERO",e[e.ONE=1]="ONE",e[e.SRC_ALPHA=2]="SRC_ALPHA",e[e.DST_ALPHA=3]="DST_ALPHA",e[e.ONE_MINUS_SRC_ALPHA=4]="ONE_MINUS_SRC_ALPHA",e[e.ONE_MINUS_DST_ALPHA=5]="ONE_MINUS_DST_ALPHA",e[e.SRC_COLOR=6]="SRC_COLOR",e[e.DST_COLOR=7]="DST_COLOR",e[e.ONE_MINUS_SRC_COLOR=8]="ONE_MINUS_SRC_COLOR",e[e.ONE_MINUS_DST_COLOR=9]="ONE_MINUS_DST_COLOR",e[e.SRC_ALPHA_SATURATE=10]="SRC_ALPHA_SATURATE",e[e.CONSTANT_COLOR=11]="CONSTANT_COLOR",e[e.ONE_MINUS_CONSTANT_COLOR=12]="ONE_MINUS_CONSTANT_COLOR",e[e.CONSTANT_ALPHA=13]="CONSTANT_ALPHA",e[e.ONE_MINUS_CONSTANT_ALPHA=14]="ONE_MINUS_CONSTANT_ALPHA"}(vi||(vi={})),function(e){e[e.ADD=0]="ADD",e[e.SUB=1]="SUB",e[e.REV_SUB=2]="REV_SUB",e[e.MIN=3]="MIN",e[e.MAX=4]="MAX"}(yi||(yi={})),function(e){e[e.NONE=0]="NONE",e[e.R=1]="R",e[e.G=2]="G",e[e.B=4]="B",e[e.A=8]="A",e[e.ALL=15]="ALL"}(xi||(xi={})),function(e){e[e.NONE=0]="NONE",e[e.VERTEX=1]="VERTEX",e[e.CONTROL=2]="CONTROL",e[e.EVALUATION=4]="EVALUATION",e[e.GEOMETRY=8]="GEOMETRY",e[e.FRAGMENT=16]="FRAGMENT",e[e.COMPUTE=32]="COMPUTE",e[e.ALL=63]="ALL"}(Si||(Si={})),function(e){e[e.LOAD=0]="LOAD",e[e.CLEAR=1]="CLEAR",e[e.DISCARD=2]="DISCARD"}(Ci||(Ci={})),function(e){e[e.STORE=0]="STORE",e[e.DISCARD=1]="DISCARD"}(Ei||(Ei={})),function(e){e[e.NONE=0]="NONE",e[e.INDIRECT_BUFFER=1]="INDIRECT_BUFFER",e[e.INDEX_BUFFER=2]="INDEX_BUFFER",e[e.VERTEX_BUFFER=4]="VERTEX_BUFFER",e[e.VERTEX_SHADER_READ_UNIFORM_BUFFER=8]="VERTEX_SHADER_READ_UNIFORM_BUFFER",e[e.VERTEX_SHADER_READ_TEXTURE=16]="VERTEX_SHADER_READ_TEXTURE",e[e.VERTEX_SHADER_READ_OTHER=32]="VERTEX_SHADER_READ_OTHER",e[e.FRAGMENT_SHADER_READ_UNIFORM_BUFFER=64]="FRAGMENT_SHADER_READ_UNIFORM_BUFFER",e[e.FRAGMENT_SHADER_READ_TEXTURE=128]="FRAGMENT_SHADER_READ_TEXTURE",e[e.FRAGMENT_SHADER_READ_COLOR_INPUT_ATTACHMENT=256]="FRAGMENT_SHADER_READ_COLOR_INPUT_ATTACHMENT",e[e.FRAGMENT_SHADER_READ_DEPTH_STENCIL_INPUT_ATTACHMENT=512]="FRAGMENT_SHADER_READ_DEPTH_STENCIL_INPUT_ATTACHMENT",e[e.FRAGMENT_SHADER_READ_OTHER=1024]="FRAGMENT_SHADER_READ_OTHER",e[e.COLOR_ATTACHMENT_READ=2048]="COLOR_ATTACHMENT_READ",e[e.DEPTH_STENCIL_ATTACHMENT_READ=4096]="DEPTH_STENCIL_ATTACHMENT_READ",e[e.COMPUTE_SHADER_READ_UNIFORM_BUFFER=8192]="COMPUTE_SHADER_READ_UNIFORM_BUFFER",e[e.COMPUTE_SHADER_READ_TEXTURE=16384]="COMPUTE_SHADER_READ_TEXTURE",e[e.COMPUTE_SHADER_READ_OTHER=32768]="COMPUTE_SHADER_READ_OTHER",e[e.TRANSFER_READ=65536]="TRANSFER_READ",e[e.HOST_READ=131072]="HOST_READ",e[e.PRESENT=262144]="PRESENT",e[e.VERTEX_SHADER_WRITE=524288]="VERTEX_SHADER_WRITE",e[e.FRAGMENT_SHADER_WRITE=1048576]="FRAGMENT_SHADER_WRITE",e[e.COLOR_ATTACHMENT_WRITE=2097152]="COLOR_ATTACHMENT_WRITE",e[e.DEPTH_STENCIL_ATTACHMENT_WRITE=4194304]="DEPTH_STENCIL_ATTACHMENT_WRITE",e[e.COMPUTE_SHADER_WRITE=8388608]="COMPUTE_SHADER_WRITE",e[e.TRANSFER_WRITE=16777216]="TRANSFER_WRITE",e[e.HOST_PREINITIALIZED=33554432]="HOST_PREINITIALIZED",e[e.HOST_WRITE=67108864]="HOST_WRITE"}(Ti||(Ti={})),function(e){e[e.NONE=0]="NONE",e[e.SAMPLE_ZERO=1]="SAMPLE_ZERO",e[e.AVERAGE=2]="AVERAGE",e[e.MIN=3]="MIN",e[e.MAX=4]="MAX"}(bi||(bi={})),function(e){e[e.GRAPHICS=0]="GRAPHICS",e[e.COMPUTE=1]="COMPUTE",e[e.RAY_TRACING=2]="RAY_TRACING"}(Ai||(Ai={})),function(e){e[e.POINT_LIST=0]="POINT_LIST",e[e.LINE_LIST=1]="LINE_LIST",e[e.LINE_STRIP=2]="LINE_STRIP",e[e.LINE_LOOP=3]="LINE_LOOP",e[e.LINE_LIST_ADJACENCY=4]="LINE_LIST_ADJACENCY",e[e.LINE_STRIP_ADJACENCY=5]="LINE_STRIP_ADJACENCY",e[e.ISO_LINE_LIST=6]="ISO_LINE_LIST",e[e.TRIANGLE_LIST=7]="TRIANGLE_LIST",e[e.TRIANGLE_STRIP=8]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=9]="TRIANGLE_FAN",e[e.TRIANGLE_LIST_ADJACENCY=10]="TRIANGLE_LIST_ADJACENCY",e[e.TRIANGLE_STRIP_ADJACENCY=11]="TRIANGLE_STRIP_ADJACENCY",e[e.TRIANGLE_PATCH_ADJACENCY=12]="TRIANGLE_PATCH_ADJACENCY",e[e.QUAD_PATCH_LIST=13]="QUAD_PATCH_LIST"}(Pi||(Pi={})),function(e){e[e.FILL=0]="FILL",e[e.POINT=1]="POINT",e[e.LINE=2]="LINE"}(wi||(wi={})),function(e){e[e.GOURAND=0]="GOURAND",e[e.FLAT=1]="FLAT"}(Ii||(Ii={})),function(e){e[e.NONE=0]="NONE",e[e.FRONT=1]="FRONT",e[e.BACK=2]="BACK"}(Ri||(Ri={})),function(e){e[e.NONE=0]="NONE",e[e.LINE_WIDTH=1]="LINE_WIDTH",e[e.DEPTH_BIAS=2]="DEPTH_BIAS",e[e.BLEND_CONSTANTS=4]="BLEND_CONSTANTS",e[e.DEPTH_BOUNDS=8]="DEPTH_BOUNDS",e[e.STENCIL_WRITE_MASK=16]="STENCIL_WRITE_MASK",e[e.STENCIL_COMPARE_MASK=32]="STENCIL_COMPARE_MASK"}(Di||(Di={})),function(e){e[e.FRONT=1]="FRONT",e[e.BACK=2]="BACK",e[e.ALL=3]="ALL"}(Oi||(Oi={})),function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.UNIFORM_BUFFER=1]="UNIFORM_BUFFER",e[e.DYNAMIC_UNIFORM_BUFFER=2]="DYNAMIC_UNIFORM_BUFFER",e[e.STORAGE_BUFFER=4]="STORAGE_BUFFER",e[e.DYNAMIC_STORAGE_BUFFER=8]="DYNAMIC_STORAGE_BUFFER",e[e.SAMPLER_TEXTURE=16]="SAMPLER_TEXTURE",e[e.SAMPLER=32]="SAMPLER",e[e.TEXTURE=64]="TEXTURE",e[e.STORAGE_IMAGE=128]="STORAGE_IMAGE",e[e.INPUT_ATTACHMENT=256]="INPUT_ATTACHMENT"}(Ni||(Ni={})),function(e){e[e.GRAPHICS=0]="GRAPHICS",e[e.COMPUTE=1]="COMPUTE",e[e.TRANSFER=2]="TRANSFER"}(Mi||(Mi={})),function(e){e[e.OCCLUSION=0]="OCCLUSION",e[e.PIPELINE_STATISTICS=1]="PIPELINE_STATISTICS",e[e.TIMESTAMP=2]="TIMESTAMP"}(Li||(Li={})),function(e){e[e.PRIMARY=0]="PRIMARY",e[e.SECONDARY=1]="SECONDARY"}(Bi||(Bi={})),function(e){e[e.NONE=0]="NONE",e[e.COLOR=1]="COLOR",e[e.DEPTH=2]="DEPTH",e[e.STENCIL=4]="STENCIL",e[e.DEPTH_STENCIL=6]="DEPTH_STENCIL",e[e.ALL=7]="ALL"}(Fi||(Fi={}));class Ui{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}}class Gi{constructor(e=0,t=0,n=0,i=0,s=0,o=0,r=0,a=0,c=0,l=0,h=0,u=0,_=0,d=1,p=0,f=0,m=new Ui,g=new Ui,v=!1,y=-1,x=1,S=1){this.maxVertexAttributes=e,this.maxVertexUniformVectors=t,this.maxFragmentUniformVectors=n,this.maxTextureUnits=i,this.maxImageUnits=s,this.maxVertexTextureUnits=o,this.maxColorRenderTargets=r,this.maxShaderStorageBufferBindings=a,this.maxShaderStorageBlockSize=c,this.maxUniformBufferBindings=l,this.maxUniformBlockSize=h,this.maxTextureSize=u,this.maxCubeMapTextureSize=_,this.uboOffsetAlignment=d,this.maxComputeSharedMemorySize=p,this.maxComputeWorkGroupInvocations=f,this.maxComputeWorkGroupSize=m,this.maxComputeWorkGroupCount=g,this.supportQuery=v,this.clipSpaceMinZ=y,this.screenSpaceSignY=x,this.clipSpaceSignY=S}copy(e){return this.maxVertexAttributes=e.maxVertexAttributes,this.maxVertexUniformVectors=e.maxVertexUniformVectors,this.maxFragmentUniformVectors=e.maxFragmentUniformVectors,this.maxTextureUnits=e.maxTextureUnits,this.maxImageUnits=e.maxImageUnits,this.maxVertexTextureUnits=e.maxVertexTextureUnits,this.maxColorRenderTargets=e.maxColorRenderTargets,this.maxShaderStorageBufferBindings=e.maxShaderStorageBufferBindings,this.maxShaderStorageBlockSize=e.maxShaderStorageBlockSize,this.maxUniformBufferBindings=e.maxUniformBufferBindings,this.maxUniformBlockSize=e.maxUniformBlockSize,this.maxTextureSize=e.maxTextureSize,this.maxCubeMapTextureSize=e.maxCubeMapTextureSize,this.uboOffsetAlignment=e.uboOffsetAlignment,this.maxComputeSharedMemorySize=e.maxComputeSharedMemorySize,this.maxComputeWorkGroupInvocations=e.maxComputeWorkGroupInvocations,this.maxComputeWorkGroupSize.copy(e.maxComputeWorkGroupSize),this.maxComputeWorkGroupCount.copy(e.maxComputeWorkGroupCount),this.supportQuery=e.supportQuery,this.clipSpaceMinZ=e.clipSpaceMinZ,this.screenSpaceSignY=e.screenSpaceSignY,this.clipSpaceSignY=e.clipSpaceSignY,this}}class Vi{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}}class Hi{constructor(e=0,t=0,n=0,i=0){this.x=e,this.y=t,this.width=n,this.height=i}copy(e){return this.x=e.x,this.y=e.y,this.width=e.width,this.height=e.height,this}}class ki{constructor(e=0,t=0,n=1){this.width=e,this.height=t,this.depth=n}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this}}class ji{constructor(e=0,t=0,n=1){this.mipLevel=e,this.baseArrayLayer=t,this.layerCount=n}copy(e){return this.mipLevel=e.mipLevel,this.baseArrayLayer=e.baseArrayLayer,this.layerCount=e.layerCount,this}}class Wi{constructor(e=0,t=1,n=0,i=1){this.baseMipLevel=e,this.levelCount=t,this.baseArrayLayer=n,this.layerCount=i}copy(e){return this.baseMipLevel=e.baseMipLevel,this.levelCount=e.levelCount,this.baseArrayLayer=e.baseArrayLayer,this.layerCount=e.layerCount,this}}class qi{constructor(e=new ji,t=new Vi,n=new ji,i=new Vi,s=new ki){this.srcSubres=e,this.srcOffset=t,this.dstSubres=n,this.dstOffset=i,this.extent=s}copy(e){return this.srcSubres.copy(e.srcSubres),this.srcOffset.copy(e.srcOffset),this.dstSubres.copy(e.dstSubres),this.dstOffset.copy(e.dstOffset),this.extent.copy(e.extent),this}}class Xi{constructor(e=new ji,t=new Vi,n=new ki,i=new ji,s=new Vi,o=new ki){this.srcSubres=e,this.srcOffset=t,this.srcExtent=n,this.dstSubres=i,this.dstOffset=s,this.dstExtent=o}copy(e){return this.srcSubres.copy(e.srcSubres),this.srcOffset.copy(e.srcOffset),this.srcExtent.copy(e.srcExtent),this.dstSubres.copy(e.dstSubres),this.dstOffset.copy(e.dstOffset),this.dstExtent.copy(e.dstExtent),this}}class Yi{constructor(e=0,t=0,n=new Vi,i=new ki,s=new ji){this.buffStride=e,this.buffTexHeight=t,this.texOffset=n,this.texExtent=i,this.texSubres=s}copy(e){return this.buffStride=e.buffStride,this.buffTexHeight=e.buffTexHeight,this.texOffset.copy(e.texOffset),this.texExtent.copy(e.texExtent),this.texSubres.copy(e.texSubres),this}}class Ki{constructor(e=0,t=0,n=0,i=0,s=0,o=1){this.left=e,this.top=t,this.width=n,this.height=i,this.minDepth=s,this.maxDepth=o}copy(e){return this.left=e.left,this.top=e.top,this.width=e.width,this.height=e.height,this.minDepth=e.minDepth,this.maxDepth=e.maxDepth,this}}class $i{constructor(e=0,t=0,n=0,i=0){this.x=e,this.y=t,this.z=n,this.w=i}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}}class Qi{constructor(e=[0],t=[0],n=[0],i=[0],s=[0],o=[0],r=[0],a=[0]){this.maxBlockCounts=e,this.maxSamplerTextureCounts=t,this.maxSamplerCounts=n,this.maxTextureCounts=i,this.maxBufferCounts=s,this.maxImageCounts=o,this.maxSubpassInputCounts=r,this.setIndices=a}copy(e){return this.maxBlockCounts=e.maxBlockCounts.slice(),this.maxSamplerTextureCounts=e.maxSamplerTextureCounts.slice(),this.maxSamplerCounts=e.maxSamplerCounts.slice(),this.maxTextureCounts=e.maxTextureCounts.slice(),this.maxBufferCounts=e.maxBufferCounts.slice(),this.maxImageCounts=e.maxImageCounts.slice(),this.maxSubpassInputCounts=e.maxSubpassInputCounts.slice(),this.setIndices=e.setIndices.slice(),this}}class Ji{constructor(e=null,t=di.ON,n=0,i=0){this.windowHandle=e,this.vsyncMode=t,this.width=n,this.height=i}copy(e){return this.windowHandle=e.windowHandle,this.vsyncMode=e.vsyncMode,this.width=e.width,this.height=e.height,this}}class Zi{constructor(e=new Qi){this.bindingMappingInfo=e}copy(e){return this.bindingMappingInfo.copy(e.bindingMappingInfo),this}}class es{constructor(e=si.NONE,t=ai.NONE,n=0,i=1,s=oi.NONE){this.usage=e,this.memUsage=t,this.size=n,this.stride=i,this.flags=s}copy(e){return this.usage=e.usage,this.memUsage=e.memUsage,this.size=e.size,this.stride=e.stride,this.flags=e.flags,this}}class ts{constructor(e=null,t=0,n=0){this.buffer=e,this.offset=t,this.range=n}copy(e){return this.buffer=e.buffer,this.offset=e.offset,this.range=e.range,this}}class is{constructor(e=0,t=0,n=0,i=0,s=0,o=0,r=0){this.vertexCount=e,this.firstVertex=t,this.indexCount=n,this.firstIndex=i,this.vertexOffset=s,this.instanceCount=o,this.firstInstance=r}copy(e){return this.vertexCount=e.vertexCount,this.firstVertex=e.firstVertex,this.indexCount=e.indexCount,this.firstIndex=e.firstIndex,this.vertexOffset=e.vertexOffset,this.instanceCount=e.instanceCount,this.firstInstance=e.firstInstance,this}}class ss{constructor(e=0,t=0,n=0,i=null,s=0){this.groupCountX=e,this.groupCountY=t,this.groupCountZ=n,this.indirectBuffer=i,this.indirectOffset=s}copy(e){return this.groupCountX=e.groupCountX,this.groupCountY=e.groupCountY,this.groupCountZ=e.groupCountZ,this.indirectBuffer=e.indirectBuffer,this.indirectOffset=e.indirectOffset,this}}class os{constructor(e=[]){this.drawInfos=e}copy(e){return Kn(this.drawInfos,e.drawInfos,is),this}}class rs{constructor(e=ci.TEX2D,t=li.NONE,n=ti.UNKNOWN,i=0,s=0,o=hi.NONE,r=1,a=1,c=_i.ONE,l=1,h=0){this.type=e,this.usage=t,this.format=n,this.width=i,this.height=s,this.flags=o,this.layerCount=r,this.levelCount=a,this.samples=c,this.depth=l,this.externalRes=h}copy(e){return this.type=e.type,this.usage=e.usage,this.format=e.format,this.width=e.width,this.height=e.height,this.flags=e.flags,this.layerCount=e.layerCount,this.levelCount=e.levelCount,this.samples=e.samples,this.depth=e.depth,this.externalRes=e.externalRes,this}}class as{constructor(e=null,t=ci.TEX2D,n=ti.UNKNOWN,i=0,s=1,o=0,r=1){this.texture=e,this.type=t,this.format=n,this.baseLevel=i,this.levelCount=s,this.baseLayer=o,this.layerCount=r}copy(e){return this.texture=e.texture,this.type=e.type,this.format=e.format,this.baseLevel=e.baseLevel,this.levelCount=e.levelCount,this.baseLayer=e.baseLayer,this.layerCount=e.layerCount,this}}class cs{constructor(e=pi.LINEAR,t=pi.LINEAR,n=pi.NONE,i=fi.WRAP,s=fi.WRAP,o=fi.WRAP,r=0,a=mi.ALWAYS){this.minFilter=e,this.magFilter=t,this.mipFilter=n,this.addressU=i,this.addressV=s,this.addressW=o,this.maxAnisotropy=r,this.cmpFunc=a}copy(e){return this.minFilter=e.minFilter,this.magFilter=e.magFilter,this.mipFilter=e.mipFilter,this.addressU=e.addressU,this.addressV=e.addressV,this.addressW=e.addressW,this.maxAnisotropy=e.maxAnisotropy,this.cmpFunc=e.cmpFunc,this}}class ls{constructor(e="",t=ii.UNKNOWN,n=0){this.name=e,this.type=t,this.count=n}copy(e){return this.name=e.name,this.type=e.type,this.count=e.count,this}}class hs{constructor(e=0,t=0,n="",i=[],s=0){this.set=e,this.binding=t,this.name=n,this.members=i,this.count=s}copy(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,Kn(this.members,e.members,ls),this.count=e.count,this}}class us{constructor(e=0,t=0,n="",i=ii.UNKNOWN,s=0){this.set=e,this.binding=t,this.name=n,this.type=i,this.count=s}copy(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this}}class _s{constructor(e=0,t=0,n="",i=0){this.set=e,this.binding=t,this.name=n,this.count=i}copy(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this}}class ds{constructor(e=0,t=0,n="",i=ii.UNKNOWN,s=0){this.set=e,this.binding=t,this.name=n,this.type=i,this.count=s}copy(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this}}class ps{constructor(e=0,t=0,n="",i=ii.UNKNOWN,s=0,o=ri.READ_WRITE){this.set=e,this.binding=t,this.name=n,this.type=i,this.count=s,this.memoryAccess=o}copy(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.type=e.type,this.count=e.count,this.memoryAccess=e.memoryAccess,this}}class fs{constructor(e=0,t=0,n="",i=0,s=ri.READ_WRITE){this.set=e,this.binding=t,this.name=n,this.count=i,this.memoryAccess=s}copy(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this.memoryAccess=e.memoryAccess,this}}class ms{constructor(e=0,t=0,n="",i=0){this.set=e,this.binding=t,this.name=n,this.count=i}copy(e){return this.set=e.set,this.binding=e.binding,this.name=e.name,this.count=e.count,this}}class gs{constructor(e=Si.NONE,t=""){this.stage=e,this.source=t}copy(e){return this.stage=e.stage,this.source=e.source,this}}class vs{constructor(e="",t=ti.UNKNOWN,n=!1,i=0,s=!1,o=0){this.name=e,this.format=t,this.isNormalized=n,this.stream=i,this.isInstanced=s,this.location=o}copy(e){return this.name=e.name,this.format=e.format,this.isNormalized=e.isNormalized,this.stream=e.stream,this.isInstanced=e.isInstanced,this.location=e.location,this}}class ys{constructor(e="",t=[],n=[],i=[],s=[],o=[],r=[],a=[],c=[],l=[]){this.name=e,this.stages=t,this.attributes=n,this.blocks=i,this.buffers=s,this.samplerTextures=o,this.samplers=r,this.textures=a,this.images=c,this.subpassInputs=l}copy(e){return this.name=e.name,Kn(this.stages,e.stages,gs),Kn(this.attributes,e.attributes,vs),Kn(this.blocks,e.blocks,hs),Kn(this.buffers,e.buffers,fs),Kn(this.samplerTextures,e.samplerTextures,us),Kn(this.samplers,e.samplers,_s),Kn(this.textures,e.textures,ds),Kn(this.images,e.images,ps),Kn(this.subpassInputs,e.subpassInputs,ms),this}}class xs{constructor(e=[],t=[],n=null,i=null){this.attributes=e,this.vertexBuffers=t,this.indexBuffer=n,this.indirectBuffer=i}copy(e){return Kn(this.attributes,e.attributes,vs),this.vertexBuffers=e.vertexBuffers.slice(),this.indexBuffer=e.indexBuffer,this.indirectBuffer=e.indirectBuffer,this}}class Ss{constructor(e=ti.UNKNOWN,t=_i.ONE,n=Ci.CLEAR,i=Ei.STORE,s=null,o=!1){this.format=e,this.sampleCount=t,this.loadOp=n,this.storeOp=i,this.barrier=s,this.isGeneralLayout=o}copy(e){return this.format=e.format,this.sampleCount=e.sampleCount,this.loadOp=e.loadOp,this.storeOp=e.storeOp,this.barrier=e.barrier,this.isGeneralLayout=e.isGeneralLayout,this}}class Cs{constructor(e=ti.UNKNOWN,t=_i.ONE,n=Ci.CLEAR,i=Ei.STORE,s=Ci.CLEAR,o=Ei.STORE,r=null,a=!1){this.format=e,this.sampleCount=t,this.depthLoadOp=n,this.depthStoreOp=i,this.stencilLoadOp=s,this.stencilStoreOp=o,this.barrier=r,this.isGeneralLayout=a}copy(e){return this.format=e.format,this.sampleCount=e.sampleCount,this.depthLoadOp=e.depthLoadOp,this.depthStoreOp=e.depthStoreOp,this.stencilLoadOp=e.stencilLoadOp,this.stencilStoreOp=e.stencilStoreOp,this.barrier=e.barrier,this.isGeneralLayout=e.isGeneralLayout,this}}class Es{constructor(e=[],t=[],n=[],i=[],s=-1,o=-1,r=bi.NONE,a=bi.NONE){this.inputs=e,this.colors=t,this.resolves=n,this.preserves=i,this.depthStencil=s,this.depthStencilResolve=o,this.depthResolveMode=r,this.stencilResolveMode=a}copy(e){return this.inputs=e.inputs.slice(),this.colors=e.colors.slice(),this.resolves=e.resolves.slice(),this.preserves=e.preserves.slice(),this.depthStencil=e.depthStencil,this.depthStencilResolve=e.depthStencilResolve,this.depthResolveMode=e.depthResolveMode,this.stencilResolveMode=e.stencilResolveMode,this}}class Ts{constructor(e=0,t=0,n=null){this.srcSubpass=e,this.dstSubpass=t,this.barrier=n}copy(e){return this.srcSubpass=e.srcSubpass,this.dstSubpass=e.dstSubpass,this.barrier=e.barrier,this}}class bs{constructor(e=[],t=new Cs,n=[],i=[]){this.colorAttachments=e,this.depthStencilAttachment=t,this.subpasses=n,this.dependencies=i}copy(e){return Kn(this.colorAttachments,e.colorAttachments,Ss),this.depthStencilAttachment.copy(e.depthStencilAttachment),Kn(this.subpasses,e.subpasses,Es),Kn(this.dependencies,e.dependencies,Ts),this}}class As{constructor(e=Ti.NONE,t=Ti.NONE){this.prevAccesses=e,this.nextAccesses=t}copy(e){return this.prevAccesses=e.prevAccesses,this.nextAccesses=e.nextAccesses,this}}class Ps{constructor(e=Ti.NONE,t=Ti.NONE,n=!1,i=null,s=null){this.prevAccesses=e,this.nextAccesses=t,this.discardContents=n,this.srcQueue=i,this.dstQueue=s}copy(e){return this.prevAccesses=e.prevAccesses,this.nextAccesses=e.nextAccesses,this.discardContents=e.discardContents,this.srcQueue=e.srcQueue,this.dstQueue=e.dstQueue,this}}class ws{constructor(e=null,t=[],n=null){this.renderPass=e,this.colorTextures=t,this.depthStencilTexture=n}copy(e){return this.renderPass=e.renderPass,this.colorTextures=e.colorTextures.slice(),this.depthStencilTexture=e.depthStencilTexture,this}}class Is{constructor(e=-1,t=Ni.UNKNOWN,n=0,i=Si.NONE,s=[]){this.binding=e,this.descriptorType=t,this.count=n,this.stageFlags=i,this.immutableSamplers=s}copy(e){return this.binding=e.binding,this.descriptorType=e.descriptorType,this.count=e.count,this.stageFlags=e.stageFlags,this.immutableSamplers=e.immutableSamplers.slice(),this}}class Rs{constructor(e=[]){this.bindings=e}copy(e){return Kn(this.bindings,e.bindings,Is),this}}class Ds{constructor(e=null){this.layout=e}copy(e){return this.layout=e.layout,this}}class Os{constructor(e=[]){this.setLayouts=e}copy(e){return this.setLayouts=e.setLayouts.slice(),this}}class Ns{constructor(e=[]){this.attributes=e}copy(e){return Kn(this.attributes,e.attributes,vs),this}}class Ms{constructor(e=null,t=Bi.PRIMARY){this.queue=e,this.type=t}copy(e){return this.queue=e.queue,this.type=e.type,this}}class Ls{constructor(e=Mi.GRAPHICS){this.type=e}copy(e){return this.type=e.type,this}}class Bs{constructor(e=Li.OCCLUSION,t=32767,n=!0){this.type=e,this.maxQueryObjects=t,this.forceWait=n}copy(e){return this.type=e.type,this.maxQueryObjects=e.maxQueryObjects,this.forceWait=e.forceWait,this}}class Fs{constructor(e="",t=0,n=0,i=ni.NONE,s=!1,o=!1,r=!1,a=!1){this.name=e,this.size=t,this.count=n,this.type=i,this.hasAlpha=s,this.hasDepth=o,this.hasStencil=r,this.isCompressed=a}}class zs{constructor(e=0,t=0){this.bufferSize=e,this.textureSize=t}copy(e){return this.bufferSize=e.bufferSize,this.textureSize=e.textureSize,this}}class Us{constructor(e=0,t=0,n=0){this.writeMask=e,this.compareMask=t,this.reference=n}copy(e){return this.writeMask=e.writeMask,this.compareMask=e.compareMask,this.reference=e.reference,this}}class Gs{constructor(e=new Ki,t=new Hi,n=new $i,i=1,s=0,o=0,r=0,a=0,c=0,l=new Us,h=new Us){this.viewport=e,this.scissor=t,this.blendConstant=n,this.lineWidth=i,this.depthBiasConstant=s,this.depthBiasClamp=o,this.depthBiasSlope=r,this.depthMinBounds=a,this.depthMaxBounds=c,this.stencilStatesFront=l,this.stencilStatesBack=h}copy(e){return this.viewport.copy(e.viewport),this.scissor.copy(e.scissor),this.blendConstant.copy(e.blendConstant),this.lineWidth=e.lineWidth,this.depthBiasConstant=e.depthBiasConstant,this.depthBiasClamp=e.depthBiasClamp,this.depthBiasSlope=e.depthBiasSlope,this.depthMinBounds=e.depthMinBounds,this.depthMaxBounds=e.depthMaxBounds,this.stencilStatesFront.copy(e.stencilStatesFront),this.stencilStatesBack.copy(e.stencilStatesBack),this}}class Vs extends class{constructor(){return Yn.registerGCObject(this)}destroy(){}}{get objectType(){return this._objectType}get objectID(){return this._objectID}get typedID(){return this._typedID}constructor(e){super(),this._objectType=$n.UNKNOWN,this._objectID=0,this._typedID=0,this._objectType=e,this._objectID=Vs._idTable[$n.UNKNOWN]++,this._typedID=Vs._idTable[e]++}}Vs._idTable=Array($n.COUNT).fill(65536),function(e){e.ATTR_POSITION="a_position",e.ATTR_NORMAL="a_normal",e.ATTR_TANGENT="a_tangent",e.ATTR_BITANGENT="a_bitangent",e.ATTR_WEIGHTS="a_weights",e.ATTR_JOINTS="a_joints",e.ATTR_COLOR="a_color",e.ATTR_COLOR1="a_color1",e.ATTR_COLOR2="a_color2",e.ATTR_TEX_COORD="a_texCoord",e.ATTR_TEX_COORD1="a_texCoord1",e.ATTR_TEX_COORD2="a_texCoord2",e.ATTR_TEX_COORD3="a_texCoord3",e.ATTR_TEX_COORD4="a_texCoord4",e.ATTR_TEX_COORD5="a_texCoord5",e.ATTR_TEX_COORD6="a_texCoord6",e.ATTR_TEX_COORD7="a_texCoord7",e.ATTR_TEX_COORD8="a_texCoord8",e.ATTR_BATCH_ID="a_batch_id",e.ATTR_BATCH_UV="a_batch_uv"}(zi||(zi={}));const Hs=Object.freeze([new Fs("UNKNOWN",0,0,ni.NONE,!1,!1,!1,!1),new Fs("A8",1,1,ni.UNORM,!0,!1,!1,!1),new Fs("L8",1,1,ni.UNORM,!1,!1,!1,!1),new Fs("LA8",1,2,ni.UNORM,!0,!1,!1,!1),new Fs("R8",1,1,ni.UNORM,!1,!1,!1,!1),new Fs("R8SN",1,1,ni.SNORM,!1,!1,!1,!1),new Fs("R8UI",1,1,ni.UINT,!1,!1,!1,!1),new Fs("R8I",1,1,ni.INT,!1,!1,!1,!1),new Fs("R16F",2,1,ni.FLOAT,!1,!1,!1,!1),new Fs("R16UI",2,1,ni.UINT,!1,!1,!1,!1),new Fs("R16I",2,1,ni.INT,!1,!1,!1,!1),new Fs("R32F",4,1,ni.FLOAT,!1,!1,!1,!1),new Fs("R32UI",4,1,ni.UINT,!1,!1,!1,!1),new Fs("R32I",4,1,ni.INT,!1,!1,!1,!1),new Fs("RG8",2,2,ni.UNORM,!1,!1,!1,!1),new Fs("RG8SN",2,2,ni.SNORM,!1,!1,!1,!1),new Fs("RG8UI",2,2,ni.UINT,!1,!1,!1,!1),new Fs("RG8I",2,2,ni.INT,!1,!1,!1,!1),new Fs("RG16F",4,2,ni.FLOAT,!1,!1,!1,!1),new Fs("RG16UI",4,2,ni.UINT,!1,!1,!1,!1),new Fs("RG16I",4,2,ni.INT,!1,!1,!1,!1),new Fs("RG32F",8,2,ni.FLOAT,!1,!1,!1,!1),new Fs("RG32UI",8,2,ni.UINT,!1,!1,!1,!1),new Fs("RG32I",8,2,ni.INT,!1,!1,!1,!1),new Fs("RGB8",3,3,ni.UNORM,!1,!1,!1,!1),new Fs("SRGB8",3,3,ni.UNORM,!1,!1,!1,!1),new Fs("RGB8SN",3,3,ni.SNORM,!1,!1,!1,!1),new Fs("RGB8UI",3,3,ni.UINT,!1,!1,!1,!1),new Fs("RGB8I",3,3,ni.INT,!1,!1,!1,!1),new Fs("RGB16F",6,3,ni.FLOAT,!1,!1,!1,!1),new Fs("RGB16UI",6,3,ni.UINT,!1,!1,!1,!1),new Fs("RGB16I",6,3,ni.INT,!1,!1,!1,!1),new Fs("RGB32F",12,3,ni.FLOAT,!1,!1,!1,!1),new Fs("RGB32UI",12,3,ni.UINT,!1,!1,!1,!1),new Fs("RGB32I",12,3,ni.INT,!1,!1,!1,!1),new Fs("RGBA8",4,4,ni.UNORM,!0,!1,!1,!1),new Fs("BGRA8",4,4,ni.UNORM,!0,!1,!1,!1),new Fs("SRGB8_A8",4,4,ni.UNORM,!0,!1,!1,!1),new Fs("RGBA8SN",4,4,ni.SNORM,!0,!1,!1,!1),new Fs("RGBA8UI",4,4,ni.UINT,!0,!1,!1,!1),new Fs("RGBA8I",4,4,ni.INT,!0,!1,!1,!1),new Fs("RGBA16F",8,4,ni.FLOAT,!0,!1,!1,!1),new Fs("RGBA16UI",8,4,ni.UINT,!0,!1,!1,!1),new Fs("RGBA16I",8,4,ni.INT,!0,!1,!1,!1),new Fs("RGBA32F",16,4,ni.FLOAT,!0,!1,!1,!1),new Fs("RGBA32UI",16,4,ni.UINT,!0,!1,!1,!1),new Fs("RGBA32I",16,4,ni.INT,!0,!1,!1,!1),new Fs("R5G6B5",2,3,ni.UNORM,!1,!1,!1,!1),new Fs("R11G11B10F",4,3,ni.FLOAT,!1,!1,!1,!1),new Fs("RGB5A1",2,4,ni.UNORM,!0,!1,!1,!1),new Fs("RGBA4",2,4,ni.UNORM,!0,!1,!1,!1),new Fs("RGB10A2",2,4,ni.UNORM,!0,!1,!1,!1),new Fs("RGB10A2UI",2,4,ni.UINT,!0,!1,!1,!1),new Fs("RGB9E5",2,4,ni.FLOAT,!0,!1,!1,!1),new Fs("DEPTH",4,1,ni.FLOAT,!1,!0,!1,!1),new Fs("DEPTH_STENCIL",5,2,ni.FLOAT,!1,!0,!0,!1),new Fs("BC1",1,3,ni.UNORM,!1,!1,!1,!0),new Fs("BC1_ALPHA",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("BC1_SRGB",1,3,ni.UNORM,!1,!1,!1,!0),new Fs("BC1_SRGB_ALPHA",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("BC2",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("BC2_SRGB",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("BC3",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("BC3_SRGB",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("BC4",1,1,ni.UNORM,!1,!1,!1,!0),new Fs("BC4_SNORM",1,1,ni.SNORM,!1,!1,!1,!0),new Fs("BC5",1,2,ni.UNORM,!1,!1,!1,!0),new Fs("BC5_SNORM",1,2,ni.SNORM,!1,!1,!1,!0),new Fs("BC6H_UF16",1,3,ni.UFLOAT,!1,!1,!1,!0),new Fs("BC6H_SF16",1,3,ni.FLOAT,!1,!1,!1,!0),new Fs("BC7",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("BC7_SRGB",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ETC_RGB8",1,3,ni.UNORM,!1,!1,!1,!0),new Fs("ETC2_RGB8",1,3,ni.UNORM,!1,!1,!1,!0),new Fs("ETC2_SRGB8",1,3,ni.UNORM,!1,!1,!1,!0),new Fs("ETC2_RGB8_A1",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ETC2_SRGB8_A1",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ETC2_RGBA8",2,4,ni.UNORM,!0,!1,!1,!0),new Fs("ETC2_SRGB8_A8",2,4,ni.UNORM,!0,!1,!1,!0),new Fs("EAC_R11",1,1,ni.UNORM,!1,!1,!1,!0),new Fs("EAC_R11SN",1,1,ni.SNORM,!1,!1,!1,!0),new Fs("EAC_RG11",2,2,ni.UNORM,!1,!1,!1,!0),new Fs("EAC_RG11SN",2,2,ni.SNORM,!1,!1,!1,!0),new Fs("PVRTC_RGB2",2,3,ni.UNORM,!1,!1,!1,!0),new Fs("PVRTC_RGBA2",2,4,ni.UNORM,!0,!1,!1,!0),new Fs("PVRTC_RGB4",2,3,ni.UNORM,!1,!1,!1,!0),new Fs("PVRTC_RGBA4",2,4,ni.UNORM,!0,!1,!1,!0),new Fs("PVRTC2_2BPP",2,4,ni.UNORM,!0,!1,!1,!0),new Fs("PVRTC2_4BPP",2,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_RGBA_4x4",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_RGBA_5x4",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_RGBA_5x5",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_RGBA_6x5",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_RGBA_6x6",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_RGBA_8x5",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_RGBA_8x6",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_RGBA_8x8",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_RGBA_10x5",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_RGBA_10x6",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_RGBA_10x8",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_RGBA_10x10",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_RGBA_12x10",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_RGBA_12x12",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_SRGBA_4x4",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_SRGBA_5x4",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_SRGBA_5x5",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_SRGBA_6x5",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_SRGBA_6x6",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_SRGBA_8x5",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_SRGBA_8x6",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_SRGBA_8x8",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_SRGBA_10x5",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_SRGBA_10x6",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_SRGBA_10x8",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_SRGBA_10x10",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_SRGBA_12x10",1,4,ni.UNORM,!0,!1,!1,!0),new Fs("ASTC_SRGBA_12x12",1,4,ni.UNORM,!0,!1,!1,!0)]),ks=Ni.UNIFORM_BUFFER|Ni.DYNAMIC_UNIFORM_BUFFER|Ni.STORAGE_BUFFER|Ni.DYNAMIC_STORAGE_BUFFER,js=Ni.SAMPLER_TEXTURE|Ni.SAMPLER|Ni.TEXTURE|Ni.STORAGE_IMAGE|Ni.INPUT_ATTACHMENT,Ws=Ni.DYNAMIC_STORAGE_BUFFER|Ni.DYNAMIC_UNIFORM_BUFFER,qs=28;function Xs(e){return e>0&&0==(e&e-1)}function Ys(e,t,n,i){if(!Hs[e].isCompressed)return t*n*i*Hs[e].size;switch(e){case ti.BC1:case ti.BC1_ALPHA:case ti.BC1_SRGB:case ti.BC1_SRGB_ALPHA:return Math.ceil(t/4)*Math.ceil(n/4)*8*i;case ti.BC2:case ti.BC2_SRGB:case ti.BC3:case ti.BC3_SRGB:case ti.BC4:case ti.BC4_SNORM:case ti.BC6H_SF16:case ti.BC6H_UF16:case ti.BC7:case ti.BC7_SRGB:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case ti.BC5:case ti.BC5_SNORM:return Math.ceil(t/4)*Math.ceil(n/4)*32*i;case ti.ETC_RGB8:case ti.ETC2_RGB8:case ti.ETC2_SRGB8:case ti.ETC2_RGB8_A1:case ti.EAC_R11:case ti.EAC_R11SN:return Math.ceil(t/4)*Math.ceil(n/4)*8*i;case ti.ETC2_RGBA8:case ti.ETC2_SRGB8_A1:case ti.EAC_RG11:case ti.EAC_RG11SN:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case ti.PVRTC_RGB2:case ti.PVRTC_RGBA2:case ti.PVRTC2_2BPP:return Math.ceil(Math.max(t,16)*Math.max(n,8)/4)*i;case ti.PVRTC_RGB4:case ti.PVRTC_RGBA4:case ti.PVRTC2_4BPP:return Math.ceil(Math.max(t,8)*Math.max(n,8)/2)*i;case ti.ASTC_RGBA_4X4:case ti.ASTC_SRGBA_4X4:return Math.ceil(t/4)*Math.ceil(n/4)*16*i;case ti.ASTC_RGBA_5X4:case ti.ASTC_SRGBA_5X4:return Math.ceil(t/5)*Math.ceil(n/4)*16*i;case ti.ASTC_RGBA_5X5:case ti.ASTC_SRGBA_5X5:return Math.ceil(t/5)*Math.ceil(n/5)*16*i;case ti.ASTC_RGBA_6X5:case ti.ASTC_SRGBA_6X5:return Math.ceil(t/6)*Math.ceil(n/5)*16*i;case ti.ASTC_RGBA_6X6:case ti.ASTC_SRGBA_6X6:return Math.ceil(t/6)*Math.ceil(n/6)*16*i;case ti.ASTC_RGBA_8X5:case ti.ASTC_SRGBA_8X5:return Math.ceil(t/8)*Math.ceil(n/5)*16*i;case ti.ASTC_RGBA_8X6:case ti.ASTC_SRGBA_8X6:return Math.ceil(t/8)*Math.ceil(n/6)*16*i;case ti.ASTC_RGBA_8X8:case ti.ASTC_SRGBA_8X8:return Math.ceil(t/8)*Math.ceil(n/8)*16*i;case ti.ASTC_RGBA_10X5:case ti.ASTC_SRGBA_10X5:return Math.ceil(t/10)*Math.ceil(n/5)*16*i;case ti.ASTC_RGBA_10X6:case ti.ASTC_SRGBA_10X6:return Math.ceil(t/10)*Math.ceil(n/6)*16*i;case ti.ASTC_RGBA_10X8:case ti.ASTC_SRGBA_10X8:return Math.ceil(t/10)*Math.ceil(n/8)*16*i;case ti.ASTC_RGBA_10X10:case ti.ASTC_SRGBA_10X10:return Math.ceil(t/10)*Math.ceil(n/10)*16*i;case ti.ASTC_RGBA_12X10:case ti.ASTC_SRGBA_12X10:return Math.ceil(t/12)*Math.ceil(n/10)*16*i;case ti.ASTC_RGBA_12X12:case ti.ASTC_SRGBA_12X12:return Math.ceil(t/12)*Math.ceil(n/12)*16*i;default:return 0}}function Ks(e,t,n,i,s){let o=0;for(let r=0;r<s;++r)o+=Ys(e,t,n,i),t=Math.max(t>>1,1),n=Math.max(n>>1,1);return o}const $s=[0,4,8,12,16,4,8,12,16,4,8,12,16,4,8,12,16,16,24,32,24,36,48,32,48,64,4,4,4,4,4,4];function Qs(e){return $s[e]||0}function Js(e){const t=e.size/e.count;switch(e.type){case ni.UNORM:case ni.UINT:switch(t){case 1:return Uint8Array;case 2:return Uint16Array;case 4:return Uint32Array}break;case ni.SNORM:case ni.INT:switch(t){case 1:return Int8Array;case 2:return Int16Array;case 4:return Int32Array}break;case ni.FLOAT:return Float32Array}return Float32Array}var Zs=Object.freeze({__proto__:null,get ObjectType(){return $n},get Status(){return Qn},get API(){return Jn},get SurfaceTransform(){return Zn},get Feature(){return ei},get Format(){return ti},get FormatType(){return ni},get Type(){return ii},get BufferUsageBit(){return si},get BufferFlagBit(){return oi},get MemoryAccessBit(){return ri},get MemoryUsageBit(){return ai},get TextureType(){return ci},get TextureUsageBit(){return li},get TextureFlagBit(){return hi},get FormatFeatureBit(){return ui},get SampleCount(){return _i},get VsyncMode(){return di},get Filter(){return pi},get Address(){return fi},get ComparisonFunc(){return mi},get StencilOp(){return gi},get BlendFactor(){return vi},get BlendOp(){return yi},get ColorMask(){return xi},get ShaderStageFlagBit(){return Si},get LoadOp(){return Ci},get StoreOp(){return Ei},get AccessFlagBit(){return Ti},get ResolveMode(){return bi},get PipelineBindPoint(){return Ai},get PrimitiveMode(){return Pi},get PolygonMode(){return wi},get ShadeModel(){return Ii},get CullMode(){return Ri},get DynamicStateFlagBit(){return Di},get StencilFace(){return Oi},get DescriptorType(){return Ni},get QueueType(){return Mi},get QueryType(){return Li},get CommandBufferType(){return Bi},get ClearFlagBit(){return Fi},Size:Ui,DeviceCaps:Gi,Offset:Vi,Rect:Hi,Extent:ki,TextureSubresLayers:ji,TextureSubresRange:Wi,TextureCopy:qi,TextureBlit:Xi,BufferTextureCopy:Yi,Viewport:Ki,Color:$i,BindingMappingInfo:Qi,SwapchainInfo:Ji,DeviceInfo:Zi,BufferInfo:es,BufferViewInfo:ts,DrawInfo:is,DispatchInfo:ss,IndirectBuffer:os,TextureInfo:rs,TextureViewInfo:as,SamplerInfo:cs,Uniform:ls,UniformBlock:hs,UniformSamplerTexture:us,UniformSampler:_s,UniformTexture:ds,UniformStorageImage:ps,UniformStorageBuffer:fs,UniformInputAttachment:ms,ShaderStage:gs,Attribute:vs,ShaderInfo:ys,InputAssemblerInfo:xs,ColorAttachment:Ss,DepthStencilAttachment:Cs,SubpassInfo:Es,SubpassDependency:Ts,RenderPassInfo:bs,GeneralBarrierInfo:As,TextureBarrierInfo:Ps,FramebufferInfo:ws,DescriptorSetLayoutBinding:Is,DescriptorSetLayoutInfo:Rs,DescriptorSetInfo:Ds,PipelineLayoutInfo:Os,InputState:Ns,CommandBufferInfo:Ms,QueueInfo:Ls,QueryPoolInfo:Bs,FormatInfo:Fs,MemoryStatus:zs,DynamicStencilStates:Us,DynamicStates:Gs,GFXObject:Vs,get AttributeName(){return zi},FormatInfos:Hs,DESCRIPTOR_BUFFER_TYPE:ks,DESCRIPTOR_SAMPLER_TYPE:js,DESCRIPTOR_DYNAMIC_TYPE:Ws,DRAW_INFO_SIZE:qs,IsPowerOf2:Xs,FormatSize:Ys,FormatSurfaceSize:Ks,GetTypeSize:Qs,getTypedArrayConstructor:Js});class eo{constructor(e=!1,t=wi.FILL,n=Ii.GOURAND,i=Ri.BACK,s=!0,o=!1,r=0,a=0,c=0,l=!0,h=!1,u=1){this._nativeObj=void 0,this._isDiscard=!1,this._polygonMode=wi.FILL,this._shadeModel=Ii.GOURAND,this._cullMode=Ri.BACK,this._isFrontFaceCCW=!0,this._depthBiasEnabled=!1,this._depthBias=0,this._depthBiasClamp=0,this._depthBiasSlop=0,this._isDepthClip=!0,this._isMultisample=!1,this._lineWidth=1,this._nativeObj=new gfx.RasterizerState,this.assignProperties(e,t,n,i,s,o,r,a,c,l,h,u)}get native(){return this._nativeObj}get isDiscard(){return this._isDiscard}set isDiscard(e){this._isDiscard=e,this._nativeObj.isDiscard=e}get polygonMode(){return this._polygonMode}set polygonMode(e){this._polygonMode=e,this._nativeObj.polygonMode=e}get shadeModel(){return this._shadeModel}set shadeModel(e){this._shadeModel=e,this._nativeObj.shadeModel=e}get cullMode(){return this._cullMode}set cullMode(e){this._cullMode=e,this._nativeObj.cullMode=e}get isFrontFaceCCW(){return this._isFrontFaceCCW}set isFrontFaceCCW(e){this._isFrontFaceCCW=e,this._nativeObj.isFrontFaceCCW=e}get depthBiasEnabled(){return this._depthBiasEnabled}set depthBiasEnabled(e){this._depthBiasEnabled=e,this._nativeObj.depthBiasEnabled=e}get depthBias(){return this._depthBias}set depthBias(e){this._depthBias=e,this._nativeObj.depthBias=e}get depthBiasClamp(){return this._depthBiasClamp}set depthBiasClamp(e){this._depthBiasClamp=e,this._nativeObj.depthBiasClamp=e}get depthBiasSlop(){return this._depthBiasSlop}set depthBiasSlop(e){this._depthBiasSlop=e,this._nativeObj.depthBiasSlop=e}get isDepthClip(){return this._isDepthClip}set isDepthClip(e){this._isDepthClip=e,this._nativeObj.isDepthClip=e}get isMultisample(){return this._isMultisample}set isMultisample(e){this._isMultisample=e,this._nativeObj.isMultisample=e}get lineWidth(){return this._lineWidth}set lineWidth(e){this._lineWidth=e,this._nativeObj.lineWidth=e}reset(){this.assignProperties(!1,wi.FILL,Ii.GOURAND,Ri.BACK,!0,!1,0,0,0,!0,!1,1)}assign(e){e&&this.assignProperties(e.isDiscard,e.polygonMode,e.shadeModel,e.cullMode,e.isFrontFaceCCW,e.depthBiasEnabled,e.depthBias,e.depthBiasClamp,e.depthBiasSlop,e.isDepthClip,e.isMultisample,e.lineWidth)}destroy(){this._nativeObj=null}assignProperties(e,t,n,i,s,o,r,a,c,l,h,u){void 0!==e&&(this.isDiscard=e),void 0!==t&&(this.polygonMode=t),void 0!==n&&(this.shadeModel=n),void 0!==i&&(this.cullMode=i),void 0!==s&&(this.isFrontFaceCCW=s),void 0!==o&&(this.depthBiasEnabled=o),void 0!==r&&(this.depthBias=r),void 0!==a&&(this.depthBiasClamp=a),void 0!==c&&(this.depthBiasSlop=c),void 0!==l&&(this.isDepthClip=l),void 0!==h&&(this.isMultisample=h),void 0!==u&&(this.lineWidth=u)}}class to{constructor(e=!0,t=!0,n=mi.LESS,i=!1,s=mi.ALWAYS,o=65535,r=65535,a=gi.KEEP,c=gi.KEEP,l=gi.KEEP,h=1,u=!1,_=mi.ALWAYS,d=65535,p=65535,f=gi.KEEP,m=gi.KEEP,g=gi.KEEP,v=1){this._nativeObj=void 0,this._depthTest=!0,this._depthWrite=!0,this._depthFunc=mi.LESS,this._stencilTestFront=!1,this._stencilFuncFront=mi.ALWAYS,this._stencilReadMaskFront=65535,this._stencilWriteMaskFront=65535,this._stencilFailOpFront=gi.KEEP,this._stencilZFailOpFront=gi.KEEP,this._stencilPassOpFront=gi.KEEP,this._stencilRefFront=1,this._stencilTestBack=!1,this._stencilFuncBack=mi.ALWAYS,this._stencilReadMaskBack=65535,this._stencilWriteMaskBack=65535,this._stencilFailOpBack=gi.KEEP,this._stencilZFailOpBack=gi.KEEP,this._stencilPassOpBack=gi.KEEP,this._stencilRefBack=1,this._nativeObj=new gfx.DepthStencilState,this.assignProperties(e,t,n,i,s,o,r,a,c,l,h,u,_,d,p,f,m,g,v)}get native(){return this._nativeObj}get depthTest(){return this._depthTest}set depthTest(e){this._depthTest=e,this._nativeObj.depthTest=e}get depthWrite(){return this._depthWrite}set depthWrite(e){this._depthWrite=e,this._nativeObj.depthWrite=e}get depthFunc(){return this._depthFunc}set depthFunc(e){this._depthFunc=e,this._nativeObj.depthFunc=e}get stencilTestFront(){return this._stencilTestFront}set stencilTestFront(e){this._stencilTestFront=e,this._nativeObj.stencilTestFront=e}get stencilFuncFront(){return this._stencilFuncFront}set stencilFuncFront(e){this._stencilFuncFront=e,this._nativeObj.stencilFuncFront=e}get stencilReadMaskFront(){return this._stencilReadMaskFront}set stencilReadMaskFront(e){this._stencilReadMaskFront=e,this._nativeObj.stencilReadMaskFront=e}get stencilWriteMaskFront(){return this._stencilWriteMaskFront}set stencilWriteMaskFront(e){this._stencilWriteMaskFront=e,this._nativeObj.stencilWriteMaskFront=e}get stencilFailOpFront(){return this._stencilFailOpFront}set stencilFailOpFront(e){this._stencilFailOpFront=e,this._nativeObj.stencilFailOpFront=e}get stencilZFailOpFront(){return this._stencilZFailOpFront}set stencilZFailOpFront(e){this._stencilZFailOpFront=e,this._nativeObj.stencilZFailOpFront=e}get stencilPassOpFront(){return this._stencilPassOpFront}set stencilPassOpFront(e){this._stencilPassOpFront=e,this._nativeObj.stencilPassOpFront=e}get stencilRefFront(){return this._stencilRefFront}set stencilRefFront(e){this._stencilRefFront=e,this._nativeObj.stencilRefFront=e}get stencilTestBack(){return this._stencilTestBack}set stencilTestBack(e){this._stencilTestBack=e,this._nativeObj.stencilTestBack=e}get stencilFuncBack(){return this._stencilFuncBack}set stencilFuncBack(e){this._stencilFuncBack=e,this._nativeObj.stencilFuncBack=e}get stencilReadMaskBack(){return this._stencilReadMaskBack}set stencilReadMaskBack(e){this._stencilReadMaskBack=e,this._nativeObj.stencilReadMaskBack=e}get stencilWriteMaskBack(){return this._stencilWriteMaskBack}set stencilWriteMaskBack(e){this._stencilWriteMaskBack=e,this._nativeObj.stencilWriteMaskBack=e}get stencilFailOpBack(){return this._stencilFailOpBack}set stencilFailOpBack(e){this._stencilFailOpBack=e,this._nativeObj.stencilFailOpBack=e}get stencilZFailOpBack(){return this._stencilZFailOpBack}set stencilZFailOpBack(e){this._stencilZFailOpBack=e,this._nativeObj.stencilZFailOpBack=e}get stencilPassOpBack(){return this._stencilPassOpBack}set stencilPassOpBack(e){this._stencilPassOpBack=e,this._nativeObj.stencilPassOpBack=e}get stencilRefBack(){return this._stencilRefBack}set stencilRefBack(e){this._stencilRefBack=e,this._nativeObj.stencilRefBack=e}reset(){this.assignProperties(!0,!0,mi.LESS,!1,mi.ALWAYS,65535,65535,gi.KEEP,gi.KEEP,gi.KEEP,1,!1,mi.ALWAYS,65535,65535,gi.KEEP,gi.KEEP,gi.KEEP,1)}assign(e){e&&this.assignProperties(e.depthTest,e.depthWrite,e.depthFunc,e.stencilTestFront,e.stencilFuncFront,e.stencilReadMaskFront,e.stencilWriteMaskFront,e.stencilFailOpFront,e.stencilZFailOpFront,e.stencilPassOpFront,e.stencilRefFront,e.stencilTestBack,e.stencilFuncBack,e.stencilReadMaskBack,e.stencilWriteMaskBack,e.stencilFailOpBack,e.stencilZFailOpBack,e.stencilPassOpBack,e.stencilRefBack)}destroy(){this._nativeObj=null}assignProperties(e,t,n,i,s,o,r,a,c,l,h,u,_,d,p,f,m,g,v){void 0!==e&&(this.depthTest=e),void 0!==t&&(this.depthWrite=t),void 0!==n&&(this.depthFunc=n),void 0!==i&&(this.stencilTestFront=i),void 0!==s&&(this.stencilFuncFront=s),void 0!==o&&(this.stencilReadMaskFront=o),void 0!==r&&(this.stencilWriteMaskFront=r),void 0!==a&&(this.stencilFailOpFront=a),void 0!==c&&(this.stencilZFailOpFront=c),void 0!==l&&(this.stencilPassOpFront=l),void 0!==h&&(this.stencilRefFront=h),void 0!==u&&(this.stencilTestBack=u),void 0!==_&&(this.stencilFuncBack=_),void 0!==d&&(this.stencilReadMaskBack=d),void 0!==p&&(this.stencilWriteMaskBack=p),void 0!==f&&(this.stencilFailOpBack=f),void 0!==m&&(this.stencilZFailOpBack=m),void 0!==g&&(this.stencilPassOpBack=g),void 0!==v&&(this.stencilRefBack=v)}}class no{get native(){return this._nativeObj}constructor(e=!1,t=vi.ONE,n=vi.ZERO,i=yi.ADD,s=vi.ONE,o=vi.ZERO,r=yi.ADD,a=xi.ALL){this._nativeObj=void 0,this._blend=!1,this._blendSrc=vi.ONE,this._blendDst=vi.ZERO,this._blendEq=yi.ADD,this._blendSrcAlpha=vi.ONE,this._blendDstAlpha=vi.ZERO,this._blendAlphaEq=yi.ADD,this._blendColorMask=xi.ALL,this._nativeObj=new gfx.BlendTarget,this.assignProperties(e,t,n,i,s,o,r,a)}get blend(){return this._blend}set blend(e){this._blend=e,this._nativeObj.blend=e}get blendSrc(){return this._blendSrc}set blendSrc(e){this._blendSrc=e,this._nativeObj.blendSrc=e}get blendDst(){return this._blendDst}set blendDst(e){this._blendDst=e,this._nativeObj.blendDst=e}get blendEq(){return this._blendEq}set blendEq(e){this._blendEq=e,this._nativeObj.blendEq=e}get blendSrcAlpha(){return this._blendSrcAlpha}set blendSrcAlpha(e){this._blendSrcAlpha=e,this._nativeObj.blendSrcAlpha=e}get blendDstAlpha(){return this._blendDstAlpha}set blendDstAlpha(e){this._blendDstAlpha=e,this._nativeObj.blendDstAlpha=e}get blendAlphaEq(){return this._blendAlphaEq}set blendAlphaEq(e){this._blendAlphaEq=e,this._nativeObj.blendAlphaEq=e}get blendColorMask(){return this._blendColorMask}set blendColorMask(e){this._blendColorMask=e,this._nativeObj.blendColorMask=e}reset(){this.assignProperties(!1,vi.ONE,vi.ZERO,yi.ADD,vi.ONE,vi.ZERO,yi.ADD,xi.ALL)}destroy(){this._nativeObj=null}assign(e){e&&this.assignProperties(e.blend,e.blendSrc,e.blendDst,e.blendEq,e.blendSrcAlpha,e.blendDstAlpha,e.blendAlphaEq,e.blendColorMask)}assignProperties(e,t,n,i,s,o,r,a){void 0!==e&&(this.blend=e),void 0!==t&&(this.blendSrc=t),void 0!==n&&(this.blendDst=n),void 0!==i&&(this.blendEq=i),void 0!==s&&(this.blendSrcAlpha=s),void 0!==o&&(this.blendDstAlpha=o),void 0!==r&&(this.blendAlphaEq=r),void 0!==a&&(this.blendColorMask=a)}}class io{_setTargets(e){this.targets=e;const t="$__nativeObj";this._syncTargetsToNativeObj(t),function(e,t,n,i,s){for(let o=0,r=t.length;o<r;o++){let r=t[o],a=r[n].$__nativeObj||r[n];r[n]=new Proxy(a,{get:(e,t)=>t===i?e:Reflect.get(e,t),set:(t,n,i)=>(Reflect.set(t,n,i),s(e),!0)})}}(this,this.targets,"_nativeObj",t,(e=>{e._syncTargetsToNativeObj(t)}))}_syncTargetsToNativeObj(e){const t=this.targets.map((t=>t.native[e]||t.native));this._nativeObj.targets=t}get native(){return this._nativeObj}constructor(e=!1,t=!1,n=new $i,i=[new no]){this.targets=void 0,this._blendColor=void 0,this._nativeObj=void 0,this._isA2C=!1,this._isIndepend=!1,this._nativeObj=new gfx.BlendState,this._setTargets(i),this.blendColor=n,this.isA2c=e,this.isIndepend=t}get isA2c(){return this._isA2C}set isA2c(e){this._isA2C=e,this._nativeObj.isA2C=e}get isIndepend(){return this._isIndepend}set isIndepend(e){this._isIndepend=e,this._nativeObj.isIndepend=e}get blendColor(){return this._blendColor}set blendColor(e){this._blendColor=e,this._nativeObj.blendColor=e}setTarget(e,t){let n=this.targets[e];n||(n=this.targets[e]=new no),n.assign(t),this._setTargets(this.targets)}reset(){this.isA2c=!1,this.isIndepend=!1,this.blendColor=new $i(0,0,0,0);const e=this.targets;for(let t=1,n=e.length;t<n;++t)e[t].destroy();e.length=1,e[0].reset(),this._setTargets(e)}destroy(){for(let e=0,t=this.targets.length;e<t;++e)this.targets[e].destroy();this.targets=null,this._nativeObj=null}}const so=gfx.PipelineState,oo=gfx.PipelineStateInfo;class ro extends Vs{get layout(){return this._layout}constructor(){super($n.DESCRIPTOR_SET),this._layout=null,this._buffers=[],this._textures=[],this._samplers=[],this._isDirty=!1}bindBuffer(e,t,n=0){const i=this._layout.bindingIndices[e],s=this._layout.bindings[i];if(s&&s.descriptorType&ks){const i=this._layout.descriptorIndices[e];this._buffers[i+n]!==t&&(this._buffers[i+n]=t,this._isDirty=!0)}}bindSampler(e,t,n=0){const i=this._layout.bindingIndices[e],s=this._layout.bindings[i];if(s&&s.descriptorType&js){const i=this._layout.descriptorIndices[e];this._samplers[i+n]!==t&&(this._samplers[i+n]=t,this._isDirty=!0)}}bindTexture(e,t,n=0){const i=this._layout.bindingIndices[e],s=this._layout.bindings[i];if(s&&s.descriptorType&js){const i=this._layout.descriptorIndices[e];this._textures[i+n]!==t&&(this._textures[i+n]=t,this._isDirty=!0)}}getBuffer(e,t=0){const n=this._layout.descriptorIndices[e];return this._buffers[n+t]}getSampler(e,t=0){const n=this._layout.descriptorIndices[e];return this._samplers[n+t]}getTexture(e,t=0){const n=this._layout.descriptorIndices[e];return this._textures[n+t]}}class ao extends Vs{get usage(){return this._usage}get memUsage(){return this._memUsage}get size(){return this._size}get stride(){return this._stride}get count(){return this._count}get flags(){return this._flags}constructor(){super($n.BUFFER),this._usage=si.NONE,this._memUsage=ai.NONE,this._size=0,this._stride=1,this._count=0,this._flags=oi.NONE,this._isBufferView=!1}}class co extends Vs{get type(){return this._type}get queue(){return this._queue}get numDrawCalls(){return this._numDrawCalls}get numInstances(){return this._numInstances}get numTris(){return this._numTris}constructor(){super($n.COMMAND_BUFFER),this._queue=null,this._type=Bi.PRIMARY,this._numDrawCalls=0,this._numInstances=0,this._numTris=0}}class lo{constructor(){this._gfxAPI=Jn.UNKNOWN,this._renderer="",this._vendor="",this._features=new Array(ei.COUNT),this._formatFeatures=new Array(ti.COUNT),this._queue=null,this._cmdBuff=null,this._numDrawCalls=0,this._numInstances=0,this._numTris=0,this._memoryStatus=new zs,this._caps=new Gi,this._bindingMappingInfo=new Qi,this._samplers=new Map,this._generalBarrierss=new Map,this._textureBarriers=new Map}get gfxAPI(){return this._gfxAPI}get queue(){return this._queue}get commandBuffer(){return this._cmdBuff}get renderer(){return this._renderer}get vendor(){return this._vendor}get numDrawCalls(){return this._numDrawCalls}get numInstances(){return this._numInstances}get numTris(){return this._numTris}get memoryStatus(){return this._memoryStatus}get capabilities(){return this._caps}get bindingMappingInfo(){return this._bindingMappingInfo}hasFeature(e){return this._features[e]}getFormatFeatures(e){return this._formatFeatures[e]}}lo.canvas=void 0;class ho extends Vs{get colorTexture(){return this._colorTexture}get depthStencilTexture(){return this._depthStencilTexture}get surfaceTransform(){return this._transform}get width(){return this._colorTexture.width}get height(){return this._colorTexture.height}constructor(){super($n.SWAPCHAIN),this._transform=Zn.IDENTITY,this._colorTexture=null,this._depthStencilTexture=null}}class uo extends Vs{get renderPass(){return this._renderPass}get colorTextures(){return this._colorTextures}get depthStencilTexture(){return this._depthStencilTexture}constructor(){super($n.FRAMEBUFFER),this._renderPass=null,this._colorTextures=[],this._depthStencilTexture=null}}const _o=String.prototype.charCodeAt;function po(e){return this[e]}function fo(e,t){let n=e.length,i=t^n,s=0;const o="string"==typeof e?_o:po;for(;n>=4;){let t=255&o.call(e,s)|(255&o.call(e,++s))<<8|(255&o.call(e,++s))<<16|(255&o.call(e,++s))<<24;t=1540483477*(65535&t)+((1540483477*(t>>>16)&65535)<<16),t^=t>>>24,t=1540483477*(65535&t)+((1540483477*(t>>>16)&65535)<<16),i=1540483477*(65535&i)+((1540483477*(i>>>16)&65535)<<16)^t,n-=4,++s}switch(n){case 3:i^=(255&o.call(e,s+2))<<16;case 2:i^=(255&o.call(e,s+1))<<8;case 1:i^=255&o.call(e,s),i=1540483477*(65535&i)+((1540483477*(i>>>16)&65535)<<16)}return i^=i>>>13,i=1540483477*(65535&i)+((1540483477*(i>>>16)&65535)<<16),i^=i>>>15,i>>>0}class mo extends Vs{get attributes(){return this._attributes}get vertexBuffers(){return this._vertexBuffers}get indexBuffer(){return this._indexBuffer}get indirectBuffer(){return this._indirectBuffer}get attributesHash(){return this._attributesHash}set vertexCount(e){this._drawInfo.vertexCount=e}get vertexCount(){return this._drawInfo.vertexCount}set firstVertex(e){this._drawInfo.firstVertex=e}get firstVertex(){return this._drawInfo.firstVertex}set indexCount(e){this._drawInfo.indexCount=e}get indexCount(){return this._drawInfo.indexCount}set firstIndex(e){this._drawInfo.firstIndex=e}get firstIndex(){return this._drawInfo.firstIndex}set vertexOffset(e){this._drawInfo.vertexOffset=e}get vertexOffset(){return this._drawInfo.vertexOffset}set instanceCount(e){this._drawInfo.instanceCount=e}get instanceCount(){return this._drawInfo.instanceCount}set firstInstance(e){this._drawInfo.firstInstance=e}get firstInstance(){return this._drawInfo.firstInstance}get drawInfo(){return this._drawInfo}constructor(){super($n.INPUT_ASSEMBLER),this._attributes=[],this._attributesHash=0,this._vertexBuffers=[],this._indexBuffer=null,this._indirectBuffer=null,this._drawInfo=new is}getVertexBuffer(e=0){return e<this._vertexBuffers.length?this._vertexBuffers[e]:null}computeAttributesHash(){let e="attrs";for(let t=0;t<this.attributes.length;++t){const n=this.attributes[t];e+=`,${n.name},${n.format},${n.isNormalized},${n.stream},${n.isInstanced}`}return fo(e,666)}}class go extends Vs{get bindings(){return this._bindings}get bindingIndices(){return this._bindingIndices}get descriptorIndices(){return this._descriptorIndices}constructor(){super($n.DESCRIPTOR_SET_LAYOUT),this._bindings=[],this._bindingIndices=[],this._descriptorIndices=[]}}class vo extends Vs{get setLayouts(){return this._setLayouts}constructor(){super($n.PIPELINE_LAYOUT),this._setLayouts=[]}}class yo extends Vs{get type(){return this._type}constructor(){super($n.QUEUE),this._type=Mi.GRAPHICS}}class xo extends Vs{get colorAttachments(){return this._colorInfos}get depthStencilAttachment(){return this._depthStencilInfo}get subPasses(){return this._subpasses}get hash(){return this._hash}constructor(){super($n.RENDER_PASS),this._colorInfos=[],this._depthStencilInfo=null,this._subpasses=[],this._hash=0}computeHash(){let e="";if(this._subpasses.length)for(let t=0;t<this._subpasses.length;++t){const n=this._subpasses[t];if(n.inputs.length){e+="ia";for(let t=0;t<n.inputs.length;++t){const i=this._colorInfos[n.inputs[t]];e+=`,${i.format},${i.sampleCount}`}}if(n.colors.length){e+="ca";for(let t=0;t<n.inputs.length;++t){const i=this._colorInfos[n.inputs[t]];e+=`,${i.format},${i.sampleCount}`}}if(n.depthStencil>=0){const t=this._colorInfos[n.depthStencil];e+=`ds,${t.format},${t.sampleCount}`}}else{e+="ca";for(let t=0;t<this._colorInfos.length;++t){const n=this._colorInfos[t];e+=`,${n.format},${n.sampleCount}`}const t=this._depthStencilInfo;t&&(e+=`ds,${t.format},${t.sampleCount}`)}return fo(e,666)}}class So extends Vs{get name(){return this._name}get attributes(){return this._attributes}get blocks(){return this._blocks}get samplers(){return this._samplers}constructor(){super($n.SHADER),this._name="",this._stages=[],this._attributes=[],this._blocks=[],this._samplers=[]}}class Co extends Vs{get type(){return this._info.type}get usage(){return this._info.usage}get format(){return this._info.format}get width(){return this._info.width}get height(){return this._info.height}get depth(){return this._info.depth}get layerCount(){return this._info.layerCount}get levelCount(){return this._info.levelCount}get samples(){return this._info.samples}get flags(){return this._info.flags}get size(){return this._size}get info(){return this._info}get viewInfo(){return this._viewInfo}get isTextureView(){return this._isTextureView}constructor(){super($n.TEXTURE),this._info=new rs,this._viewInfo=new as,this._isPowerOf2=!1,this._isTextureView=!1,this._size=0}static getLevelCount(e,t){return Math.floor(Math.log2(Math.max(e,t)))}}class Eo extends Vs{get info(){return this._info}get hash(){return this._hash}constructor(e,t){super($n.SAMPLER),this._info=new cs,this._hash=0,this._info.copy(e),this._hash=t}static computeHash(e){let t=e.minFilter;return t|=e.magFilter<<2,t|=e.mipFilter<<4,t|=e.addressU<<6,t|=e.addressV<<8,t|=e.addressW<<10,t|=e.maxAnisotropy<<12,t|=e.cmpFunc<<16,t}static unpackFromHash(e){const t=new cs;return t.minFilter=(3&e)>>0,t.magFilter=(3&e)>>2,t.mipFilter=(3&e)>>4,t.addressU=(3&e)>>6,t.addressV=(3&e)>>8,t.addressW=(3&e)>>10,t.maxAnisotropy=(15&e)>>12,t.cmpFunc=(7&e)>>16,t}}class To extends Vs{get info(){return this._info}get hash(){return this._hash}constructor(e,t){super($n.GLOBAL_BARRIER),this._info=new As,this._hash=0,this._info.copy(e),this._hash=t}static computeHash(e){return fo(`${e.prevAccesses} ${e.nextAccesses}`,666)}}class bo extends Vs{get info(){return this._info}get hash(){return this._hash}constructor(e,t){super($n.TEXTURE_BARRIER),this._info=new Ps,this._hash=0,this._info.copy(e),this._hash=t}static computeHash(e){let t=`${e.prevAccesses} ${e.nextAccesses}`;return t+=e.discardContents,t+=e.srcQueue?e.srcQueue.type:0,t+=e.dstQueue?e.dstQueue.type:0,fo(t,666)}}const Ao={GFXDevice:!0,GFXBuffer:!0,GFXTexture:!0,GFXSampler:!0,GFXShader:!0,GFXInputAssembler:!0,GFXRenderPass:!0,GFXFramebuffer:!0,GFXPipelineState:!0,GFXCommandBuffer:!0,GFXQueue:!0,GFXObjectType:!0,GFXObject:!1,GFXAttributeName:!0,GFXType:!0,GFXFormat:!0,GFXBufferUsageBit:!0,GFXMemoryUsageBit:!0,GFXBufferFlagBit:!0,GFXBufferAccessBit:"MemoryAccessBit",GFXPrimitiveMode:!0,GFXPolygonMode:!0,GFXShadeModel:!0,GFXCullMode:!0,GFXComparisonFunc:!0,GFXStencilOp:!0,GFXBlendOp:!0,GFXBlendFactor:!0,GFXColorMask:!0,GFXFilter:!0,GFXAddress:!0,GFXTextureType:!0,GFXTextureUsageBit:!0,GFXSampleCount:!0,GFXTextureFlagBit:!0,GFXShaderStageFlagBit:!0,GFXDescriptorType:!0,GFXCommandBufferType:!0,GFXLoadOp:!0,GFXStoreOp:!0,GFXPipelineBindPoint:!0,GFXDynamicStateFlagBit:!0,GFXStencilFace:!0,GFXQueueType:!0,GFXRect:!0,GFXViewport:!0,GFXColor:!0,GFXClearFlag:!0,GFXOffset:!0,GFXExtent:!0,GFXTextureSubres:"TextureSubresLayers",GFXTextureCopy:!0,GFXBufferTextureCopy:!0,GFXFormatType:!0,GFXFormatInfo:!0,GFXMemoryStatus:!0,GFXFormatInfos:!0,GFXFormatSize:!0,GFXFormatSurfaceSize:!0,GFXGetTypeSize:!0,getTypedArrayConstructor:!1};for(const e in Ao){let t=Ao[e];!0===t?t=e.slice(3):!1===t&&(t=e),V(u,"cc",[{name:e,newName:t,target:u.gfx,targetName:"cc.gfx"}])}H(u,"cc",[{name:"GFX_MAX_VERTEX_ATTRIBUTES"},{name:"GFX_MAX_TEXTURE_UNITS"},{name:"GFX_MAX_ATTACHMENTS"},{name:"GFX_MAX_BUFFER_BINDINGS"},{name:"GFXTextureLayout"}]);const Po=Object.assign({},Zs);Po.Device=gfx.Device,Po.Swapchain=gfx.Swapchain,Po.Buffer=gfx.Buffer,Po.Texture=gfx.Texture,Po.Sampler=gfx.Sampler,Po.Shader=gfx.Shader,Po.InputAssembler=gfx.InputAssembler,Po.RenderPass=gfx.RenderPass,Po.Framebuffer=gfx.Framebuffer,Po.DescriptorSet=gfx.DescriptorSet,Po.DescriptorSetLayout=gfx.DescriptorSetLayout,Po.PipelineLayout=gfx.PipelineLayout,Po.PipelineState=gfx.PipelineState,Po.CommandBuffer=gfx.CommandBuffer,Po.Queue=gfx.Queue,u.gfx=Po;const wo=no,Io=io,Ro=eo,Do=to,Oo=so,No=oo;Po.BlendTarget=no,Po.BlendState=io,Po.RasterizerState=eo,Po.DepthStencilState=to,Po.PipelineStateInfo=oo,e("gfx",Object.freeze({__proto__:null,DescriptorSet:ro,Buffer:ao,CommandBuffer:co,get ObjectType(){return $n},get Status(){return Qn},get API(){return Jn},get SurfaceTransform(){return Zn},get Feature(){return ei},get Format(){return ti},get FormatType(){return ni},get Type(){return ii},get BufferUsageBit(){return si},get BufferFlagBit(){return oi},get MemoryAccessBit(){return ri},get MemoryUsageBit(){return ai},get TextureType(){return ci},get TextureUsageBit(){return li},get TextureFlagBit(){return hi},get FormatFeatureBit(){return ui},get SampleCount(){return _i},get VsyncMode(){return di},get Filter(){return pi},get Address(){return fi},get ComparisonFunc(){return mi},get StencilOp(){return gi},get BlendFactor(){return vi},get BlendOp(){return yi},get ColorMask(){return xi},get ShaderStageFlagBit(){return Si},get LoadOp(){return Ci},get StoreOp(){return Ei},get AccessFlagBit(){return Ti},get ResolveMode(){return bi},get PipelineBindPoint(){return Ai},get PrimitiveMode(){return Pi},get PolygonMode(){return wi},get ShadeModel(){return Ii},get CullMode(){return Ri},get DynamicStateFlagBit(){return Di},get StencilFace(){return Oi},get DescriptorType(){return Ni},get QueueType(){return Mi},get QueryType(){return Li},get CommandBufferType(){return Bi},get ClearFlagBit(){return Fi},Size:Ui,DeviceCaps:Gi,Offset:Vi,Rect:Hi,Extent:ki,TextureSubresLayers:ji,TextureSubresRange:Wi,TextureCopy:qi,TextureBlit:Xi,BufferTextureCopy:Yi,Viewport:Ki,Color:$i,BindingMappingInfo:Qi,SwapchainInfo:Ji,DeviceInfo:Zi,BufferInfo:es,BufferViewInfo:ts,DrawInfo:is,DispatchInfo:ss,IndirectBuffer:os,TextureInfo:rs,TextureViewInfo:as,SamplerInfo:cs,Uniform:ls,UniformBlock:hs,UniformSamplerTexture:us,UniformSampler:_s,UniformTexture:ds,UniformStorageImage:ps,UniformStorageBuffer:fs,UniformInputAttachment:ms,ShaderStage:gs,Attribute:vs,ShaderInfo:ys,InputAssemblerInfo:xs,ColorAttachment:Ss,DepthStencilAttachment:Cs,SubpassInfo:Es,SubpassDependency:Ts,RenderPassInfo:bs,GeneralBarrierInfo:As,TextureBarrierInfo:Ps,FramebufferInfo:ws,DescriptorSetLayoutBinding:Is,DescriptorSetLayoutInfo:Rs,DescriptorSetInfo:Ds,PipelineLayoutInfo:Os,InputState:Ns,CommandBufferInfo:Ms,QueueInfo:Ls,QueryPoolInfo:Bs,FormatInfo:Fs,MemoryStatus:zs,DynamicStencilStates:Us,DynamicStates:Gs,GFXObject:Vs,get AttributeName(){return zi},FormatInfos:Hs,DESCRIPTOR_BUFFER_TYPE:ks,DESCRIPTOR_SAMPLER_TYPE:js,DESCRIPTOR_DYNAMIC_TYPE:Ws,DRAW_INFO_SIZE:qs,IsPowerOf2:Xs,FormatSize:Ys,FormatSurfaceSize:Ks,GetTypeSize:Qs,getTypedArrayConstructor:Js,Device:lo,Swapchain:ho,Framebuffer:uo,InputAssembler:mo,DescriptorSetLayout:go,PipelineLayout:vo,Queue:yo,RenderPass:xo,Shader:So,Texture:Co,Sampler:Eo,GeneralBarrier:To,TextureBarrier:bo,BlendTarget:wo,BlendState:Io,RasterizerState:Ro,DepthStencilState:Do,PipelineState:Oo,PipelineStateInfo:No}));const Mo=new gn,Lo=new gn,Bo=new gn,Fo=new gn,zo=new gn,Uo=new gn,Go=new Array(3),Vo=new Array(3);function Ho(e,t){return gn.dot(t.n,e)-t.d}function ko(e,t,n){return gn.copy(e,t),gn.subtract(zo,n.center,n.halfExtents),gn.add(Uo,n.center,n.halfExtents),e.x=e.x<zo.x?zo.x:e.x,e.y=e.y<zo.y?zo.y:e.y,e.z=e.z<zo.z?zo.z:e.z,e.x=e.x>Uo.x?Uo.x:e.x,e.y=e.y>Uo.y?Uo.y:e.y,e.z=e.z>Uo.z?Uo.z:e.z,e}function jo(e,t,n){gn.set(Mo,n.orientation.m00,n.orientation.m01,n.orientation.m02),gn.set(Lo,n.orientation.m03,n.orientation.m04,n.orientation.m05),gn.set(Bo,n.orientation.m06,n.orientation.m07,n.orientation.m08),Go[0]=Mo,Go[1]=Lo,Go[2]=Bo,Vo[0]=n.halfExtents.x,Vo[1]=n.halfExtents.y,Vo[2]=n.halfExtents.z,gn.subtract(Fo,t,n.center),gn.set(e,n.center.x,n.center.y,n.center.z);for(let t=0;t<3;t++){let n=gn.dot(Fo,Go[t]);n>Vo[t]&&(n=Vo[t]),n<-Vo[t]&&(n=-Vo[t]),e.x+=n*Go[t].x,e.y+=n*Go[t].y,e.z+=n*Go[t].z}return e}var Wo=Object.freeze({__proto__:null,point_plane:Ho,pt_point_plane:function(e,t,n){const i=Ho(t,n);return gn.subtract(e,t,gn.multiplyScalar(e,n.n,i))},pt_point_aabb:ko,pt_point_obb:jo,pt_point_line:function(e,t,n,i){gn.subtract(Mo,n,i);const s=Mo,o=gn.lengthSqr(s);if(0==o)gn.copy(e,n);else{gn.subtract(Mo,t,n);const r=gn.dot(Mo,s)/o;r<0?gn.copy(e,n):r>1?gn.copy(e,i):gn.scaleAndAdd(e,n,s,r)}}}),qo={SHAPE_RAY:1,SHAPE_LINE:2,SHAPE_SPHERE:4,SHAPE_AABB:8,SHAPE_OBB:16,SHAPE_PLANE:32,SHAPE_TRIANGLE:64,SHAPE_FRUSTUM:128,SHAPE_FRUSTUM_ACCURATE:256,SHAPE_CAPSULE:512};class Xo{static create(e,t,n,i,s,o){return new Xo(e,t,n,i,s,o)}static clone(e){return new Xo(e.s.x,e.s.y,e.s.z,e.e.x,e.e.y,e.e.z)}static copy(e,t){return gn.copy(e.s,t.s),gn.copy(e.e,t.e),e}static fromPoints(e,t,n){return gn.copy(e.s,t),gn.copy(e.e,n),e}static set(e,t,n,i,s,o,r){return e.s.x=t,e.s.y=n,e.s.z=i,e.e.x=s,e.e.y=o,e.e.z=r,e}static len(e){return gn.distance(e.s,e.e)}get type(){return this._type}constructor(e=0,t=0,n=0,i=0,s=0,o=-1){this.s=void 0,this.e=void 0,this._type=void 0,this._type=qo.SHAPE_LINE,this.s=new gn(e,t,n),this.e=new gn(i,s,o)}length(){return gn.distance(this.s,this.e)}}class Yo{static create(e=0,t=0,n=0,i=0,s=0,o=1){return new Yo(e,t,n,i,s,o)}static clone(e){return new Yo(e.o.x,e.o.y,e.o.z,e.d.x,e.d.y,e.d.z)}static copy(e,t){return gn.copy(e.o,t.o),gn.copy(e.d,t.d),e}static fromPoints(e,t,n){return gn.copy(e.o,t),gn.normalize(e.d,gn.subtract(e.d,n,t)),e}static set(e,t,n,i,s,o,r){return e.o.x=t,e.o.y=n,e.o.z=i,e.d.x=s,e.d.y=o,e.d.z=r,e}get type(){return this._type}constructor(e=0,t=0,n=0,i=0,s=0,o=-1){this.o=void 0,this.d=void 0,this._type=void 0,this._type=qo.SHAPE_RAY,this.o=new gn(e,t,n),this.d=new gn(i,s,o)}computeHit(e,t){gn.normalize(e,this.d),gn.scaleAndAdd(e,this.o,e,t)}}const Ko=new gn,$o=new gn,Qo=new gn,Jo=new gn;function Zo(e){return Math.max(Math.max(e.x,e.y),e.z)}class er{static create(e,t,n,i){return new er(e,t,n,i)}static clone(e){return new er(e.center.x,e.center.y,e.center.z,e.radius)}static copy(e,t){return gn.copy(e.center,t.center),e.radius=t.radius,e}static fromPoints(e,t,n){return gn.multiplyScalar(e.center,gn.add(Ko,t,n),.5),e.radius=.5*gn.subtract(Ko,n,t).length(),e}static set(e,t,n,i,s){return e.center.x=t,e.center.y=n,e.center.z=i,e.radius=s,e}get center(){return this._center}set center(e){this._center=e}get radius(){return this._radius}set radius(e){this._radius=e}get type(){return this._type}constructor(e=0,t=0,n=0,i=1){this._center=new gn(0,0,0),this._radius=0,this._type=void 0,this._type=qo.SHAPE_SPHERE,this._center=new gn(e,t,n),this._radius=i}destroy(){}clone(){return er.clone(this)}copy(e){return er.copy(this,e)}getBoundary(e,t){gn.set(e,this.center.x-this.radius,this.center.y-this.radius,this.center.z-this.radius),gn.set(t,this.center.x+this.radius,this.center.y+this.radius,this.center.z+this.radius)}transform(e,t,n,i,s){gn.transformMat4(s.center,this.center,e),s.radius=this.radius*Zo(i)}translateAndRotate(e,t,n){gn.transformMat4(n.center,this.center,e)}setScale(e,t){t.radius=this.radius*Zo(e)}mergePoint(e){this.radius<0&&(this.center.set(e),this.radius=0),gn.subtract($o,e,this.center);const t=$o.length();if(t>this.radius){const e=.5*(t-this.radius);this.radius+=e,gn.multiplyScalar($o,$o,e/t),gn.add(this.center,this.center,$o)}}mergePoints(e){const t=e.length;if(!(t<1)){this.radius=-1;for(let n=0;n<t;n++)this.mergePoint(e[n])}}mergeAABB(e){e.getBoundary(Qo,Jo),this.mergePoint(Qo),this.mergePoint(Jo)}}class tr{static create(e=1,t=0,n=0,i=0,s=0,o=0,r=0,a=0,c=1){return new tr(e,t,n,i,s,o,r,a,c)}static clone(e){return new tr(e.a.x,e.a.y,e.a.z,e.b.x,e.b.y,e.b.z,e.c.x,e.c.y,e.c.z)}static copy(e,t){return gn.copy(e.a,t.a),gn.copy(e.b,t.b),gn.copy(e.c,t.c),e}static fromPoints(e,t,n,i){return gn.copy(e.a,t),gn.copy(e.b,n),gn.copy(e.c,i),e}static set(e,t,n,i,s,o,r,a,c,l){return e.a.x=t,e.a.y=n,e.a.z=i,e.b.x=s,e.b.y=o,e.b.z=r,e.c.x=a,e.c.y=c,e.c.z=l,e}get type(){return this._type}constructor(e=0,t=0,n=0,i=1,s=0,o=0,r=0,a=1,c=0){this.a=void 0,this.b=void 0,this.c=void 0,this._type=void 0,this._type=qo.SHAPE_TRIANGLE,this.a=new gn(e,t,n),this.b=new gn(i,s,o),this.c=new gn(r,a,c)}}let ir;!function(e){e[e.ALL=0]="ALL",e[e.CLOSEST=1]="CLOSEST",e[e.ANY=2]="ANY"}(ir||(ir={}));const sr=function(){const e=new gn(0,0,0);return function(t,n){const i=gn.dot(t.d,n.n);if(Math.abs(i)<Number.EPSILON)return 0;gn.multiplyScalar(e,n.n,n.d);const s=gn.dot(gn.subtract(e,e,t.o),n.n)/i;return s<0?0:s}}(),or=function(){const e=new gn(0,0,0),t=new gn(0,0,0),n=new gn(0,0,0),i=new gn(0,0,0),s=new gn(0,0,0);return function(o,r,a){gn.subtract(e,r.b,r.a),gn.subtract(t,r.c,r.a),gn.cross(n,o.d,t);const c=gn.dot(e,n);if(c<Number.EPSILON&&(!a||c>-Number.EPSILON))return 0;const l=1/c;gn.subtract(i,o.o,r.a);const h=gn.dot(i,n)*l;if(h<0||h>1)return 0;gn.cross(s,i,e);const u=gn.dot(o.d,s)*l;if(u<0||h+u>1)return 0;const _=gn.dot(t,s)*l;return _<0?0:_}}(),rr=function(){const e=new gn(0,0,0);return function(t,n){const i=n.radius,s=n.center,o=t.o,r=t.d,a=i*i;gn.subtract(e,s,o);const c=e.lengthSqr(),l=gn.dot(e,r),h=a-(c-l*l);if(h<0)return 0;const u=Math.sqrt(h),_=c<a?l+u:l-u;return _<0?0:_}}(),ar=function(){const e=new gn,t=new gn;return function(n,i){return gn.subtract(e,i.center,i.halfExtents),gn.add(t,i.center,i.halfExtents),cr(n,e,t)}}();function cr(e,t,n){const i=e.o,s=e.d,o=1/s.x,r=1/s.y,a=1/s.z,c=(t.x-i.x)*o,l=(n.x-i.x)*o,h=(t.y-i.y)*r,u=(n.y-i.y)*r,_=(t.z-i.z)*a,d=(n.z-i.z)*a,p=Math.max(Math.max(Math.min(c,l),Math.min(h,u)),Math.min(_,d)),f=Math.min(Math.min(Math.max(c,l),Math.max(h,u)),Math.max(_,d));return f<0||p>f?0:p>0?p:f}const lr=function(){let e=new gn,t=new gn,n=new gn;const i=new gn,s=new gn,o=new gn,r=new gn,a=new Array(3),c=new Array(3),l=new Array(3),h=new Array(6);return function(u,_){a[0]=_.halfExtents.x,a[1]=_.halfExtents.y,a[2]=_.halfExtents.z,e=_.center,t=u.o,n=u.d,gn.set(i,_.orientation.m00,_.orientation.m01,_.orientation.m02),gn.set(s,_.orientation.m03,_.orientation.m04,_.orientation.m05),gn.set(o,_.orientation.m06,_.orientation.m07,_.orientation.m08),gn.subtract(r,e,t),c[0]=gn.dot(i,n),c[1]=gn.dot(s,n),c[2]=gn.dot(o,n),l[0]=gn.dot(i,r),l[1]=gn.dot(s,r),l[2]=gn.dot(o,r);for(let e=0;e<3;++e){if(0===c[e]){if(-l[e]-a[e]>0||-l[e]+a[e]<0)return 0;c[e]=1e-7}h[2*e+0]=(l[e]+a[e])/c[e],h[2*e+1]=(l[e]-a[e])/c[e]}const d=Math.max(Math.max(Math.min(h[0],h[1]),Math.min(h[2],h[3])),Math.min(h[4],h[5])),p=Math.min(Math.min(Math.max(h[0],h[1]),Math.max(h[2],h[3])),Math.max(h[4],h[5]));return p<0||d>p?0:d>0?d:p}}(),hr=function(){const e=new gn,t=new gn,n=new gn,i=new gn,s=new gn,o=new gn,r=new gn,a=new er;return function(c,l){const h=l.radius*l.radius,u=gn.normalize(e,c.d),_=l.ellipseCenter0,d=l.ellipseCenter1,p=gn.subtract(t,d,_);if(p.equals(gn.ZERO))return a.radius=l.radius,a.center.set(l.ellipseCenter0),Vr.raySphere(c,a);const f=c.o,m=gn.subtract(n,f,_),g=gn.cross(i,u,p),v=g.lengthSqr();if(0===v){a.radius=l.radius;const e=gn.subtract(s,d,f);return m.lengthSqr()<e.lengthSqr()?a.center.set(l.ellipseCenter0):a.center.set(l.ellipseCenter1),Vr.raySphere(c,a)}const y=gn.cross(s,m,p),x=p.lengthSqr(),S=2*gn.dot(g,y),C=S*S-4*v*(y.lengthSqr()-h*x);if(C<0)return 0;const E=(-S-Math.sqrt(C))/(2*v);if(E<0){a.radius=l.radius;const e=gn.subtract(o,d,f);return m.lengthSqr()<e.lengthSqr()?a.center.set(l.ellipseCenter0):a.center.set(l.ellipseCenter1),Vr.raySphere(c,a)}{const e=gn.scaleAndAdd(o,c.o,u,E),t=gn.subtract(r,e,_),n=gn.dot(t,p)/x;return n>=0&&n<=1?E:n<0?(a.radius=l.radius,a.center.set(l.ellipseCenter0),Vr.raySphere(c,a)):n>1?(a.radius=l.radius,a.center.set(l.ellipseCenter1),Vr.raySphere(c,a)):0}}}(),ur=function(){const e=tr.create(),t={distance:1/0,doubleSided:!1,mode:ir.ANY};let n=0;const i=(e,t,i,s,o,r)=>{e===ir.CLOSEST?(n>t||0===n)&&(n=t,r&&(0===r.length?r.push({distance:t,vertexIndex0:i/3,vertexIndex1:s/3,vertexIndex2:o/3}):(r[0].distance=t,r[0].vertexIndex0=i/3,r[0].vertexIndex1=s/3,r[0].vertexIndex2=o/3))):(n=t,r&&r.push({distance:t,vertexIndex0:i/3,vertexIndex1:s/3,vertexIndex2:o/3}))};return function(s,o,r){if(n=0,0===o.geometricInfo.positions.length)return n;const a=void 0===r?t:r;if(cr(s,o.geometricInfo.boundingBox.min,o.geometricInfo.boundingBox.max)){const t=o.primitiveMode,{positions:n,indices:r}=o.geometricInfo;((t,n,s,o,r)=>{if(s===Pi.TRIANGLE_LIST){const s=n.length;for(let a=0;a<s;a+=3){const s=3*n[a],c=3*n[a+1],l=3*n[a+2];gn.set(e.a,t[s],t[s+1],t[s+2]),gn.set(e.b,t[c],t[c+1],t[c+2]),gn.set(e.c,t[l],t[l+1],t[l+2]);const h=Vr.rayTriangle(o,e,r.doubleSided);if(!(0===h||h>r.distance)&&(i(r.mode,h,s,c,l,r.result),r.mode===ir.ANY))return h}}else if(s===Pi.TRIANGLE_STRIP){const s=n.length-2;let a=0;for(let c=0;c<s;c+=1){const s=3*n[c-a],l=3*n[c+a+1],h=3*n[c+2];gn.set(e.a,t[s],t[s+1],t[s+2]),gn.set(e.b,t[l],t[l+1],t[l+2]),gn.set(e.c,t[h],t[h+1],t[h+2]),a=~a;const u=Vr.rayTriangle(o,e,r.doubleSided);if(!(0===u||u>r.distance)&&(i(r.mode,u,s,l,h,r.result),r.mode===ir.ANY))return u}}else if(s===Pi.TRIANGLE_FAN){const s=n.length-1,a=3*n[0];gn.set(e.a,t[a],t[a+1],t[a+2]);for(let c=1;c<s;c+=1){const s=3*n[c],l=3*n[c+1];gn.set(e.b,t[s],t[s+1],t[s+2]),gn.set(e.c,t[l],t[l+1],t[l+2]);const h=Vr.rayTriangle(o,e,r.doubleSided);if(!(0===h||h>r.distance)&&(i(r.mode,h,a,s,l,r.result),r.mode===ir.ANY))return h}}})(n,r,t,s,a)}return n}}(),_r=function(){let e=0;const t={distance:1/0,doubleSided:!1,mode:ir.ANY};return function(n,i,s){e=0;const o=void 0===s?t:s,r=i.renderingSubMeshes.length,a=i.struct.minPosition,c=i.struct.maxPosition;if(a&&c&&!cr(n,a,c))return e;for(let t=0;t<r;t++){const s=i.renderingSubMeshes[t],r=ur(n,s,o);if(r)if(o.mode===ir.CLOSEST)(0===e||e>r)&&(e=r,o.subIndices&&(o.subIndices[0]=t));else if(e=r,o.subIndices&&o.subIndices.push(t),o.mode===ir.ANY)return r}return e&&o.mode===ir.CLOSEST&&(o.result&&(o.result[0].distance=e,o.result.length=1),o.subIndices&&(o.subIndices.length=1)),e}}(),dr=function(){let e=0;const t={distance:1/0,doubleSided:!1,mode:ir.ANY},n=new Yo,i=new On;return function(s,o,r){e=0;const a=void 0===r?t:r,c=o.worldBounds;if(c&&!ar(s,c))return e;Yo.copy(n,s),o.node&&(On.invert(i,o.node.getWorldMatrix(i)),gn.transformMat4(n.o,s.o,i),gn.transformMat4Normal(n.d,s.d,i));const l=o.subModels;for(let t=0;t<l.length;t++){const i=l[t].subMesh,s=ur(n,i,a);if(s)if(a.mode===ir.CLOSEST)(0===e||e>s)&&(e=s,a.subIndices&&(a.subIndices[0]=t));else if(e=s,a.subIndices&&a.subIndices.push(t),a.mode===ir.ANY)return s}return e&&a.mode===ir.CLOSEST&&(a.result&&(a.result[0].distance=e,a.result.length=1),a.subIndices&&(a.subIndices.length=1)),e}}(),pr=function(){const e=new gn(0,0,0);return function(t,n){gn.subtract(e,t.e,t.s);const i=(n.d-gn.dot(t.s,n.n))/gn.dot(e,n.n);return i<0||i>1?0:i}}(),fr=function(){const e=new gn(0,0,0),t=new gn(0,0,0),n=new gn(0,0,0),i=new gn(0,0,0),s=new gn(0,0,0),o=new gn(0,0,0);return function(r,a,c){gn.subtract(e,a.b,a.a),gn.subtract(t,a.c,a.a),gn.subtract(n,r.s,r.e),gn.cross(s,e,t);const l=gn.dot(n,s);if(l<=0)return 0;gn.subtract(i,r.s,a.a);const h=gn.dot(i,s);if(h<0||h>l)return 0;gn.cross(o,n,i);let u=gn.dot(t,o);if(u<0||u>l)return 0;let _=-gn.dot(e,o);if(_<0||u+_>l)return 0;if(c){const e=1/l;u*=e,_*=e;const t=1-u-_;gn.set(c,a.a.x*t+a.b.x*u+a.c.x*_,a.a.y*t+a.b.y*u+a.c.y*_,a.a.z*t+a.b.z*u+a.c.z*_)}return 1}}(),mr=new Yo;function gr(e,t){mr.o.set(e.s),gn.subtract(mr.d,e.e,e.s),mr.d.normalize();const n=ar(mr,t);return n<=e.length()?n:0}function vr(e,t){mr.o.set(e.s),gn.subtract(mr.d,e.e,e.s),mr.d.normalize();const n=lr(mr,t);return n<=e.length()?n:0}function yr(e,t){mr.o.set(e.s),gn.subtract(mr.d,e.e,e.s),mr.d.normalize();const n=rr(mr,t);return n<=e.length()?n:0}const xr=function(){const e=new gn,t=new gn,n=new gn,i=new gn;return function(s,o){return gn.subtract(e,s.center,s.halfExtents),gn.add(t,s.center,s.halfExtents),gn.subtract(n,o.center,o.halfExtents),gn.add(i,o.center,o.halfExtents),e.x<=i.x&&t.x>=n.x&&e.y<=i.y&&t.y>=n.y&&e.z<=i.z&&t.z>=n.z}}();function Sr(e,t,n,i,s,o){gn.set(o[0],e.x+n.x*t.x+i.x*t.y+s.x*t.z,e.y+n.y*t.x+i.y*t.y+s.y*t.z,e.z+n.z*t.x+i.z*t.y+s.z*t.z),gn.set(o[1],e.x-n.x*t.x+i.x*t.y+s.x*t.z,e.y-n.y*t.x+i.y*t.y+s.y*t.z,e.z-n.z*t.x+i.z*t.y+s.z*t.z),gn.set(o[2],e.x+n.x*t.x-i.x*t.y+s.x*t.z,e.y+n.y*t.x-i.y*t.y+s.y*t.z,e.z+n.z*t.x-i.z*t.y+s.z*t.z),gn.set(o[3],e.x+n.x*t.x+i.x*t.y-s.x*t.z,e.y+n.y*t.x+i.y*t.y-s.y*t.z,e.z+n.z*t.x+i.z*t.y-s.z*t.z),gn.set(o[4],e.x-n.x*t.x-i.x*t.y-s.x*t.z,e.y-n.y*t.x-i.y*t.y-s.y*t.z,e.z-n.z*t.x-i.z*t.y-s.z*t.z),gn.set(o[5],e.x+n.x*t.x-i.x*t.y-s.x*t.z,e.y+n.y*t.x-i.y*t.y-s.y*t.z,e.z+n.z*t.x-i.z*t.y-s.z*t.z),gn.set(o[6],e.x-n.x*t.x+i.x*t.y-s.x*t.z,e.y-n.y*t.x+i.y*t.y-s.y*t.z,e.z-n.z*t.x+i.z*t.y-s.z*t.z),gn.set(o[7],e.x-n.x*t.x-i.x*t.y+s.x*t.z,e.y-n.y*t.x-i.y*t.y+s.y*t.z,e.z-n.z*t.x-i.z*t.y+s.z*t.z)}function Cr(e,t){let n=gn.dot(t,e[0]),i=n;for(let s=1;s<8;++s){const o=gn.dot(t,e[s]);n=o<n?o:n,i=o>i?o:i}return[n,i]}const Er=function(){const e=new Array(15);for(let t=0;t<15;t++)e[t]=new gn(0,0,0);const t=new Array(8),n=new Array(8);for(let e=0;e<8;e++)t[e]=new gn(0,0,0),n[e]=new gn(0,0,0);const i=new gn,s=new gn;return function(o,r){gn.set(e[0],1,0,0),gn.set(e[1],0,1,0),gn.set(e[2],0,0,1),gn.set(e[3],r.orientation.m00,r.orientation.m01,r.orientation.m02),gn.set(e[4],r.orientation.m03,r.orientation.m04,r.orientation.m05),gn.set(e[5],r.orientation.m06,r.orientation.m07,r.orientation.m08);for(let t=0;t<3;++t)gn.cross(e[6+3*t],e[t],e[3]),gn.cross(e[7+3*t],e[t],e[4]),gn.cross(e[7+3*t],e[t],e[5]);gn.subtract(i,o.center,o.halfExtents),gn.add(s,o.center,o.halfExtents),function(e,t,n){gn.set(n[0],e.x,t.y,t.z),gn.set(n[1],e.x,t.y,e.z),gn.set(n[2],e.x,e.y,t.z),gn.set(n[3],e.x,e.y,e.z),gn.set(n[4],t.x,t.y,t.z),gn.set(n[5],t.x,t.y,e.z),gn.set(n[6],t.x,e.y,t.z),gn.set(n[7],t.x,e.y,e.z)}(i,s,t),Sr(r.center,r.halfExtents,e[3],e[4],e[5],n);for(let i=0;i<15;++i){const s=Cr(t,e[i]),o=Cr(n,e[i]);if(o[0]>s[1]||s[0]>o[1])return 0}return 1}}(),Tr=function(e,t){const n=e.halfExtents.x*Math.abs(t.n.x)+e.halfExtents.y*Math.abs(t.n.y)+e.halfExtents.z*Math.abs(t.n.z),i=gn.dot(t.n,e.center);return i+n<t.d?-1:i-n>t.d?0:1},br=function(e,t){for(let n=0;n<t.planes.length;n++)if(-1===Tr(e,t.planes[n]))return 0;return 1},Ar=function(){const e=new Array(8);let t=0,n=0;for(let t=0;t<e.length;t++)e[t]=new gn(0,0,0);return function(i,s){let o=0,r=!1;for(let e=0;e<s.planes.length;e++){if(o=Tr(i,s.planes[e]),-1===o)return 0;1===o&&(r=!0)}if(!r)return 1;for(let t=0;t<s.vertices.length;t++)gn.subtract(e[t],s.vertices[t],i.center);t=0,n=0;for(let o=0;o<s.vertices.length;o++)e[o].x>i.halfExtents.x?t++:e[o].x<-i.halfExtents.x&&n++;if(t===s.vertices.length||n===s.vertices.length)return 0;t=0,n=0;for(let o=0;o<s.vertices.length;o++)e[o].y>i.halfExtents.y?t++:e[o].y<-i.halfExtents.y&&n++;if(t===s.vertices.length||n===s.vertices.length)return 0;t=0,n=0;for(let o=0;o<s.vertices.length;o++)e[o].z>i.halfExtents.z?t++:e[o].z<-i.halfExtents.z&&n++;return t===s.vertices.length||n===s.vertices.length?0:1}}(),Pr=function(){const e=new gn(0,0,0),t=new Sn;return function(n,i){return gn.subtract(e,i,n.center),gn.transformMat3(e,e,Sn.transpose(t,n.orientation)),s=e,o=n.halfExtents,Math.abs(s.x)<o.x&&Math.abs(s.y)<o.y&&Math.abs(s.z)<o.z;var s,o}}(),wr=function(){const e=function(e,t,n,i){return Math.abs(e.x*t+e.y*n+e.z*i)};return function(t,n){const i=t.halfExtents.x*e(n.n,t.orientation.m00,t.orientation.m01,t.orientation.m02)+t.halfExtents.y*e(n.n,t.orientation.m03,t.orientation.m04,t.orientation.m05)+t.halfExtents.z*e(n.n,t.orientation.m06,t.orientation.m07,t.orientation.m08),s=gn.dot(n.n,t.center);return s+i<n.d?-1:s-i>n.d?0:1}}(),Ir=function(e,t){for(let n=0;n<t.planes.length;n++)if(-1===wr(e,t.planes[n]))return 0;return 1},Rr=function(){const e=new Array(8);let t=0,n=0,i=0;for(let t=0;t<e.length;t++)e[t]=new gn(0,0,0);const s=function(e,t,n,i){return e.x*t+e.y*n+e.z*i};return function(o,r){let a=0,c=!1;for(let e=0;e<r.planes.length;e++){if(a=wr(o,r.planes[e]),-1===a)return 0;1===a&&(c=!0)}if(!c)return 1;for(let t=0;t<r.vertices.length;t++)gn.subtract(e[t],r.vertices[t],o.center);n=0,i=0;for(let a=0;a<r.vertices.length;a++)t=s(e[a],o.orientation.m00,o.orientation.m01,o.orientation.m02),t>o.halfExtents.x?n++:t<-o.halfExtents.x&&i++;if(n===r.vertices.length||i===r.vertices.length)return 0;n=0,i=0;for(let a=0;a<r.vertices.length;a++)t=s(e[a],o.orientation.m03,o.orientation.m04,o.orientation.m05),t>o.halfExtents.y?n++:t<-o.halfExtents.y&&i++;if(n===r.vertices.length||i===r.vertices.length)return 0;n=0,i=0;for(let a=0;a<r.vertices.length;a++)t=s(e[a],o.orientation.m06,o.orientation.m07,o.orientation.m08),t>o.halfExtents.z?n++:t<-o.halfExtents.z&&i++;return n===r.vertices.length||i===r.vertices.length?0:1}}(),Dr=function(){const e=new Array(15);for(let t=0;t<15;t++)e[t]=new gn(0,0,0);const t=new Array(8),n=new Array(8);for(let e=0;e<8;e++)t[e]=new gn(0,0,0),n[e]=new gn(0,0,0);return function(i,s){gn.set(e[0],i.orientation.m00,i.orientation.m01,i.orientation.m02),gn.set(e[1],i.orientation.m03,i.orientation.m04,i.orientation.m05),gn.set(e[2],i.orientation.m06,i.orientation.m07,i.orientation.m08),gn.set(e[3],s.orientation.m00,s.orientation.m01,s.orientation.m02),gn.set(e[4],s.orientation.m03,s.orientation.m04,s.orientation.m05),gn.set(e[5],s.orientation.m06,s.orientation.m07,s.orientation.m08);for(let t=0;t<3;++t)gn.cross(e[6+3*t],e[t],e[3]),gn.cross(e[7+3*t],e[t],e[4]),gn.cross(e[8+3*t],e[t],e[5]);Sr(i.center,i.halfExtents,e[0],e[1],e[2],t),Sr(s.center,s.halfExtents,e[3],e[4],e[5],n);for(let i=0;i<15;++i){const s=Cr(t,e[i]),o=Cr(n,e[i]);if(o[0]>s[1]||s[0]>o[1])return 0}return 1}}(),Or=function(){const e=new er,t=new gn,n=new gn,i=new gn,s=new Array(8);for(let e=0;e<8;e++)s[e]=new gn;const o=new Array(8);for(let e=0;e<8;e++)o[e]=new gn;return function(r,a){if(0===gn.squaredDistance(a.ellipseCenter0,a.ellipseCenter1))return e.radius=a.radius,e.center.set(a.ellipseCenter0),Vr.sphereOBB(e,r);{t.x=r.orientation.m00,t.y=r.orientation.m01,t.z=r.orientation.m02,n.x=r.orientation.m03,n.y=r.orientation.m04,n.z=r.orientation.m05,i.x=r.orientation.m06,i.y=r.orientation.m07,i.z=r.orientation.m08,Sr(r.center,r.halfExtents,t,n,i,s);const e=o,c=gn.copy(e[0],t),l=gn.copy(e[1],n),h=gn.copy(e[2],i);gn.subtract(e[3],a.center,r.center).normalize();const u=gn.subtract(e[4],a.ellipseCenter0,a.ellipseCenter1);u.normalize(),gn.cross(e[5],c,u),gn.cross(e[6],l,u),gn.cross(e[7],h,u);for(let t=0;t<8;++t){const n=Cr(s,e[t]),i=gn.dot(e[t],a.ellipseCenter0),o=gn.dot(e[t],a.ellipseCenter1),r=Math.max(i,o),c=Math.min(i,o)-a.radius,l=r+a.radius;if(c>n[1]||n[0]>l)return 0}return 1}}}(),Nr=function(e,t){const n=gn.dot(t.n,e.center),i=e.radius*t.n.length();return n+i<t.d?-1:n-i>t.d?0:1},Mr=function(e,t){for(let n=0;n<t.planes.length;n++)if(-1===Nr(e,t.planes[n]))return 0;return 1},Lr=function(){const e=new gn(0,0,0),t=[1,-1,1,-1,1,-1];return function(n,i){for(let s=0;s<6;s++){const o=i.planes[s],r=n.radius,a=n.center,c=o.n,l=o.d,h=gn.dot(c,a);if(h+r<l)return 0;if(!(h-r>l)){gn.add(e,a,gn.multiplyScalar(e,c,r));for(let n=0;n<6;n++){if(n===s||n===s+t[s])continue;const o=i.planes[n];if(gn.dot(o.n,e)<o.d)return 0}}}return 1}}(),Br=function(e,t){const n=e.radius+t.radius;return gn.squaredDistance(e.center,t.center)<n*n},Fr=function(){const e=new gn;return function(t,n){return ko(e,t.center,n),gn.squaredDistance(t.center,e)<t.radius*t.radius}}(),zr=function(){const e=new gn;return function(t,n){return jo(e,t.center,n),gn.squaredDistance(t.center,e)<t.radius*t.radius}}(),Ur=function(){const e=new gn,t=new gn;return function(n,i){const s=n.radius+i.radius,o=s*s,r=gn.squaredDistance(i.ellipseCenter0,i.ellipseCenter1);if(0===r)return gn.squaredDistance(n.center,i.center)<o;{gn.subtract(e,n.center,i.ellipseCenter0),gn.subtract(t,i.ellipseCenter1,i.ellipseCenter0);const s=gn.dot(e,t)/r;return s<0?gn.squaredDistance(n.center,i.ellipseCenter0)<o:s>1?gn.squaredDistance(n.center,i.ellipseCenter1)<o:(gn.scaleAndAdd(e,i.ellipseCenter0,t,s),gn.squaredDistance(n.center,e)<o)}}}(),Gr=function(){const e=new gn,t=new gn,n=new gn,i=new gn,s=new gn,o=new gn;return function(r,a){const c=gn.subtract(e,r.ellipseCenter1,r.ellipseCenter0),l=gn.subtract(t,a.ellipseCenter1,a.ellipseCenter0),h=gn.subtract(n,r.ellipseCenter0,a.ellipseCenter0),u=gn.dot(c,c),_=gn.dot(c,l),d=gn.dot(l,l),p=gn.dot(c,h),f=gn.dot(l,h),m=u*d-_*_;let g,v,y=m,x=m;m<jt?(g=0,y=1,v=f,x=d):(g=_*f-d*p,v=u*f-_*p,g<0?(g=0,v=f,x=d):g>y&&(g=y,v=f+_,x=d)),v<0?(v=0,-p<0?g=0:-p>u?g=y:(g=-p,y=u)):v>x&&(v=x,-p+_<0?g=0:-p+_>u?g=y:(g=-p+_,y=u));const S=Math.abs(g)<jt?0:g/y,C=Math.abs(v)<jt?0:v/x,E=i;E.set(h),E.add(gn.multiplyScalar(s,c,S)),E.subtract(gn.multiplyScalar(o,l,C));const T=r.radius+a.radius;return E.lengthSqr()<T*T}}(),Vr={raySphere:rr,rayAABB:ar,rayOBB:lr,rayPlane:sr,rayTriangle:or,rayCapsule:hr,raySubMesh:ur,rayMesh:_r,rayModel:dr,lineSphere:yr,lineAABB:gr,lineOBB:vr,linePlane:pr,lineTriangle:fr,sphereWithSphere:Br,sphereAABB:Fr,sphereOBB:zr,spherePlane:Nr,sphereFrustum:Mr,sphereFrustumAccurate:Lr,sphereCapsule:Ur,aabbWithAABB:xr,aabbWithOBB:Er,aabbPlane:Tr,aabbFrustum:br,aabbFrustumAccurate:Ar,obbWithOBB:Dr,obbPlane:wr,obbFrustum:Ir,obbFrustumAccurate:Rr,obbPoint:Pr,obbCapsule:Or,capsuleWithCapsule:Gr,resolve(e,t,n=null){const i=e._type,s=t._type,o=this[i|s];return i<s?o(e,t,n):o(t,e,n)}};Vr[qo.SHAPE_RAY|qo.SHAPE_SPHERE]=rr,Vr[qo.SHAPE_RAY|qo.SHAPE_AABB]=ar,Vr[qo.SHAPE_RAY|qo.SHAPE_OBB]=lr,Vr[qo.SHAPE_RAY|qo.SHAPE_PLANE]=sr,Vr[qo.SHAPE_RAY|qo.SHAPE_TRIANGLE]=or,Vr[qo.SHAPE_RAY|qo.SHAPE_CAPSULE]=hr,Vr[qo.SHAPE_LINE|qo.SHAPE_SPHERE]=yr,Vr[qo.SHAPE_LINE|qo.SHAPE_AABB]=gr,Vr[qo.SHAPE_LINE|qo.SHAPE_OBB]=vr,Vr[qo.SHAPE_LINE|qo.SHAPE_PLANE]=pr,Vr[qo.SHAPE_LINE|qo.SHAPE_TRIANGLE]=fr,Vr[qo.SHAPE_SPHERE]=Br,Vr[qo.SHAPE_SPHERE|qo.SHAPE_AABB]=Fr,Vr[qo.SHAPE_SPHERE|qo.SHAPE_OBB]=zr,Vr[qo.SHAPE_SPHERE|qo.SHAPE_PLANE]=Nr,Vr[qo.SHAPE_SPHERE|qo.SHAPE_FRUSTUM]=Mr,Vr[qo.SHAPE_SPHERE|qo.SHAPE_FRUSTUM_ACCURATE]=Lr,Vr[qo.SHAPE_SPHERE|qo.SHAPE_CAPSULE]=Ur,Vr[qo.SHAPE_AABB]=xr,Vr[qo.SHAPE_AABB|qo.SHAPE_OBB]=Er,Vr[qo.SHAPE_AABB|qo.SHAPE_PLANE]=Tr,Vr[qo.SHAPE_AABB|qo.SHAPE_FRUSTUM]=br,Vr[qo.SHAPE_AABB|qo.SHAPE_FRUSTUM_ACCURATE]=Ar,Vr[qo.SHAPE_OBB]=Dr,Vr[qo.SHAPE_OBB|qo.SHAPE_PLANE]=wr,Vr[qo.SHAPE_OBB|qo.SHAPE_FRUSTUM]=Ir,Vr[qo.SHAPE_OBB|qo.SHAPE_FRUSTUM_ACCURATE]=Rr,Vr[qo.SHAPE_OBB|qo.SHAPE_CAPSULE]=Or,Vr[qo.SHAPE_CAPSULE]=Gr,V(Xo.prototype,"line",[{name:"mag",newName:"len"},{name:"magnitude",newName:"len"}]),H(Vr,"intersect",[{name:"line_quad"}]);const Hr=new gn(0,0,0),kr=new gn(0,0,0),jr=u.mat4(),Wr=u.v4();class qr{static create(e,t,n,i){return new qr(e,t,n,i)}static clone(e){return new qr(e.n.x,e.n.y,e.n.z,e.d)}static copy(e,t){return gn.copy(e.n,t.n),e.d=t.d,e}static fromPoints(e,t,n,i){return gn.subtract(Hr,n,t),gn.subtract(kr,i,t),gn.normalize(e.n,gn.cross(e.n,Hr,kr)),e.d=gn.dot(e.n,t),e}static set(e,t,n,i,s){return e.n.x=t,e.n.y=n,e.n.z=i,e.d=s,e}static fromNormalAndPoint(e,t,n){return gn.copy(e.n,t),e.d=gn.dot(t,n),e}static normalize(e,t){const n=t.n.length();return gn.normalize(e.n,t.n),n>0&&(e.d=t.d/n),e}get type(){return this._type}set x(e){this.n.x=e}get x(){return this.n.x}set y(e){this.n.y=e}get y(){return this.n.y}set z(e){this.n.z=e}get z(){return this.n.z}set w(e){this.d=e}get w(){return this.d}constructor(e=0,t=1,n=0,i=0){this.n=void 0,this.d=void 0,this._type=void 0,this._type=qo.SHAPE_PLANE,this.n=new gn(e,t,n),this.d=i}transform(e){On.invert(jr,e),On.transpose(jr,jr),Gn.set(Wr,this.n.x,this.n.y,this.n.z,this.d),Gn.transformMat4(Wr,Wr,jr),gn.set(this.n,Wr.x,Wr.y,Wr.z),this.d=Wr.w}}const Xr=jsb.NativeBufferPool;var Yr;jsb.NativeObjectPool,jsb.NativeBufferAllocator,function(e){e[e.UINT32=0]="UINT32",e[e.FLOAT32=1]="FLOAT32",e[e.NEVER=2]="NEVER"}(Yr||(Yr={}));class Kr{constructor(e,t,n,i,s=8){this._dataType=void 0,this._dataMembers=void 0,this._elementCount=void 0,this._entryBits=void 0,this._stride=void 0,this._entriesPerChunk=void 0,this._entryMask=void 0,this._chunkMask=void 0,this._poolFlag=void 0,this._arrayBuffers=[],this._freeLists=[],this._uint32BufferViews=[],this._float32BufferViews=[],this._hasUint32=!1,this._hasFloat32=!1,this._nativePool=void 0,this._elementCount=i.COUNT,this._entryBits=s,this._dataType=t,this._dataMembers=n,this._stride=4*this._elementCount,this._entriesPerChunk=1<<s,this._entryMask=this._entriesPerChunk-1,this._poolFlag=1<<30,this._chunkMask=~(this._entryMask|this._poolFlag),this._nativePool=new Xr(e,s,this._stride);let o=Yr.NEVER,r=!1,a=!1;for(const e in t){if(r=this._hasFloat32,a=this._hasUint32,a&&r)break;o=t[e],r||o!==Yr.FLOAT32?a||o!==Yr.UINT32||(this._hasUint32=!0):this._hasFloat32=!0}}alloc(){let e=0;for(;e<this._freeLists.length;e++){const t=this._freeLists[e];if(t.length){const n=t[t.length-1];return t.length--,(e<<this._entryBits)+n+this._poolFlag}}const t=this._nativePool.allocateNewChunk(),n=[],i=[],s=[],o=this._hasFloat32,r=this._hasUint32;for(let e=0;e<this._entriesPerChunk;e++)o&&n.push(new Float32Array(t,this._stride*e,this._elementCount)),r&&i.push(new Uint32Array(t,this._stride*e,this._elementCount)),e&&s.push(e);return r&&this._uint32BufferViews.push(i),o&&this._float32BufferViews.push(n),this._freeLists.push(s),this._arrayBuffers.push(t),(e<<this._entryBits)+this._poolFlag}getBuffer(e){const t=(this._chunkMask&e)>>this._entryBits,n=this._entryMask&e;return(this._hasFloat32?this._float32BufferViews:this._uint32BufferViews)[t][n]}getTypedArray(e,t){const n=(this._chunkMask&e)>>this._entryBits,i=this._entryMask&e,s=t,o=(this._dataType[t]===Yr.UINT32?this._uint32BufferViews:this._float32BufferViews)[n][i],r=this._dataMembers[t];return o.subarray(s,s+r)}free(e){const t=(this._chunkMask&e)>>this._entryBits,n=this._entryMask&e;(this._hasUint32?this._uint32BufferViews:this._float32BufferViews)[t][n].fill(0),this._freeLists[t].push(n)}}let $r,Qr;!function(e){e[e.NODE=0]="NODE",e[e.PASS=1]="PASS",e[e.AABB=2]="AABB"}($r||($r={})),function(e){e[e.DIRTY_FLAG=0]="DIRTY_FLAG",e[e.LAYER=1]="LAYER",e[e.WORLD_SCALE=2]="WORLD_SCALE",e[e.WORLD_POSITION=5]="WORLD_POSITION",e[e.WORLD_ROTATION=8]="WORLD_ROTATION",e[e.WORLD_MATRIX=12]="WORLD_MATRIX",e[e.LOCAL_SCALE=28]="LOCAL_SCALE",e[e.LOCAL_POSITION=31]="LOCAL_POSITION",e[e.LOCAL_ROTATION=34]="LOCAL_ROTATION",e[e.COUNT=38]="COUNT"}(Qr||(Qr={}));const Jr={[Qr.DIRTY_FLAG]:Yr.UINT32,[Qr.LAYER]:Yr.UINT32,[Qr.WORLD_SCALE]:Yr.FLOAT32,[Qr.WORLD_POSITION]:Yr.FLOAT32,[Qr.WORLD_ROTATION]:Yr.FLOAT32,[Qr.WORLD_MATRIX]:Yr.FLOAT32,[Qr.LOCAL_SCALE]:Yr.FLOAT32,[Qr.LOCAL_POSITION]:Yr.FLOAT32,[Qr.LOCAL_ROTATION]:Yr.FLOAT32,[Qr.COUNT]:Yr.NEVER},Zr={[Qr.DIRTY_FLAG]:Qr.LAYER-Qr.DIRTY_FLAG,[Qr.LAYER]:Qr.WORLD_SCALE-Qr.LAYER,[Qr.WORLD_SCALE]:Qr.WORLD_POSITION-Qr.WORLD_SCALE,[Qr.WORLD_POSITION]:Qr.WORLD_ROTATION-Qr.WORLD_POSITION,[Qr.WORLD_ROTATION]:Qr.WORLD_MATRIX-Qr.WORLD_ROTATION,[Qr.WORLD_MATRIX]:Qr.LOCAL_SCALE-Qr.WORLD_MATRIX,[Qr.LOCAL_SCALE]:Qr.LOCAL_POSITION-Qr.LOCAL_SCALE,[Qr.LOCAL_POSITION]:Qr.LOCAL_ROTATION-Qr.LOCAL_POSITION,[Qr.LOCAL_ROTATION]:Qr.COUNT-Qr.LOCAL_ROTATION,[Qr.COUNT]:1},ea=new Kr($r.NODE,Jr,Zr,Qr);let ta;!function(e){e[e.PRIORITY=0]="PRIORITY",e[e.STAGE=1]="STAGE",e[e.PHASE=2]="PHASE",e[e.PRIMITIVE=3]="PRIMITIVE",e[e.BATCHING_SCHEME=4]="BATCHING_SCHEME",e[e.DYNAMIC_STATE=5]="DYNAMIC_STATE",e[e.HASH=6]="HASH",e[e.COUNT=7]="COUNT"}(ta||(ta={}));const na={[ta.PRIORITY]:Yr.UINT32,[ta.STAGE]:Yr.UINT32,[ta.PHASE]:Yr.UINT32,[ta.PRIMITIVE]:Yr.UINT32,[ta.BATCHING_SCHEME]:Yr.UINT32,[ta.DYNAMIC_STATE]:Yr.UINT32,[ta.HASH]:Yr.UINT32,[ta.COUNT]:Yr.NEVER},ia={[ta.PRIORITY]:ta.STAGE-ta.PRIORITY,[ta.STAGE]:ta.PHASE-ta.STAGE,[ta.PHASE]:ta.PRIMITIVE-ta.PHASE,[ta.PRIMITIVE]:ta.BATCHING_SCHEME-ta.PRIMITIVE,[ta.BATCHING_SCHEME]:ta.DYNAMIC_STATE-ta.BATCHING_SCHEME,[ta.DYNAMIC_STATE]:ta.HASH-ta.DYNAMIC_STATE,[ta.HASH]:ta.COUNT-ta.HASH,[ta.COUNT]:1},sa=new Kr($r.PASS,na,ia,ta);let oa;!function(e){e[e.CENTER=0]="CENTER",e[e.HALFEXTENTS=3]="HALFEXTENTS",e[e.COUNT=6]="COUNT"}(oa||(oa={}));const ra={[oa.CENTER]:Yr.FLOAT32,[oa.HALFEXTENTS]:Yr.FLOAT32,[oa.COUNT]:Yr.NEVER},aa={[oa.CENTER]:oa.HALFEXTENTS-oa.CENTER,[oa.HALFEXTENTS]:oa.COUNT-oa.HALFEXTENTS,[oa.COUNT]:1},ca=new Kr($r.AABB,ra,aa,oa),la=ns.Node,ha=ns.Scene,ua=ns.Model,_a=ns.SkinningModel,da=ns.BakedSkinningModel,pa=ns.light,fa=ns.DirectionalLight,ma=ns.SpotLight,ga=ns.SphereLight,va=ns.Skybox,ya=ns.Fog,xa=ns.Ambient,Sa=ns.Shadow,Ca=ns.OctreeInfo,Ea=ns.Camera,Ta=ns.RenderWindow,ba=ns.RenderScene,Aa=ns.DrawBatch2D,Pa=ns.Pass,wa=ns.SubModel,Ia=ns.Root,Ra=ns.PipelineSharedSceneData,Da=ns.AABB,Oa=nr.GeometryRenderer,Na=new gn,Ma=new gn,La=new gn,Ba=new gn,Fa=new Sn,za=(e,t,n)=>{Fa.m00=Math.abs(n.m00),Fa.m01=Math.abs(n.m01),Fa.m02=Math.abs(n.m02),Fa.m03=Math.abs(n.m04),Fa.m04=Math.abs(n.m05),Fa.m05=Math.abs(n.m06),Fa.m06=Math.abs(n.m08),Fa.m07=Math.abs(n.m09),Fa.m08=Math.abs(n.m10),gn.transformMat3(e,t,Fa)};class Ua{static create(e,t,n,i,s,o){return new Ua(e,t,n,i,s,o)}static clone(e){return new Ua(e.center.x,e.center.y,e.center.z,e.halfExtents.x,e.halfExtents.y,e.halfExtents.z)}static copy(e,t){return gn.copy(e.center,t.center),gn.copy(e.halfExtents,t.halfExtents),e}static fromPoints(e,t,n){return gn.add(Na,n,t),gn.subtract(Ma,n,t),gn.multiplyScalar(e.center,Na,.5),gn.multiplyScalar(e.halfExtents,Ma,.5),e}static set(e,t,n,i,s,o,r){return e.center.set(t,n,i),e.halfExtents.set(s,o,r),e}static merge(e,t,n){return gn.subtract(Na,t.center,t.halfExtents),gn.subtract(Ma,n.center,n.halfExtents),gn.add(La,t.center,t.halfExtents),gn.add(Ba,n.center,n.halfExtents),gn.max(Ba,La,Ba),gn.min(La,Na,Ma),Ua.fromPoints(e,La,Ba)}static toBoundingSphere(e,t){return e.center.set(t.center),e.radius=t.halfExtents.length(),e}static transform(e,t,n){return gn.transformMat4(e.center,t.center,n),za(e.halfExtents,t.halfExtents,n),e}get type(){return this._type}constructor(e=0,t=0,n=0,i=1,s=1,o=1){return this.center=void 0,this.halfExtents=void 0,this._type=void 0,this._aabbHandle=0,this._type=qo.SHAPE_AABB,this._aabbHandle=ca.alloc(),this.center=new gn(ca.getTypedArray(this._aabbHandle,oa.CENTER)),this.halfExtents=new gn(ca.getTypedArray(this._aabbHandle,oa.HALFEXTENTS)),this.center.set(e,t,n),this.halfExtents.set(i,s,o),this._nativeObj=new Da,void this._nativeObj.initWithData(ca.getBuffer(this._aabbHandle))}get native(){return this._nativeObj}getBoundary(e,t){gn.subtract(e,this.center,this.halfExtents),gn.add(t,this.center,this.halfExtents)}transform(e,t,n,i,s){gn.transformMat4(s.center,this.center,e),za(s.halfExtents,this.halfExtents,e)}clone(){return Ua.clone(this)}copy(e){return Ua.copy(this,e)}mergePoint(e){this.getBoundary(Na,Ma),e.x<Na.x&&(Na.x=e.x),e.y<Na.y&&(Na.y=e.y),e.z<Na.z&&(Na.z=e.z),e.x>Ma.x&&(Ma.x=e.x),e.y>Ma.y&&(Ma.y=e.y),e.z>Ma.z&&(Ma.z=e.z),gn.add(La,Na,Ma),this.center.set(gn.multiplyScalar(La,La,.5)),this.halfExtents.set(Ma.x-La.x,Ma.y-La.y,Ma.z-La.z)}mergePoints(e){if(!(e.length<1))for(let t=0;t<e.length;t++)this.mergePoint(e[t])}mergeFrustum(e){return this.mergePoints(e.vertices)}}const Ga=new gn,Va=new gn,Ha=new Sn;class ka{static create(e,t,n,i,s,o,r,a,c,l,h,u,_,d,p){return new ka(e,t,n,i,s,o,r,a,c,l,h,u,_,d,p)}static clone(e){return new ka(e.center.x,e.center.y,e.center.z,e.halfExtents.x,e.halfExtents.y,e.halfExtents.z,e.orientation.m00,e.orientation.m01,e.orientation.m02,e.orientation.m03,e.orientation.m04,e.orientation.m05,e.orientation.m06,e.orientation.m07,e.orientation.m08)}static copy(e,t){return gn.copy(e.center,t.center),gn.copy(e.halfExtents,t.halfExtents),Sn.copy(e.orientation,t.orientation),e}static fromPoints(e,t,n){return gn.multiplyScalar(e.center,gn.add(Ga,t,n),.5),gn.multiplyScalar(e.halfExtents,gn.subtract(Va,n,t),.5),Sn.identity(e.orientation),e}static set(e,t,n,i,s,o,r,a,c,l,h,u,_,d,p,f){return gn.set(e.center,t,n,i),gn.set(e.halfExtents,s,o,r),Sn.set(e.orientation,a,c,l,h,u,_,d,p,f),e}get type(){return this._type}constructor(e=0,t=0,n=0,i=1,s=1,o=1,r=1,a=0,c=0,l=0,h=1,u=0,_=0,d=0,p=1){this.center=void 0,this.halfExtents=void 0,this.orientation=void 0,this._type=void 0,this._type=qo.SHAPE_OBB,this.center=new gn(e,t,n),this.halfExtents=new gn(i,s,o),this.orientation=new Sn(r,a,c,l,h,u,_,d,p)}getBoundary(e,t){var n,i,s;n=Ga,i=this.halfExtents,s=this.orientation,Ha.m00=Math.abs(s.m00),Ha.m01=Math.abs(s.m01),Ha.m02=Math.abs(s.m02),Ha.m03=Math.abs(s.m03),Ha.m04=Math.abs(s.m04),Ha.m05=Math.abs(s.m05),Ha.m06=Math.abs(s.m06),Ha.m07=Math.abs(s.m07),Ha.m08=Math.abs(s.m08),gn.transformMat3(n,i,Ha),gn.subtract(e,this.center,Ga),gn.add(t,this.center,Ga)}transform(e,t,n,i,s){gn.transformMat4(s.center,this.center,e),Sn.fromQuat(s.orientation,n),gn.multiply(s.halfExtents,this.halfExtents,i)}translateAndRotate(e,t,n){gn.transformMat4(n.center,this.center,e),Sn.fromQuat(n.orientation,t)}setScale(e,t){gn.multiply(t.halfExtents,this.halfExtents,e)}}class ja{get type(){return this._type}constructor(e=.5,t=.5,n=1){this._type=void 0,this.radius=void 0,this.halfHeight=void 0,this.axis=void 0,this.center=void 0,this.rotation=void 0,this.ellipseCenter0=void 0,this.ellipseCenter1=void 0,this._type=qo.SHAPE_CAPSULE,this.radius=e,this.halfHeight=t,this.axis=n,this.center=new gn,this.rotation=new Tn,this.ellipseCenter0=new gn(0,t,0),this.ellipseCenter1=new gn(0,-t,0),this.updateCache()}transform(e,t,n,i,s){const o=i,r=ln(o);s.radius=this.radius*Math.abs(r);let a=(this.halfHeight+this.radius)*Math.abs(o.y)-s.radius;a<0&&(a=0),s.halfHeight=a,gn.transformMat4(s.center,this.center,e),Tn.multiply(s.rotation,this.rotation,n),s.updateCache()}updateCache(){this.updateLocalCenter(),gn.transformQuat(this.ellipseCenter0,this.ellipseCenter0,this.rotation),gn.transformQuat(this.ellipseCenter1,this.ellipseCenter1,this.rotation),this.ellipseCenter0.add(this.center),this.ellipseCenter1.add(this.center)}updateLocalCenter(){const e=this.halfHeight;switch(this.axis){case 0:this.ellipseCenter0.set(e,0,0),this.ellipseCenter1.set(-e,0,0);break;case 1:this.ellipseCenter0.set(0,e,0),this.ellipseCenter1.set(0,-e,0);break;case 2:this.ellipseCenter0.set(0,0,e),this.ellipseCenter1.set(0,0,-e)}}}const Wa=new Array(8);Wa[0]=new gn(1,1,1),Wa[1]=new gn(-1,1,1),Wa[2]=new gn(-1,-1,1),Wa[3]=new gn(1,-1,1),Wa[4]=new gn(1,1,-1),Wa[5]=new gn(-1,1,-1),Wa[6]=new gn(-1,-1,-1),Wa[7]=new gn(1,-1,-1);const qa=new gn,Xa=new gn,Ya=new gn;class Ka{static createFromAABB(e,t){const n=new gn,i=new gn;return gn.subtract(n,t.center,t.halfExtents),gn.add(i,t.center,t.halfExtents),e.vertices[0].set(n.x,i.y,n.z),e.vertices[1].set(i.x,i.y,n.z),e.vertices[2].set(i.x,n.y,n.z),e.vertices[3].set(n.x,n.y,n.z),e.vertices[4].set(n.x,i.y,i.z),e.vertices[5].set(i.x,i.y,i.z),e.vertices[6].set(i.x,n.y,i.z),e.vertices[7].set(n.x,n.y,i.z),e._type!==qo.SHAPE_FRUSTUM_ACCURATE||e.updatePlanes(),e}static split(e,t,n,i,s){const o=Math.tan(.5*t.fov),r=o*t.aspect;qa.set(i*r,i*o,i),Xa.set(s*r,s*o,s);const a=e.vertices;return Ya.set(qa.x,qa.y,qa.z),gn.transformMat4(a[0],Ya,n),Ya.set(-qa.x,qa.y,qa.z),gn.transformMat4(a[1],Ya,n),Ya.set(-qa.x,-qa.y,qa.z),gn.transformMat4(a[2],Ya,n),Ya.set(qa.x,-qa.y,qa.z),gn.transformMat4(a[3],Ya,n),Ya.set(Xa.x,Xa.y,Xa.z),gn.transformMat4(a[4],Ya,n),Ya.set(-Xa.x,Xa.y,Xa.z),gn.transformMat4(a[5],Ya,n),Ya.set(-Xa.x,-Xa.y,Xa.z),gn.transformMat4(a[6],Ya,n),Ya.set(Xa.x,-Xa.y,Xa.z),gn.transformMat4(a[7],Ya,n),e.updatePlanes(),e}static create(){return new Ka}static clone(e){return Ka.copy(new Ka,e)}static copy(e,t){e._type=t._type;for(let n=0;n<6;++n)qr.copy(e.planes[n],t.planes[n]);for(let n=0;n<8;++n)gn.copy(e.vertices[n],t.vertices[n]);return e}set accurate(e){this._type=e?qo.SHAPE_FRUSTUM_ACCURATE:qo.SHAPE_FRUSTUM}get type(){return this._type}constructor(){this.planes=void 0,this.vertices=void 0,this._type=void 0,this._type=qo.SHAPE_FRUSTUM,this.planes=new Array(6);for(let e=0;e<6;++e)this.planes[e]=qr.create(0,0,0,0);this.vertices=new Array(8);for(let e=0;e<8;++e)this.vertices[e]=new gn}update(e,t){if(gn.set(this.planes[0].n,e.m03+e.m00,e.m07+e.m04,e.m11+e.m08),this.planes[0].d=-(e.m15+e.m12),gn.set(this.planes[1].n,e.m03-e.m00,e.m07-e.m04,e.m11-e.m08),this.planes[1].d=-(e.m15-e.m12),gn.set(this.planes[2].n,e.m03+e.m01,e.m07+e.m05,e.m11+e.m09),this.planes[2].d=-(e.m15+e.m13),gn.set(this.planes[3].n,e.m03-e.m01,e.m07-e.m05,e.m11-e.m09),this.planes[3].d=-(e.m15-e.m13),gn.set(this.planes[4].n,e.m03+e.m02,e.m07+e.m06,e.m11+e.m10),this.planes[4].d=-(e.m15+e.m14),gn.set(this.planes[5].n,e.m03-e.m02,e.m07-e.m06,e.m11-e.m10),this.planes[5].d=-(e.m15-e.m14),this._type===qo.SHAPE_FRUSTUM_ACCURATE){for(let e=0;e<6;e++){const t=this.planes[e],n=1/t.n.length();gn.multiplyScalar(t.n,t.n,n),t.d*=n}for(let e=0;e<8;e++)gn.transformMat4(this.vertices[e],Wa[e],t)}}transform(e){if(this._type===qo.SHAPE_FRUSTUM_ACCURATE){for(let t=0;t<8;t++)gn.transformMat4(this.vertices[t],this.vertices[t],e);this.updatePlanes()}}updatePlanes(){qr.fromPoints(this.planes[0],this.vertices[1],this.vertices[6],this.vertices[5]),qr.fromPoints(this.planes[1],this.vertices[3],this.vertices[4],this.vertices[7]),qr.fromPoints(this.planes[2],this.vertices[6],this.vertices[3],this.vertices[7]),qr.fromPoints(this.planes[3],this.vertices[0],this.vertices[5],this.vertices[4]),qr.fromPoints(this.planes[4],this.vertices[2],this.vertices[0],this.vertices[3]),qr.fromPoints(this.planes[5],this.vertices[7],this.vertices[5],this.vertices[6])}}let $a,Qa,Ja,Za,ec,tc;Ka.createOrtho=(e,t,n,i,s,o)=>{const r=t/2,a=n/2;gn.set(Ya,r,a,-i),gn.transformMat4(e.vertices[0],Ya,o),gn.set(Ya,-r,a,-i),gn.transformMat4(e.vertices[1],Ya,o),gn.set(Ya,-r,-a,-i),gn.transformMat4(e.vertices[2],Ya,o),gn.set(Ya,r,-a,-i),gn.transformMat4(e.vertices[3],Ya,o),gn.set(Ya,r,a,-s),gn.transformMat4(e.vertices[4],Ya,o),gn.set(Ya,-r,a,-s),gn.transformMat4(e.vertices[5],Ya,o),gn.set(Ya,-r,-a,-s),gn.transformMat4(e.vertices[6],Ya,o),gn.set(Ya,r,-a,-s),gn.transformMat4(e.vertices[7],Ya,o),qr.fromPoints(e.planes[0],e.vertices[1],e.vertices[6],e.vertices[5]),qr.fromPoints(e.planes[1],e.vertices[3],e.vertices[4],e.vertices[7]),qr.fromPoints(e.planes[2],e.vertices[6],e.vertices[3],e.vertices[7]),qr.fromPoints(e.planes[3],e.vertices[0],e.vertices[5],e.vertices[4]),qr.fromPoints(e.planes[4],e.vertices[2],e.vertices[0],e.vertices[3]),qr.fromPoints(e.planes[5],e.vertices[7],e.vertices[5],e.vertices[6])},function(e){e[e.Default=0]="Default",e[e.Normal=1]="Normal",e[e.Loop=2]="Loop",e[e.ShouldWrap=4]="ShouldWrap",e[e.Clamp=8]="Clamp",e[e.PingPong=22]="PingPong",e[e.Reverse=36]="Reverse"}($a||($a={})),function(e){e[e.Default=$a.Default]="Default",e[e.Normal=$a.Normal]="Normal",e[e.Reverse=$a.Reverse]="Reverse",e[e.Loop=$a.Loop]="Loop",e[e.LoopReverse=$a.Loop|$a.Reverse]="LoopReverse",e[e.PingPong=$a.PingPong]="PingPong",e[e.PingPongReverse=$a.PingPong|$a.Reverse]="PingPongReverse"}(Qa||(Qa={})),Ke(Qa);class nc{constructor(e){this.ratio=0,this.time=0,this.direction=1,this.stopped=!0,this.iterations=0,this.frameIndex=void 0,e&&this.set(e)}set(e){this.ratio=e.ratio,this.time=e.time,this.direction=e.direction,this.stopped=e.stopped,this.iterations=e.iterations,this.frameIndex=e.frameIndex}}function ic(e,t,n=1e-6){let i=0,s=e.length-1,o=s>>>1;for(;i<=s;o=i+s>>>1){const r=e[o];if(r>t+n)s=o-1;else{if(!(r<t-n))return o;i=o+1}}return~i}Ja=Symbol.iterator;class sc{constructor(){this._times=[],this._values=[]}get keyFramesCount(){return this._times.length}get rangeMin(){return this._times[0]}get rangeMax(){return this._times[this._values.length-1]}[Ja](){let e=0;return{next:()=>{if(e>=this._times.length)return{done:!0,value:void 0};{const t=[this._times[e],this._values[e]];return++e,{done:!1,value:t}}}}}keyframes(){return this}times(){return this._times}values(){return this._values}getKeyframeTime(e){return this._times[e]}getKeyframeValue(e){return this._values[e]}addKeyFrame(e,t){return this._insertNewKeyframe(e,t)}removeKeyframe(e){this._times.splice(e,1),this._values.splice(e,1)}indexOfKeyframe(e){return ic(this._times,e)}updateTime(e,t){const n=this._values[e];this.removeKeyframe(e),this._insertNewKeyframe(t,n)}assignSorted(e,t){if(void 0!==t)this.setKeyframes(e.slice(),t.slice());else{const t=Array.from(e);this.setKeyframes(t.map((([e])=>e)),t.map((([,e])=>e)))}}clear(){this._times.length=0,this._values.length=0}searchKeyframe(e){return ic(this._times,e)}setKeyframes(e,t){e.length,t.length,function(e){e.every(((e,t,n)=>0===t||e>n[t-1]||qt(e,n[t-1],1e-6)))}(e),this._times=e,this._values=t}_insertNewKeyframe(e,t){const n=this._times,i=this._values,s=n.length,o=ic(n,e);if(o>=0)return o;const r=~o;return 0===r?(n.unshift(e),i.unshift(t)):r===s?(n.push(e),i.push(t)):(n.splice(r-1,0,e),i.splice(r-1,0,t)),r}}function oc(e){return e>-1e-9&&e<1e-9}function rc(e,t,n,i){n&&Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(i):void 0})}function ac(e,t,n,i,s){var o={};return Object.keys(i).forEach((function(e){o[e]=i[e]})),o.enumerable=!!o.enumerable,o.configurable=!!o.configurable,("value"in o||o.initializer)&&(o.writable=!0),o=n.slice().reverse().reduce((function(n,i){return i(e,t,n)||n}),o),s&&void 0!==o.initializer&&(o.value=o.initializer?o.initializer.call(s):void 0,o.initializer=void 0),void 0===o.initializer&&(Object.defineProperty(e,t,o),o=null),o}zt.fastDefine("cc.KeyframeCurve",sc,{_times:[],_values:[]}),function(e){e[e.LINEAR=0]="LINEAR",e[e.CONSTANT=1]="CONSTANT",e[e.CUBIC=2]="CUBIC"}(Za||(Za=e("RealInterpolationMode",{}))),function(e){e[e.LINEAR=0]="LINEAR",e[e.CLAMP=1]="CLAMP",e[e.LOOP=2]="LOOP",e[e.PING_PONG=3]="PING_PONG"}(ec||(ec=e("ExtrapolationMode",{}))),function(e){e[e.NONE=0]="NONE",e[e.LEFT=1]="LEFT",e[e.RIGHT=2]="RIGHT",e[e.BOTH=3]="BOTH"}(tc||(tc=e("TangentWeightMode",{})));const cc=()=>{},lc=()=>cc,hc=uc((()=>{}));function uc(e){return function(t){return"function"==typeof t?e(t):function(n){return e(n,t)}}}function _c(e){return t=>n=>{!function(e,t,n){const i=pc(e);if(i){const e=fc(i,"proto");fc(e,"editor")[t]=n}}(n,e,t)}}const dc="__ccclassCache__";function pc(e){return fc(e,dc)}function fc(e,t){return e[t]||(e[t]={})}const mc=uc(((e,t)=>{let n=ke.getSuper(e);n===Object&&(n=null);const i={name:t,extends:n,ctor:e},s=e[dc];if(s){const t=s.proto;t&&ke.mixin(i,t),e[dc]=void 0}return zt(i)})),gc=_c("requireComponent"),vc=_c("executionOrder"),yc=hc;function xc(e,t,n){let i=null;function s(e,t,n){!function(e,t,n,i,s,o){let r;const a=o&&(o.get||o.set);s&&(r=Pt(s,a));const c=ke.mixin(t,r||s||{});a?(o.get&&(c.get=o.get),o.set&&(c.set=o.set)):Cc(e,c,n,i,o)}(function(e){return pc(e.constructor)}(e),function(e,t){var n,i;const s=fc(pc(e.constructor),"proto"),o=fc(s,"properties");return null!==(i=o[n=t])&&void 0!==i?i:o[n]={}}(e,t),e.constructor,t,i,n)}return void 0===e?xc({type:void 0}):void 0===t?(i=e,s):void s(e,t,n)}function Sc(e,t,n){var i,s;const o=pc(e.constructor),r=fc(o,"proto"),a=fc(r,"properties"),c=null!==(s=a[i=t])&&void 0!==s?s:a[i]={};return c.__internalFlags|=wt.STANDALONE,n&&(n.get||n.set)?(n.get&&(c.get=n.get),n.set&&(c.set=n.set)):Cc(o,c,e.constructor,t,n),c}function Cc(e,t,n,i,s){if(s)s.initializer&&(t.default=function(e){let t;try{t=e()}catch(t){return e}return"object"!=typeof t||null===t?t:e}(s.initializer));else{const s=e.default||(e.default=function(e){let t;try{t=new e}catch(e){return{}}return t}(n));s.hasOwnProperty(i)&&(t.default=s[i])}}const Ec=Symbol("cc:SerializationMetadata"),Tc=(e,t,n)=>{Pc(Sc(e,t,n))};function bc(e){return(t,n,i)=>{const s=Sc(t,n,i);s.formerlySerializedAs=e,Pc(s)}}const Ac=(e,t,n)=>{const i=Sc(e,t,n);i.editorOnly=!0,Pc(i)};function Pc(e){e.__internalFlags|=wt.IMPLICIT_SERIALIZABLE}const wc=cc,Ic=hc,Rc=lc,Dc=hc,Oc=lc,Nc=lc,Mc=lc,Lc=cc,Bc=lc,Fc=cc,zc=lc,Uc=lc,Gc=lc,Vc=lc,Hc=lc,kc=lc,jc=cc,Wc=lc,qc=cc,Xc=cc,Yc=cc,Kc=Zc(gt),$c=Zc(vt),Qc=Zc(yt),Jc=Zc(xt);function Zc(e){return xc({type:e})}const el=(e,t,n)=>{Sc(e,t,n).override=!0},tl=e("editorExtrasTag","__editorExtras__");const nl=class{};var il=Object.freeze({__proto__:null,uniquelyReferenced:wc,ccclass:mc,property:xc,requireComponent:gc,executionOrder:vc,disallowMultiple:yc,allowReplicated:e=>{zt.Attr.setClassAttr(e,"replicated","visible",!0)},executeInEditMode:Ic,menu:Rc,playOnFocus:Dc,inspector:Oc,icon:Nc,help:Mc,type:Zc,integer:Kc,float:$c,boolean:Qc,string:Jc});e("_decorator",il);const sl=1<<22,ol=[];class rl{static _deferredDestroy(){const e=ol.length;for(let t=0;t<e;++t){const e=ol[t];1&e._objFlags||e._destroyImmediate()}e===ol.length?ol.length=0:ol.splice(0,e)}constructor(e=""){this._objFlags=void 0,this._name=void 0,this._name=e,this._objFlags=0}get name(){return this._name}set name(e){this._name=e}set hideFlags(e){const t=e&rl.Flags.AllHideMasks;this._objFlags=this._objFlags&~rl.Flags.AllHideMasks|t}get hideFlags(){return this._objFlags&rl.Flags.AllHideMasks}set replicated(e){e?this._objFlags|=sl:this._objFlags&=-4194305}get replicated(){return!!(this._objFlags&sl)}get isValid(){return!(1&this._objFlags)}destroy(){return 1&this._objFlags?(D(5e3),!1):!(4&this._objFlags||(this._objFlags|=4,ol.push(this),0))}_destruct(){const e=this.constructor;let t=e.__destruct__;t||(t=function(e,t){const n=e instanceof u._BaseNode||e instanceof u.Component,i=n?"_id":null;let s;const o={};for(s in e)if(e.hasOwnProperty(s)){if(s===i)continue;switch(typeof e[s]){case"string":o[s]="";break;case"object":case"function":o[s]=null}}if(zt._isCCClass(t)){const e=u.Class.Attr.getClassAttrs(t),i=t.__props__;for(let t=0;t<i.length;t++){s=i[t];const r=`${s+u.Class.Attr.DELIMETER}default`;if(r in e){if(n&&"_id"===s)continue;switch(typeof e[r]){case"string":o[s]="";break;case"object":case"function":o[s]=null;break;case"undefined":o[s]=void 0}}}}{let e="";for(s in o){let t;t=zt.IDENTIFIER_RE.test(s)?`o.${s}=`:`o[${zt.escapeForJS(s)}]=`;let n=o[s];""===n&&(n='""'),e+=`${t+n};\n`}return Function("o",e)}}(this,e),he(e,"__destruct__",t,!0)),t(this)}_destroyImmediate(){1&this._objFlags?N(5e3):(this._onPreDestroy&&this._onPreDestroy(),this._destruct(),this._objFlags|=1)}}e("CCObject",rl);const al=rl.prototype;function cl(e,t){return"object"==typeof e?!(!e||e._objFlags&(t?5:1)):void 0!==e}al._deserialize=null,al._onPreDestroy=null,zt.fastDefine("cc.Object",rl,{_name:"",_objFlags:0,[tl]:{}}),zt.Attr.setClassAttr(rl,tl,"editorOnly",!0),zt.Attr.setClassAttr(rl,"replicated","visible",!1),he(rl,"Flags",{Destroyed:1,DontSave:8,EditorOnly:16,Dirty:32,DontDestroy:64,PersistentMask:-4192741,Destroying:128,Deactivating:256,LockedInEditor:512,HideInHierarchy:1024,AllHideMasks:1560,IsPreloadStarted:8192,IsOnLoadStarted:32768,IsOnLoadCalled:16384,IsOnEnableCalled:2048,IsStartCalled:65536,IsEditorOnEnableCalled:4096,IsPositionLocked:1<<21,IsRotationLocked:1<<17,IsScaleLocked:1<<18,IsAnchorLocked:1<<19,IsSizeLocked:1<<20}),u.isValid=cl,u.Object=rl;class ll{constructor(e){this._map=null,this._count=0,e?(this._map=e,this._count=Object.keys(e).length):(this._map=ke.createMap(!0),this._count=0)}add(e,t){return e in this._map||this._count++,this._map[e]=t}get(e){return this._map[e]}has(e){return e in this._map}remove(e){const t=this._map[e];return e in this._map&&(delete this._map[e],this._count--),t}clear(){0!==this._count&&(this._map=ke.createMap(!0),this._count=0)}forEach(e){for(const t in this._map)e(this._map[t],t)}find(e){for(const t in this._map)if(e(this._map[t],t))return this._map[t];return null}get count(){return this._count}destroy(){this._map=null}}class hl{constructor(e,t){this.id=hl._pipelineId++,this.name="",this.pipes=[],this.name=e;for(let e=0,n=t.length;e<n;e++)this.pipes.push(t[e])}insert(e,t){return t>this.pipes.length?(D(4921),this):(this.pipes.splice(t,0,e),this)}append(e){return this.pipes.push(e),this}remove(e){return this.pipes.splice(e,1),this}sync(e){const t=this.pipes;if(0===t.length)return null;e.isFinish=!1;for(let n=0,i=t.length;n<i;){const s=(0,t[n])(e);if(s)return e.isFinish=!0,s;n++,n!==i&&(e.input=e.output,e.output=null)}return e.isFinish=!0,e.output}async(e){0!==this.pipes.length&&(e.isFinish=!1,this._flow(0,e))}_flow(e,t){(0,this.pipes[e])(t,(n=>{n?(t.isFinish=!0,t.dispatch("complete",n)):++e<this.pipes.length?(t.input=t.output,t.output=null,this._flow(e,t)):(t.isFinish=!0,t.dispatch("complete",n,t.output))}))}}hl._pipelineId=0;const ul=new ll,_l=new ll,dl=new ll,pl=new ll,fl=new hl("normal load",[]),ml=new hl("fetch",[]),gl=new hl("transform url",[]);let vl;!function(e){e.UUID="uuid",e.PATH="path",e.DIR="dir",e.URL="url",e.SCENE="scene"}(vl||(vl={}));const yl={default:{priority:0},preload:{maxConcurrency:6,maxRequestsPerFrame:2,priority:-1},scene:{maxConcurrency:20,maxRequestsPerFrame:20,priority:1},bundle:{maxConcurrency:20,maxRequestsPerFrame:20,priority:2},remote:{maxRetryCount:4}};let xl;!function(e){e.RESOURCES="resources",e.MAIN="main",e.START_SCENE="start-scene"}(xl||(xl={}));class Sl{static create(e){let t;return 0!==Sl._deadPool.length?(t=Sl._deadPool.pop(),t.set(e)):t=new Sl(e),t}constructor(e){this.id=Sl._taskId++,this.onComplete=null,this.onProgress=null,this.onError=null,this.source=null,this.output=null,this.input=null,this.progress=null,this.options=null,this.isFinish=!0,this.set(e)}set(e=Object.create(null)){this.onComplete=e.onComplete||null,this.onProgress=e.onProgress||null,this.onError=e.onError||null,this.source=this.input=e.input,this.output=null,this.progress=e.progress,this.options=e.options||Object.create(null)}dispatch(e,t,n,i,s){switch(e){case"complete":this.onComplete&&this.onComplete(t,n);break;case"progress":this.onProgress&&this.onProgress(t,n,i,s);break;case"error":this.onError&&this.onError(t,n,i,s);break;default:{const o=`on${e[0].toUpperCase()}${e.substr(1)}`;"function"==typeof this[o]&&this[o](t,n,i,s);break}}}recycle(){Sl._deadPool.length!==Sl.MAX_DEAD_NUM&&(this.onComplete=null,this.onProgress=null,this.onError=null,this.source=this.output=this.input=null,this.progress=null,this.options=null,Sl._deadPool.push(this))}}Sl.MAX_DEAD_NUM=500,Sl._taskId=0,Sl._deadPool=[];const Cl="0123456789abcdef".split(""),El=["","","",""],Tl=El.concat(El,"-",El,"-",El,"-",El,"-",El,El,El),bl=Tl.map(((e,t)=>"-"===e?NaN:t)).filter(isFinite);function Al(e){const t=e.split("@")[0];if(22!==t.length)return e;Tl[0]=e[0],Tl[1]=e[1];for(let t=2,n=2;t<22;t+=2){const i=et[e.charCodeAt(t)],s=et[e.charCodeAt(t+1)];Tl[bl[n++]]=Cl[i>>2],Tl[bl[n++]]=Cl[(3&i)<<2|s>>4],Tl[bl[n++]]=Cl[15&s]}return e.replace(t,Tl.join(""))}const Pl=/.*[/\\][0-9a-fA-F]{2}[/\\]([0-9a-fA-F-@]{8,}).*/;function wl(e){const t=Pl.exec(e);return t?t[1]:""}function Il(e,t){(t=t||Object.create(null)).__isNative__=t.isNative,t.nativeExt&&(t.ext=t.nativeExt);const n=pl.find((t=>!!t.getAssetInfo(e)));return n&&(t.bundle=n.name),Ol(e,t)}function Rl(e){return!!e&&(e instanceof u.SceneAsset||e instanceof u.Scene)}function Dl(e){return e&&(46===e.charCodeAt(0)&&47===e.charCodeAt(1)?e=e.slice(2):47===e.charCodeAt(0)&&(e=e.slice(1))),e}function Ol(e,t){const n=Sl.create({input:e,options:t}),i=[];try{const e=gl.sync(n);for(const t of e){const e=t.url;t.recycle(),i.push(e)}}catch(e){for(const e of n.output)e.recycle();C(e.message,e.stack)}return n.recycle(),i.length>1?i:i[0]}var Nl=Object.freeze({__proto__:null,getUuidFromURL:wl,getUrlWithUuid:Il,isScene:Rl,normalize:Dl,transform:Ol,decodeUuid:Al});const Ml=new class{constructor(){this._pools=[],this._lastShrinkPassed=0,this.shrinkTimeSpan=5}addContainer(e){-1===e._poolHandle&&(e._poolHandle=this._pools.length,this._pools.push(e))}removeContainer(e){-1!==e._poolHandle&&(this._pools[this._pools.length-1]._poolHandle=e._poolHandle,J(this._pools,e._poolHandle),e._poolHandle=-1)}tryShrink(){for(let e=0;e<this._pools.length;e++)this._pools[e].tryShrink()}update(e){this._lastShrinkPassed+=e,this._lastShrinkPassed>this.shrinkTimeSpan&&(this.tryShrink(),this._lastShrinkPassed-=this.shrinkTimeSpan)}};class Ll{constructor(){this._poolHandle=-1,Ml.addContainer(this)}destroy(){Ml.removeContainer(this)}}class Bl extends Ll{constructor(e,t,n){super(),this._ctor=void 0,this._elementsPerBatch=void 0,this._nextAvail=void 0,this._freepool=[],this._dtor=void 0,this._ctor=e,this._dtor=n||null,this._elementsPerBatch=Math.max(t,1),this._nextAvail=this._elementsPerBatch-1;for(let t=0;t<this._elementsPerBatch;++t)this._freepool.push(e())}alloc(){if(this._nextAvail<0){this._freepool.length=this._elementsPerBatch;for(let e=0;e<this._elementsPerBatch;e++)this._freepool[e]=this._ctor();this._nextAvail=this._elementsPerBatch-1}return this._freepool[this._nextAvail--]}free(e){this._freepool[++this._nextAvail]=e}freeArray(e){this._freepool.length=this._nextAvail+1,Array.prototype.push.apply(this._freepool,e),this._nextAvail+=e.length}tryShrink(){if(this._nextAvail>>1>this._elementsPerBatch){if(this._dtor)for(let e=this._nextAvail>>1;e<=this._nextAvail;e++)this._dtor(this._freepool[e]);this._freepool.length=this._nextAvail>>1,this._nextAvail=this._freepool.length-1}}destroy(){const e=arguments.length>0?arguments[0]:null;e&&D(14100);const t=e||this._dtor;if(t)for(let e=0;e<=this._nextAvail;e++)t(this._freepool[e]);this._freepool.length=0,this._nextAvail=-1,super.destroy()}}e("Pool",Bl);class Fl extends Ll{constructor(e,t,n){super(),this._fn=void 0,this._dtor=null,this._count=0,this._data=void 0,this._initSize=0,this._fn=e,this._dtor=n||null,this._data=new Array(t),this._initSize=t;for(let n=0;n<t;++n)this._data[n]=e()}get length(){return this._count}get data(){return this._data}reset(){this._count=0}resize(e){if(e>this._data.length)for(let t=this._data.length;t<e;++t)this._data[t]=this._fn()}add(){return this._count>=this._data.length&&this.resize(this._data.length<<1),this._data[this._count++]}destroy(){if(this._dtor)for(let e=0;e<this._data.length;e++)this._dtor(this._data[e]);this._data.length=0,this._count=0,super.destroy()}tryShrink(){if(this._data.length>>2>this._count){const e=Math.max(this._initSize,this._data.length>>1);if(this._dtor)for(let t=e;t<this._data.length;t++)this._dtor(this._data[t]);this._data.length=e}}removeAt(e){if(e>=this._count)return;const t=this._count-1,n=this._data[e];this._data[e]=this._data[t],this._data[t]=n,this._count-=1}}e("RecyclePool",Fl);class zl extends Ll{constructor(e,t){super(),this.array=void 0,this.length=0,this._compareFn=void 0,this._initSize=0,this.array=new Array(e),this._initSize=e,this.length=0,this._compareFn=t}push(e){this.array[this.length++]=e}pop(){return this.array[--this.length]}get(e){return this.array[e]}clear(){this.length=0}destroy(){this.length=0,this.array.length=0,super.destroy()}tryShrink(){this.array.length>>2>this.length&&(this.array.length=Math.max(this._initSize,this.array.length>>1))}sort(){this.array.length=this.length,this.array.sort(this._compareFn)}concat(e){for(let t=0;t<e.length;++t)this.array[this.length++]=e[t]}fastRemove(e){if(e>=this.length||e<0)return;const t=--this.length;this.array[e]=this.array[t]}indexOf(e){for(let t=0,n=this.length;t<n;++t)if(this.array[t]===e)return t;return-1}}e("CachedArray",zl),e("memop",Object.freeze({__proto__:null,Pool:Bl,RecyclePool:Fl,CachedArray:zl}));const Ul=He.fastRemoveAt;function Gl(){}class Vl{constructor(){this.callback=Gl,this.target=void 0,this.once=!1}set(e,t,n){this.callback=e||Gl,this.target=t,this.once=!!n}reset(){this.target=void 0,this.callback=Gl,this.once=!1}check(){return!(this.target instanceof rl&&!cl(this.target,!0))}}const Hl=new Bl((()=>new Vl),32);class kl{constructor(){this.callbackInfos=[],this.isInvoking=!1,this.containCanceled=!1}removeByCallback(e){for(let t=0;t<this.callbackInfos.length;++t){const n=this.callbackInfos[t];n&&n.callback===e&&(n.reset(),Hl.free(n),Ul(this.callbackInfos,t),--t)}}removeByTarget(e){for(let t=0;t<this.callbackInfos.length;++t){const n=this.callbackInfos[t];n&&n.target===e&&(n.reset(),Hl.free(n),Ul(this.callbackInfos,t),--t)}}cancel(e){const t=this.callbackInfos[e];t&&(t.reset(),this.isInvoking?this.callbackInfos[e]=null:Ul(this.callbackInfos,e),Hl.free(t)),this.containCanceled=!0}cancelAll(){for(let e=0;e<this.callbackInfos.length;e++){const t=this.callbackInfos[e];t&&(t.reset(),Hl.free(t),this.callbackInfos[e]=null)}this.containCanceled=!0}purgeCanceled(){for(let e=this.callbackInfos.length-1;e>=0;--e)this.callbackInfos[e]||Ul(this.callbackInfos,e);this.containCanceled=!1}clear(){this.cancelAll(),this.callbackInfos.length=0,this.isInvoking=!1,this.containCanceled=!1}}const jl=new Bl((()=>new kl),16);class Wl{constructor(){this._callbackTable=pe(!0),this._offCallback=void 0}on(e,t,n,i){if(!this.hasEventListener(e,t,n)){let s=this._callbackTable[e];s||(s=this._callbackTable[e]=jl.alloc());const o=Hl.alloc();o.set(t,n,i),s.callbackInfos.push(o)}return t}hasEventListener(e,t,n){const i=this._callbackTable&&this._callbackTable[e];if(!i)return!1;const s=i.callbackInfos;if(!t){if(i.isInvoking){for(let e=0;e<s.length;++e)if(s[e])return!0;return!1}return s.length>0}for(let e=0;e<s.length;++e){const i=s[e];if(i&&i.check()&&i.callback===t&&i.target===n)return!0}return!1}removeAll(e){const t=typeof e;if("string"===t||"number"===t){const t=this._callbackTable&&this._callbackTable[e];t&&(t.isInvoking?t.cancelAll():(t.clear(),jl.free(t),delete this._callbackTable[e]))}else if(e)for(const t in this._callbackTable){const n=this._callbackTable[t];if(n.isInvoking){const t=n.callbackInfos;for(let i=0;i<t.length;++i){const s=t[i];s&&s.target===e&&n.cancel(i)}}else n.removeByTarget(e)}}off(e,t,n){var i;const s=this._callbackTable&&this._callbackTable[e];if(s){const i=s.callbackInfos;if(t)for(let e=0;e<i.length;++e){const o=i[e];if(o&&o.callback===t&&o.target===n){s.cancel(e);break}}else this.removeAll(e)}null===(i=this._offCallback)||void 0===i||i.call(this)}emit(e,t,n,i,s,o){const r=this._callbackTable&&this._callbackTable[e];if(r){const a=!r.isInvoking;r.isInvoking=!0;const c=r.callbackInfos;for(let r=0,a=c.length;r<a;++r){const a=c[r];if(a){const r=a.callback,c=a.target;a.once&&this.off(e,r,c),a.check()?c?r.call(c,t,n,i,s,o):r(t,n,i,s,o):this.off(e,r,c)}}a&&(r.isInvoking=!1,r.containCanceled&&r.purgeCanceled())}}clear(){for(const e in this._callbackTable){const t=this._callbackTable[e];t&&(t.clear(),jl.free(t),delete this._callbackTable[e])}}_registerOffCallback(e){this._offCallback=e}}function ql(e){class t extends e{constructor(...e){super(...e),this._callbackTable=pe(!0)}once(e,t,n){return this.on(e,t,n,!0)}targetOff(e){this.removeAll(e)}}const n=Wl.prototype,i=Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n));for(let e=0;e<i.length;++e){const s=i[e];if(!(s in t.prototype)){const e=Object.getOwnPropertyDescriptor(n,s);e&&Object.defineProperty(t.prototype,s,e)}}return t}const Xl=e("EventTarget",ql(class{}));let Yl,Kl,$l,Ql,Jl,Zl;u.EventTarget=Xl,function(e){e.UNKNOWN="unknown",e.WECHAT="wechat",e.ANDROID="androidbrowser",e.IE="ie",e.EDGE="edge",e.QQ="qqbrowser",e.MOBILE_QQ="mqqbrowser",e.UC="ucbrowser",e.UCBS="ucbs",e.BROWSER_360="360browser",e.BAIDU_APP="baiduboxapp",e.BAIDU="baidubrowser",e.MAXTHON="maxthon",e.OPERA="opera",e.OUPENG="oupeng",e.MIUI="miuibrowser",e.FIREFOX="firefox",e.SAFARI="safari",e.CHROME="chrome",e.LIEBAO="liebao",e.QZONE="qzone",e.SOUGOU="sogou",e.HUAWEI="huawei"}(Yl||(Yl={})),function(e){e.UNKNOWN="unknown",e.ENGLISH="en",e.CHINESE="zh",e.FRENCH="fr",e.ITALIAN="it",e.GERMAN="de",e.SPANISH="es",e.DUTCH="du",e.RUSSIAN="ru",e.KOREAN="ko",e.JAPANESE="ja",e.HUNGARIAN="hu",e.PORTUGUESE="pt",e.ARABIC="ar",e.NORWEGIAN="no",e.POLISH="pl",e.TURKISH="tr",e.UKRAINIAN="uk",e.ROMANIAN="ro",e.BULGARIAN="bg"}(Kl||(Kl={})),function(e){e[e.NONE=0]="NONE",e[e.LAN=1]="LAN",e[e.WWAN=2]="WWAN"}($l||($l={})),function(e){e.UNKNOWN="Unknown",e.IOS="iOS",e.ANDROID="Android",e.WINDOWS="Windows",e.LINUX="Linux",e.OSX="OS X",e.OHOS="OHOS"}(Ql||(Ql={})),function(e){e.UNKNOWN="UNKNOWN",e.EDITOR_PAGE="EDITOR_PAGE",e.EDITOR_CORE="EDITOR_CORE",e.MOBILE_BROWSER="MOBILE_BROWSER",e.DESKTOP_BROWSER="DESKTOP_BROWSER",e.WIN32="WIN32",e.ANDROID="ANDROID",e.IOS="IOS",e.MACOS="MACOS",e.OHOS="OHOS",e.WECHAT_GAME="WECHAT_GAME",e.BAIDU_MINI_GAME="BAIDU_MINI_GAME",e.XIAOMI_QUICK_GAME="XIAOMI_QUICK_GAME",e.ALIPAY_MINI_GAME="ALIPAY_MINI_GAME",e.BYTEDANCE_MINI_GAME="BYTEDANCE_MINI_GAME",e.OPPO_MINI_GAME="OPPO_MINI_GAME",e.VIVO_MINI_GAME="VIVO_MINI_GAME",e.HUAWEI_QUICK_GAME="HUAWEI_QUICK_GAME",e.COCOSPLAY="COCOSPLAY",e.LINKSURE_MINI_GAME="LINKSURE_MINI_GAME",e.QTT_MINI_GAME="QTT_MINI_GAME"}(Jl||(Jl={})),function(e){e.WEBP="WEBP",e.IMAGE_BITMAP="IMAGE_BITMAP",e.WEB_VIEW="WEB_VIEW",e.VIDEO_PLAYER="VIDEO_PLAYER",e.SAFE_AREA="SAFE_AREA",e.INPUT_TOUCH="INPUT_TOUCH",e.EVENT_KEYBOARD="EVENT_KEYBOARD",e.EVENT_MOUSE="EVENT_MOUSE",e.EVENT_TOUCH="EVENT_TOUCH",e.EVENT_ACCELEROMETER="EVENT_ACCELEROMETER"}(Zl||(Zl={}));const eh={0:$l.NONE,1:$l.LAN,2:$l.WWAN},th={0:Jl.WIN32,2:Jl.MACOS,3:Jl.ANDROID,4:Jl.IOS,5:Jl.IOS,6:Jl.OHOS},nh=new class extends Xl{get networkType(){return eh[jsb.device.getNetworkType()]}constructor(){super(),this.isNative=void 0,this.isBrowser=void 0,this.isMobile=void 0,this.isLittleEndian=void 0,this.platform=void 0,this.language=void 0,this.nativeLanguage=void 0,this.os=void 0,this.osVersion=void 0,this.osMainVersion=void 0,this.browserType=void 0,this.browserVersion=void 0,this._featureMap=void 0,this.isNative=!0,this.isBrowser=!1,this.platform=th[__getPlatform()],this.isMobile=this.platform===Jl.ANDROID||this.platform===Jl.IOS||this.platform===Jl.OHOS,this.isLittleEndian=(()=>{const e=new ArrayBuffer(2);return new DataView(e).setInt16(0,256,!0),256===new Int16Array(e)[0]})();const e=__getCurrentLanguageCode();this.nativeLanguage=e?e.toLowerCase():Kl.UNKNOWN,this.language=__getCurrentLanguage(),this.os=__getOS(),this.osVersion=__getOSVersion(),this.osMainVersion=parseInt(this.osVersion),this.browserType=Yl.UNKNOWN,this.browserVersion="",this._featureMap={[Zl.WEBP]:!0,[Zl.IMAGE_BITMAP]:!1,[Zl.WEB_VIEW]:this.isMobile,[Zl.VIDEO_PLAYER]:this.isMobile,[Zl.SAFE_AREA]:this.isMobile,[Zl.INPUT_TOUCH]:this.isMobile,[Zl.EVENT_KEYBOARD]:!0,[Zl.EVENT_MOUSE]:!this.isMobile,[Zl.EVENT_TOUCH]:!0,[Zl.EVENT_ACCELEROMETER]:this.isMobile},this._registerEvent()}_registerEvent(){jsb.onPause=()=>{this.emit("hide"),u.internal.SplashScreen.instance.pauseRendering()},jsb.onResume=()=>{this.emit("show"),u.internal.SplashScreen.instance.resumeRendering()},jsb.onClose=()=>{this.emit("close")}}hasFeature(e){return this._featureMap[e]}getBatteryLevel(){return jsb.device.getBatteryLevel()}triggerGC(){jsb.garbageCollect()}openURL(e){jsb.openURL(e)}now(){return Date.now?Date.now():+new Date}restartJSVM(){__restartVM()}close(){__close()}},ih=/(\.[^\.\/\?\\]*)(\?.*)?$/,sh=/((.*)(\/|\\|\\\\))?(.*?\..*$)?/,oh=/[^\.\/]+\/\.\.\//;function rh(...e){let t="";for(const n of e)t=(t+(""===t?"":"/")+n).replace(/(\/|\\\\)$/,"");return t}function ah(e){const t=ih.exec(e);return t?t[1]:""}function ch(e){if(e){const t=e.lastIndexOf(".");if(-1!==t)return e.substring(0,t)}return e}function lh(e,t){const n=e.indexOf("?");n>0&&(e=e.substring(0,n));const i=/(\/|\\)([^\/\\]+)$/g.exec(e.replace(/(\/|\\)$/,""));if(!i)return e;const s=i[2];return t&&e.substring(e.length-t.length).toLowerCase()===t.toLowerCase()?s.substring(0,s.length-t.length):s}function hh(e){const t=sh.exec(e);return t?t[2]:""}function uh(e,t){t=t||"";let n=e.indexOf("?"),i="";return n>0&&(i=e.substring(n),e=e.substring(0,n)),n=e.lastIndexOf("."),n<0?e+t+i:e.substring(0,n)+t+i}function _h(e,t,n){if(0===t.indexOf("."))return uh(e,t);let i=e.indexOf("?"),s="";const o=n?ah(e):"";return i>0&&(s=e.substring(i),e=e.substring(0,i)),i=e.lastIndexOf("/"),i=i<=0?0:i+1,e.substring(0,i)+t+o+s}function dh(e){let t=e=String(e);do{t=e,e=e.replace(oh,"")}while(t.length!==e.length);return e}function ph(e){return e.replace(/[\/\\]$/,"")}function fh(){return nh.os===Ql.WINDOWS?"\\":"/"}var mh,gh,vh,yh;e("path",Object.freeze({__proto__:null,join:rh,extname:ah,mainFileName:ch,basename:lh,dirname:hh,changeExtname:uh,changeBasename:_h,_normalize:dh,stripSep:ph,getSeperator:fh}));let xh=e("Asset",mc("cc.Asset")((yh=class extends(ql(rl)){static deserialize(e){return u.deserialize(e)}get nativeUrl(){if(!this._nativeUrl){if(!this._native)return"";const e=this._native;if(47===e.charCodeAt(0))return e.slice(1);46===e.charCodeAt(0)?this._nativeUrl=Il(this._uuid,{nativeExt:e,isNative:!0}):this._nativeUrl=Il(this._uuid,{__nativeName__:e,nativeExt:ah(e),isNative:!0})}return this._nativeUrl}get _nativeAsset(){return this._file}set _nativeAsset(e){this._file=e}constructor(...e){super(...e),this.loaded=!0,rc(this,"_native",vh,this),this._nativeUrl="",this._file=null,this._ref=0,Object.defineProperty(this,"_uuid",{value:"",writable:!0})}toString(){return this.nativeUrl}serialize(){}_setRawAsset(e,t=!0){this._native=!1!==t?e||"":`/${e}`}get _nativeDep(){if(this._native)return{__isNative__:!0,uuid:this._uuid,ext:this._native}}get refCount(){return this._ref}addRef(){return this._ref++,this}decRef(e=!0){return this._ref>0&&this._ref--,e&&u.assetManager._releaseManager.tryRelease(this),this}onLoaded(){}initDefault(e){e&&(this._uuid=e),this.isDefault=!0}validate(){return!0}destroy(){return T(F(12101,this._uuid)),super.destroy()}},vh=ac((gh=yh).prototype,"_native",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),ac(gh.prototype,"_nativeAsset",[xc],Object.getOwnPropertyDescriptor(gh.prototype,"_nativeAsset"),gh.prototype),mh=gh))||mh);var Sh,Ch,Eh;xh.prototype.createNode=null,u.Asset=xh;let Th=e("Script",mc("cc.Script")(Sh=class extends xh{})||Sh);u._Script=Th;let bh=e("JavaScript",mc("cc.JavaScript")(Ch=class extends Th{})||Ch);u._JavaScript=bh;let Ah=e("TypeScript",mc("cc.TypeScript")(Eh=class extends Th{})||Eh);var Ph,wh,Ih,Rh,Dh,Oh,Nh,Mh,Lh,Bh,Fh;u._TypeScript=Ah;const zh=new ie("Comp"),Uh=rl.Flags.IsOnLoadCalled;let Gh=e("Component",(Ph=mc("cc.Component"),wh=zc(),Ih=Zc(Th),Rh=Uc(),Ph((Fh=Bh=class extends rl{constructor(...e){super(...e),rc(this,"node",Nh,this),rc(this,"_enabled",Mh,this),rc(this,"__prefab",Lh,this),this._sceneGetter=null,this._id=zh.getNewId()}get name(){if(this._name)return this._name;let e=fe(this);const t=e.lastIndexOf(".");return t>=0&&(e=e.slice(t+1)),this.node?`${this.node.name}<${e}>`:e}set name(e){this._name=e}get uuid(){return this._id}get __scriptAsset(){return null}get enabled(){return this._enabled}set enabled(e){if(this._enabled!==e&&(this._enabled=e,this.node.activeInHierarchy)){const t=u.director._compScheduler;e?t.enableComp(this):t.disableComp(this)}}get enabledInHierarchy(){return this._enabled&&this.node&&this.node.activeInHierarchy}get _isOnLoadCalled(){return this._objFlags&Uh}_getRenderScene(){return this._sceneGetter?this._sceneGetter():this.node.scene.renderScene}addComponent(e){return this.node.addComponent(e)}getComponent(e){return this.node.getComponent(e)}getComponents(e){return this.node.getComponents(e)}getComponentInChildren(e){return this.node.getComponentInChildren(e)}getComponentsInChildren(e){return this.node.getComponentsInChildren(e)}destroy(){return!!super.destroy()&&(this._enabled&&this.node.activeInHierarchy&&u.director._compScheduler.disableComp(this),!0)}_onPreDestroy(){this.unscheduleAllCallbacks(),u.director._nodeActivator.destroyComp(this),this.node._removeComponent(this)}_instantiate(e){return e||(e=u.instantiate._clone(this,this)),e&&(e.node=null),e}schedule(e,t=0,n=u.macro.REPEAT_FOREVER,i=0){L(e,1619),L((t=t||0)>=0,1620),n=Number.isNaN(n)?u.macro.REPEAT_FOREVER:n,i=i||0;const s=u.director.getScheduler(),o=s.isTargetPaused(this);s.schedule(e,this,t,n,i,o)}scheduleOnce(e,t=0){this.schedule(e,0,0,t)}unschedule(e){e&&u.director.getScheduler().unschedule(e,this)}unscheduleAllCallbacks(){u.director.getScheduler().unscheduleAllForTarget(this)}},Bh.system=null,ac((Oh=Fh).prototype,"__scriptAsset",[wh,Ih,Rh,Yc],Object.getOwnPropertyDescriptor(Oh.prototype,"__scriptAsset"),Oh.prototype),Nh=ac(Oh.prototype,"node",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Mh=ac(Oh.prototype,"_enabled",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Lh=ac(Oh.prototype,"__prefab",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Dh=Oh))||Dh));const Vh=Gh.prototype;var Hh,kh,jh;Vh.update=null,Vh.lateUpdate=null,Vh.__preload=null,Vh.onLoad=null,Vh.start=null,Vh.onEnable=null,Vh.onDisable=null,Vh.onDestroy=null,Vh.onFocusInEditor=null,Vh.onLostFocusInEditor=null,Vh.resetInEditor=null,Vh._getLocalBounds=null,Vh.onRestore=null,Gh._requireComponent=null,Gh._executionOrder=0,he(Gh,"_registerEditorProps",((e,t)=>{let n=t.requireComponent;n&&(Array.isArray(n)&&(n=n.filter(Boolean)),e._requireComponent=n);const i=t.executionOrder;i&&"number"==typeof i&&(e._executionOrder=i)})),u.Component=Gh;let Wh,qh=e("MissingScript",mc("cc.MissingScript")(Hh=Oc()((jh=ac((kh=class extends Gh{static safeFindClass(e){const t=ze(e);if(t)return t;u.deserialize.reportMissingClass(e)}constructor(){super(),rc(this,"_$erialized",jh,this)}onLoad(){D(4600,this.node.name)}}).prototype,"_$erialized",[Tc,Ac],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Hh=kh))||Hh)||Hh);u._MissingScript=qh;try{const e=qh.__values__;0!==e.length&&"_$erialized"===e[e.length-1]||(C("The '_$erialized' prop in MissingScript is missing. Please contact jare."),C(`    Error props: ['${e}']`))}catch(Vo){C(`Error when checking MissingScript 5, ${Vo}`)}!function(e){e[e.PORTRAIT=1]="PORTRAIT",e[e.PORTRAIT_UPSIDE_DOWN=2]="PORTRAIT_UPSIDE_DOWN",e[e.LANDSCAPE_LEFT=4]="LANDSCAPE_LEFT",e[e.LANDSCAPE_RIGHT=8]="LANDSCAPE_RIGHT",e[e.LANDSCAPE=12]="LANDSCAPE",e[e.AUTO=13]="AUTO"}(Wh||(Wh={}));const Xh={0:Wh.PORTRAIT,"-90":Wh.LANDSCAPE_LEFT,90:Wh.LANDSCAPE_RIGHT,180:Wh.PORTRAIT_UPSIDE_DOWN},Yh=new class extends Xl{get supportFullScreen(){return!1}get isFullScreen(){return!1}get devicePixelRatio(){return jsb.device.getDevicePixelRatio()||1}get windowSize(){const e=this.devicePixelRatio,t=Math.round(window.innerWidth),n=Math.round(window.innerHeight);return new kn(t*e,n*e)}set windowSize(e){console.warn("Setting window size is not supported yet.")}get resolution(){const e=this.windowSize,t=this.resolutionScale;return new kn(e.width*t,e.height*t)}get resolutionScale(){return this._resolutionScale}set resolutionScale(e){var t;e!==this._resolutionScale&&(this._resolutionScale=e,null===(t=this._cbToUpdateFrameBuffer)||void 0===t||t.call(this))}get orientation(){return Xh[jsb.device.getDeviceOrientation()]}set orientation(e){console.warn("Setting orientation is not supported yet.")}get safeAreaEdge(){const e=jsb.device.getSafeAreaEdge(),t=this.devicePixelRatio;let n=e.x*t,i=e.z*t,s=e.y*t,o=e.w*t;return this.orientation===Wh.PORTRAIT?n<i?n=i:i=n:s<o?s=o:o=s,{top:n,bottom:i,left:s,right:o}}get isProportionalToFrame(){return this._isProportionalToFrame}set isProportionalToFrame(e){}constructor(){super(),this.isFrameRotated=!1,this.handleResizeEvent=!0,this._cbToUpdateFrameBuffer=void 0,this._resolutionScale=1,this._isProportionalToFrame=!1,this._registerEvent()}init(e,t){this._cbToUpdateFrameBuffer=t,this._cbToUpdateFrameBuffer()}requestFullScreen(){return Promise.reject(new Error("request fullscreen has not been supported yet on this platform."))}exitFullScreen(){return Promise.reject(new Error("exit fullscreen has not been supported yet on this platform."))}_registerEvent(){jsb.onResize=e=>{0!==e.width&&0!==e.height&&(e.width/=this.devicePixelRatio,e.height/=this.devicePixelRatio,window.resize(e.width,e.height),this.emit("window-resize"))},jsb.onOrientationChanged=()=>{this.emit("orientation-change")}}},Kh=e("screen",new class{_init(e){Yh.init(e,(()=>{var e;const t=u.director;(null===(e=t.root)||void 0===e?void 0:e.pipeline)?t.root.pipeline.pipelineSceneData.shadingScale=Yh.resolutionScale:D(1220)}))}get devicePixelRatio(){return Yh.devicePixelRatio}get windowSize(){return Yh.windowSize}set windowSize(e){Yh.windowSize=e}get resolution(){return Yh.resolution}get supportsFullScreen(){return Yh.supportFullScreen}fullScreen(){return Yh.isFullScreen}requestFullScreen(e,t,n){return arguments.length>0&&D(1400,"screen.requestFullScreen(element, onFullScreenChange?, onFullScreenError?)","screen.requestFullScreen(): Promise"),Yh.requestFullScreen().then((()=>{null==t||t()})).catch((e=>{console.error(e),null==n||n()}))}exitFullScreen(){return Yh.exitFullScreen()}autoFullScreen(e,t){var n;null===(n=this.requestFullScreen(e,t))||void 0===n||n.catch((()=>{}))}disableAutoFullScreen(e){}});u.screen=Kh;const $h=e("sys",{Feature:Zl,hasFeature:e=>nh.hasFeature(e),NetworkType:$l,Language:Kl,OS:Ql,Platform:Jl,BrowserType:Yl,isNative:nh.isNative,isBrowser:nh.isBrowser,isMobile:nh.isMobile,isLittleEndian:nh.isLittleEndian,platform:nh.platform,language:nh.language,languageCode:nh.nativeLanguage,os:nh.os,osVersion:nh.osVersion,osMainVersion:nh.osMainVersion,browserType:nh.browserType,browserVersion:nh.browserVersion,windowPixelResolution:Kh.windowSize,capabilities:{canvas:!0,opengl:!0,webp:nh.hasFeature(Zl.WEBP),imageBitmap:nh.hasFeature(Zl.IMAGE_BITMAP),touches:nh.hasFeature(Zl.INPUT_TOUCH),mouse:nh.hasFeature(Zl.EVENT_MOUSE),keyboard:nh.hasFeature(Zl.EVENT_KEYBOARD),accelerometer:nh.hasFeature(Zl.EVENT_ACCELEROMETER)},localStorage:{},getNetworkType:()=>nh.networkType,getBatteryLevel:()=>nh.getBatteryLevel(),garbageCollect(){nh.triggerGC()},isObjectValid:e=>null!=e,dump(){let e="";e+=`isMobile : ${this.isMobile}\r\n`,e+=`language : ${this.language}\r\n`,e+=`browserType : ${this.browserType}\r\n`,e+=`browserVersion : ${this.browserVersion}\r\n`,e+=`capabilities : ${JSON.stringify(this.capabilities)}\r\n`,e+=`os : ${this.os}\r\n`,e+=`osVersion : ${this.osVersion}\r\n`,e+=`platform : ${this.platform}\r\n`,e+=`Using ${u.game.renderType===u.game.RENDER_TYPE_WEBGL?"WEBGL":"CANVAS"} renderer.\r\n`,x(e)},openURL(e){nh.openURL(e)},now:()=>nh.now(),restartVM(){nh.restartJSVM()},getSafeAreaRect(){const e=u.view,t=Yh.safeAreaEdge,n=Yh.windowSize,i=new Bn(t.left,t.bottom),s=new Bn(n.width-t.right,n.height-t.top);e._convertToUISpace(i),e._convertToUISpace(s);const o=i.x,r=i.y,a=s.x-i.x,c=s.y-i.y;return new Wn(o,r,a,c)}});!function(){try{let e=$h.localStorage=window.localStorage;e.setItem("storage",""),e.removeItem("storage"),e=null}catch(e){const t=function(){D(5200)};$h.localStorage={getItem:t,setItem:t,clear:t,removeItem:t}}$h.__isWebIOS14OrIPadOS14Env=($h.os===Ql.IOS||$h.os===Ql.OSX)&&nh.isBrowser&&/(OS 14)|(Version\/14)/.test(window.navigator.userAgent)}(),u.sys=$h;const Qh=e("serializeTag",Symbol("[[Serialize]]")),Jh=e("deserializeTag",Symbol("[[Deserialize]]"));class Zh{constructor(e,t){this._document=void 0,this._chunks=void 0,this._document=e,this._chunks=t}get document(){return this._document}get chunks(){return this._chunks}}function eu(e){const t=e;return{chunks:t.chunks,document:t.document}}function tu(e){if(e.length<16)throw new nu(F(13102));const t=new DataView(e.buffer,e.byteOffset,e.byteLength);if(1313817411!==t.getUint32(0,!0))throw new nu(F(13100));const n=t.getUint32(4,!0);if(1!==n)throw new nu(F(13101,n));if(t.getUint32(8,!0)!==t.byteLength)throw new nu(F(13102));let i=12;const s=t.getUint32(i,!0);i+=4;const o=new Uint8Array(t.buffer,i+t.byteOffset,s);i+=s;const r=function(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);if("Buffer"in globalThis){const{Buffer:t}=globalThis;return t.from(e.buffer,e.byteOffset,e.byteLength).toString()}throw new Error(F(13104))}(o);let a;try{a=JSON.parse(r)}catch(e){throw new nu(e)}const c=[];for(;i<t.byteLength;){i%8!=0&&(i+=8-i%8);const e=t.getUint32(i,!0);i+=4,c.push(new Uint8Array(t.buffer,i+t.byteOffset,e)),i+=e}if(i!==t.byteLength)throw new nu(F(13102));return new Zh(a,c)}class nu extends Error{}function iu(e,t,n,i,s){if(t instanceof u.ValueType){s||e.push("if(prop){");const i=fe(t);e.push(`s._deserializeFastDefinedObject(o${n},prop,${i});`),s||e.push(`}else o${n}=null;`)}else e.push(`\nif (prop) {\n    s._deserializeAndAssignField(o, prop, ${i});\n} else {\n    o${n}=null;\n}\n`)}u.internal.parseCCONJson=eu,u.internal.decodeCCONBinary=tu,u.internal.CCON=Zh;const su="$_$type",ou="$_$default",ru="$_$formerlySerializedAs";class au{constructor(e,t,n,i,s){this.deserializedList=void 0,this.deserializedData=void 0,this._ignoreEditorOnly=void 0,this.result=e,this.customEnv=i,this.deserializedList=[],this.deserializedData=null,this._classFinder=t,this._reportMissingClass=n,this._onDereferenced=null==t?void 0:t.onDereferenced}reset(e,t,n,i,s){this.result=e,this.customEnv=i,this._classFinder=t,this._reportMissingClass=n,this._onDereferenced=null==t?void 0:t.onDereferenced}clear(){this.result=null,this.customEnv=null,this.deserializedList.length=0,this.deserializedData=null,this._classFinder=null,this._reportMissingClass=null,this._onDereferenced=null}deserialize(e){let t,n=!1;e instanceof Zh?(n=!0,t=e.document,e.chunks.length>0&&(e.chunks.length,this._mainBinChunk=e.chunks[0])):t=e,this._serializedData=t,this._context={fromCCON:n};const i=Array.isArray(t)?t[0]:t;return this.deserializedData=this._deserializeObject(i,0),this._serializedData=void 0,this._mainBinChunk=void 0,this._context=void 0,this.deserializedData}_deserializeObject(e,t,n,i){switch(e.__type__){case"TypedArray":return this._deserializeTypedArrayView(e);case"TypedArrayRef":return this._deserializeTypedArrayViewRef(e);default:return e.__type__?this._deserializeTypeTaggedObject(e,t,n,i):Array.isArray(e)?this._deserializeArray(e):this._deserializePlainObject(e)}}_deserializeTypedArrayView(e){return globalThis[e.ctor].from(e.array)}_deserializeTypedArrayViewRef(e){const{offset:t,length:n,ctor:i}=e;return new globalThis[i](this._mainBinChunk.buffer,this._mainBinChunk.byteOffset+t,n)}_deserializeArray(e){const t=new Array(e.length);let n;for(let i=0;i<e.length;i++)n=e[i],"object"==typeof n&&n?this._deserializeAndAssignField(t,n,`${i}`)&&(t[i]=null):t[i]=n;return t}_deserializePlainObject(e){const t={};return this._fillPlainObject(t,e),t}_deserializeTypeTaggedObject(e,t,n,i){const s=e.__type__,o=this._classFinder(s,e,n,i);if(!o)return this._classFinder===ze&&this._reportMissingClass(s),null;{const n=(e=>{const n=new e;return t>=0&&(this.deserializedList[t]=n),n})(o);return this._deserializeInto(e,n,o),n}}_deserializeInto(e,t,n,i=!1){i||!t[Jh]?t._deserialize?t._deserialize(e.content,this):u.Class._isCCClass(n)?this._deserializeFireClass(t,e,n):this._deserializeFastDefinedObject(t,e,n):this._runCustomizedDeserialize(e,t,n)}_runCustomizedDeserialize(e,t,n){const i={readProperty:t=>{const n=e[t];return"object"==typeof n&&n?this._deserializeObjectField(n):n},readThis:()=>{this._deserializeInto(e,t,n,!0)},readSuper:()=>{const i=Pe(n);i&&this._deserializeInto(e,t,i)}};t[Jh](i,this._context)}_deserializeFireClass(e,t,n){let i;if(n.hasOwnProperty("__deserialize__"))i=n.__deserialize__;else{i=function(e,t){const n=pt(t),i=t.__values__,s=["var prop;"],o=Je.test(Ge(t));for(let e=0;e<i.length;e++){const t=i[e];let r,a;zt.IDENTIFIER_RE.test(t)?(a=`"${t}"`,r=`.${t}`):(a=zt.escapeForJS(t),r=`[${a}]`);let c=r;if(n[t+ru]){const e=n[t+ru];c=zt.IDENTIFIER_RE.test(e)?`.${e}`:`[${zt.escapeForJS(e)}]`}s.push(`prop=d${c};`),s.push('if(typeof (prop)!=="undefined"){');const l=zt.getDefault(n[t+ou]);if(o){let e;const i=n[t+su];if(void 0===l&&i)e=i instanceof mt;else{const t=typeof l;e="string"===t||"number"===t||"boolean"===t}e?s.push(`o${r}=prop;`):iu(s,l,r,a,!0)}else s.push(`if(typeof (prop)!=="object"){o${r}=prop;}else{`),iu(s,l,r,a,!1),s.push("}");s.push("}")}return(u.js.isChildClassOf(t,u._BaseNode)||u.js.isChildClassOf(t,u.Component))&&s.push("d._id&&(o._id=d._id);"),"_$erialized"===i[i.length-1]&&(s.push("o._$erialized=JSON.parse(JSON.stringify(d));"),s.push("s._fillPlainObject(o._$erialized,d);")),Function("s","o","d","k",s.join(""))}(0,n);try{if(n===qh){const e=n.__values__;0!==e.length&&"_$erialized"===e[e.length-1]||(C("The '_$erialized' prop of MissingScript is missing. Will force the raw data to be save."),C(`    Error props: ['${e}']. Please contact jare.`));const t=i;i=function(e,n,i,s){t(e,n,i,s),n._$erialized||C(`Unable to stash previously serialized data. ${JSON.stringify(i)}`)}}}catch(e){C(`Error when checking MissingScript 6, ${e}`)}he(n,"__deserialize__",i,!0)}i(this,e,t,n)}_deserializeAndAssignField(e,t,n){const i=t.__id__;if("number"==typeof i){const t=this.deserializedList[i];if(t)e[n]=t;else{var s;const t=this._serializedData[i];e[n]=this._deserializeObject(t,i,void 0,n),null===(s=this._onDereferenced)||void 0===s||s.call(this,this.deserializedList,i,e,n)}}else{const i=t.__uuid__;if(i){const s=t.__expectedType__;this.result.push(e,n,i,s)}else e[n]=this._deserializeObject(t,-1)}return!1}_deserializeObjectField(e){const t=e.__id__;if("number"==typeof t){const e=this.deserializedList[t];if(e)return e;{const e=this._serializedData[t];return this._deserializeObject(e,t,void 0,void 0)}}if(e.__uuid__)throw e.__expectedType__,new Error("Asset reference field serialization is currently not supported in custom serialization.");return this._deserializeObject(e,-1)}_fillPlainObject(e,t){for(const n in t){if(!t.hasOwnProperty(n))continue;const i=t[n];"object"!=typeof i?"__type__"!==n&&(e[n]=i):i?this._deserializeAndAssignField(e,i,n)&&(e[n]=null):e[n]=null}}_deserializeFastDefinedObject(e,t,n){if(n===u.Vec2)return e.x=t.x||0,void(e.y=t.y||0);if(n===u.Vec3)return e.x=t.x||0,e.y=t.y||0,void(e.z=t.z||0);if(n===u.Color){e.r=t.r||0,e.g=t.g||0,e.b=t.b||0;const n=t.a;return void(e.a=void 0===n?255:n)}if(n===u.Size)return e.width=t.width||0,void(e.height=t.height||0);const i=pt(n),s=n.__values__;for(let n=0;n<s.length;n++){const o=s[n];let r=t[o];void 0!==r||t.hasOwnProperty(o)||(r=zt.getDefault(i[o+ou])),"object"!=typeof r?e[o]=r:r?this._deserializeAndAssignField(e,r,o):e[o]=null}}}au.pool=new class extends Ve{constructor(){super((e=>{e.clear()}),1)}get(e,t,n,i,s){const o=this._get();return o?(o.reset(e,t,n,i,s),o):new au(e,t,n,i,s)}};const cu=[Bn,gn,Gn,Tn,dn,kn,Wn,On];function lu(e,t){e.x=t[1],e.y=t[2],e.z=t[3],e.w=t[4]}const hu=[(e,t)=>{e.x=t[1],e.y=t[2]},(e,t)=>{e.x=t[1],e.y=t[2],e.z=t[3]},lu,lu,(e,t)=>{e._val=t[1]},(e,t)=>{e.width=t[1],e.height=t[2]},(e,t)=>{e.x=t[1],e.y=t[2],e.width=t[3],e.height=t[4]},(e,t)=>{On.fromArray(e,t,1)}];class uu{constructor(){this.uuidObjList=null,this.uuidPropList=null,this.uuidList=null,this.uuidTypeList=[]}init(e){e?(this.uuidObjList=e[8],this.uuidPropList=e[9],this.uuidList=e[10]):this.uuidList||(this.uuidList=[],this.uuidObjList=[],this.uuidPropList=[],this.uuidTypeList=[])}reset(){this.uuidList&&(this.uuidList.length=0,this.uuidObjList.length=0,this.uuidPropList.length=0,this.uuidTypeList.length=0)}push(e,t,n,i){this.uuidObjList.push(e),this.uuidPropList.push(t),this.uuidList.push(n),this.uuidTypeList.push(i||"")}}function _u(e,t){const n=e[4][t[0]],i=n[0],s=new(0,i[0]),o=i[1],r=i[2],a=n[n.length-1];let c=1;for(;c<a;++c)s[o[n[c]]]=t[c];for(;c<t.length;++c){const a=o[n[c]],l=i[n[c]+r];(0,vu[l])(e,s,a,t[c])}return s}function du(e,t,n){const i=new t;return i._deserialize?i._deserialize(n,e[0]):N(5303,fe(t)),i}function pu(e,t,n,i){i>=0?t[n]=e[5][i]:e[7][3*~i]=t}function fu(e){return(t,n,i,s)=>{n[i]=s;for(let n=0;n<s.length;++n)e(t,s,n,s[n])}}function mu(e,t,n,i){t[n]=null,e[8][i]=t}function gu(e,t,n,i){t[n]=_u(e,i)}e("Details",uu),uu.pool=new Ve((e=>{e.reset()}),5),uu.pool.get=function(){return this._get()||new uu};const vu=new Array(13);function yu(e,t,n){return e||n(t),Object}function xu(e,t,n,i,s,o,r){let a=e(t);if(!a){if(s)return void(n[i]=(c=n,l=i,h=t,function(){const t=e(h)||yu(o,h,r);return c[l]=t,new t}));a=yu(o,t,r)}var c,l,h;n[i]=a}function Su(e,t,n,i){const s=n||ze,o=e[3];for(let e=0;e<o.length;++e){const r=o[e];"string"!=typeof r?xu(s,r[0],r,0,t,n,i):xu(s,r,o,e,t,n,i)}}function Cu(e){const t=e[4];if(t){const n=e[3];for(let e=0;e<t.length;++e){const i=t[e];i[0]=n[i[0]]}}}function Eu(e,t,n){"string"==typeof e&&(e=JSON.parse(e));const i=!t;let s;if(t=t||uu.pool.get(),function(e){if(Array.isArray(e)){const t=e[0];return"number"==typeof t||t instanceof Tu}return!1}(e)){t.init(e),n=n||{};let i=e[0],r=!1;if("object"==typeof i&&(r=i.preprocessed,i=i.version),i<1)throw new Error(F(5304,i));var o;n._version=i,n.result=t,e[0]=n,r||(Su(e,!1,n.classFinder,null!==(o=n.reportMissingClass)&&void 0!==o?o:Eu.reportMissingClass),Cu(e)),u.game._isCloning=!0;const a=e[5],c=function(e){const t=e[5],n=e[6],i=0===n?0:n.length;let s=t[t.length-1],o=t.length-i;"number"!=typeof s?s=0:(s<0&&(s=~s),--o);let r=0;for(;r<o;++r)t[r]=_u(e,t[r]);const a=e[3];for(let s=0;s<i;++s,++r){let i=n[s];const o=t[r];if(i>=0){const n=a[i];t[r]=du(e,n,o)}else i=~i,(0,vu[i])(e,t,r,o)}return s}(e);u.game._isCloning=!1,e[7]&&function(e,t,n){const i=e.length-1;let s=0;const o=3*e[i];for(;s<o;s+=3){const i=e[s],o=t[e[s+2]],r=e[s+1];r>=0?i[n[r]]=o:i[~r]=o}for(;s<i;s+=3){const i=t[e[s]],o=t[e[s+2]],r=e[s+1];r>=0?i[n[r]]=o:i[~r]=o}}(e[7],a,e[2]),function(e){const t=e[5],n=e[2],i=e[1],s=e[8],o=e[9],r=e[10];for(let e=0;e<s.length;++e){const a=s[e];"number"==typeof a&&(s[e]=t[a]);let c=o[e];"number"==typeof c&&(c=c>=0?n[c]:~c,o[e]=c);const l=r[e];"number"==typeof l&&(r[e]=i[l])}}(e),s=a[c]}else s=function(e,t,n){var i;const s=(n=n||{}).classFinder||ze,o=n.createAssetRefs||$h.platform===Jl.EDITOR_CORE,r=n.customEnv,a=n.ignoreEditorOnly,c=null!==(i=n.reportMissingClass)&&void 0!==i?i:u.deserialize.reportMissingClass;t.init();const l=au.pool.get(t,s,c,r,a);u.game._isCloning=!0;const h=l.deserialize(e);return u.game._isCloning=!1,au.pool.put(l),o&&t.assignAssetsBy(EditorExtends.serialize.asAsset),h}(e,t,n);return i&&uu.pool.put(t),s}vu[0]=function(e,t,n,i){t[n]=i},vu[1]=pu,vu[2]=fu(pu),vu[3]=fu(mu),vu[4]=gu,vu[5]=function(e,t,n,i){hu[i[0]](t[n],i)},vu[6]=mu,vu[7]=function(e,t,n,i){t[n].set(i)},vu[8]=function(e,t,n,i){const s=new cu[i[0]];hu[i[0]](s,i),t[n]=s},vu[9]=fu(gu),vu[10]=function(e,t,n,i){const s=e[3][i[0]];t[n]=du(e,s,i[1])},vu[11]=function(e,t,n,i){const s=i[0];t[n]=s;for(let t=1;t<i.length;t+=3){const n=i[t],o=i[t+1],r=i[t+2];(0,vu[o])(e,s,n,r)}},vu[12]=function(e,t,n,i){const s=i[0];t[n]=s;for(let t=0;t<s.length;++t){const n=s[t],o=i[t+1];0!==o&&(0,vu[o])(e,s,t,n)}},Eu.Details=uu,Eu.reportMissingClass=function(e){N(5302,e)};class Tu{constructor(e){this.preprocessed=!0,this.version=e}}function bu(e,t,n){return[1,0,0,[e],0,n?[t,-1]:[t],[0],0,[],[],[]]}u.deserialize=Eu;const Au=rl.Flags.Destroyed,Pu=rl.Flags.PersistentMask,wu=[];function Iu(e){let t;if(e instanceof rl){if(e._instantiate)return u.game._isCloning=!0,t=e._instantiate(null,!0),u.game._isCloning=!1,t;if(e instanceof u.Asset)throw new TypeError(F(6903))}return u.game._isCloning=!0,t=Ru(e),u.game._isCloning=!1,t}function Ru(e,t){let n;n=e._iN$t?e._iN$t:e.constructor?new(0,e.constructor):Object.create(null),Du(e,n,t);for(let e=0,t=wu.length;e<t;++e)wu[e]._iN$t=null;return wu.length=0,n}function Du(e,t,n){ke.value(e,"_iN$t",t,!0),wu.push(e);const i=e.constructor;if(Ut(i))!function(e,t,n,i){const s=e.__values__;for(let e=0;e<s.length;e++){const o=s[e],r=t[o];if("object"==typeof r&&r){const e=n[o];e instanceof $e&&e.constructor===r.constructor?e.set(r):n[o]=r._iN$t||Ou(r,i)}else n[o]=r}}(i,e,t,n);else for(const i in e){if(!e.hasOwnProperty(i)||95===i.charCodeAt(0)&&95===i.charCodeAt(1)&&"__type__"!==i&&"__prefab"!==i)continue;const s=e[i];if("object"==typeof s&&s){if(s===t)continue;t[i]=s._iN$t||Ou(s,n)}else t[i]=s}e instanceof rl&&(t._objFlags&=Pu)}function Ou(e,t){if(e instanceof $e)return e.clone();if(e instanceof u.Asset)return e;let n;if(ArrayBuffer.isView(e)){const t=e.length;n=new e.constructor(t),e._iN$t=n,wu.push(e);for(let i=0;i<t;++i)n[i]=e[i];return n}if(Array.isArray(e)){const i=e.length;n=new Array(i),e._iN$t=n,wu.push(e);for(let s=0;s<i;++s){const i=e[s];n[s]="object"==typeof i&&i?i._iN$t||Ou(i,t):i}return n}if(e._objFlags&Au)return null;const i=e.constructor;if(Ut(i)){if(t)if(t instanceof u.Component){if(e instanceof u._BaseNode||e instanceof u.Component)return e}else if(t instanceof u._BaseNode)if(e instanceof u._BaseNode){if(!e.isChildOf(t))return e}else if(e instanceof u.Component&&e.node&&!e.node.isChildOf(t))return e;n=new i}else if(i===Object)n={};else{if(i)return e;n=Object.create(null)}return Du(e,n,t),n}var Nu,Mu,Lu,Bu,Fu,zu,Uu,Gu;let Vu,Hu;function ku(e,t){return(t<<3)+e}function ju(e){return qu[e]}function Wu(e){switch(e){case Vu.Uint8:return Uint8Array;case Vu.Uint16:return Uint16Array;case Vu.Uint32:return Uint32Array;case Vu.Int8:return Int8Array;case Vu.Int16:return Int16Array;case Vu.Int32:return Int32Array;case Vu.Float32:return Float32Array;case Vu.Float64:return Float64Array}}Iu._clone=Ru,u.instantiate=Iu,function(e){e[e.Uint8=0]="Uint8",e[e.Uint16=1]="Uint16",e[e.Uint32=2]="Uint32",e[e.Int8=3]="Int8",e[e.Int16=4]="Int16",e[e.Int32=5]="Int32",e[e.Float32=6]="Float32",e[e.Float64=7]="Float64"}(Vu||(Vu={})),function(e){e[e.Scalar=0]="Scalar",e[e.Vec2=1]="Vec2",e[e.Vec3=2]="Vec3",e[e.Vec4=3]="Vec4",e[e.Quat=4]="Quat",e[e.Mat4=5]="Mat4"}(Hu||(Hu={})),e("CompactValueTypeArray",mc("cc.CompactValueTypeArray")((Gu=Uu=class e{constructor(){rc(this,"_byteOffset",Lu,this),rc(this,"_unitCount",Bu,this),rc(this,"_unitElement",Fu,this),rc(this,"_length",zu,this)}static lengthFor(e,t,n){return ju(t).requiredUnits*e.length*Wu(n).BYTES_PER_ELEMENT}static compress(t,n,i,s,o,r){const a=ju(n),c=Wu(i),l=a.requiredUnits*t.length,h=new c(s,o,l);for(let e=0;e<t.length;++e)a.compress(h,e,t[e]);const u=new e;return u._unitElement=ku(i,n),u._byteOffset=r,u._unitCount=l,u._length=t.length,u}decompress(e){const{storageUnit:t,elementType:n}={storageUnit:7&(i=this._unitElement),elementType:i>>3};var i;const s=ju(n),o=new(Wu(t))(e,this._byteOffset,this._unitCount),r=new Array(this._length);for(let e=0;e<this._length;++e)r[e]=s.decompress(o,e);return r}},Uu.StorageUnit=Vu,Uu.ElementType=Hu,Lu=ac((Mu=Gu).prototype,"_byteOffset",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Bu=ac(Mu.prototype,"_unitCount",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Fu=ac(Mu.prototype,"_unitElement",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ku(Vu.Uint8,Hu.Scalar)}}),zu=ac(Mu.prototype,"_length",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Nu=Mu))||Nu);const qu={[Hu.Scalar]:{requiredUnits:1,compress(e,t,n){e[t]=n},decompress:(e,t)=>e[t]},[Hu.Vec2]:{requiredUnits:2,compress(e,t,n){e[2*t]=n.x,e[2*t+1]=n.y},decompress:(e,t)=>new gn(e[2*t],e[2*t+1])},[Hu.Vec3]:{requiredUnits:3,compress(e,t,n){e[3*t]=n.x,e[3*t+1]=n.y,e[3*t+2]=n.z},decompress:(e,t)=>new gn(e[3*t],e[3*t+1],e[3*t+2])},[Hu.Vec4]:{requiredUnits:4,compress(e,t,n){e[4*t]=n.x,e[4*t+1]=n.y,e[4*t+2]=n.z,e[4*t+3]=n.w},decompress:(e,t)=>new Gn(e[4*t],e[4*t+1],e[4*t+2],e[4*t+3])},[Hu.Quat]:{requiredUnits:4,compress(e,t,n){e[4*t]=n.x,e[4*t+1]=n.y,e[4*t+2]=n.z,e[4*t+3]=n.w},decompress:(e,t)=>new Tn(e[4*t],e[4*t+1],e[4*t+2],e[4*t+3])},[Hu.Mat4]:{requiredUnits:16,compress(e,t,n){On.toArray(e,n,16*t)},decompress:(e,t)=>On.fromArray(new On,e,16*t)}};function Xu(){return 0}function Yu(e){return e}function Ku(e){return e*e}function $u(e){return e*(2-e)}function Qu(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}function Ju(e){return e*e*e}function Zu(e){return--e*e*e+1}function e_(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)}function t_(e){return e*e*e*e}function n_(e){return 1- --e*e*e*e}function i_(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)}function s_(e){return e*e*e*e*e}function o_(e){return--e*e*e*e*e+1}function r_(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}function a_(e){return 1===e?1:1-Math.cos(e*Math.PI/2)}function c_(e){return Math.sin(e*Math.PI/2)}function l_(e){return.5*(1-Math.cos(Math.PI*e))}function h_(e){return 0===e?0:Math.pow(1024,e-1)}function u_(e){return 1===e?1:1-Math.pow(2,-10*e)}function __(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))}function d_(e){return 1-Math.sqrt(1-e*e)}function p_(e){return Math.sqrt(1- --e*e)}function f_(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}function m_(e){let t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),-n*Math.pow(2,10*(e-=1))*Math.sin(2*(e-t)*Math.PI/.4))}function g_(e){let t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),n*Math.pow(2,-10*e)*Math.sin(2*(e-t)*Math.PI/.4)+1)}function v_(e){let t,n=.1;return 0===e?0:1===e?1:(!n||n<1?(n=1,t=.1):t=.4*Math.asin(1/n)/(2*Math.PI),(e*=2)<1?n*Math.pow(2,10*(e-=1))*Math.sin(2*(e-t)*Math.PI/.4)*-.5:n*Math.pow(2,-10*(e-=1))*Math.sin(2*(e-t)*Math.PI/.4)*.5+1)}function y_(e){if(1===e)return 1;const t=1.70158;return e*e*((t+1)*e-t)}function x_(e){if(0===e)return 0;const t=1.70158;return--e*e*((t+1)*e+t)+1}function S_(e){const t=2.5949095;return(e*=2)<1?e*e*((t+1)*e-t)*.5:.5*((e-=2)*e*((t+1)*e+t)+2)}function C_(e){return 1-E_(1-e)}function E_(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375}function T_(e){return e<.5?.5*C_(2*e):.5*E_(2*e-1)+.5}function b_(e){return e<=0?0:e>=1?1:e*e*(3-2*e)}function A_(e){return e<=0?0:e>=1?1:e*e*e*(e*(6*e-15)+10)}u._decorator=il;const P_=F_(Ku,$u),w_=F_(Ju,Zu),I_=F_(t_,n_),R_=F_(s_,o_),D_=F_(a_,c_),O_=F_(h_,u_),N_=F_(d_,p_),M_=F_(m_,g_),L_=F_(y_,x_),B_=F_(C_,E_);function F_(e,t){return n=>n<.5?t(2*n)/2:e(2*n-1)/2+.5}var z_=Object.freeze({__proto__:null,constant:Xu,linear:Yu,quadIn:Ku,quadOut:$u,quadInOut:Qu,cubicIn:Ju,cubicOut:Zu,cubicInOut:e_,quartIn:t_,quartOut:n_,quartInOut:i_,quintIn:s_,quintOut:o_,quintInOut:r_,sineIn:a_,sineOut:c_,sineInOut:l_,expoIn:h_,expoOut:u_,expoInOut:__,circIn:d_,circOut:p_,circInOut:f_,elasticIn:m_,elasticOut:g_,elasticInOut:v_,backIn:y_,backOut:x_,backInOut:S_,bounceIn:C_,bounceOut:E_,bounceInOut:T_,smooth:b_,fade:A_,quadOutIn:P_,cubicOutIn:w_,quartOutIn:I_,quintOutIn:R_,sineOutIn:D_,expoOutIn:O_,circOutIn:N_,elasticOutIn:M_,backOutIn:L_,bounceOutIn:B_});let U_;e("easing",z_),function(e){e[e.LINEAR=0]="LINEAR",e[e.CONSTANT=1]="CONSTANT",e[e.QUAD_IN=2]="QUAD_IN",e[e.QUAD_OUT=3]="QUAD_OUT",e[e.QUAD_IN_OUT=4]="QUAD_IN_OUT",e[e.QUAD_OUT_IN=5]="QUAD_OUT_IN",e[e.CUBIC_IN=6]="CUBIC_IN",e[e.CUBIC_OUT=7]="CUBIC_OUT",e[e.CUBIC_IN_OUT=8]="CUBIC_IN_OUT",e[e.CUBIC_OUT_IN=9]="CUBIC_OUT_IN",e[e.QUART_IN=10]="QUART_IN",e[e.QUART_OUT=11]="QUART_OUT",e[e.QUART_IN_OUT=12]="QUART_IN_OUT",e[e.QUART_OUT_IN=13]="QUART_OUT_IN",e[e.QUINT_IN=14]="QUINT_IN",e[e.QUINT_OUT=15]="QUINT_OUT",e[e.QUINT_IN_OUT=16]="QUINT_IN_OUT",e[e.QUINT_OUT_IN=17]="QUINT_OUT_IN",e[e.SINE_IN=18]="SINE_IN",e[e.SINE_OUT=19]="SINE_OUT",e[e.SINE_IN_OUT=20]="SINE_IN_OUT",e[e.SINE_OUT_IN=21]="SINE_OUT_IN",e[e.EXPO_IN=22]="EXPO_IN",e[e.EXPO_OUT=23]="EXPO_OUT",e[e.EXPO_IN_OUT=24]="EXPO_IN_OUT",e[e.EXPO_OUT_IN=25]="EXPO_OUT_IN",e[e.CIRC_IN=26]="CIRC_IN",e[e.CIRC_OUT=27]="CIRC_OUT",e[e.CIRC_IN_OUT=28]="CIRC_IN_OUT",e[e.CIRC_OUT_IN=29]="CIRC_OUT_IN",e[e.ELASTIC_IN=30]="ELASTIC_IN",e[e.ELASTIC_OUT=31]="ELASTIC_OUT",e[e.ELASTIC_IN_OUT=32]="ELASTIC_IN_OUT",e[e.ELASTIC_OUT_IN=33]="ELASTIC_OUT_IN",e[e.BACK_IN=34]="BACK_IN",e[e.BACK_OUT=35]="BACK_OUT",e[e.BACK_IN_OUT=36]="BACK_IN_OUT",e[e.BACK_OUT_IN=37]="BACK_OUT_IN",e[e.BOUNCE_IN=38]="BOUNCE_IN",e[e.BOUNCE_OUT=39]="BOUNCE_OUT",e[e.BOUNCE_IN_OUT=40]="BOUNCE_IN_OUT",e[e.BOUNCE_OUT_IN=41]="BOUNCE_OUT_IN",e[e.SMOOTH=42]="SMOOTH",e[e.FADE=43]="FADE"}(U_||(U_={}));const G_={[U_.CONSTANT]:Xu,[U_.LINEAR]:Yu,[U_.QUAD_IN]:Ku,[U_.QUAD_OUT]:$u,[U_.QUAD_IN_OUT]:Qu,[U_.QUAD_OUT_IN]:P_,[U_.CUBIC_IN]:Ju,[U_.CUBIC_OUT]:Zu,[U_.CUBIC_IN_OUT]:e_,[U_.CUBIC_OUT_IN]:w_,[U_.QUART_IN]:t_,[U_.QUART_OUT]:n_,[U_.QUART_IN_OUT]:i_,[U_.QUART_OUT_IN]:I_,[U_.QUINT_IN]:s_,[U_.QUINT_OUT]:o_,[U_.QUINT_IN_OUT]:r_,[U_.QUINT_OUT_IN]:R_,[U_.SINE_IN]:a_,[U_.SINE_OUT]:c_,[U_.SINE_IN_OUT]:l_,[U_.SINE_OUT_IN]:D_,[U_.EXPO_IN]:h_,[U_.EXPO_OUT]:u_,[U_.EXPO_IN_OUT]:__,[U_.EXPO_OUT_IN]:O_,[U_.CIRC_IN]:d_,[U_.CIRC_OUT]:p_,[U_.CIRC_IN_OUT]:f_,[U_.CIRC_OUT_IN]:N_,[U_.ELASTIC_IN]:m_,[U_.ELASTIC_OUT]:g_,[U_.ELASTIC_IN_OUT]:v_,[U_.ELASTIC_OUT_IN]:M_,[U_.BACK_IN]:y_,[U_.BACK_OUT]:x_,[U_.BACK_IN_OUT]:S_,[U_.BACK_OUT_IN]:L_,[U_.BOUNCE_IN]:C_,[U_.BOUNCE_OUT]:E_,[U_.BOUNCE_IN_OUT]:T_,[U_.BOUNCE_OUT_IN]:B_,[U_.SMOOTH]:b_,[U_.FADE]:A_};function V_(e){return G_[e]}o(255),o(65280);const H_=Za.LINEAR<<0|tc.NONE<<8|U_.LINEAR<<16;class k_ extends nl{constructor(...e){super(...e),this.value=0,this.rightTangent=0,this.rightTangentWeight=0,this.leftTangent=0,this.leftTangentWeight=0,this._flags=H_}get interpolationMode(){return(255&this._flags)>>0}set interpolationMode(e){this._flags&=-256,this._flags|=e<<0}get tangentWeightMode(){return(65280&this._flags)>>8}set tangentWeightMode(e){this._flags&=-65281,this._flags|=e<<8}get easingMethod(){return(16711680&this._flags)>>16}set easingMethod(e){this._flags&=-16711681,this._flags|=e<<16}}var j_,W_,q_,X_;function Y_(e){const t=new k_;if("number"==typeof e)t.value=e;else{const{interpolationMode:n,tangentWeightMode:i,value:s,rightTangent:o,rightTangentWeight:r,leftTangent:a,leftTangentWeight:c,easingMethod:l,[tl]:h}=e;t.value=null!=s?s:t.value,t.rightTangent=null!=o?o:t.rightTangent,t.rightTangentWeight=null!=r?r:t.rightTangentWeight,t.leftTangent=null!=a?a:t.leftTangent,t.leftTangentWeight=null!=c?c:t.leftTangentWeight,t.interpolationMode=null!=n?n:t.interpolationMode,t.tangentWeightMode=null!=i?i:t.tangentWeightMode,t.easingMethod=null!=l?l:t.easingMethod,h&&(t[tl]=h)}return t}zt.fastDefine("cc.RealKeyframeValue",k_,{interpolationMode:Za.LINEAR,tangentWeightMode:tc.NONE,value:0,rightTangent:0,rightTangentWeight:0,leftTangent:0,leftTangentWeight:0,easingMethod:U_.LINEAR,[tl]:void 0}),zt.Attr.setClassAttr(k_,tl,"editorOnly",!0),(j_=k_,null!==(q_=(W_=j_)[Ec])&&void 0!==q_?q_:W_[Ec]={}).uniquelyReferenced=!0;class K_ extends sc{constructor(...e){super(...e),this.preExtrapolation=ec.CLAMP,this.postExtrapolation=ec.CLAMP}evaluate(e){const{_times:t,_values:n}=this,i=t.length;if(0===i)return 0;const s=t[0],o=t[i-1];if(e<s){const{preExtrapolation:r}=this,a=n[0];if(r===ec.CLAMP||i<2)return a.value;switch(r){case ec.LINEAR:return hd(s,n[0].value,t[1],n[1].value,e);case ec.LOOP:e=cd(e,s,o);break;case ec.PING_PONG:e=ld(e,s,o);break;default:return a.value}}else if(e>o){const{postExtrapolation:r}=this,a=n[i-1];if(r===ec.CLAMP||i<2)return a.value;switch(r){case ec.LINEAR:return hd(o,a.value,t[i-2],n[i-2].value,e);case ec.LOOP:e=cd(e,s,o);break;case ec.PING_PONG:e=ld(e,s,o);break;default:return a.value}}const r=ic(t,e);if(r>=0)return n[r].value;const a=~r,c=a-1,l=t[c],h=n[c],u=t[a];return function(e,t,n,i,s){const o=n-e;switch(t.interpolationMode){default:case Za.CONSTANT:return t.value;case Za.LINEAR:{const e=t.easingMethod===U_.LINEAR?s:V_(t.easingMethod)(s);return Kt(t.value,i.value,e)}case Za.CUBIC:{const r=1/3,{rightTangent:a,rightTangentWeight:c}=t,l=0!=(t.tangentWeightMode&tc.RIGHT),{leftTangent:h,leftTangentWeight:u}=i,_=0!=(i.tangentWeightMode&tc.LEFT);if(l||_){let d=0;if(l)d=c;else{const e=o,t=o*a;d=Math.sqrt(e*e+t*t)*r}const p=Math.atan(a),f=Math.cos(p)*d+e,m=Math.sin(p)*d+t.value;let g=0;if(_)g=u;else{const e=o,t=o*h;g=Math.sqrt(e*e+t*t)*r}const v=Math.atan(h),y=(f-e)/o,x=(-Math.cos(v)*g+n-e)/o,S=m,C=-Math.sin(v)*g+i.value,E=[0,0,0],T=function(e,t,n,i,s){const o=n/i,r=t/i,a=o*o,c=1/3*(-1/3*a+r),l=.5*(2/27*o*a-1/3*o*r+e/i),h=c*c*c,u=l*l+h;let _=0;if(oc(u)){if(oc(l))return s[0]=0,1;{const e=Math.cbrt(-l);return s[0]=2*e,s[1]=-e,2}}if(u<0){const e=1/3*Math.acos(-l/Math.sqrt(-h)),t=2*Math.sqrt(-c);s[0]=t*Math.cos(e),s[1]=-t*Math.cos(e+Math.PI/3),s[2]=-t*Math.cos(e-Math.PI/3),_=3}else{const e=Math.sqrt(u),t=Math.cbrt(e-l),n=-Math.cbrt(e+l);s[0]=t+n,_=1}const d=1/3*o;for(let e=0;e<_;++e)s[e]-=d;return _}(0-s,3*y,3*x-6*y,3*(y-x)+1,E),b=function(e,t,n){let i=n;if(1===t)i=e[0];else{i=-1/0;for(let n=0;n<t;++n){const t=e[n];t>=0&&t<=1&&t>i&&(i=t)}i===-1/0&&(i=0)}return i}(E,T,s);return ud(t.value,S,C,i.value,b)}{const e=t.value+r*a*o,n=i.value-r*h*o;return ud(t.value,e,n,i.value,s)}}}}(l,h,u,n[a],(e-l)/(u-l))}addKeyFrame(e,t){return super.addKeyFrame(e,Y_(t))}assignSorted(e,t){if(void 0!==t)this.setKeyframes(e.slice(),t.map((e=>Y_(e))));else{const t=Array.from(e);this.setKeyframes(t.map((([e])=>e)),t.map((([,e])=>Y_(e))))}}isConstant(e){if(this._values.length<=1)return!0;const t=this._values[0].value;return this._values.every((n=>qt(n.value,t,e)))}[Qh](e,t){if(!t.toCCON)return void e.writeThis();const{_times:n,_values:i}=this,s=n.length,o=new DataView(new ArrayBuffer(0+$_+$_+Q_+J_*s+od*s));let r=0;o.setUint8(r,this.preExtrapolation),r+=$_,o.setUint8(r,this.postExtrapolation),r+=$_,o.setUint32(r,s,!0),r+=Q_,n.forEach(((e,t)=>o.setFloat32(r+J_*t,e,!0))),r+=J_*s;for(const e of i)r=rd(o,e,r);const a=new Uint8Array(o.buffer,0,r);e.writeProperty("bytes",a);const c=i.map((e=>e[tl]));c.some((e=>void 0!==e))&&e.writeProperty("keyframeValueEditorExtras",c)}[Jh](e,t){if(!t.fromCCON)return void e.readThis();const n=e.readProperty("bytes"),i=new DataView(n.buffer,n.byteOffset,n.byteLength);let s=0;this.preExtrapolation=i.getUint8(s),s+=$_,this.postExtrapolation=i.getUint8(s),s+=$_;const o=i.getUint32(s,!0);s+=Q_;const r=Array.from({length:o},((e,t)=>i.getFloat32(s+J_*t,!0)));s+=J_*o;const a=new Array(o);for(let e=0;e<o;++e){const t=Y_({});s=ad(i,t,s),a[e]=t}n.byteLength;const c=e.readProperty("keyframeValueEditorExtras");c&&(c.length,c.forEach(((e,t)=>a[t][tl]=e))),this._times=r,this._values=a}}e("RealCurve",K_),zt.fastDefine("cc.RealCurve",K_,{_times:[],_values:[],preExtrapolation:ec.CLAMP,postExtrapolation:ec.CLAMP}),function(e){e[e.VALUE=1]="VALUE",e[e.INTERPOLATION_MODE=2]="INTERPOLATION_MODE",e[e.TANGENT_WEIGHT_MODE=4]="TANGENT_WEIGHT_MODE",e[e.LEFT_TANGENT=8]="LEFT_TANGENT",e[e.LEFT_TANGENT_WEIGHT=16]="LEFT_TANGENT_WEIGHT",e[e.RIGHT_TANGENT=32]="RIGHT_TANGENT",e[e.RIGHT_TANGENT_WEIGHT=64]="RIGHT_TANGENT_WEIGHT"}(X_||(X_={}));const $_=1,Q_=4,J_=4,{interpolationMode:Z_,tangentWeightMode:ed,leftTangent:td,leftTangentWeight:nd,rightTangent:id,rightTangentWeight:sd}=Y_({}),od=26;function rd(e,t,n){let i=0,s=n;const o=s;s+=4;const{value:r,interpolationMode:a,tangentWeightMode:c,rightTangent:l,rightTangentWeight:h,leftTangent:u,leftTangentWeight:_,easingMethod:d}=t;return e.setFloat32(s,r,!0),s+=4,a!==Z_&&(i|=X_.INTERPOLATION_MODE,e.setUint8(s,a),s+=1),c!==ed&&(i|=X_.TANGENT_WEIGHT_MODE,e.setUint8(s,c),s+=1),u!==td&&(i|=X_.LEFT_TANGENT,e.setFloat32(s,u,!0),s+=4),_!==nd&&(i|=X_.LEFT_TANGENT_WEIGHT,e.setFloat32(s,_,!0),s+=4),l!==id&&(i|=X_.RIGHT_TANGENT,e.setFloat32(s,l,!0),s+=4),h!==sd&&(i|=X_.RIGHT_TANGENT_WEIGHT,e.setFloat32(s,h,!0),s+=4),i|=d<<8,e.setUint32(o,i,!0),s}function ad(e,t,n){let i=n;const s=e.getUint32(i,!0);i+=4,t.value=e.getFloat32(i,!0),i+=4,s&X_.INTERPOLATION_MODE&&(t.interpolationMode=e.getUint8(i),i+=1),s&X_.TANGENT_WEIGHT_MODE&&(t.tangentWeightMode=e.getUint8(i),i+=1),s&X_.LEFT_TANGENT&&(t.leftTangent=e.getFloat32(i,!0),i+=4),s&X_.LEFT_TANGENT_WEIGHT&&(t.leftTangentWeight=e.getFloat32(i,!0),i+=4),s&X_.RIGHT_TANGENT&&(t.rightTangent=e.getFloat32(i,!0),i+=4),s&X_.RIGHT_TANGENT_WEIGHT&&(t.rightTangentWeight=e.getFloat32(i,!0),i+=4);const o=(65280&s)>>8;return t.easingMethod=o,i}function cd(e,t,n){return t+rn(e-t,n-t)}function ld(e,t,n){return t+an(e-t,n-t)}function hd(e,t,n,i,s){return t+(i-t)/(n-e)*(s-e)}function ud(e,t,n,i,s){const o=1-s;return o*o*o*e+3*o*o*s*t+3*o*s*s*n+s*s*s*i}function _d(e,t,n,i,s){const o=1-s;return o*(o*(e+(3*t-e)*s)+3*n*s*s)+i*s*s*s}u.bezier=_d;const dd=Math.cos,pd=Math.acos,fd=Math.max,md=2*Math.PI,gd=Math.sqrt;function vd(e){return e<0?-Math.pow(-e,1/3):Math.pow(e,1/3)}function yd(e,t){const n=function(e,t){const n=t-0,i=t-e[0],s=3*n,o=3*i,r=3*(t-e[2]),a=1/(-n+o-r+(t-1)),c=1/3,l=(s-6*i+r)*a,h=l*c,u=(-s+o)*a,_=(3*u-l*l)*c,d=_*c,p=(2*l*l*l-9*l*u+n*a*27)/27,f=p/2,m=f*f+d*d*d;let g,v,y,x,S;if(m<0){const e=-_*c,t=gd(e*e*e),n=-p/(2*t),i=pd(n<-1?-1:n>1?1:n),s=2*vd(t);return y=s*dd(i*c)-h,x=s*dd((i+md)*c)-h,S=s*dd((i+2*md)*c)-h,y>=0&&y<=1?x>=0&&x<=1?S>=0&&S<=1?fd(y,x,S):fd(y,x):S>=0&&S<=1?fd(y,S):y:x>=0&&x<=1?S>=0&&S<=1?fd(x,S):x:S}if(0===m)return g=f<0?vd(-f):-vd(f),y=2*g-h,x=-g-h,y>=0&&y<=1?x>=0&&x<=1?fd(y,x):y:x;{const e=gd(m);return g=vd(-f+e),v=vd(f+e),y=g-v-h,y}}(e,t),i=e[1];return((1-n)*(i+(e[3]-i)*n)*3+n*n)*n}var xd,Sd,Cd,Ed,Td,bd,Ad,Pd,wd;let Id;u.bezierByTime=yd,function(e){e[e.SLERP=0]="SLERP",e[e.CONSTANT=1]="CONSTANT"}(Id||(Id=e("QuatInterpolationMode",{})));let Rd=mc("cc.QuatKeyframeValue")(xd=wc((Cd=ac((Sd=class{constructor({value:e,interpolationMode:t,easingMethod:n}={}){rc(this,"interpolationMode",Cd,this),rc(this,"value",Ed,this),rc(this,"easingMethod",Td,this),this.value=e?Tn.clone(e):this.value,this.interpolationMode=null!=t?t:this.interpolationMode,this.easingMethod=null!=n?n:this.easingMethod}}).prototype,"interpolationMode",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Id.SLERP}}),Ed=ac(Sd.prototype,"value",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Tn.clone(Tn.IDENTITY)}}),Td=ac(Sd.prototype,"easingMethod",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return U_.LINEAR}}),xd=Sd))||xd)||xd;function Dd(e){return new Rd(e)}let Od=e("QuatCurve",mc("cc.QuatCurve")((Pd=ac((Ad=class extends sc{constructor(...e){super(...e),rc(this,"preExtrapolation",Pd,this),rc(this,"postExtrapolation",wd,this)}evaluate(e,t){var n;null!==(n=t)&&void 0!==n||(t=new Tn);const{_times:i,_values:s,postExtrapolation:o,preExtrapolation:r}=this,a=i.length;if(0===a)return t;const c=i[0],l=i[a-1];if(e<c){const n=s[0];switch(r){case ec.LOOP:e=c+rn(e-c,l-c);break;case ec.PING_PONG:e=c+an(e-c,l-c);break;case ec.CLAMP:default:return Tn.copy(t,n.value)}}else if(e>l){const n=s[a-1];switch(o){case ec.LOOP:e=c+rn(e-c,l-c);break;case ec.PING_PONG:e=c+an(e-c,l-c);break;case ec.CLAMP:default:return Tn.copy(t,n.value)}}const h=ic(i,e);if(h>=0)return Tn.copy(t,s[h].value);const u=~h,_=u-1,d=i[_],p=s[_],f=i[u],m=s[u],g=(e-d)/(f-d);switch(p.interpolationMode){default:case Id.CONSTANT:return Tn.copy(t,p.value);case Id.SLERP:{const{easingMethod:e}=p,n=e===U_.LINEAR?g:Array.isArray(e)?yd(e,g):V_(e)(g);return Tn.slerp(t,p.value,m.value,n)}}}addKeyFrame(e,t){const n=new Rd(t);return super.addKeyFrame(e,n)}assignSorted(e,t){if(void 0!==t)this.setKeyframes(e.slice(),t.map((e=>Dd(e))));else{const t=Array.from(e);this.setKeyframes(t.map((([e])=>e)),t.map((([,e])=>Dd(e))))}}[Qh](e,t){if(!t.toCCON)return void e.writeThis();const{_times:n,_values:i}=this;let s=!0;i.forEach(((e,t,[n])=>{s&&e.interpolationMode!==n.interpolationMode&&(s=!1)}));const o=n.length,r=zd*(s?1:o),a=i.reduce(((e,{easingMethod:t})=>e+(Array.isArray(t)?Ud+4*Vd:Ud)),0);let c=0;c+=Md+Ld+Bd*o+4*Fd*o+a+r+0;const l=new DataView(new ArrayBuffer(c));let h=0,u=0;s&&(u|=Nd.INTERPOLATION_MODE),l.setUint32(h,u,!0),h+=Md,l.setUint32(h,o,!0),h+=Ld,n.forEach(((e,t)=>l.setFloat32(h+Bd*t,e,!0))),h+=Bd*o,i.forEach((({value:{x:e,y:t,z:n,w:i}},s)=>{const o=h+4*Fd*s;l.setFloat32(o+0*Fd,e,!0),l.setFloat32(o+1*Fd,t,!0),l.setFloat32(o+2*Fd,n,!0),l.setFloat32(o+3*Fd,i,!0)})),h+=4*Fd*o,i.forEach((({easingMethod:e})=>{Array.isArray(e)?(l.setUint8(h,Gd),++h,l.setFloat32(h+0*Vd,e[0],!0),l.setFloat32(h+1*Vd,e[1],!0),l.setFloat32(h+2*Vd,e[2],!0),l.setFloat32(h+3*Vd,e[3],!0),h+=4*Vd):(l.setUint8(h,e),++h)}));const _=h;h+=r;let d=_;i.forEach((({interpolationMode:e})=>{l.setUint8(d,e),s||(d+=zd)}));const p=new Uint8Array(l.buffer);e.writeProperty("bytes",p)}[Jh](e,t){if(!t.fromCCON)return void e.readThis();const n=e.readProperty("bytes"),i=new DataView(n.buffer,n.byteOffset,n.byteLength);let s=0;const o=i.getUint32(s,!0);s+=Md;const r=o&Nd.INTERPOLATION_MODE,a=i.getUint32(s,!0);s+=Ld;const c=Array.from({length:a},((e,t)=>i.getFloat32(s+Bd*t,!0)));s+=Bd*a;const l=s;s+=4*Fd*a;const h=Array.from({length:a},((e,t)=>{const n=l+4*Fd*t,o=i.getFloat32(n+0*Fd,!0),r=i.getFloat32(n+1*Fd,!0),a=i.getFloat32(n+2*Fd,!0),c=i.getFloat32(n+3*Fd,!0),h=i.getUint8(s);++s;const u=Dd({value:{x:o,y:r,z:a,w:c}});return h!==Gd?u.easingMethod=h:(u.easingMethod=[i.getFloat32(s+0*Vd,!0),i.getFloat32(s+1*Vd,!0),i.getFloat32(s+2*Vd,!0),i.getFloat32(s+3*Vd,!0)],s+=4*Vd),u}));if(r){const e=i.getUint8(s);++s;for(let t=0;t<a;++t)h[t].interpolationMode=e}else{for(let e=0;e<a;++e){const t=i.getUint8(s+e);h[e].interpolationMode=t}s+=a}this._times=c,this._values=h}}).prototype,"preExtrapolation",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ec.CLAMP}}),wd=ac(Ad.prototype,"postExtrapolation",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ec.CLAMP}}),bd=Ad))||bd);var Nd;!function(e){e[e.INTERPOLATION_MODE=1]="INTERPOLATION_MODE"}(Nd||(Nd={}));const Md=1,Ld=4,Bd=4,Fd=4,zd=1,Ud=1,Gd=255,Vd=4;var Hd;let kd=e("ObjectCurve",mc("cc.ObjectCurve")(Hd=class extends sc{evaluate(e){const t=this.searchKeyframe(e);if(t>=0)return this._values[t];const n=Xt(~t-1,0,this._values.length-1);return this._values[n]}})||Hd);class jd{constructor(){this.time=0,this.value=0,this.inTangent=0,this.outTangent=0}}zt.fastDefine("cc.Keyframe",jd,{time:0,value:0,inTangent:0,outTangent:0});class Wd{constructor(){this.index=void 0,this.time=void 0,this.endTime=void 0,this.coefficient=void 0,this.index=-1,this.time=0,this.endTime=0,this.coefficient=new Float32Array(4)}evaluate(e){return t=e-this.time,n=this.coefficient,t*(t*(t*n[0]+n[1])+n[2])+n[3];var t,n}}class qd{get _internalCurve(){return this._curve}get keyFrames(){return Array.from(this._curve.keyframes()).map((([e,t])=>{const n=new jd;return n.time=e,n.value=t.value,n.inTangent=t.leftTangent,n.outTangent=t.rightTangent,n}))}set keyFrames(e){this._curve.assignSorted(e.map((e=>[e.time,{interpolationMode:Za.CUBIC,value:e.value,leftTangent:e.inTangent,rightTangent:e.outTangent}])))}get preWrapMode(){return Yd(this._curve.preExtrapolation)}set preWrapMode(e){this._curve.preExtrapolation=Xd(e)}get postWrapMode(){return Yd(this._curve.postExtrapolation)}set postWrapMode(e){this._curve.postExtrapolation=Xd(e)}constructor(e=null){if(this.cachedKey=void 0,e instanceof K_)this._curve=e;else{const t=new K_;this._curve=t,t.preExtrapolation=ec.LOOP,t.postExtrapolation=ec.CLAMP,e?t.assignSorted(e.map((e=>[e.time,{interpolationMode:Za.CUBIC,value:e.value,leftTangent:e.inTangent,rightTangent:e.outTangent}]))):t.assignSorted([[0,{interpolationMode:Za.CUBIC,value:1}],[1,{interpolationMode:Za.CUBIC,value:1}]])}this.cachedKey=new Wd}addKey(e){e?this._curve.addKeyFrame(e.time,{interpolationMode:Za.CUBIC,value:e.value,leftTangent:e.inTangent,rightTangent:e.outTangent}):this._curve.clear()}evaluate_slow(e){return this._curve.evaluate(e)}evaluate(e){const{cachedKey:t,_curve:n}=this,i=n.keyFramesCount-1;let s=e;const o=e<0?n.preExtrapolation:n.postExtrapolation,r=n.getKeyframeTime(0),a=n.getKeyframeTime(i);switch(o){case ec.LOOP:s=rn(e-r,a-r)+r;break;case ec.PING_PONG:s=an(e-r,a-r)+r;break;case ec.CLAMP:default:s=Xt(e,r,a)}if(s>=t.time&&s<t.endTime)return t.evaluate(s);const c=this.findIndex(t,s),l=Math.min(c+1,i);return this.calcOptimizedKey(t,c,l),t.evaluate(s)}calcOptimizedKey(e,t,n){const i=this._curve.getKeyframeTime(t),s=this._curve.getKeyframeTime(n),{value:o,leftTangent:r}=this._curve.getKeyframeValue(t),{value:a,rightTangent:c}=this._curve.getKeyframeValue(n);e.index=t,e.time=i,e.endTime=s;const l=s-i,h=a-o,u=1/(l*l),_=r*l,d=c*l;e.coefficient[0]=(_+d-h-h)*u/l,e.coefficient[1]=(h+h+h-_-_-d)*u,e.coefficient[2]=r,e.coefficient[3]=o}findIndex(e,t){const{_curve:n}=this,i=n.keyFramesCount,s=e.index;if(-1!==s)if(t>n.getKeyframeTime(s))for(let e=0;e<3;e++){const o=s+e;if(o+1<i&&n.getKeyframeTime(o+1)>t)return o}else for(let e=0;e<3;e++){const i=s-e;if(i>=0&&n.getKeyframeTime(i-1)<=t)return i-1}let o,r=0,a=i;for(;a-r>1;)o=Math.floor((r+a)/2),n.getKeyframeTime(o)>=t?a=o:r=o;return r}}function Xd(e){switch(e){default:case $a.Default:case $a.Normal:case $a.Clamp:return ec.CLAMP;case $a.PingPong:return ec.PING_PONG;case $a.Loop:return ec.LOOP}}function Yd(e){switch(e){default:case ec.LINEAR:case ec.CLAMP:return $a.Clamp;case ec.PING_PONG:return $a.PingPong;case ec.LOOP:return $a.Loop}}function Kd(){const e=new K_;return e.assignSorted([[0,{interpolationMode:Za.CUBIC,value:1}],[1,{interpolationMode:Za.CUBIC,value:1}]]),e}function $d(e,t){console.warn(`${e} is deprecated, please use ${t} instead.`)}qd.defaultKF=[{time:0,value:1,inTangent:0,outTangent:0},{time:1,value:1,inTangent:0,outTangent:0}],zt.fastDefine("cc.AnimationCurve",qd,{_curve:null}),V(Vr,"intersect",[{name:"ray_aabb",newName:"rayAABB"},{name:"ray_plane",newName:"rayPlane"},{name:"ray_triangle",newName:"rayTriangle"},{name:"ray_sphere",newName:"raySphere"},{name:"ray_obb",newName:"rayOBB"},{name:"ray_capsule",newName:"rayCapsule"},{name:"ray_subMesh",newName:"raySubMesh"},{name:"ray_mesh",newName:"rayMesh"},{name:"ray_model",newName:"rayModel"},{name:"line_plane",newName:"linePlane"},{name:"line_triangle",newName:"lineTriangle"},{name:"line_aabb",newName:"lineAABB"},{name:"line_obb",newName:"lineOBB"},{name:"line_sphere",newName:"lineSphere"},{name:"aabb_aabb",newName:"aabbWithAABB"},{name:"aabb_obb",newName:"aabbWithOBB"},{name:"aabb_plane",newName:"aabbPlane"},{name:"aabb_frustum",newName:"aabbFrustum"},{name:"aabbFrustum_accurate",newName:"aabbFrustumAccurate"},{name:"obb_point",newName:"obbPoint"},{name:"obb_plane",newName:"obbPlane"},{name:"obb_frustum",newName:"obbFrustum"},{name:"obbFrustum_accurate",newName:"obbFrustumAccurate"},{name:"obb_obb",newName:"obbWithOBB"},{name:"obb_capsule",newName:"obbCapsule"},{name:"sphere_plane",newName:"spherePlane"},{name:"sphere_frustum",newName:"sphereFrustum"},{name:"sphereFrustum_accurate",newName:"sphereFrustumAccurate"},{name:"sphere_sphere",newName:"sphereWithSphere"},{name:"sphere_aabb",newName:"sphereAABB"},{name:"sphere_obb",newName:"sphereOBB"},{name:"sphere_capsule",newName:"sphereCapsule"},{name:"capsule_capsule",newName:"capsuleWithCapsule"}]);var Qd=Object.freeze({__proto__:null,distance:Wo,enums:qo,intersect:Vr,Line:Xo,Plane:qr,Ray:Yo,Triangle:tr,Sphere:er,AABB:Ua,OBB:ka,Capsule:ja,Frustum:Ka,Keyframe:jd,AnimationCurve:qd,get ERaycastMode(){return ir},line:class extends Xo{constructor(){super(),$d("line","Line")}},plane:class extends qr{constructor(){super(),$d("plane","Plane")}},ray:class extends Yo{constructor(){super(),$d("ray","Ray")}},triangle:class extends tr{constructor(){super(),$d("triangle","Triangle")}},sphere:class extends er{constructor(){super(),$d("sphere","Sphere")}},aabb:class extends Ua{constructor(){super(),$d("aabb","AABB")}},obb:class extends ka{constructor(){super(),$d("obb","OBB")}},capsule:class extends ja{constructor(){super(),$d("capsule","Capsule")}},frustum:class extends Ka{constructor(){super(),$d("frustum","Frustum")}}});e("geometry",Qd);const Jd={NONE:0,IGNORE_RAYCAST:1<<20,GIZMOS:1<<21,EDITOR:1<<22,UI_3D:1<<23,SCENE_GIZMO:1<<24,UI_2D:1<<25,PROFILER:1<<28,DEFAULT:1<<30,ALL:4294967295};class Zd{static makeMaskInclude(e){let t=0;for(const n of e)t|=n;return t}static makeMaskExclude(e){return~Zd.makeMaskInclude(e)}static addLayer(e,t){if(void 0===t)return void console.warn("bitNum can't be undefined");if(t>19||t<0)return void console.warn("maximum layers reached.");const n=1<<t;Zd.Enum[e],F(2104,e),Zd.Enum[e]=n,ke.value(Zd.Enum,String(n),e),Zd.BitMask[e]=n,ke.value(Zd.BitMask,String(n),e)}static deleteLayer(e){if(e>19||e<0)return void console.warn("do not change buildin layers.");const t=1<<e;delete Zd.Enum[Zd.Enum[t]],delete Zd.Enum[t],delete Zd.BitMask[Zd.BitMask[t]],delete Zd.BitMask[t]}static nameToLayer(e){return void 0===e?(console.warn("name can't be undefined"),-1):s(Zd.Enum[e])}static layerToName(e){return e>31||e<0?(console.warn("Unable to access unknown layer."),""):Zd.Enum[1<<e]}}let ep,tp;e("Layers",Zd),Zd.Enum=qe(Jd),Zd.BitMask=je({...Jd}),u.Layers=Zd,function(e){e[e.DEFAULT=100]="DEFAULT",e[e.UI=200]="UI"}(ep||(ep={})),u.RenderPassStage=ep,function(e){e[e.MIN=0]="MIN",e[e.MAX=255]="MAX",e[e.DEFAULT=128]="DEFAULT"}(tp||(tp={}));const np={bindings:[],layouts:{}},ip={bindings:[],layouts:{}};let sp;!function(e){e[e.UBO_GLOBAL=0]="UBO_GLOBAL",e[e.UBO_CAMERA=1]="UBO_CAMERA",e[e.UBO_SHADOW=2]="UBO_SHADOW",e[e.SAMPLER_SHADOWMAP=3]="SAMPLER_SHADOWMAP",e[e.SAMPLER_ENVIRONMENT=4]="SAMPLER_ENVIRONMENT",e[e.SAMPLER_SPOT_LIGHTING_MAP=5]="SAMPLER_SPOT_LIGHTING_MAP",e[e.SAMPLER_DIFFUSEMAP=6]="SAMPLER_DIFFUSEMAP",e[e.COUNT=7]="COUNT"}(sp||(sp={}));const op=sp.SAMPLER_SHADOWMAP,rp=sp.COUNT-op;let ap;!function(e){e[e.UBO_LOCAL=0]="UBO_LOCAL",e[e.UBO_FORWARD_LIGHTS=1]="UBO_FORWARD_LIGHTS",e[e.UBO_SKINNING_ANIMATION=2]="UBO_SKINNING_ANIMATION",e[e.UBO_SKINNING_TEXTURE=3]="UBO_SKINNING_TEXTURE",e[e.UBO_MORPH=4]="UBO_MORPH",e[e.UBO_UI_LOCAL=5]="UBO_UI_LOCAL",e[e.SAMPLER_JOINTS=6]="SAMPLER_JOINTS",e[e.SAMPLER_MORPH_POSITION=7]="SAMPLER_MORPH_POSITION",e[e.SAMPLER_MORPH_NORMAL=8]="SAMPLER_MORPH_NORMAL",e[e.SAMPLER_MORPH_TANGENT=9]="SAMPLER_MORPH_TANGENT",e[e.SAMPLER_LIGHTMAP=10]="SAMPLER_LIGHTMAP",e[e.SAMPLER_SPRITE=11]="SAMPLER_SPRITE",e[e.SAMPLER_REFLECTION=12]="SAMPLER_REFLECTION",e[e.STORAGE_REFLECTION=13]="STORAGE_REFLECTION",e[e.COUNT=14]="COUNT"}(ap||(ap={}));const cp=ap.SAMPLER_JOINTS,lp=ap.STORAGE_REFLECTION-cp,hp=ap.COUNT-cp-lp;let up;!function(e){e[e.GLOBAL=0]="GLOBAL",e[e.MATERIAL=1]="MATERIAL",e[e.LOCAL=2]="LOCAL"}(up||(up={}));const _p=new Qi([op,0,cp],[rp,0,lp],[0,0,0],[0,0,0],[0,0,0],[0,0,hp],[0,0,0],[0,2,1]);class dp{}dp.TIME_OFFSET=0,dp.NATIVE_SIZE_OFFSET=dp.TIME_OFFSET+4,dp.SCREEN_SIZE_OFFSET=dp.NATIVE_SIZE_OFFSET+4,dp.COUNT=dp.SCREEN_SIZE_OFFSET+4,dp.SIZE=4*dp.COUNT,dp.NAME="CCGlobal",dp.BINDING=sp.UBO_GLOBAL,dp.DESCRIPTOR=new Is(dp.BINDING,Ni.UNIFORM_BUFFER,1,Si.ALL),dp.LAYOUT=new hs(up.GLOBAL,dp.BINDING,dp.NAME,[new ls("cc_time",ii.FLOAT4,1),new ls("cc_screenSize",ii.FLOAT4,1),new ls("cc_nativeSize",ii.FLOAT4,1)],1),np.layouts[dp.NAME]=dp.LAYOUT,np.bindings[dp.BINDING]=dp.DESCRIPTOR;class pp{}pp.MAT_VIEW_OFFSET=0,pp.MAT_VIEW_INV_OFFSET=pp.MAT_VIEW_OFFSET+16,pp.MAT_PROJ_OFFSET=pp.MAT_VIEW_INV_OFFSET+16,pp.MAT_PROJ_INV_OFFSET=pp.MAT_PROJ_OFFSET+16,pp.MAT_VIEW_PROJ_OFFSET=pp.MAT_PROJ_INV_OFFSET+16,pp.MAT_VIEW_PROJ_INV_OFFSET=pp.MAT_VIEW_PROJ_OFFSET+16,pp.CAMERA_POS_OFFSET=pp.MAT_VIEW_PROJ_INV_OFFSET+16,pp.SCREEN_SCALE_OFFSET=pp.CAMERA_POS_OFFSET+4,pp.EXPOSURE_OFFSET=pp.SCREEN_SCALE_OFFSET+4,pp.MAIN_LIT_DIR_OFFSET=pp.EXPOSURE_OFFSET+4,pp.MAIN_LIT_COLOR_OFFSET=pp.MAIN_LIT_DIR_OFFSET+4,pp.AMBIENT_SKY_OFFSET=pp.MAIN_LIT_COLOR_OFFSET+4,pp.AMBIENT_GROUND_OFFSET=pp.AMBIENT_SKY_OFFSET+4,pp.GLOBAL_FOG_COLOR_OFFSET=pp.AMBIENT_GROUND_OFFSET+4,pp.GLOBAL_FOG_BASE_OFFSET=pp.GLOBAL_FOG_COLOR_OFFSET+4,pp.GLOBAL_FOG_ADD_OFFSET=pp.GLOBAL_FOG_BASE_OFFSET+4,pp.NEAR_FAR_OFFSET=pp.GLOBAL_FOG_ADD_OFFSET+4,pp.VIEW_PORT_OFFSET=pp.NEAR_FAR_OFFSET+4,pp.COUNT=pp.VIEW_PORT_OFFSET+4,pp.SIZE=4*pp.COUNT,pp.NAME="CCCamera",pp.BINDING=sp.UBO_CAMERA,pp.DESCRIPTOR=new Is(pp.BINDING,Ni.UNIFORM_BUFFER,1,Si.ALL),pp.LAYOUT=new hs(up.GLOBAL,pp.BINDING,pp.NAME,[new ls("cc_matView",ii.MAT4,1),new ls("cc_matViewInv",ii.MAT4,1),new ls("cc_matProj",ii.MAT4,1),new ls("cc_matProjInv",ii.MAT4,1),new ls("cc_matViewProj",ii.MAT4,1),new ls("cc_matViewProjInv",ii.MAT4,1),new ls("cc_cameraPos",ii.FLOAT4,1),new ls("cc_screenScale",ii.FLOAT4,1),new ls("cc_exposure",ii.FLOAT4,1),new ls("cc_mainLitDir",ii.FLOAT4,1),new ls("cc_mainLitColor",ii.FLOAT4,1),new ls("cc_ambientSky",ii.FLOAT4,1),new ls("cc_ambientGround",ii.FLOAT4,1),new ls("cc_fogColor",ii.FLOAT4,1),new ls("cc_fogBase",ii.FLOAT4,1),new ls("cc_fogAdd",ii.FLOAT4,1),new ls("cc_nearFar",ii.FLOAT4,1),new ls("cc_viewPort",ii.FLOAT4,1)],1),np.layouts[pp.NAME]=pp.LAYOUT,np.bindings[pp.BINDING]=pp.DESCRIPTOR;class fp{}fp.MAT_LIGHT_PLANE_PROJ_OFFSET=0,fp.MAT_LIGHT_VIEW_OFFSET=fp.MAT_LIGHT_PLANE_PROJ_OFFSET+16,fp.MAT_LIGHT_VIEW_PROJ_OFFSET=fp.MAT_LIGHT_VIEW_OFFSET+16,fp.SHADOW_INV_PROJ_DEPTH_INFO_OFFSET=fp.MAT_LIGHT_VIEW_PROJ_OFFSET+16,fp.SHADOW_PROJ_DEPTH_INFO_OFFSET=fp.SHADOW_INV_PROJ_DEPTH_INFO_OFFSET+4,fp.SHADOW_PROJ_INFO_OFFSET=fp.SHADOW_PROJ_DEPTH_INFO_OFFSET+4,fp.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET=fp.SHADOW_PROJ_INFO_OFFSET+4,fp.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET=fp.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET+4,fp.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET=fp.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET+4,fp.SHADOW_COLOR_OFFSET=fp.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET+4,fp.PLANAR_NORMAL_DISTANCE_INFO_OFFSET=fp.SHADOW_COLOR_OFFSET+4,fp.COUNT=fp.PLANAR_NORMAL_DISTANCE_INFO_OFFSET+4,fp.SIZE=4*fp.COUNT,fp.NAME="CCShadow",fp.BINDING=sp.UBO_SHADOW,fp.DESCRIPTOR=new Is(fp.BINDING,Ni.UNIFORM_BUFFER,1,Si.ALL),fp.LAYOUT=new hs(up.GLOBAL,fp.BINDING,fp.NAME,[new ls("cc_matLightPlaneProj",ii.MAT4,1),new ls("cc_matLightView",ii.MAT4,1),new ls("cc_matLightViewProj",ii.MAT4,1),new ls("cc_shadowInvProjDepthInfo",ii.FLOAT4,1),new ls("cc_shadowProjDepthInfo",ii.FLOAT4,1),new ls("cc_shadowProjInfo",ii.FLOAT4,1),new ls("cc_shadowNFLSInfo",ii.FLOAT4,1),new ls("cc_shadowWHPBInfo",ii.FLOAT4,1),new ls("cc_shadowLPNNInfo",ii.FLOAT4,1),new ls("cc_shadowColor",ii.FLOAT4,1),new ls("cc_planarNDInfo",ii.FLOAT4,1)],1),np.layouts[fp.NAME]=fp.LAYOUT,np.bindings[fp.BINDING]=fp.DESCRIPTOR;const mp=sp.SAMPLER_SHADOWMAP,gp=new Is(mp,Ni.SAMPLER_TEXTURE,1,Si.FRAGMENT),vp=new us(up.GLOBAL,mp,"cc_shadowMap",ii.SAMPLER2D,1);np.layouts.cc_shadowMap=vp,np.bindings[mp]=gp;const yp=sp.SAMPLER_ENVIRONMENT,xp=new Is(yp,Ni.SAMPLER_TEXTURE,1,Si.FRAGMENT),Sp=new us(up.GLOBAL,yp,"cc_environment",ii.SAMPLER_CUBE,1);np.layouts.cc_environment=Sp,np.bindings[yp]=xp;const Cp=sp.SAMPLER_DIFFUSEMAP,Ep=new Is(Cp,Ni.SAMPLER_TEXTURE,1,Si.FRAGMENT),Tp=new us(up.GLOBAL,Cp,"cc_diffuseMap",ii.SAMPLER_CUBE,1);np.layouts.cc_diffuseMap=Tp,np.bindings[Cp]=Ep;const bp=sp.SAMPLER_SPOT_LIGHTING_MAP,Ap=new Is(bp,Ni.SAMPLER_TEXTURE,1,Si.FRAGMENT),Pp=new us(up.GLOBAL,bp,"cc_spotLightingMap",ii.SAMPLER2D,1);np.layouts.cc_spotLightingMap=Pp,np.bindings[bp]=Ap;class wp{}wp.MAT_WORLD_OFFSET=0,wp.MAT_WORLD_IT_OFFSET=wp.MAT_WORLD_OFFSET+16,wp.LIGHTINGMAP_UVPARAM=wp.MAT_WORLD_IT_OFFSET+16,wp.LOCAL_SHADOW_BIAS=wp.LIGHTINGMAP_UVPARAM+4,wp.COUNT=wp.LOCAL_SHADOW_BIAS+4,wp.SIZE=4*wp.COUNT,wp.NAME="CCLocal",wp.BINDING=ap.UBO_LOCAL,wp.DESCRIPTOR=new Is(wp.BINDING,Ni.UNIFORM_BUFFER,1,Si.VERTEX|Si.COMPUTE),wp.LAYOUT=new hs(up.LOCAL,wp.BINDING,wp.NAME,[new ls("cc_matWorld",ii.MAT4,1),new ls("cc_matWorldIT",ii.MAT4,1),new ls("cc_lightingMapUVParam",ii.FLOAT4,1),new ls("cc_localShadowBias",ii.FLOAT4,1)],1),ip.layouts[wp.NAME]=wp.LAYOUT,ip.bindings[wp.BINDING]=wp.DESCRIPTOR;class Ip{}Ip.WORLD_BOUND_CENTER=0,Ip.WORLD_BOUND_HALF_EXTENTS=Ip.WORLD_BOUND_CENTER+4,Ip.COUNT=Ip.WORLD_BOUND_HALF_EXTENTS+4,Ip.SIZE=4*Ip.COUNT,Ip.NAME="CCWorldBound",Ip.BINDING=ap.UBO_LOCAL,Ip.DESCRIPTOR=new Is(Ip.BINDING,Ni.UNIFORM_BUFFER,1,Si.VERTEX|Si.COMPUTE),Ip.LAYOUT=new hs(up.LOCAL,Ip.BINDING,Ip.NAME,[new ls("cc_worldBoundCenter",ii.FLOAT4,1),new ls("cc_worldBoundHalfExtents",ii.FLOAT4,1)],1),ip.layouts[Ip.NAME]=Ip.LAYOUT,ip.bindings[Ip.BINDING]=Ip.DESCRIPTOR;class Rp{}Rp.BATCHING_COUNT=10,Rp.MAT_WORLDS_OFFSET=0,Rp.COUNT=16*Rp.BATCHING_COUNT,Rp.SIZE=4*Rp.COUNT,Rp.NAME="CCLocalBatched",Rp.BINDING=ap.UBO_LOCAL,Rp.DESCRIPTOR=new Is(Rp.BINDING,Ni.UNIFORM_BUFFER,1,Si.VERTEX|Si.COMPUTE),Rp.LAYOUT=new hs(up.LOCAL,Rp.BINDING,Rp.NAME,[new ls("cc_matWorlds",ii.MAT4,Rp.BATCHING_COUNT)],1),ip.layouts[Rp.NAME]=Rp.LAYOUT,ip.bindings[Rp.BINDING]=Rp.DESCRIPTOR;class Dp{}Dp.LIGHTS_PER_PASS=1,Dp.LIGHT_POS_OFFSET=0,Dp.LIGHT_COLOR_OFFSET=Dp.LIGHT_POS_OFFSET+4*Dp.LIGHTS_PER_PASS,Dp.LIGHT_SIZE_RANGE_ANGLE_OFFSET=Dp.LIGHT_COLOR_OFFSET+4*Dp.LIGHTS_PER_PASS,Dp.LIGHT_DIR_OFFSET=Dp.LIGHT_SIZE_RANGE_ANGLE_OFFSET+4*Dp.LIGHTS_PER_PASS,Dp.COUNT=Dp.LIGHT_DIR_OFFSET+4*Dp.LIGHTS_PER_PASS,Dp.SIZE=4*Dp.COUNT,Dp.NAME="CCForwardLight",Dp.BINDING=ap.UBO_FORWARD_LIGHTS,Dp.DESCRIPTOR=new Is(Dp.BINDING,Ni.DYNAMIC_UNIFORM_BUFFER,1,Si.FRAGMENT),Dp.LAYOUT=new hs(up.LOCAL,Dp.BINDING,Dp.NAME,[new ls("cc_lightPos",ii.FLOAT4,Dp.LIGHTS_PER_PASS),new ls("cc_lightColor",ii.FLOAT4,Dp.LIGHTS_PER_PASS),new ls("cc_lightSizeRangeAngle",ii.FLOAT4,Dp.LIGHTS_PER_PASS),new ls("cc_lightDir",ii.FLOAT4,Dp.LIGHTS_PER_PASS)],1),ip.layouts[Dp.NAME]=Dp.LAYOUT,ip.bindings[Dp.BINDING]=Dp.DESCRIPTOR;class Op{}Op.JOINTS_TEXTURE_INFO_OFFSET=0,Op.COUNT=Op.JOINTS_TEXTURE_INFO_OFFSET+4,Op.SIZE=4*Op.COUNT,Op.NAME="CCSkinningTexture",Op.BINDING=ap.UBO_SKINNING_TEXTURE,Op.DESCRIPTOR=new Is(Op.BINDING,Ni.UNIFORM_BUFFER,1,Si.VERTEX),Op.LAYOUT=new hs(up.LOCAL,Op.BINDING,Op.NAME,[new ls("cc_jointTextureInfo",ii.FLOAT4,1)],1),ip.layouts[Op.NAME]=Op.LAYOUT,ip.bindings[Op.BINDING]=Op.DESCRIPTOR;class Np{}Np.JOINTS_ANIM_INFO_OFFSET=0,Np.COUNT=Np.JOINTS_ANIM_INFO_OFFSET+4,Np.SIZE=4*Np.COUNT,Np.NAME="CCSkinningAnimation",Np.BINDING=ap.UBO_SKINNING_ANIMATION,Np.DESCRIPTOR=new Is(Np.BINDING,Ni.UNIFORM_BUFFER,1,Si.VERTEX),Np.LAYOUT=new hs(up.LOCAL,Np.BINDING,Np.NAME,[new ls("cc_jointAnimInfo",ii.FLOAT4,1)],1),ip.layouts[Np.NAME]=Np.LAYOUT,ip.bindings[Np.BINDING]=Np.DESCRIPTOR;class Mp{}Mp.JOINTS_OFFSET=0,Mp.COUNT=Mp.JOINTS_OFFSET+360,Mp.SIZE=4*Mp.COUNT,Mp.NAME="CCSkinning",Mp.BINDING=ap.UBO_SKINNING_TEXTURE,Mp.DESCRIPTOR=new Is(Mp.BINDING,Ni.UNIFORM_BUFFER,1,Si.VERTEX),Mp.LAYOUT=new hs(up.LOCAL,Mp.BINDING,Mp.NAME,[new ls("cc_joints",ii.FLOAT4,90)],1),ip.layouts[Mp.NAME]=Mp.LAYOUT,ip.bindings[Mp.BINDING]=Mp.DESCRIPTOR;class Lp{}Lp.MAX_MORPH_TARGET_COUNT=60,Lp.OFFSET_OF_WEIGHTS=0,Lp.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH=4*Lp.MAX_MORPH_TARGET_COUNT,Lp.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT=Lp.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH+4,Lp.OFFSET_OF_VERTICES_COUNT=Lp.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT+4,Lp.COUNT_BASE_4_BYTES=4*Math.ceil(Lp.MAX_MORPH_TARGET_COUNT/4)+4,Lp.SIZE=4*Lp.COUNT_BASE_4_BYTES,Lp.NAME="CCMorph",Lp.BINDING=ap.UBO_MORPH,Lp.DESCRIPTOR=new Is(Lp.BINDING,Ni.UNIFORM_BUFFER,1,Si.VERTEX),Lp.LAYOUT=new hs(up.LOCAL,Lp.BINDING,Lp.NAME,[new ls("cc_displacementWeights",ii.FLOAT4,Lp.MAX_MORPH_TARGET_COUNT/4),new ls("cc_displacementTextureInfo",ii.FLOAT4,1)],1),ip.layouts[Lp.NAME]=Lp.LAYOUT,ip.bindings[Lp.BINDING]=Lp.DESCRIPTOR;class Bp{}Bp.NAME="CCUILocal",Bp.BINDING=ap.UBO_UI_LOCAL,Bp.DESCRIPTOR=new Is(Bp.BINDING,Ni.DYNAMIC_UNIFORM_BUFFER,1,Si.VERTEX),Bp.LAYOUT=new hs(up.LOCAL,Bp.BINDING,Bp.NAME,[new ls("cc_local_data",ii.FLOAT4,1)],1),ip.layouts[Bp.NAME]=Bp.LAYOUT,ip.bindings[Bp.BINDING]=Bp.DESCRIPTOR;const Fp=ap.SAMPLER_JOINTS,zp=new Is(Fp,Ni.SAMPLER_TEXTURE,1,Si.VERTEX),Up=new us(up.LOCAL,Fp,"cc_jointTexture",ii.SAMPLER2D,1);ip.layouts.cc_jointTexture=Up,ip.bindings[Fp]=zp;const Gp=ap.SAMPLER_MORPH_POSITION,Vp=new Is(Gp,Ni.SAMPLER_TEXTURE,1,Si.VERTEX),Hp=new us(up.LOCAL,Gp,"cc_PositionDisplacements",ii.SAMPLER2D,1);ip.layouts.cc_PositionDisplacements=Hp,ip.bindings[Gp]=Vp;const kp=ap.SAMPLER_MORPH_NORMAL,jp=new Is(kp,Ni.SAMPLER_TEXTURE,1,Si.VERTEX),Wp=new us(up.LOCAL,kp,"cc_NormalDisplacements",ii.SAMPLER2D,1);ip.layouts.cc_NormalDisplacements=Wp,ip.bindings[kp]=jp;const qp=ap.SAMPLER_MORPH_TANGENT,Xp=new Is(qp,Ni.SAMPLER_TEXTURE,1,Si.VERTEX),Yp=new us(up.LOCAL,qp,"cc_TangentDisplacements",ii.SAMPLER2D,1);ip.layouts.cc_TangentDisplacements=Yp,ip.bindings[qp]=Xp;const Kp=ap.SAMPLER_LIGHTMAP,$p=new Is(Kp,Ni.SAMPLER_TEXTURE,1,Si.FRAGMENT),Qp=new us(up.LOCAL,Kp,"cc_lightingMap",ii.SAMPLER2D,1);ip.layouts.cc_lightingMap=Qp,ip.bindings[Kp]=$p;const Jp=ap.SAMPLER_SPRITE,Zp=new Is(Jp,Ni.SAMPLER_TEXTURE,1,Si.FRAGMENT),ef=new us(up.LOCAL,Jp,"cc_spriteTexture",ii.SAMPLER2D,1);ip.layouts.cc_spriteTexture=ef,ip.bindings[Jp]=Zp;const tf=ap.SAMPLER_REFLECTION,nf=new Is(tf,Ni.SAMPLER_TEXTURE,1,Si.FRAGMENT),sf=new us(up.LOCAL,tf,"cc_reflectionTexture",ii.SAMPLER2D,1);ip.layouts.cc_reflectionTexture=sf,ip.bindings[tf]=nf;const of=ap.STORAGE_REFLECTION,rf=new Is(of,Ni.STORAGE_IMAGE,1,Si.COMPUTE),af=new ps(up.LOCAL,of,"cc_reflectionStorage",ii.IMAGE2D,1);ip.layouts.cc_reflectionStorage=af,ip.bindings[of]=rf;const cf=Zd.makeMaskExclude([Zd.BitMask.UI_2D,Zd.BitMask.GIZMOS,Zd.BitMask.EDITOR,Zd.BitMask.SCENE_GIZMO,Zd.BitMask.PROFILER]);function lf(e){return(e.getFormatFeatures(ti.R32F)&(ui.RENDER_TARGET|ui.SAMPLED_TEXTURE))==(ui.RENDER_TARGET|ui.SAMPLED_TEXTURE)}Zd.makeMaskExclude([Zd.BitMask.UI_2D,Zd.BitMask.PROFILER]),Zd.Enum.ALL;const hf=4227858432,uf=66060288,_f=1044480,df=(e,t,n,i=0)=>t<<26&hf|e<<20&uf|n<<12&_f|4095&i,pf=e=>(e&hf)>>>26,ff=e=>(e&uf)>>>20,mf=e=>(e&_f)>>>12,gf=e=>4095&e,vf=(e,t)=>67108863&e|t<<26&hf,yf={[ii.UNKNOWN]:()=>console.warn("illegal uniform handle"),[ii.INT]:(e,t,n=0)=>e[n],[ii.INT2]:(e,t,n=0)=>Bn.fromArray(t,e,n),[ii.INT3]:(e,t,n=0)=>gn.fromArray(t,e,n),[ii.INT4]:(e,t,n=0)=>Gn.fromArray(t,e,n),[ii.FLOAT]:(e,t,n=0)=>e[n],[ii.FLOAT2]:(e,t,n=0)=>Bn.fromArray(t,e,n),[ii.FLOAT3]:(e,t,n=0)=>gn.fromArray(t,e,n),[ii.FLOAT4]:(e,t,n=0)=>Gn.fromArray(t,e,n),[ii.MAT3]:(e,t,n=0)=>Sn.fromArray(t,e,n),[ii.MAT4]:(e,t,n=0)=>On.fromArray(t,e,n)},xf={[ii.UNKNOWN]:()=>console.warn("illegal uniform handle"),[ii.INT]:(e,t,n=0)=>e[n]=t,[ii.INT2]:(e,t,n=0)=>Bn.toArray(e,t,n),[ii.INT3]:(e,t,n=0)=>gn.toArray(e,t,n),[ii.INT4]:(e,t,n=0)=>Gn.toArray(e,t,n),[ii.FLOAT]:(e,t,n=0)=>e[n]=t,[ii.FLOAT2]:(e,t,n=0)=>Bn.toArray(e,t,n),[ii.FLOAT3]:(e,t,n=0)=>gn.toArray(e,t,n),[ii.FLOAT4]:(e,t,n=0)=>Gn.toArray(e,t,n),[ii.MAT3]:(e,t,n=0)=>Sn.toArray(e,t,n),[ii.MAT4]:(e,t,n=0)=>On.toArray(e,t,n)},Sf=[Object.freeze([0]),Object.freeze([0,0]),Object.freeze([0,0,0,0]),Object.freeze([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])];function Cf(e){switch(e){case ii.BOOL:case ii.INT:case ii.UINT:case ii.FLOAT:return Sf[0];case ii.BOOL2:case ii.INT2:case ii.UINT2:case ii.FLOAT2:return Sf[1];case ii.BOOL4:case ii.INT4:case ii.UINT4:case ii.FLOAT4:return Sf[2];case ii.MAT4:return Sf[3];case ii.SAMPLER2D:return"default-texture";case ii.SAMPLER_CUBE:return"default-cube-texture"}return Sf[0]}function Ef(e,t){const n=Object.entries(t);let i=!1;for(let t=0;t<n.length;t++)e[n[t][0]]!==n[t][1]&&(e[n[t][0]]=n[t][1],i=!0);return i}const Tf=new Rs;function bf(e){return Math.ceil(Math.log2(Math.max(e,2)))}function Af(e,t){switch(e.type){case"boolean":return"number"==typeof t?t.toString():t?"1":"0";case"string":return void 0!==t?t:e.options[0];case"number":return void 0!==t?t.toString():e.range[0].toString();default:return console.warn(`unknown define type '${e.type}'`),"-1"}}function Pf(e,t,n,i,s){const o=e.builtins[i],r=[];for(let e=0;e<o.blocks.length;e++){const t=o.blocks[e],i=n.layouts[t.name],a=i&&n.bindings.find((e=>e.binding===i.binding));i&&a&&a.descriptorType&ks?(r.push(i),s&&!s.includes(a)&&s.push(a)):console.warn(`builtin UBO '${t.name}' not available!`)}Array.prototype.unshift.apply(t.shaderInfo.blocks,r);const a=[];for(let e=0;e<o.samplerTextures.length;e++){const t=o.samplerTextures[e],i=n.layouts[t.name],r=i&&n.bindings.find((e=>e.binding===i.binding));i&&r&&r.descriptorType&js?(a.push(i),s&&!s.includes(r)&&s.push(r)):console.warn(`builtin samplerTexture '${t.name}' not available!`)}Array.prototype.unshift.apply(t.shaderInfo.samplerTextures,a),s&&s.sort(((e,t)=>e.binding-t.binding))}function wf(e){return e.members.reduce(((e,t)=>e+Qs(t.type)*t.count),0)}function If(e,t){for(let n=0;n<e.length;n++){const i=e[n];if("!"===i[0]){if(t[i.slice(1)])return!1}else if(!t[i])return!1}return!0}function Rf(e){switch(e.gfxAPI){case Jn.GLES2:case Jn.WEBGL:return"glsl1";case Jn.GLES3:case Jn.WEBGL2:return"glsl3";default:return"glsl4"}}const Df=new class{constructor(){this._templates={},this._cache={},this._templateInfos={}}register(e){for(let t=0;t<e.shaders.length;t++)this.define(e.shaders[t]).effectName=e.name;for(let t=0;t<e.techniques.length;t++){const n=e.techniques[t];for(let e=0;e<n.passes.length;e++){const t=n.passes[e];void 0!==t.propertyIndex&&void 0===t.properties&&(t.properties=n.passes[t.propertyIndex].properties)}}}define(e){const t=this._templates[e.name];if(t&&t.hash===e.hash)return t;const n={...e};let i=0;for(let e=0;e<n.defines.length;e++){const t=n.defines[e];let s=1;if("number"===t.type){const e=t.range;s=bf(e[1]-e[0]+1),t._map=t=>t-e[0]}else"string"===t.type?(s=bf(t.options.length),t._map=e=>Math.max(0,t.options.findIndex((t=>t===e)))):"boolean"===t.type&&(t._map=e=>e?1:0);t._offset=i,i+=s}i>31&&(n.uber=!0),n.constantMacros="";for(const e in n.builtins.statistics)n.constantMacros+=`#define ${e} ${n.builtins.statistics[e]}\n`;if(this._templates[e.name]=n,!this._templateInfos[n.hash]){const e={};e.samplerStartBinding=n.blocks.length,e.shaderInfo=new ys,e.blockSizes=[],e.bindings=[];for(let t=0;t<n.blocks.length;t++){const i=n.blocks[t];e.blockSizes.push(wf(i)),e.bindings.push(new Is(i.binding,Ni.UNIFORM_BUFFER,1,i.stageFlags)),e.shaderInfo.blocks.push(new hs(up.MATERIAL,i.binding,i.name,i.members.map((e=>new ls(e.name,e.type,e.count))),1))}for(let t=0;t<n.samplerTextures.length;t++){const i=n.samplerTextures[t];e.bindings.push(new Is(i.binding,Ni.SAMPLER_TEXTURE,i.count,i.stageFlags)),e.shaderInfo.samplerTextures.push(new us(up.MATERIAL,i.binding,i.name,i.type,i.count))}for(let t=0;t<n.samplers.length;t++){const i=n.samplers[t];e.bindings.push(new Is(i.binding,Ni.SAMPLER,i.count,i.stageFlags)),e.shaderInfo.samplers.push(new _s(up.MATERIAL,i.binding,i.name,i.count))}for(let t=0;t<n.textures.length;t++){const i=n.textures[t];e.bindings.push(new Is(i.binding,Ni.TEXTURE,i.count,i.stageFlags)),e.shaderInfo.textures.push(new ds(up.MATERIAL,i.binding,i.name,i.type,i.count))}for(let t=0;t<n.buffers.length;t++){const i=n.buffers[t];e.bindings.push(new Is(i.binding,Ni.STORAGE_BUFFER,1,i.stageFlags)),e.shaderInfo.buffers.push(new fs(up.MATERIAL,i.binding,i.name,1,i.memoryAccess))}for(let t=0;t<n.images.length;t++){const i=n.images[t];e.bindings.push(new Is(i.binding,Ni.STORAGE_IMAGE,i.count,i.stageFlags)),e.shaderInfo.images.push(new ps(up.MATERIAL,i.binding,i.name,i.type,i.count,i.memoryAccess))}for(let t=0;t<n.subpassInputs.length;t++){const i=n.subpassInputs[t];e.bindings.push(new Is(i.binding,Ni.INPUT_ATTACHMENT,i.count,i.stageFlags)),e.shaderInfo.subpassInputs.push(new ms(up.MATERIAL,i.binding,i.name,i.count))}e.gfxAttributes=[];for(let t=0;t<n.attributes.length;t++){const i=n.attributes[t];e.gfxAttributes.push(new vs(i.name,i.format,i.isNormalized,0,i.isInstanced,i.location))}Pf(n,e,ip,"locals"),e.shaderInfo.stages.push(new gs(Si.VERTEX,"")),e.shaderInfo.stages.push(new gs(Si.FRAGMENT,"")),e.handleMap=function(e){const t={};for(let n=0;n<e.blocks.length;n++){const i=e.blocks[n],s=i.members;let o=0;for(let e=0;e<s.length;e++){const n=s[e];t[n.name]=df(i.binding,n.type,n.count,o),o+=(Qs(n.type)>>2)*n.count}}for(let n=0;n<e.samplerTextures.length;n++){const i=e.samplerTextures[n];t[i.name]=df(i.binding,i.type,i.count)}return t}(n),e.setLayouts=[],this._templateInfos[n.hash]=e}return n}getTemplate(e){return this._templates[e]}getTemplateInfo(e){const t=this._templates[e].hash;return this._templateInfos[t]}getDescriptorSetLayout(e,t,n=!1){const i=this._templates[t],s=this._templateInfos[i.hash];return s.setLayouts.length||(Tf.bindings=s.bindings,s.setLayouts[up.MATERIAL]=e.createDescriptorSetLayout(Tf),Tf.bindings=ip.bindings,s.setLayouts[up.LOCAL]=e.createDescriptorSetLayout(Tf)),s.setLayouts[n?up.LOCAL:up.MATERIAL]}hasProgram(e){return void 0!==this._templates[e]}getKey(e,t){const n=this._templates[e],i=n.defines;if(n.uber){let e="";for(let n=0;n<i.length;n++){const s=i[n],o=t[s.name];if(!o||!s._map)continue;const r=s._map(o);e+=`${s._offset}${r}|`}return`${e}${n.hash}`}let s=0;for(let e=0;e<i.length;e++){const n=i[e],o=t[n.name];o&&n._map&&(s|=n._map(o)<<n._offset)}return`${s.toString(16)}|${n.hash}`}destroyShaderByDefines(e){const t=Object.keys(e);if(!t.length)return;const n=t.map((t=>{let n=e[t];return"boolean"==typeof n&&(n=n?"1":"0"),new RegExp(`${t}${n}`)})),i=Object.keys(this._cache).filter((e=>n.every((t=>t.test(this._cache[e].name)))));for(let e=0;e<i.length;e++){const t=i[e],n=this._cache[t];T(`destroyed shader ${n.name}`),n.destroy(),delete this._cache[t]}}getGFXShader(e,t,n,i,s){Object.assign(n,i.macros),s||(s=this.getKey(t,n));const o=this._cache[s];if(o)return o;const r=this._templates[t],a=this._templateInfos[r.hash];a.pipelineLayout||(this.getDescriptorSetLayout(e,t),Pf(r,a,np,"globals"),a.setLayouts[up.GLOBAL]=i.descriptorSetLayout,a.pipelineLayout=e.createPipelineLayout(new Os(a.setLayouts)));const c=function(e,t){const n=[];for(let i=0;i<t.length;i++){const s=t[i],o=s.name,r=e[o],a=Af(s,r),c=!r||"0"===r;n.push({name:o,value:a,isDefault:c})}return n}(n,r.defines),l=i.constantMacros+r.constantMacros+c.reduce(((e,t)=>`${e}#define ${t.name} ${t.value}\n`),"");let h=r.glsl3;const u=Rf(e);return u?h=r[u]:console.error("Invalid GFX API!"),a.shaderInfo.stages[0].source=l+h.vert,a.shaderInfo.stages[1].source=l+h.frag,a.shaderInfo.attributes=function(e,t,n){const i=[],s=e.attributes,o=t.gfxAttributes;for(let e=0;e<s.length;e++)If(s[e].defines,n)&&i.push(o[e]);return i}(r,a,n),a.shaderInfo.name=function(e,t){return e+t.reduce(((e,t)=>t.isDefault?e:`${e}|${t.name}${t.value}`),"")}(t,c),this._cache[s]=e.createShader(a.shaderInfo)}};var Of,Nf,Mf,Lf,Bf,Ff,zf,Uf;u.programLib=Df;let Gf=e("EffectAsset",mc("cc.EffectAsset")((Uf=zf=class e extends xh{constructor(...e){super(...e),rc(this,"techniques",Mf,this),rc(this,"shaders",Lf,this),rc(this,"combinations",Bf,this),rc(this,"hideInEditor",Ff,this)}static register(t){e._effects[t.name]=t}static remove(t){if("string"!=typeof t)e._effects[t.name]&&e._effects[t.name]===t&&delete e._effects[t.name];else{if(e._effects[t])return void delete e._effects[t];for(const n in e._effects)if(e._effects[n]._uuid===t)return void delete e._effects[n]}}static get(t){if(e._effects[t])return e._effects[t];for(const n in e._effects)if(e._effects[n]._uuid===t)return e._effects[n];return null}static getAll(){return e._effects}onLoaded(){Df.register(this),e.register(this),u.game.once(u.Game.EVENT_ENGINE_INITED,this._precompile,this)}_precompile(){const e=u.director.root;for(let t=0;t<this.shaders.length;t++){const n=this.shaders[t],i=this.combinations[t];i&&Object.keys(i).reduce(((e,t)=>e.reduce(((e,n)=>{const s=i[t];for(let i=0;i<s.length;++i){const o={...n};o[t]=s[i],e.push(o)}return e}),[])),[{}]).forEach((t=>Df.getGFXShader(e.device,n.name,t,e.pipeline)))}}destroy(){return e.remove(this),super.destroy()}initDefault(t){super.initDefault(t);const n=e.get("unlit");this.name="unlit",this.shaders=n.shaders,this.combinations=n.combinations,this.techniques=n.techniques}validate(){return this.techniques.length>0&&this.shaders.length>0}},zf._effects={},Mf=ac((Nf=Uf).prototype,"techniques",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Lf=ac(Nf.prototype,"shaders",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Bf=ac(Nf.prototype,"combinations",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Ff=ac(Nf.prototype,"hideInEditor",[Tc,Ac],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Of=Nf))||Of);u.EffectAsset=Gf;let Vf,Hf,kf,jf=1024;var Wf,qf,Xf,Yf,Kf,$f,Qf,Jf,Zf,em,tm,nm;!function(e){e[e.RGB565=ti.R5G6B5]="RGB565",e[e.RGB5A1=ti.RGB5A1]="RGB5A1",e[e.RGBA4444=ti.RGBA4]="RGBA4444",e[e.RGB888=ti.RGB8]="RGB888",e[e.RGB32F=ti.RGB32F]="RGB32F",e[e.RGBA8888=ti.RGBA8]="RGBA8888",e[e.RGBA32F=ti.RGBA32F]="RGBA32F",e[e.A8=ti.A8]="A8",e[e.I8=ti.L8]="I8",e[e.AI8=ti.LA8]="AI8",e[e.RGB_PVRTC_2BPPV1=ti.PVRTC_RGB2]="RGB_PVRTC_2BPPV1",e[e.RGBA_PVRTC_2BPPV1=ti.PVRTC_RGBA2]="RGBA_PVRTC_2BPPV1",e[e.RGB_A_PVRTC_2BPPV1=jf++]="RGB_A_PVRTC_2BPPV1",e[e.RGB_PVRTC_4BPPV1=ti.PVRTC_RGB4]="RGB_PVRTC_4BPPV1",e[e.RGBA_PVRTC_4BPPV1=ti.PVRTC_RGBA4]="RGBA_PVRTC_4BPPV1",e[e.RGB_A_PVRTC_4BPPV1=jf++]="RGB_A_PVRTC_4BPPV1",e[e.RGB_ETC1=ti.ETC_RGB8]="RGB_ETC1",e[e.RGBA_ETC1=jf++]="RGBA_ETC1",e[e.RGB_ETC2=ti.ETC2_RGB8]="RGB_ETC2",e[e.RGBA_ETC2=ti.ETC2_RGBA8]="RGBA_ETC2",e[e.RGBA_ASTC_4x4=ti.ASTC_RGBA_4X4]="RGBA_ASTC_4x4",e[e.RGBA_ASTC_5x4=ti.ASTC_RGBA_5X4]="RGBA_ASTC_5x4",e[e.RGBA_ASTC_5x5=ti.ASTC_RGBA_5X5]="RGBA_ASTC_5x5",e[e.RGBA_ASTC_6x5=ti.ASTC_RGBA_6X5]="RGBA_ASTC_6x5",e[e.RGBA_ASTC_6x6=ti.ASTC_RGBA_6X6]="RGBA_ASTC_6x6",e[e.RGBA_ASTC_8x5=ti.ASTC_RGBA_8X5]="RGBA_ASTC_8x5",e[e.RGBA_ASTC_8x6=ti.ASTC_RGBA_8X6]="RGBA_ASTC_8x6",e[e.RGBA_ASTC_8x8=ti.ASTC_RGBA_8X8]="RGBA_ASTC_8x8",e[e.RGBA_ASTC_10x5=ti.ASTC_RGBA_10X5]="RGBA_ASTC_10x5",e[e.RGBA_ASTC_10x6=ti.ASTC_RGBA_10X6]="RGBA_ASTC_10x6",e[e.RGBA_ASTC_10x8=ti.ASTC_RGBA_10X8]="RGBA_ASTC_10x8",e[e.RGBA_ASTC_10x10=ti.ASTC_RGBA_10X10]="RGBA_ASTC_10x10",e[e.RGBA_ASTC_12x10=ti.ASTC_RGBA_12X10]="RGBA_ASTC_12x10",e[e.RGBA_ASTC_12x12=ti.ASTC_RGBA_12X12]="RGBA_ASTC_12x12"}(Vf||(Vf={})),function(e){e[e.REPEAT=fi.WRAP]="REPEAT",e[e.CLAMP_TO_EDGE=fi.CLAMP]="CLAMP_TO_EDGE",e[e.MIRRORED_REPEAT=fi.MIRROR]="MIRRORED_REPEAT",e[e.CLAMP_TO_BORDER=fi.BORDER]="CLAMP_TO_BORDER"}(Hf||(Hf={})),function(e){e[e.NONE=pi.NONE]="NONE",e[e.LINEAR=pi.LINEAR]="LINEAR",e[e.NEAREST=pi.POINT]="NEAREST"}(kf||(kf={})),Ke(ti);const im=new ie("Tex");let sm=mc("cc.TextureBase")((nm=tm=class extends xh{get isCompressed(){return this._format>=Vf.RGB_ETC1&&this._format<=Vf.RGBA_ASTC_12x12||this._format>=Vf.RGB_A_PVRTC_2BPPV1&&this._format<=Vf.RGBA_ETC1}get width(){return this._width}get height(){return this._height}constructor(){super(),rc(this,"_format",Xf,this),rc(this,"_minFilter",Yf,this),rc(this,"_magFilter",Kf,this),rc(this,"_mipFilter",$f,this),rc(this,"_wrapS",Qf,this),rc(this,"_wrapT",Jf,this),rc(this,"_wrapR",Zf,this),rc(this,"_anisotropy",em,this),this._width=1,this._height=1,this._id=void 0,this._samplerInfo=new cs,this._gfxSampler=null,this._gfxDevice=null,this._textureHash=0,this._id=im.getNewId(),this._gfxDevice=this._getGFXDevice(),this._textureHash=fo(this._id,666)}getId(){return this._id}getPixelFormat(){return this._format}getAnisotropy(){return this._anisotropy}setWrapMode(e,t,n){void 0===n&&(n=e),this._wrapS=e,this._samplerInfo.addressU=e,this._wrapT=t,this._samplerInfo.addressV=t,this._wrapR=n,this._samplerInfo.addressW=n,this._gfxDevice&&(this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo))}setFilters(e,t){this._minFilter=e,this._samplerInfo.minFilter=e,this._magFilter=t,this._samplerInfo.magFilter=t,this._gfxDevice&&(this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo))}setMipFilter(e){this._mipFilter=e,this._samplerInfo.mipFilter=e,this._gfxDevice&&(this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo))}setAnisotropy(e){this._anisotropy=e,this._samplerInfo.maxAnisotropy=e,this._gfxDevice&&(this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo))}destroy(){var e;const t=super.destroy();return t&&(null===(e=u.director.root)||void 0===e?void 0:e.batcher2D)&&u.director.root.batcher2D._releaseDescriptorSetCache(this._textureHash),t}getHash(){return this._textureHash}getGFXTexture(){return null}getSamplerInfo(){return this._samplerInfo}getGFXSampler(){return this._gfxSampler||(this._gfxDevice?this._gfxSampler=this._gfxDevice.getSampler(this._samplerInfo):N(9302)),this._gfxSampler}_serialize(e){return""}_deserialize(e,t){const n=e.split(",");n.unshift(""),n.length>=5&&(this.setFilters(parseInt(n[1]),parseInt(n[2])),this.setWrapMode(parseInt(n[3]),parseInt(n[4]))),n.length>=7&&(this.setMipFilter(parseInt(n[5])),this.setAnisotropy(parseInt(n[6])))}_getGFXDevice(){return u.director.root?u.director.root.device:null}_getGFXFormat(){return this._getGFXPixelFormat(this._format)}_setGFXFormat(e){this._format=void 0===e?Vf.RGBA8888:e}_getGFXPixelFormat(e){return e===Vf.RGBA_ETC1?e=Vf.RGB_ETC1:e===Vf.RGB_A_PVRTC_4BPPV1?e=Vf.RGB_PVRTC_4BPPV1:e===Vf.RGB_A_PVRTC_2BPPV1&&(e=Vf.RGB_PVRTC_2BPPV1),e}},tm.PixelFormat=Vf,tm.WrapMode=Hf,tm.Filter=kf,Xf=ac((qf=nm).prototype,"_format",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Vf.RGBA8888}}),Yf=ac(qf.prototype,"_minFilter",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return kf.LINEAR}}),Kf=ac(qf.prototype,"_magFilter",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return kf.LINEAR}}),$f=ac(qf.prototype,"_mipFilter",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return kf.NONE}}),Qf=ac(qf.prototype,"_wrapS",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Hf.REPEAT}}),Jf=ac(qf.prototype,"_wrapT",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Hf.REPEAT}}),Zf=ac(qf.prototype,"_wrapR",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Hf.REPEAT}}),em=ac(qf.prototype,"_anisotropy",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Wf=qf))||Wf;var om,rm,am,cm;function lm(e){return!!(u.sys.hasFeature(u.sys.Feature.IMAGE_BITMAP)&&e instanceof ImageBitmap)}u.TextureBase=sm;let hm=e("ImageAsset",mc("cc.ImageAsset")((cm=am=class e extends xh{get _nativeAsset(){return this._nativeData}set _nativeAsset(e){e instanceof HTMLElement||lm(e)||(e.format=e.format||this._format),this.reset(e)}get data(){return this._nativeData&&!0!==(e=this._nativeData)._compressed&&(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement||lm(e))?this._nativeData:this._nativeData&&this._nativeData._data;var e}get width(){return this._nativeData.width||this._width}get height(){return this._nativeData.height||this._height}get format(){return this._format}get isCompressed(){return this._format>=Vf.RGB_ETC1&&this._format<=Vf.RGBA_ASTC_12x12||this._format>=Vf.RGB_A_PVRTC_2BPPV1&&this._format<=Vf.RGBA_ETC1}get url(){return this.nativeUrl}constructor(e){super(),this._nativeData=void 0,this._exportedExts=void 0,this._format=Vf.RGBA8888,this._width=0,this._height=0,this._nativeData={_data:null,width:0,height:0,format:0,_compressed:!1},void 0!==e&&this.reset(e)}reset(e){lm(e)||e instanceof HTMLElement?this._nativeData=e:(this._nativeData=e,this._format=e.format)}destroy(){return this.data&&this.data instanceof HTMLImageElement?(this.data.src="",this._setRawAsset(""),this.data.destroy()):lm(this.data)&&this.data.close&&this.data.close(),super.destroy()}_serialize(){}_deserialize(t){let n="";"string"==typeof t?n=t:(this._width=t.w,this._height=t.h,n=t.fmt);const i=u.director.root?u.director.root.device:null,s=n.split("_");let o=Number.MAX_VALUE,r=this._format,a="";const c=u.macro.SUPPORT_TEXTURE_FORMATS;for(const t of s){const n=t.split("@"),s=parseInt(n[0],void 0),l=e.extnames[s]||n[0],h=c.indexOf(l);if(-1!==h&&h<o){const e=n[1]?parseInt(n[1]):this._format;if(!(".astc"!==l||i&&i.getFormatFeatures(ti.ASTC_RGBA_4X4)&ui.SAMPLED_TEXTURE))continue;if(!(".pvr"!==l||i&&i.getFormatFeatures(ti.PVRTC_RGBA4)&ui.SAMPLED_TEXTURE))continue;if(!(e!==Vf.RGB_ETC1&&e!==Vf.RGBA_ETC1||i&&i.getFormatFeatures(ti.ETC_RGB8)&ui.SAMPLED_TEXTURE))continue;if(!(e!==Vf.RGB_ETC2&&e!==Vf.RGBA_ETC2||i&&i.getFormatFeatures(ti.ETC2_RGB8)&ui.SAMPLED_TEXTURE))continue;if(".webp"===l&&!u.sys.hasFeature(u.sys.Feature.WEBP))continue;o=h,a=l,r=e}}a?(this._setRawAsset(a),this._format=r):D(3121)}initDefault(t){if(super.initDefault(t),e._sharedPlaceHolderCanvas)this.reset(e._sharedPlaceHolderCanvas);else{const t=document.createElement("canvas"),n=t.getContext("2d"),i=t.width=t.height=2;n.fillStyle="#ff00ff",n.fillRect(0,0,i,i),this.reset(t),e._sharedPlaceHolderCanvas=t}}validate(){return!!this.data}},am.extnames=[".png",".jpg",".jpeg",".bmp",".webp",".pvr",".pkm",".astc"],am._sharedPlaceHolderCanvas=null,ac((rm=cm).prototype,"_nativeAsset",[el],Object.getOwnPropertyDescriptor(rm.prototype,"_nativeAsset"),rm.prototype),om=rm))||om);u.ImageAsset=hm;const um=new WeakMap,_m=new WeakSet,dm=new WeakSet;function pm(e,t){let n;n=qh.safeFindClass;const i=uu.pool.get();let s;try{s=Eu(e,i,{classFinder:n,customEnv:t})}catch(e){throw C(e),uu.pool.put(i),e}s._uuid=t.__uuid__||"";const o=i.uuidList,r=i.uuidObjList,a=i.uuidPropList,c=i.uuidTypeList||[],l=[];for(let e=0;e<o.length;e++){const t=o[e];l[e]={uuid:Al(t),owner:r[e],prop:a[e],type:ke._getClassById(c[e])}}return um.set(s,l),s._native&&_m.add(s),uu.pool.put(i),s}var fm,mm=new class{constructor(){this._depends=new ll}init(){this._depends.clear()}getNativeDep(e){const t=this._depends.get(e);return t&&t.nativeDep?{...t.nativeDep}:null}getDeps(e){return this._depends.has(e)?this._depends.get(e).deps:[]}getDepsRecursively(e){const t=Object.create(null),n=[];return this._descend(e,t,n),n}remove(e){this._depends.remove(e)}parse(e,t){let n=null;if(Array.isArray(t)||t.__type__||t instanceof Zh){if(this._depends.has(e))return this._depends.get(e);if(Array.isArray(t)&&!function(e){const t=e[5],n=t[t.length-1];return"number"==typeof n&&n<0}(t))n={deps:this._parseDepsFromJson(t)};else try{const i=pm(t,{__uuid__:e});n=this._parseDepsFromAsset(i),n.nativeDep&&(n.nativeDep.uuid=e),dl.add(`${e}@import`,i)}catch(t){_l.remove(`${e}@import`),n={deps:[]}}}else{if(this._depends.has(e)&&(n=this._depends.get(e),n.parsedFromExistAsset))return n;n=this._parseDepsFromAsset(t)}return this._depends.add(e,n),n}_parseDepsFromAsset(e){const t={deps:[],parsedFromExistAsset:!0},n=um.get(e);for(let e=0,i=n.length;e<i;e++)t.deps.push(n[e].uuid);return _m.has(e)&&(t.nativeDep=e._nativeDep),t}_parseDepsFromJson(e){const t=function(e){const t=e[1];return e[10].map((e=>t[e]))}(e);return t.forEach(((e,n)=>t[n]=Al(e))),t}_descend(e,t,n){const i=this.getDeps(e);for(let e=0;e<i.length;e++){const s=i[e];t[s]||(t[s]=!0,n.push(s),this._descend(s,t,n))}}};const gm=[new Yi];function vm(e){return e&&0==(e&e-1)}let ym=mc("cc.SimpleTexture")(fm=class extends sm{constructor(...e){super(...e),this._gfxTexture=null,this._gfxTextureView=null,this._mipmapLevel=1,this._textureWidth=0,this._textureHeight=0,this._baseLevel=0,this._maxLevel=1e3}get mipmapLevel(){return this._mipmapLevel}getGFXTexture(){return this._gfxTextureView}destroy(){return this._tryDestroyTextureView(),this._tryDestroyTexture(),super.destroy()}updateImage(){this.updateMipmaps(0)}updateMipmaps(e=0,t){}uploadData(e,t=0,n=0){if(!this._gfxTexture||this._mipmapLevel<=t)return;const i=this._getGFXDevice();if(!i)return;const s=gm[0];s.texExtent.width=this._textureWidth>>t,s.texExtent.height=this._textureHeight>>t,s.texSubres.mipLevel=t,s.texSubres.baseArrayLayer=n,ArrayBuffer.isView(e)?i.copyBuffersToTexture([e],this._gfxTexture,gm):i.copyTexImagesToTexture([e],this._gfxTexture,gm)}_assignImage(e,t,n){const i=e.data;if(i&&(this.uploadData(i,t,n),this._checkTextureLoaded(),Qe.CLEANUP_IMAGE_CACHE)){const t=mm.getDeps(this._uuid),n=t.indexOf(e._uuid);-1!==n&&(J(t,n),e.decRef())}}_checkTextureLoaded(){this._textureReady()}_textureReady(){this.loaded=!0,this.emit("load")}_setMipmapLevel(e){this._mipmapLevel=e<1?1:e}_setMipRange(e,t){this._baseLevel=e<1?0:e,this._maxLevel=t<1?0:t}setMipRange(e,t){L(e<=t,3124),this._setMipRange(e,t);const n=this._getGFXDevice();if(!n)return;const i=this._createTextureView(n);this._tryDestroyTextureView(),this._gfxTextureView=i}_getGfxTextureCreateInfo(e){return null}_getGfxTextureViewCreateInfo(e){return null}_tryReset(){if(this._tryDestroyTextureView(),this._tryDestroyTexture(),0===this._mipmapLevel)return;const e=this._getGFXDevice();e&&(this._createTexture(e),this._gfxTextureView=this._createTextureView(e))}_createTexture(e){if(0===this._width||0===this._height)return;let t=hi.NONE;this._mipFilter!==kf.NONE&&function(e,t,n){return!(e.gfxAPI===Jn.WEBGL)||vm(t)&&vm(n)}(e,this._width,this._height)&&(this._mipmapLevel=function(e,t){let n=Math.max(e,t),i=0;for(;n;)n>>=1,i++;return i}(this._width,this._height),t=hi.GEN_MIPMAP);const n=this._getGfxTextureCreateInfo({usage:li.SAMPLED|li.TRANSFER_DST,format:this._getGFXFormat(),levelCount:this._mipmapLevel,flags:t});if(!n)return;const i=e.createTexture(n);this._textureWidth=n.width,this._textureHeight=n.height,this._gfxTexture=i}_createTextureView(e){if(!this._gfxTexture)return null;const t=this._maxLevel<this._mipmapLevel?this._maxLevel:this._mipmapLevel-1,n=this._getGfxTextureViewCreateInfo({texture:this._gfxTexture,format:this._getGFXFormat(),baseLevel:this._baseLevel,levelCount:t-this._baseLevel+1});return n?e.createTexture(n):null}_tryDestroyTexture(){this._gfxTexture&&(this._gfxTexture.destroy(),this._gfxTexture=null)}_tryDestroyTextureView(){this._gfxTextureView&&(this._gfxTextureView.destroy(),this._gfxTextureView=null)}})||fm;var xm,Sm,Cm,Em,Tm;u.SimpleTexture=ym;let bm=e("Texture2D",(xm=mc("cc.Texture2D"),Sm=Zc([hm]),xm((Tm=ac((Em=class extends ym{constructor(...e){super(...e),rc(this,"_mipmaps",Tm,this)}get mipmaps(){return this._mipmaps}set mipmaps(e){if(this._mipmaps=e,this._setMipmapLevel(this._mipmaps.length),this._mipmaps.length>0){const e=this._mipmaps[0];this.reset({width:e.width,height:e.height,format:e.format,mipmapLevel:this._mipmaps.length,baseLevel:this._baseLevel,maxLevel:this._maxLevel}),this._mipmaps.forEach(((e,t)=>{this._assignImage(e,t)}))}else this.reset({width:0,height:0,mipmapLevel:this._mipmaps.length,baseLevel:this._baseLevel,maxLevel:this._maxLevel})}get image(){return 0===this._mipmaps.length?null:this._mipmaps[0]}set image(e){this.mipmaps=e?[e]:[]}initialize(){this.mipmaps=this._mipmaps}onLoaded(){this.initialize()}reset(e){this._width=e.width,this._height=e.height,this._setGFXFormat(e.format);const t=void 0===e.mipmapLevel?1:e.mipmapLevel;this._setMipmapLevel(t);const n=void 0===e.baseLevel?0:e.baseLevel,i=void 0===e.maxLevel?1e3:e.maxLevel;this._setMipRange(n,i),this._tryReset()}create(e,t,n=Vf.RGBA8888,i=1,s=0,o=1e3){this.reset({width:e,height:t,format:n,mipmapLevel:i,baseLevel:s,maxLevel:o})}toString(){return 0!==this._mipmaps.length?this._mipmaps[0].url:""}updateMipmaps(e=0,t){if(e>=this._mipmaps.length)return;const n=Math.min(void 0===t?this._mipmaps.length:t,this._mipmaps.length-e);for(let t=0;t<n;++t){const n=e+t;this._assignImage(this._mipmaps[n],n)}}getHtmlElementObj(){return this._mipmaps[0]&&this._mipmaps[0].data instanceof HTMLElement?this._mipmaps[0].data:null}destroy(){return this._mipmaps=[],super.destroy()}description(){return`<cc.Texture2D | Name = ${this._mipmaps[0]?this._mipmaps[0].url:""} | Dimension = ${this.width} x ${this.height}>`}releaseTexture(){this.destroy()}_serialize(e){return null}_deserialize(e,t){const n=e;super._deserialize(n.base,t),this._mipmaps=new Array(n.mipmaps.length);for(let e=0;e<n.mipmaps.length;++e){if(this._mipmaps[e]=new hm,!n.mipmaps[e])continue;const i=n.mipmaps[e];t.result.push(this._mipmaps,`${e}`,i,ke._getClassId(hm))}}_getGfxTextureCreateInfo(e){const t=new rs(ci.TEX2D);return t.width=this._width,t.height=this._height,Object.assign(t,e),t}_getGfxTextureViewCreateInfo(e){const t=new as;return t.type=ci.TEX2D,Object.assign(t,e),t}initDefault(e){super.initDefault(e);const t=new hm;t.initDefault(),this.image=t}validate(){return this.mipmaps&&0!==this.mipmaps.length}}).prototype,"_mipmaps",[Sm],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Cm=Em))||Cm));var Am,Pm,wm,Im,Rm,Dm,Om;u.Texture2D=bm,function(e){e[e.right=0]="right",e[e.left=1]="left",e[e.top=2]="top",e[e.bottom=3]="bottom",e[e.front=4]="front",e[e.back=5]="back"}(Om||(Om={}));let Nm=e("TextureCube",mc("cc.TextureCube")((Dm=Rm=class e extends ym{constructor(...e){super(...e),rc(this,"isRGBE",wm,this),rc(this,"_mipmaps",Im,this)}get mipmaps(){return this._mipmaps}set mipmaps(e){if(this._mipmaps=e,this._setMipmapLevel(this._mipmaps.length),this._mipmaps.length>0){const e=this._mipmaps[0].front;this.reset({width:e.width,height:e.height,format:e.format,mipmapLevel:this._mipmaps.length,baseLevel:this._baseLevel,maxLevel:this._maxLevel}),this._mipmaps.forEach(((e,t)=>{Mm(e,((e,n)=>{this._assignImage(e,t,n)}))}))}else this.reset({width:0,height:0,mipmapLevel:this._mipmaps.length,baseLevel:this._baseLevel,maxLevel:this._maxLevel})}get image(){return 0===this._mipmaps.length?null:this._mipmaps[0]}set image(e){this.mipmaps=e?[e]:[]}static fromTexture2DArray(t,n){const i=[],s=t.length/6;for(let e=0;e<s;e++){const n=6*e;i.push({front:t[n+Om.front].image,back:t[n+Om.back].image,left:t[n+Om.left].image,right:t[n+Om.right].image,top:t[n+Om.top].image,bottom:t[n+Om.bottom].image})}return(n=n||new e).mipmaps=i,n}onLoaded(){this.mipmaps=this._mipmaps}reset(e){this._width=e.width,this._height=e.height,this._setGFXFormat(e.format);const t=void 0===e.mipmapLevel?1:e.mipmapLevel;this._setMipmapLevel(t);const n=void 0===e.baseLevel?0:e.baseLevel,i=void 0===e.maxLevel?1e3:e.maxLevel;this._setMipRange(n,i),this._tryReset()}updateMipmaps(e=0,t){if(e>=this._mipmaps.length)return;const n=Math.min(void 0===t?this._mipmaps.length:t,this._mipmaps.length-e);for(let t=0;t<n;++t){const n=e+t;Mm(this._mipmaps[n],((e,t)=>{this._assignImage(e,n,t)}))}}destroy(){return this._mipmaps=[],super.destroy()}releaseTexture(){this.mipmaps=[]}_serialize(e){return null}_deserialize(e,t){const n=e;super._deserialize(n.base,t),this.isRGBE=n.rgbe,this._mipmaps=new Array(n.mipmaps.length);for(let e=0;e<n.mipmaps.length;++e){this._mipmaps[e]={front:new hm,back:new hm,left:new hm,right:new hm,top:new hm,bottom:new hm};const i=n.mipmaps[e],s=ke._getClassId(hm);t.result.push(this._mipmaps[e],"front",i.front,s),t.result.push(this._mipmaps[e],"back",i.back,s),t.result.push(this._mipmaps[e],"left",i.left,s),t.result.push(this._mipmaps[e],"right",i.right,s),t.result.push(this._mipmaps[e],"top",i.top,s),t.result.push(this._mipmaps[e],"bottom",i.bottom,s)}}_getGfxTextureCreateInfo(e){const t=new rs(ci.CUBE);return t.width=this._width,t.height=this._height,t.layerCount=6,Object.assign(t,e),t}_getGfxTextureViewCreateInfo(e){const t=new as;return t.type=ci.CUBE,t.baseLayer=0,t.layerCount=6,Object.assign(t,e),t}initDefault(e){super.initDefault(e);const t=new hm;t.initDefault(),this.mipmaps=[{front:t,back:t,top:t,bottom:t,left:t,right:t}]}validate(){return 0!==this._mipmaps.length&&!this._mipmaps.find((e=>!(e.top&&e.bottom&&e.front&&e.back&&e.left&&e.right)))}},Rm.FaceIndex=Om,wm=ac((Pm=Dm).prototype,"isRGBE",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Im=ac(Pm.prototype,"_mipmaps",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Am=Pm))||Am);function Mm(e,t){t(e.front,Om.front),t(e.back,Om.back),t(e.left,Om.left),t(e.right,Om.right),t(e.top,Om.top),t(e.bottom,Om.bottom)}u.TextureCube=Nm;const Lm=e("effects",[{name:"billboard",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"billboard|vert:vs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"billboard|vert:vs_main|tinted-fs:add",hash:3642336485,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:54,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:21,location:1},{name:"a_color",defines:[],format:44,location:2}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1},{name:"nodeRotation",type:16,count:1}]},{name:"builtin",defines:[],binding:1,stageFlags:1,members:[{name:"cc_size_rotation",type:16,count:1}]},{name:"FragConstants",defines:[],binding:2,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:3}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"clear-stencil",techniques:[{passes:[{blendState:{targets:[{blend:!0}]},rasterizerState:{cullMode:0},program:"clear-stencil|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"clear-stencil|sprite-vs:vert|sprite-fs:frag",hash:3507038093,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:0,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"geometry-renderer",techniques:[{passes:[{primitive:1,blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"geometry-renderer|line-vs:vert|line-fs:front",priority:245,depthStencilState:{depthTest:!1,depthWrite:!1}}]},{passes:[{primitive:1,blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"geometry-renderer|line-vs:vert|line-fs:front",priority:245,depthStencilState:{depthTest:!0,depthWrite:!1}},{primitive:1,blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"geometry-renderer|line-vs:vert|line-fs:back",priority:245,depthStencilState:{depthTest:!0,depthWrite:!1,depthFunc:4}}]},{passes:[{primitive:1,blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"geometry-renderer|dashed-line-vs:vert|dashed-line-fs:front",priority:245,depthStencilState:{depthTest:!1,depthWrite:!1}}]},{passes:[{primitive:1,blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"geometry-renderer|dashed-line-vs:vert|dashed-line-fs:front",priority:245,depthStencilState:{depthTest:!0,depthWrite:!1}},{primitive:1,blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"geometry-renderer|dashed-line-vs:vert|dashed-line-fs:back",priority:245,depthStencilState:{depthTest:!0,depthWrite:!1,depthFunc:4}}]},{passes:[{rasterizerState:{cullMode:2},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"geometry-renderer|triangle-vs:vert|triangle-fs:front",priority:245,depthStencilState:{depthTest:!1,depthWrite:!1}}]},{passes:[{rasterizerState:{cullMode:2},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"geometry-renderer|triangle-vs:vert|triangle-fs:front",priority:245,depthStencilState:{depthTest:!0,depthWrite:!1}},{rasterizerState:{cullMode:2},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"geometry-renderer|triangle-vs:vert|triangle-fs:back",priority:245,depthStencilState:{depthTest:!0,depthWrite:!1,depthFunc:4}}]}],shaders:[{name:"geometry-renderer|line-vs:vert|line-fs:front",hash:3617431e3,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:39,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"USE_FORWARD_PIPELINE",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_color",defines:[],format:44,location:1}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"geometry-renderer|line-vs:vert|line-fs:back",hash:4168905198,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:39,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"USE_FORWARD_PIPELINE",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_color",defines:[],format:44,location:1}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"geometry-renderer|dashed-line-vs:vert|dashed-line-fs:front",hash:4034582016,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:39,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"USE_FORWARD_PIPELINE",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_color",defines:[],format:44,location:1}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"geometry-renderer|dashed-line-vs:vert|dashed-line-fs:back",hash:1762165009,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:39,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"USE_FORWARD_PIPELINE",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_color",defines:[],format:44,location:1}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"geometry-renderer|triangle-vs:vert|triangle-fs:front",hash:4143142643,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:39,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"USE_FORWARD_PIPELINE",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:44,location:1},{name:"a_color",defines:[],format:44,location:2}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"geometry-renderer|triangle-vs:vert|triangle-fs:back",hash:826026446,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:39,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"USE_FORWARD_PIPELINE",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:44,location:1},{name:"a_color",defines:[],format:44,location:2}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"graphics",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:1,blendDst:4,blendSrcAlpha:1,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"graphics|vs:vert|fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"graphics|vs:vert|fs:frag",hash:4284763886,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:49,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_color",defines:[],format:44,location:1},{name:"a_dist",defines:[],format:11,location:2}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"occlusion-query",techniques:[{passes:[{rasterizerState:{cullMode:2},blendState:{targets:[{blendColorMask:0}]},program:"occlusion-query|occlusion-query-vs:vert|occlusion-query-fs:frag",depthStencilState:{depthTest:!0,depthWrite:!1}}]}],shaders:[{name:"occlusion-query|occlusion-query-vs:vert|occlusion-query-fs:frag",hash:1571978323,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:41,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCWorldBound",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"particle-gpu",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle-gpu|particle-vs-gpu:gpvs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle-gpu|particle-vs-gpu:gpvs_main|tinted-fs:add",hash:851293782,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:64,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"USE_VK_SHADER",type:"boolean"},{name:"COLOR_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"ROTATION_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"SIZE_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"FORCE_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"VELOCITY_OVER_TIME_MODULE_ENABLE",type:"boolean"},{name:"TEXTURE_ANIMATION_MODULE_ENABLE",type:"boolean"},{name:"CC_USE_WORLD_SPACE",type:"boolean"}],attributes:[{name:"a_position_starttime",defines:[],format:44,location:0},{name:"a_size_uv",defines:[],format:44,location:1},{name:"a_rotation_uv",defines:[],format:44,location:2},{name:"a_color",defines:[],format:44,location:3},{name:"a_dir_life",defines:[],format:44,location:4},{name:"a_rndSeed",defines:[],format:11,location:5},{name:"a_texCoord",defines:["CC_RENDER_MODE"],format:32,location:6},{name:"a_texCoord3",defines:["CC_RENDER_MODE"],format:32,location:7},{name:"a_normal",defines:["CC_RENDER_MODE"],format:32,location:8},{name:"a_color1",defines:["CC_RENDER_MODE"],format:44,location:9}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1},{name:"nodeRotation",type:16,count:1}]},{name:"SampleConstants",defines:[],binding:1,stageFlags:1,members:[{name:"u_sampleInfo",type:16,count:1}]},{name:"TickConstants",defines:[],binding:2,stageFlags:1,members:[{name:"u_worldRot",type:16,count:1},{name:"u_timeDelta",type:16,count:1}]},{name:"ColorConstant",defines:["COLOR_OVER_TIME_MODULE_ENABLE"],binding:3,stageFlags:1,members:[{name:"u_color_mode",type:5,count:1}]},{name:"RotationConstant",defines:["ROTATION_OVER_TIME_MODULE_ENABLE"],binding:4,stageFlags:1,members:[{name:"u_rotation_mode",type:5,count:1}]},{name:"SizeConstant",defines:["SIZE_OVER_TIME_MODULE_ENABLE"],binding:5,stageFlags:1,members:[{name:"u_size_mode",type:5,count:1}]},{name:"ForceConstant",defines:["FORCE_OVER_TIME_MODULE_ENABLE"],binding:6,stageFlags:1,members:[{name:"u_force_mode",type:5,count:1},{name:"u_force_space",type:5,count:1}]},{name:"VelocityConstant",defines:["VELOCITY_OVER_TIME_MODULE_ENABLE"],binding:7,stageFlags:1,members:[{name:"u_velocity_mode",type:5,count:1},{name:"u_velocity_space",type:5,count:1}]},{name:"AnimationConstant",defines:["TEXTURE_ANIMATION_MODULE_ENABLE"],binding:8,stageFlags:1,members:[{name:"u_anim_info",type:16,count:1}]},{name:"FragConstants",defines:[],binding:9,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"color_over_time_tex0",type:28,count:1,defines:["COLOR_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:10},{name:"rotation_over_time_tex0",type:28,count:1,defines:["ROTATION_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:11},{name:"size_over_time_tex0",type:28,count:1,defines:["SIZE_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:12},{name:"force_over_time_tex0",type:28,count:1,defines:["FORCE_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:13},{name:"velocity_over_time_tex0",type:28,count:1,defines:["VELOCITY_OVER_TIME_MODULE_ENABLE"],stageFlags:1,binding:14},{name:"texture_animation_tex0",type:28,count:1,defines:["TEXTURE_ANIMATION_MODULE_ENABLE"],stageFlags:1,binding:15},{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:16}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"particle-trail",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle-trail|particle-trail:vs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},frameTile_velLenScale:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle-trail|particle-trail:vs_main|tinted-fs:add",hash:2502358098,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:53,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"CC_DRAW_WIRE_FRAME",type:"boolean"},{name:"CC_USE_WORLD_SPACE",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:44,location:1},{name:"a_texCoord1",defines:[],format:32,location:2},{name:"a_texCoord2",defines:[],format:32,location:3},{name:"a_color",defines:[],format:44,location:4}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1},{name:"nodeRotation",type:16,count:1}]},{name:"FragConstants",defines:[],binding:1,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"particle",techniques:[{name:"add",passes:[{rasterizerState:{cullMode:0},blendState:{targets:[{blend:!0,blendSrc:2,blendDst:1,blendSrcAlpha:2,blendDstAlpha:1}]},program:"particle|particle-vs-legacy:lpvs_main|tinted-fs:add",depthStencilState:{depthTest:!0,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},mainTiling_Offset:{value:[1,1,0,0],type:16},tintColor:{value:[.5,.5,.5,.5],type:16}}}]}],shaders:[{name:"particle|particle-vs-legacy:lpvs_main|tinted-fs:add",hash:585841727,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:53,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"CC_RENDER_MODE",type:"number",range:[0,4]},{name:"CC_USE_WORLD_SPACE",type:"boolean"},{name:"ROTATION_OVER_TIME_MODULE_ENABLE",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:32,location:1},{name:"a_texCoord1",defines:[],format:32,location:2},{name:"a_texCoord2",defines:[],format:32,location:3},{name:"a_color",defines:[],format:44,location:4},{name:"a_color1",defines:["CC_RENDER_MODE"],format:32,location:8},{name:"a_texCoord3",defines:["CC_RENDER_MODE"],format:32,location:6},{name:"a_normal",defines:["CC_RENDER_MODE"],format:32,location:7}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"mainTiling_Offset",type:16,count:1},{name:"frameTile_velLenScale",type:16,count:1},{name:"scale",type:16,count:1},{name:"nodeRotation",type:16,count:1}]},{name:"FragConstants",defines:[],binding:1,stageFlags:16,members:[{name:"tintColor",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"spine",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"spine|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{alphaThreshold:{value:[.5],type:13}}}]}],shaders:[{name:"spine|sprite-vs:vert|sprite-fs:frag",hash:2499219289,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:49,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:1},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:["USE_LOCAL"]}],samplerTextures:[{name:"cc_spriteTexture",defines:[]}],buffers:[],images:[]}},defines:[{name:"USE_LOCAL",type:"boolean"},{name:"TWO_COLORED",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:21,location:1},{name:"a_color",defines:[],format:44,location:2},{name:"a_color2",defines:["TWO_COLORED"],format:44,location:3}],blocks:[{name:"ALPHA_TEST_DATA",defines:["USE_ALPHA_TEST"],binding:0,stageFlags:16,members:[{name:"alphaThreshold",type:13,count:1}]}],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"sprite",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"sprite|sprite-vs:vert|sprite-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{alphaThreshold:{value:[.5],type:13}}}]}],shaders:[{name:"sprite|sprite-vs:vert|sprite-fs:frag",hash:67215139,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:49,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:1},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:["USE_LOCAL"]}],samplerTextures:[{name:"cc_spriteTexture",defines:["USE_TEXTURE"]}],buffers:[],images:[]}},defines:[{name:"USE_LOCAL",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"USE_PIXEL_ALIGNMENT",type:"boolean"},{name:"CC_USE_EMBEDDED_ALPHA",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"USE_TEXTURE",type:"boolean"},{name:"IS_GRAY",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_texCoord",defines:[],format:21,location:1},{name:"a_color",defines:[],format:44,location:2}],blocks:[{name:"ALPHA_TEST_DATA",defines:["USE_ALPHA_TEST"],binding:0,stageFlags:16,members:[{name:"alphaThreshold",type:13,count:1}]}],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"standard",techniques:[{name:"opaque",passes:[{program:"standard|standard-vs|standard-fs",properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],linear:!0,type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},occlusion:{value:[1],type:13,handleInfo:["pbrParams",0,13]},roughness:{value:[.8],type:13,handleInfo:["pbrParams",1,13]},metallic:{value:[.6],type:13,handleInfo:["pbrParams",2,13]},specularIntensity:{value:[.5],type:13,handleInfo:["pbrParams",3,13]},emissive:{value:[0,0,0,1],linear:!0,type:16},emissiveScale:{value:[1,1,1],type:15,handleInfo:["emissiveScaleParam",0,15]},normalStrength:{value:[1],type:13,handleInfo:["emissiveScaleParam",3,13]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},normalMap:{value:"normal",type:28},pbrMap:{value:"grey",type:28},metallicRoughnessMap:{value:"grey",type:28},occlusionMap:{value:"white",type:28},emissiveMap:{value:"grey",type:28},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},pbrParams:{type:16,value:[1,.8,.6,.5]},emissiveScaleParam:{type:16,value:[1,1,1,1]},albedoMap:{type:28,value:"grey"}}},{phase:"forward-add",propertyIndex:0,embeddedMacros:{CC_FORWARD_ADD:!0},blendState:{targets:[{blend:!0,blendSrc:1,blendDst:1,blendSrcAlpha:0,blendDstAlpha:1}]},program:"standard|standard-vs|standard-fs",depthStencilState:{depthFunc:2,depthTest:!0,depthWrite:!1}},{phase:"shadow-caster",propertyIndex:0,rasterizerState:{cullMode:1},program:"standard|shadow-caster-vs:vert|shadow-caster-fs:frag",properties:{tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],type:16,handleInfo:["albedo",0,16]},albedoScale:{value:[1,1,1],type:15,handleInfo:["albedoScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["albedoScaleAndCutoff",3,13]},mainTexture:{value:"grey",type:28,handleInfo:["albedoMap",0,28]},albedo:{type:16,value:[1,1,1,1]},albedoScaleAndCutoff:{type:16,value:[1,1,1,.5]},albedoMap:{type:28,value:"grey"}}}]}],shaders:[{name:"standard|standard-vs|standard-fs",hash:4079105024,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:223,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:75},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]},{name:"cc_diffuseMap",defines:["CC_USE_DIFFUSEMAP"]}],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]},{name:"CCForwardLight",defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"cc_lightingMap",defines:["CC_USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}],buffers:[],images:[]}},defines:[{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"CC_USE_LIGHTMAP",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_USE_ACCURATE_FOG",type:"boolean"},{name:"USE_VERTEX_COLOR",type:"boolean"},{name:"HAS_SECOND_UV",type:"boolean"},{name:"USE_NORMAL_MAP",type:"boolean"},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"USE_TWOSIDE",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_DIFFUSEMAP",type:"number",range:[0,2]},{name:"USE_REFLECTION_DENOISE",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_ALBEDO_MAP",type:"boolean"},{name:"ALBEDO_UV",type:"string",options:["v_uv","v_uv1"]},{name:"NORMAL_UV",type:"string",options:["v_uv","v_uv1"]},{name:"PBR_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_PBR_MAP",type:"boolean"},{name:"USE_METALLIC_ROUGHNESS_MAP",type:"boolean"},{name:"USE_OCCLUSION_MAP",type:"boolean"},{name:"USE_EMISSIVE_MAP",type:"boolean"},{name:"EMISSIVE_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r"]},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]},{name:"CC_FORCE_FORWARD_SHADING",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["USE_INSTANCING","CC_USE_BAKED_ANIMATION"],format:44,isInstanced:!0,location:6},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","CC_USE_LIGHTMAP"],format:44,isInstanced:!0,location:10},{name:"a_localShadowBias",defines:["USE_INSTANCING","CC_RECEIVE_SHADOW"],format:21,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:13},{name:"a_color",defines:["USE_VERTEX_COLOR"],format:44,location:14},{name:"a_texCoord1",defines:[],format:21,location:15}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:17,members:[{name:"tilingOffset",type:16,count:1},{name:"albedo",type:16,count:1},{name:"albedoScaleAndCutoff",type:16,count:1},{name:"pbrParams",type:16,count:1},{name:"emissive",type:16,count:1},{name:"emissiveScaleParam",type:16,count:1}]}],samplerTextures:[{name:"albedoMap",type:28,count:1,defines:["USE_ALBEDO_MAP"],stageFlags:16,binding:1},{name:"normalMap",type:28,count:1,defines:["USE_NORMAL_MAP"],stageFlags:16,binding:2},{name:"pbrMap",type:28,count:1,defines:["USE_PBR_MAP"],stageFlags:16,binding:3},{name:"metallicRoughnessMap",type:28,count:1,defines:["USE_METALLIC_ROUGHNESS_MAP"],stageFlags:16,binding:4},{name:"occlusionMap",type:28,count:1,defines:["USE_OCCLUSION_MAP"],stageFlags:16,binding:5},{name:"emissiveMap",type:28,count:1,defines:["USE_EMISSIVE_MAP"],stageFlags:16,binding:6}],buffers:[{name:"b_ccLightsBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:7},{name:"b_clusterLightIndicesBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:8},{name:"b_clusterLightGridBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:9}],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"standard|shadow-caster-vs:vert|shadow-caster-fs:frag",hash:3928335406,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:184,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:75},globals:{blocks:[{name:"CCShadow",defines:[]},{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]}],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"CC_USE_LIGHTMAP",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"HAS_SECOND_UV",type:"boolean"},{name:"USE_ALBEDO_MAP",type:"boolean"},{name:"ALBEDO_UV",type:"string",options:["v_uv","v_uv1"]},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r"]}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["USE_INSTANCING","CC_USE_BAKED_ANIMATION"],format:44,isInstanced:!0,location:6},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","CC_USE_LIGHTMAP"],format:44,isInstanced:!0,location:10},{name:"a_localShadowBias",defines:["USE_INSTANCING","CC_RECEIVE_SHADOW"],format:21,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:13},{name:"a_texCoord1",defines:[],format:21,location:14}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:17,members:[{name:"tilingOffset",type:16,count:1},{name:"albedo",type:16,count:1},{name:"albedoScaleAndCutoff",type:16,count:1},{name:"pbrParams",type:16,count:1},{name:"emissive",type:16,count:1},{name:"emissiveScaleParam",type:16,count:1}]}],samplerTextures:[{name:"albedoMap",type:28,count:1,defines:["USE_ALBEDO_MAP"],stageFlags:16,binding:1}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"terrain",techniques:[{name:"opaque",passes:[{program:"terrain|terrain-vs|terrain-fs",properties:{UVScale:{value:[1,1,1,1],type:16},lightMapUVParam:{value:[0,0,0,0],type:16},metallic:{value:[0,0,0,0],type:16},roughness:{value:[1,1,1,1],type:16},weightMap:{value:"black",type:28},detailMap0:{value:"grey",type:28},detailMap1:{value:"grey",type:28},detailMap2:{value:"grey",type:28},detailMap3:{value:"grey",type:28},normalMap0:{value:"normal",type:28},normalMap1:{value:"normal",type:28},normalMap2:{value:"normal",type:28},normalMap3:{value:"normal",type:28},lightMap:{value:"grey",type:28}}},{phase:"forward-add",propertyIndex:0,embeddedMacros:{CC_FORWARD_ADD:!0},blendState:{targets:[{blend:!0,blendSrc:1,blendDst:1,blendSrcAlpha:0,blendDstAlpha:1}]},program:"terrain|terrain-vs|terrain-fs",depthStencilState:{depthFunc:2,depthTest:!0,depthWrite:!1},properties:{UVScale:{value:[1,1,1,1],type:16},lightMapUVParam:{value:[0,0,0,0],type:16},metallic:{value:[0,0,0,0],type:16},roughness:{value:[1,1,1,1],type:16},weightMap:{value:"black",type:28},detailMap0:{value:"grey",type:28},detailMap1:{value:"grey",type:28},detailMap2:{value:"grey",type:28},detailMap3:{value:"grey",type:28},normalMap0:{value:"normal",type:28},normalMap1:{value:"normal",type:28},normalMap2:{value:"normal",type:28},normalMap3:{value:"normal",type:28},lightMap:{value:"grey",type:28}}},{phase:"shadow-add",propertyIndex:0,rasterizerState:{cullMode:2},program:"terrain|shadow-caster-vs:vert|shadow-caster-fs:frag"}]}],shaders:[{name:"terrain|terrain-vs|terrain-fs",hash:3669699677,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:71,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:71},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]},{name:"cc_diffuseMap",defines:["CC_USE_DIFFUSEMAP"]}],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]},{name:"CCForwardLight",defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],samplerTextures:[{name:"cc_lightingMap",defines:["CC_USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}],buffers:[],images:[]}},defines:[{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_USE_ACCURATE_FOG",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_LIGHTMAP",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_DIFFUSEMAP",type:"number",range:[0,2]},{name:"USE_REFLECTION_DENOISE",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"LAYERS",type:"number",range:[0,4]},{name:"USE_NORMALMAP",type:"boolean"},{name:"USE_PBR",type:"boolean"},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]},{name:"CC_FORCE_FORWARD_SHADING",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2}],blocks:[{name:"TexCoords",defines:[],binding:0,stageFlags:1,members:[{name:"UVScale",type:16,count:1},{name:"lightMapUVParam",type:16,count:1}]},{name:"PbrParams",defines:[],binding:1,stageFlags:16,members:[{name:"metallic",type:16,count:1},{name:"roughness",type:16,count:1}]}],samplerTextures:[{name:"weightMap",type:28,count:1,defines:[],stageFlags:16,binding:2},{name:"detailMap0",type:28,count:1,defines:[],stageFlags:16,binding:3},{name:"detailMap1",type:28,count:1,defines:[],stageFlags:16,binding:4},{name:"detailMap2",type:28,count:1,defines:[],stageFlags:16,binding:5},{name:"detailMap3",type:28,count:1,defines:[],stageFlags:16,binding:6},{name:"normalMap0",type:28,count:1,defines:[],stageFlags:16,binding:7},{name:"normalMap1",type:28,count:1,defines:[],stageFlags:16,binding:8},{name:"normalMap2",type:28,count:1,defines:[],stageFlags:16,binding:9},{name:"normalMap3",type:28,count:1,defines:[],stageFlags:16,binding:10},{name:"lightMap",type:28,count:1,defines:[],stageFlags:16,binding:11}],buffers:[{name:"b_ccLightsBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:12},{name:"b_clusterLightIndicesBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:13},{name:"b_clusterLightGridBuffer",memoryAccess:1,defines:["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:14}],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"terrain|shadow-caster-vs:vert|shadow-caster-fs:frag",hash:2218105608,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:69,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:0},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]}],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"unlit",techniques:[{name:"opaque",passes:[{program:"unlit|unlit-vs:vert|unlit-fs:frag",properties:{mainTexture:{value:"grey",type:28},tilingOffset:{value:[1,1,0,0],type:16},mainColor:{value:[1,1,1,1],linear:!0,type:16},colorScale:{value:[1,1,1],type:15,handleInfo:["colorScaleAndCutoff",0,15]},alphaThreshold:{value:[.5],type:13,handleInfo:["colorScaleAndCutoff",3,13]},color:{linear:!0,type:16,handleInfo:["mainColor",0,16]},colorScaleAndCutoff:{type:16,value:[1,1,1,.5]}}}]}],shaders:[{name:"unlit|unlit-vs:vert|unlit-fs:frag",hash:3152709001,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:198,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:41},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"CC_USE_LIGHTMAP",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]},{name:"CC_USE_ACCURATE_FOG",type:"boolean"},{name:"USE_VERTEX_COLOR",type:"boolean"},{name:"USE_TEXTURE",type:"boolean"},{name:"SAMPLE_FROM_RT",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_ALPHA_TEST",type:"boolean"},{name:"ALPHA_TEST_CHANNEL",type:"string",options:["a","r","g","b"]}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["USE_INSTANCING","CC_USE_BAKED_ANIMATION"],format:44,isInstanced:!0,location:6},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","CC_USE_LIGHTMAP"],format:44,isInstanced:!0,location:10},{name:"a_localShadowBias",defines:["USE_INSTANCING","CC_RECEIVE_SHADOW"],format:21,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:13},{name:"a_color",defines:["USE_VERTEX_COLOR"],format:44,location:14}],blocks:[{name:"TexCoords",defines:["USE_TEXTURE"],binding:0,stageFlags:1,members:[{name:"tilingOffset",type:16,count:1}]},{name:"Constant",defines:[],binding:1,stageFlags:16,members:[{name:"mainColor",type:16,count:1},{name:"colorScaleAndCutoff",type:16,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:["USE_TEXTURE"],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"bloom",techniques:[{passes:[{phase:"bloom-prefilter",program:"bloom|bloom-vs|prefilter-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-downsample",program:"bloom|bloom-vs|downsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-upsample",program:"bloom|bloom-vs|upsample-fs",depthStencilState:{depthTest:!1,depthWrite:!1}},{phase:"bloom-combine",program:"bloom|bloom-vs|combine-fs",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"bloom|bloom-vs|prefilter-fs",hash:837263906,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"CC_USE_LIGHTMAP",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["USE_INSTANCING","CC_USE_BAKED_ANIMATION"],format:44,isInstanced:!0,location:6},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","CC_USE_LIGHTMAP"],format:44,isInstanced:!0,location:10},{name:"a_localShadowBias",defines:["USE_INSTANCING","CC_RECEIVE_SHADOW"],format:21,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:13}],blocks:[{name:"BloomUBO",defines:[],binding:0,stageFlags:16,members:[{name:"texSize",type:16,count:1}]}],samplerTextures:[{name:"outputResultMap",type:28,count:1,defines:[],stageFlags:16,binding:1}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"bloom|bloom-vs|downsample-fs",hash:682261797,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"CC_USE_LIGHTMAP",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["USE_INSTANCING","CC_USE_BAKED_ANIMATION"],format:44,isInstanced:!0,location:6},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","CC_USE_LIGHTMAP"],format:44,isInstanced:!0,location:10},{name:"a_localShadowBias",defines:["USE_INSTANCING","CC_RECEIVE_SHADOW"],format:21,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:13}],blocks:[{name:"BloomUBO",defines:[],binding:0,stageFlags:16,members:[{name:"texSize",type:16,count:1}]}],samplerTextures:[{name:"bloomTexture",type:28,count:1,defines:[],stageFlags:16,binding:1}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"bloom|bloom-vs|upsample-fs",hash:3663548873,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"CC_USE_LIGHTMAP",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["USE_INSTANCING","CC_USE_BAKED_ANIMATION"],format:44,isInstanced:!0,location:6},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","CC_USE_LIGHTMAP"],format:44,isInstanced:!0,location:10},{name:"a_localShadowBias",defines:["USE_INSTANCING","CC_RECEIVE_SHADOW"],format:21,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:13}],blocks:[{name:"BloomUBO",defines:[],binding:0,stageFlags:16,members:[{name:"texSize",type:16,count:1}]}],samplerTextures:[{name:"bloomTexture",type:28,count:1,defines:[],stageFlags:16,binding:1}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]},{name:"bloom|bloom-vs|combine-fs",hash:670444562,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:40},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"CC_USE_LIGHTMAP",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["USE_INSTANCING","CC_USE_BAKED_ANIMATION"],format:44,isInstanced:!0,location:6},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","CC_USE_LIGHTMAP"],format:44,isInstanced:!0,location:10},{name:"a_localShadowBias",defines:["USE_INSTANCING","CC_RECEIVE_SHADOW"],format:21,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:13}],blocks:[{name:"BloomUBO",defines:[],binding:0,stageFlags:16,members:[{name:"texSize",type:16,count:1}]}],samplerTextures:[{name:"outputResultMap",type:28,count:1,defines:[],stageFlags:16,binding:1},{name:"bloomTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"deferred-lighting",techniques:[{passes:[{phase:"deferred-lighting",program:"deferred-lighting|lighting-vs|lighting-fs",depthStencilState:{depthFunc:4,depthTest:!0,depthWrite:!1}}]}],shaders:[{name:"deferred-lighting|lighting-vs|lighting-fs",hash:2587574837,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:39,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:69},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[{name:"cc_shadowMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_spotLightingMap",defines:["CC_RECEIVE_SHADOW"]},{name:"cc_environment",defines:["CC_USE_IBL"]},{name:"cc_diffuseMap",defines:["CC_USE_DIFFUSEMAP"]}],buffers:[],images:[]},locals:{blocks:[{name:"CCLocal",defines:[]},{name:"CCForwardLight",defines:["CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"CC_USE_LIGHTMAP",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_DIFFUSEMAP",type:"number",range:[0,2]},{name:"USE_REFLECTION_DENOISE",type:"boolean"},{name:"CC_FORWARD_ADD",type:"boolean"},{name:"CC_PIPELINE_TYPE",type:"number",range:[0,1]},{name:"CC_FORCE_FORWARD_SHADING",type:"boolean"},{name:"CC_USE_HDR",type:"boolean"},{name:"CC_USE_FOG",type:"number",range:[0,4]}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["USE_INSTANCING","CC_USE_BAKED_ANIMATION"],format:44,isInstanced:!0,location:6},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","CC_USE_LIGHTMAP"],format:44,isInstanced:!0,location:10},{name:"a_localShadowBias",defines:["USE_INSTANCING","CC_RECEIVE_SHADOW"],format:21,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:13}],blocks:[],samplerTextures:[],buffers:[{name:"b_ccLightsBuffer",memoryAccess:1,defines:["CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:4},{name:"b_clusterLightIndicesBuffer",memoryAccess:1,defines:["CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:5},{name:"b_clusterLightGridBuffer",memoryAccess:1,defines:["CC_ENABLE_CLUSTERED_LIGHT_CULLING"],stageFlags:16,binding:6}],images:[],textures:[],samplers:[],subpassInputs:[{name:"gbuffer_albedoMap",count:1,defines:["CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT"],stageFlags:16,binding:0},{name:"gbuffer_normalMap",count:1,defines:["CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT"],stageFlags:16,binding:1},{name:"gbuffer_emissiveMap",count:1,defines:["CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT"],stageFlags:16,binding:2},{name:"depth_stencil",count:1,defines:["CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT"],stageFlags:16,binding:3}]}]},{name:"planar-shadow",techniques:[{passes:[{phase:"planarShadow",blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},program:"planar-shadow|planar-shadow-vs:vert|planar-shadow-fs:frag",depthStencilState:{depthTest:!0,depthWrite:!1,stencilTestFront:!0,stencilFuncFront:5,stencilPassOpFront:2,stencilRefBack:128,stencilRefFront:128,stencilReadMaskBack:128,stencilReadMaskFront:128,stencilWriteMaskBack:128,stencilWriteMaskFront:128}}]}],shaders:[{name:"planar-shadow|planar-shadow-vs:vert|planar-shadow-fs:frag",hash:3542426468,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:217,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:59},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]},{name:"CCShadow",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{name:"CCLocalBatched",defines:["!USE_INSTANCING","USE_BATCHING"]},{name:"CCLocal",defines:["!USE_INSTANCING","!USE_BATCHING"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"CC_USE_LIGHTMAP",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["USE_INSTANCING","CC_USE_BAKED_ANIMATION"],format:44,isInstanced:!0,location:6},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","CC_USE_LIGHTMAP"],format:44,isInstanced:!0,location:10},{name:"a_localShadowBias",defines:["USE_INSTANCING","CC_RECEIVE_SHADOW"],format:21,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:13}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"post-process",techniques:[{passes:[{phase:"post-process",blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendSrcAlpha:2,blendDstAlpha:4}]},program:"post-process|post-process-vs|post-process-fs",depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"post-process|post-process-vs|post-process-fs",hash:2960965003,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:147,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[{name:"CCMorph",defines:["CC_USE_MORPH"]},{name:"CCSkinningTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinningAnimation",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{name:"CCSkinning",defines:["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]}],samplerTextures:[{name:"cc_PositionDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{name:"cc_NormalDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{name:"cc_TangentDisplacements",defines:["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{name:"cc_jointTexture",defines:["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}],buffers:[],images:[]}},defines:[{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"CC_USE_LIGHTMAP",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_MORPH_TARGET_COUNT",type:"number",range:[2,8]},{name:"CC_MORPH_PRECOMPUTED",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_POSITION",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_NORMAL",type:"boolean"},{name:"CC_MORPH_TARGET_HAS_TANGENT",type:"boolean"},{name:"ANTIALIAS_TYPE",type:"number",range:[0,3]}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["USE_INSTANCING","CC_USE_BAKED_ANIMATION"],format:44,isInstanced:!0,location:6},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","CC_USE_LIGHTMAP"],format:44,isInstanced:!0,location:10},{name:"a_localShadowBias",defines:["USE_INSTANCING","CC_RECEIVE_SHADOW"],format:21,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:13}],blocks:[],samplerTextures:[{name:"outputResultMap",type:28,count:1,defines:[],stageFlags:16,binding:0}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"skybox",techniques:[{passes:[{rasterizerState:{cullMode:0},program:"skybox|sky-vs:vert|sky-fs:frag",priority:245,depthStencilState:{depthTest:!0,depthWrite:!1}}]}],shaders:[{name:"skybox|sky-vs:vert|sky-fs:frag",hash:2207113861,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:39,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[{name:"cc_environment",defines:[]}],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[{name:"USE_INSTANCING",type:"boolean"},{name:"USE_BATCHING",type:"boolean"},{name:"CC_USE_SKINNING",type:"boolean"},{name:"CC_USE_BAKED_ANIMATION",type:"boolean"},{name:"CC_USE_LIGHTMAP",type:"boolean"},{name:"CC_RECEIVE_SHADOW",type:"boolean"},{name:"CC_USE_MORPH",type:"boolean"},{name:"CC_USE_IBL",type:"number",range:[0,2]},{name:"CC_USE_HDR",type:"boolean"},{name:"USE_RGBE_CUBEMAP",type:"boolean"}],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_normal",defines:[],format:32,location:1},{name:"a_texCoord",defines:[],format:21,location:2},{name:"a_tangent",defines:[],format:44,location:3},{name:"a_joints",defines:["CC_USE_SKINNING"],location:4},{name:"a_weights",defines:["CC_USE_SKINNING"],format:44,location:5},{name:"a_jointAnimInfo",defines:["USE_INSTANCING","CC_USE_BAKED_ANIMATION"],format:44,isInstanced:!0,location:6},{name:"a_matWorld0",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:7},{name:"a_matWorld1",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:8},{name:"a_matWorld2",defines:["USE_INSTANCING"],format:44,isInstanced:!0,location:9},{name:"a_lightingMapUVParam",defines:["USE_INSTANCING","CC_USE_LIGHTMAP"],format:44,isInstanced:!0,location:10},{name:"a_localShadowBias",defines:["USE_INSTANCING","CC_RECEIVE_SHADOW"],format:21,isInstanced:!0,location:11},{name:"a_dyn_batch_id",defines:["!USE_INSTANCING","USE_BATCHING"],format:11,location:12},{name:"a_vertexId",defines:["CC_USE_MORPH"],format:11,location:13}],blocks:[],samplerTextures:[],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"profiler",techniques:[{passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"profiler|profiler-vs:vert|profiler-fs:frag",priority:255,depthStencilState:{depthTest:!1,depthWrite:!1}}]}],shaders:[{name:"profiler|profiler-vs:vert|profiler-fs:frag",hash:179162168,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:60,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:39},globals:{blocks:[{name:"CCGlobal",defines:[]},{name:"CCCamera",defines:[]}],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:32,location:0},{name:"a_color",defines:[],format:44,location:1}],blocks:[{name:"Constants",defines:[],binding:0,stageFlags:1,members:[{name:"offset",type:16,count:1}]},{name:"PerFrameInfo",defines:[],binding:1,stageFlags:1,members:[{name:"digits",type:16,count:20}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]},{name:"splash-screen",techniques:[{name:"default",passes:[{blendState:{targets:[{blend:!0,blendSrc:2,blendDst:4,blendDstAlpha:4}]},rasterizerState:{cullMode:0},program:"splash-screen|splash-screen-vs:vert|splash-screen-fs:frag",depthStencilState:{depthTest:!1,depthWrite:!1},properties:{mainTexture:{value:"grey",type:28},resolution:{value:[640,960],type:14,handleInfo:["u_buffer0",0,14]},percent:{value:[.5],type:13,handleInfo:["u_percent",0,13]},scale:{value:[200,500],type:14,handleInfo:["u_buffer1",0,14]},translate:{value:[320,480],type:14,handleInfo:["u_buffer1",2,14]},u_buffer0:{type:16,value:[640,960,0,0]},u_percent:{type:13,value:[.5]},u_buffer1:{type:16,value:[200,500,320,480]}}}]}],shaders:[{name:"splash-screen|splash-screen-vs:vert|splash-screen-fs:frag",hash:3189094080,builtins:{statistics:{CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS:6,CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS:1},globals:{blocks:[],samplerTextures:[],buffers:[],images:[]},locals:{blocks:[],samplerTextures:[],buffers:[],images:[]}},defines:[],attributes:[{name:"a_position",defines:[],format:21,location:0},{name:"a_texCoord",defines:[],format:21,location:1}],blocks:[{name:"Constant",defines:[],binding:0,stageFlags:1,members:[{name:"u_buffer0",type:16,count:1},{name:"u_buffer1",type:16,count:1},{name:"u_projection",type:25,count:1}]},{name:"Factor",defines:[],binding:1,stageFlags:16,members:[{name:"u_percent",type:13,count:1}]}],samplerTextures:[{name:"mainTexture",type:28,count:1,defines:[],stageFlags:16,binding:2}],buffers:[],images:[],textures:[],samplers:[],subpassInputs:[]}]}]),Bm={glsl1:[[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n, mat4 viewInv\n) {\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n}\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nuniform vec4 cc_size_rotation;\nvec4 vs_main() {\nvec4 pos = vec4(a_position, 1);\npos = cc_matWorld * pos;\nvec2 vertOffset = a_texCoord.xy - 0.5;\ncomputeVertPos(pos, vertOffset, quaternionFromEuler(vec3(0., 0., cc_size_rotation.z)), vec3(cc_size_rotation.xy, 0.), cc_matViewInv);\npos = cc_matViewProj * pos;\nuv = a_texCoord.xy;\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nattribute vec3 a_position;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 frag () {\nvec4 o = vec4(1.0);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nattribute highp vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\npos.z -= 0.000001;\nv_color = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec4 v_color;\nvec4 front() {\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(v_color);\n#else\nreturn v_color;\n#endif\n}\nvoid main() { gl_FragColor = front(); }"},{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nattribute highp vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\npos.z -= 0.000001;\nv_color = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec4 v_color;\nvec4 back() {\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(vec4(v_color.rgb, v_color.a * 0.2));\n#else\nreturn vec4(v_color.rgb, v_color.a * 0.2);\n#endif\n}\nvoid main() { gl_FragColor = back(); }"},{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nattribute highp vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nvarying float v_distance;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\npos.z -= 0.000001;\nv_color = a_color;\nv_distance = dot(a_position, vec3(1.0, 1.0, 1.0));\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec4 v_color;\nvarying float v_distance;\nvec4 front() {\nif (fract(v_distance) > 0.5) {\ndiscard;\n}\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(v_color);\n#else\nreturn v_color;\n#endif\n}\nvoid main() { gl_FragColor = front(); }"},{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nattribute highp vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nvarying float v_distance;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\npos.z -= 0.000001;\nv_color = a_color;\nv_distance = dot(a_position, vec3(1.0, 1.0, 1.0));\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec4 v_color;\nvarying float v_distance;\nvec4 back() {\nif (fract(v_distance) > 0.5) {\ndiscard;\n}\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(vec4(v_color.rgb, v_color.a * 0.2));\n#else\nreturn vec4(v_color.rgb, v_color.a * 0.2);\n#endif\n}\nvoid main() { gl_FragColor = back(); }"},{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nattribute highp vec3 a_position;\nattribute vec4 a_normal;\nattribute vec4 a_color;\nvarying vec4 v_color;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\nv_color = a_color;\nfloat intensity = dot(vec3(1, 2, 4), a_normal.xyz);\nv_color.rgb -= a_normal.w * intensity * 0.1;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec4 v_color;\nvec4 front() {\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(v_color);\n#else\nreturn v_color;\n#endif\n}\nvoid main() { gl_FragColor = front(); }"},{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nattribute highp vec3 a_position;\nattribute vec4 a_normal;\nattribute vec4 a_color;\nvarying vec4 v_color;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\nv_color = a_color;\nfloat intensity = dot(vec3(1, 2, 4), a_normal.xyz);\nv_color.rgb -= a_normal.w * intensity * 0.1;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec4 v_color;\nvec4 back() {\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(vec4(v_color.rgb, v_color.a * 0.2));\n#else\nreturn vec4(v_color.rgb, v_color.a * 0.2);\n#endif\n}\nvoid main() { gl_FragColor = back(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute float a_dist;\nvarying float v_dist;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\npos = cc_matViewProj * cc_matWorld * pos;\nv_color = a_color;\nv_dist = a_dist;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\nprecision highp float;\nvarying vec4 v_color;\nvarying float v_dist;\nvec4 frag () {\nvec4 o = v_color;\n#ifdef GL_OES_standard_derivatives\nfloat aa = fwidth(v_dist);\n#else\nfloat aa = 0.05;\n#endif\nfloat alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\no.rgb *= o.a;\no *= alpha;\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_worldBoundCenter;\nuniform highp vec4 cc_worldBoundHalfExtents;\nattribute vec3 a_position;\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition *= cc_worldBoundHalfExtents;\nposition += cc_worldBoundCenter;\nposition = cc_matViewProj * position;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 frag () {\nreturn vec4(1, 0, 0, 1);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nvec4 eulerToQuat(vec3 euler) {\nvec3 er = euler * 0.5;\nfloat x = er.x, y = er.y, z = er.z;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat;\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform vec4 nodeRotation;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nuniform vec4 u_sampleInfo;\nuniform vec4 u_worldRot;\nuniform vec4 u_timeDelta;\nattribute vec4 a_position_starttime;\nattribute vec4 a_size_uv;\nattribute vec4 a_rotation_uv;\nattribute vec4 a_color;\nattribute vec4 a_dir_life;\nattribute float a_rndSeed;\n#if CC_RENDER_MODE == 4\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord3;\nattribute vec3 a_normal;\nattribute vec4 a_color1;\n#endif\nvec3 unpackCurveData (sampler2D tex, vec2 coord) {\nvec4 a = texture2D(tex, coord);\nvec4 b = texture2D(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nreturn mix(a.xyz, b.xyz, c);\n}\nvec3 unpackCurveData (sampler2D tex, vec2 coord, out float w) {\nvec4 a = texture2D(tex, coord);\nvec4 b = texture2D(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nw = mix(a.w, b.w, c);\nreturn mix(a.xyz, b.xyz, c);\n}\nfloat pseudoRandom(float x) {\n#if USE_VK_SHADER\nfloat o = x;\nx = mod(x - 1.0, 2.0) - 1.0;\nfloat freqVar = 10.16640753482;\nfloat y = sin(freqVar * floor(o * 0.5 - 0.5));\nfloat v = max(0.0, 1.0-abs(x));\nv *= 0.7071067812;\nv = y < 0.0 ? -v : v;\nreturn v;\n#else\nfloat seed = mod(x, 233280.);\nfloat q = (seed * 9301. + 49297.) / 233280.;\nreturn fract(q);\n#endif\n}\n#if COLOR_OVER_TIME_MODULE_ENABLE\nuniform sampler2D color_over_time_tex0;\nuniform int u_color_mode;\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nuniform sampler2D rotation_over_time_tex0;\nuniform int u_rotation_mode;\n#endif\n#if SIZE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D size_over_time_tex0;\nuniform int u_size_mode;\n#endif\n#if FORCE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D force_over_time_tex0;\nuniform int u_force_mode;\nuniform int u_force_space;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nuniform sampler2D velocity_over_time_tex0;\nuniform int u_velocity_mode;\nuniform int u_velocity_space;\n#endif\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nuniform sampler2D texture_animation_tex0;\nuniform vec4 u_anim_info;\n#endif\nfloat repeat (float t, float length) {\nreturn t - floor(t / length) * length;\n}\nvec4 rotateQuat (vec4 p, vec4 q) {\nvec3 iv = cross(q.xyz, p.xyz) + q.w * p.xyz;\nvec3 res = p.xyz + 2.0 * cross(q.xyz, iv);\nreturn vec4(res.xyz, p.w);\n}\nvec4 gpvs_main () {\nfloat activeTime = u_timeDelta.x - a_position_starttime.w;\nfloat normalizedTime = clamp(activeTime / a_dir_life.w, 0.0, 1.0);\nvec2 timeCoord0 = vec2(normalizedTime, 0.);\nvec2 timeCoord1 = vec2(normalizedTime, 1.);\n#if CC_RENDER_MODE == 4\nvec2 vertIdx = vec2(a_texCoord.x, a_texCoord.y);\n#else\nvec2 vertIdx = vec2(a_size_uv.w, a_rotation_uv.w);\n#endif\nvec4 velocity = vec4(a_dir_life.xyz, 0.);\nvec4 pos = vec4(a_position_starttime.xyz, 1.);\nvec3 size = a_size_uv.xyz;\n#if SIZE_OVER_TIME_MODULE_ENABLE\nif (u_size_mode == 1) {\nsize *= unpackCurveData(size_over_time_tex0, timeCoord0);\n} else {\nvec3 size_0 = unpackCurveData(size_over_time_tex0, timeCoord0);\nvec3 size_1 = unpackCurveData(size_over_time_tex0, timeCoord1);\nfloat factor_s = pseudoRandom(a_rndSeed + 39825.);\nsize *= mix(size_0, size_1, factor_s);\n}\n#endif\nvec3 compScale = scale.xyz * size;\n#if FORCE_OVER_TIME_MODULE_ENABLE\nvec3 forceAnim = vec3(0.);\nif (u_force_mode == 1) {\nforceAnim = unpackCurveData(force_over_time_tex0, timeCoord0);\n} else {\nvec3 force_0 = unpackCurveData(force_over_time_tex0, timeCoord0);\nvec3 force_1 = unpackCurveData(force_over_time_tex0, timeCoord1);\nfloat factor_f =  pseudoRandom(a_rndSeed + 212165.);\nforceAnim = mix(force_0, force_1, factor_f);\n}\nvec4 forceTrack = vec4(forceAnim, 0.);\nif (u_force_space == 0) {\nforceTrack = rotateQuat(forceTrack, u_worldRot);\n}\nvelocity.xyz += forceTrack.xyz;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nfloat speedModifier0 = 1.;\nfloat speedModifier1 = 1.;\nvec3 velocityAnim = vec3(0.);\nif (u_velocity_mode == 1) {\nvelocityAnim = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n} else {\nvec3 vectory_0 = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\nvec3 vectory_1 = unpackCurveData(velocity_over_time_tex0, timeCoord1, speedModifier1);\nfloat factor_v = pseudoRandom(a_rndSeed + 197866.);\nvelocityAnim = mix(vectory_0, vectory_1, factor_v);\nspeedModifier0 = mix(speedModifier0, speedModifier1, factor_v);\n}\nvec4 velocityTrack = vec4(velocityAnim, 0.);\nif (u_velocity_space == 0) {\nvelocityTrack = rotateQuat(velocityTrack, u_worldRot);\n}\nvelocity.xyz += velocityTrack.xyz;\nvelocity.xyz *= speedModifier0;\n#endif\npos.xyz += velocity.xyz * normalizedTime * a_dir_life.w;\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = rotateQuat(velocity, u_worldRot);\n#endif\n#endif\nvec3 startRotation = a_rotation_uv.xyz;\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = startRotation.xyz;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., startRotation.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(startRotation);\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nif (u_rotation_mode == 1) {\nvec3 euler = unpackCurveData(rotation_over_time_tex0, timeCoord0) * normalizedTime * a_dir_life.w;\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n} else {\nvec3 rotation_0 = unpackCurveData(rotation_over_time_tex0, timeCoord0);\nvec3 rotation_1 = unpackCurveData(rotation_over_time_tex0, timeCoord1);\nfloat factor_r = pseudoRandom(a_rndSeed + 125292.);\nvec3 euler = mix(rotation_0, rotation_1, factor_r) * normalizedTime * a_dir_life.w;\n#if CC_RENDER_MODE == 3 || CC_RENDER_MODE == 2\neuler = vec3(0.0, 0.0, euler.z);\n#endif\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n}\n#endif\n#if COLOR_OVER_TIME_MODULE_ENABLE\nif (u_color_mode == 1) {\ncolor = a_color * texture2D(color_over_time_tex0, timeCoord0);\n} else {\nvec4 color_0 = texture2D(color_over_time_tex0, timeCoord0);\nvec4 color_1 = texture2D(color_over_time_tex0, timeCoord1);\nfloat factor_c = pseudoRandom(a_rndSeed + 91041.);\ncolor = a_color * mix(color_0, color_1, factor_c);\n}\n#else\ncolor = a_color;\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((vertIdx - 0.5));\n#if CC_RENDER_MODE == 1\nrot = vec4(0.0, 0.0, 0.0, 1.0);\n#endif\ncomputeVertPos(pos, cornerOffset, rot, compScale\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, cc_matViewInv\n#endif\n#if CC_RENDER_MODE == 1\n, cc_cameraPos.xyz\n, velocity\n, frameTile_velLenScale.z\n, frameTile_velLenScale.w\n, a_size_uv.w\n#endif\n);\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor *= a_color1;\n#endif\npos = cc_matViewProj * pos;\nfloat frameIndex = 0.;\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nfloat startFrame = 0.;\nvec3 frameInfo = vec3(0.);\nif (int(u_anim_info.x) == 1) {\nframeInfo = unpackCurveData(texture_animation_tex0, timeCoord0);\n} else {\nvec3 frameInfo0 = unpackCurveData(texture_animation_tex0, timeCoord0);\nvec3 frameInfo1 = unpackCurveData(texture_animation_tex0, timeCoord1);\nfloat factor_t = pseudoRandom(a_rndSeed + 90794.);\nframeInfo = mix(frameInfo0, frameInfo1, factor_t);\n}\nstartFrame = frameInfo.x / u_anim_info.y;\nframeIndex = repeat(u_anim_info.z * (frameInfo.y + startFrame), 1.);\n#endif\nuv = computeUV(frameIndex, vertIdx, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\nreturn pos;\n}\nvoid main() { gl_Position = gpvs_main(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision mediump float;\nuniform vec4 mainTiling_Offset;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nattribute vec3 a_position;\nattribute vec4 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\nvarying vec3 vBarycentric;\n#endif\nvec4 vs_main() {\nhighp vec4 pos = vec4(a_position, 1);\nvec4 velocity = vec4(a_texCoord1.xyz, 0);\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\nvelocity = cc_matWorld * velocity;\n#endif\nfloat vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\nvec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\npos.xyz += camUp * vertOffset;\npos = cc_matViewProj * pos;\nuv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\ncolor = a_color;\n#if CC_DRAW_WIRE_FRAME\nvBarycentric = a_texCoord2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\n#if CC_DRAW_WIRE_FRAME\nvarying vec3 vBarycentric;\n#endif\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\nif (any(lessThan(vBarycentric, vec3(0.02)))) {\ncol = vec4(0., 1., 1., 1.);\n}\n#endif\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nuniform vec4 mainTiling_Offset;\nuniform vec4 frameTile_velLenScale;\nuniform vec4 scale;\nuniform vec4 nodeRotation;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewInv;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nattribute vec3 a_position;\nattribute vec3 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_RENDER_MODE == 1\nattribute vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\nattribute vec3 a_texCoord3;\nattribute vec3 a_normal;\nattribute vec4 a_color1;\n#endif\nvec4 lpvs_main () {\nvec3 compScale = scale.xyz * a_texCoord1;\nvec4 pos = vec4(a_position, 1);\n#if CC_RENDER_MODE == 1\nvec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = cc_matWorld * velocity;\n#endif\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nvec3 rotTmp = a_texCoord2;\nfloat mulFactor = 1.0;\nif (rotTmp.x > 10.0 * 0.5) {\nrotTmp.x -= 10.0;\nmulFactor = -1.0;\n}\nvec4 rot = vec4(rotTmp, 0.0);\nrot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n#else\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = a_texCoord2;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(a_texCoord2);\n#endif\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n#elif CC_RENDER_MODE == 1\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n#elif 2\ncomputeVertPos(pos, cornerOffset, rot, compScale);\n#endif\ncolor = a_color;\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor = a_color * a_color1;\n#endif\nuv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\npos = cc_matViewProj * pos;\nreturn pos;\n}\nvoid main() { gl_Position = lpvs_main(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nuniform vec4 tintColor;\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nvoid main() { gl_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\n#if USE_LOCAL\nuniform highp mat4 cc_matWorld;\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 v_light;\nvarying vec2 uv0;\n#if TWO_COLORED\nattribute vec4 a_color2;\nvarying vec4 v_dark;\n#endif\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\npos = cc_matViewProj * pos;\nuv0 = a_texCoord;\nv_light = a_color;\n#if TWO_COLORED\nv_dark = a_color2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\n#if USE_ALPHA_TEST\nuniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nvarying vec4 v_light;\n#if TWO_COLORED\nvarying vec4 v_dark;\n#endif\nvarying vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if TWO_COLORED\nvec4 texColor = vec4(1, 1, 1, 1);\ntexColor *= texture2D(cc_spriteTexture, uv0);\no.a = texColor.a * v_light.a;\no.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n#else\no *= texture2D(cc_spriteTexture, uv0);\no *= v_light;\n#endif\nALPHA_TEST(o);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\nuniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nuv0 = a_texCoord;\n#if SAMPLE_FROM_RT\nuv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n#endif\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\nuniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nvarying vec4 color;\n#if USE_TEXTURE\nvarying vec2 uv0;\nuniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if USE_TEXTURE\no *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n#if IS_GRAY\nfloat gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\no.r = o.g = o.b = gray;\n#endif\n#endif\no *= color;\nALPHA_TEST(o);\nreturn o;\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nattribute highp vec4 a_jointAnimInfo;\n#endif\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nattribute vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\n#if !USE_INSTANCING\n#if USE_BATCHING\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matWorldIT;\nuniform highp vec4 cc_lightingMapUVParam;\nuniform highp vec4 cc_localShadowBias;\n#endif\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\n}\nuniform vec4 tilingOffset;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\nuniform mediump vec4 cc_shadowWHPBInfo;\nuniform mediump vec4 cc_shadowLPNNInfo;\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\n#if CC_RECEIVE_SHADOW\nvec2 CCGetShadowBias()\n{\n#if USE_INSTANCING\nreturn vec2(a_localShadowBias.x + cc_shadowWHPBInfo.w, a_localShadowBias.y + cc_shadowLPNNInfo.z);\n#elif !USE_BATCHING\nreturn vec2(cc_localShadowBias.x + cc_shadowWHPBInfo.w, cc_localShadowBias.y + cc_shadowLPNNInfo.z);\n#else\nreturn vec2(cc_shadowWHPBInfo.w, cc_shadowLPNNInfo.z);\n#endif\n}\n#endif\n#if USE_VERTEX_COLOR\nattribute vec4 a_color;\nvarying lowp vec4 v_color;\n#endif\nvarying vec3 v_position;\nvarying mediump vec3 v_normal;\nvarying vec2 v_uv;\n#if HAS_SECOND_UV\nvarying mediump vec2 v_uv1;\n#endif\n#if CC_RECEIVE_SHADOW\nvarying mediump vec2 v_shadowBias;\n#endif\n#if USE_NORMAL_MAP\nvarying mediump vec4 v_tangent;\n#endif\n#if HAS_SECOND_UV || CC_USE_LIGHTMAP\nattribute vec2 a_texCoord1;\n#endif\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nvoid CCLightingMapCaclUV()\n{\n#if !USE_INSTANCING\nv_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.z;\nv_luv.z = cc_lightingMapUVParam.w;\n#else\nv_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.z;\nv_luv.z = a_lightingMapUVParam.w;\n#endif\n}\n#endif\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nmat4 matWorld, matWorldIT;\nCCGetWorldMatrixFull(matWorld, matWorldIT);\nvec4 pos = matWorld * In.position;\nv_position = pos.xyz;\nv_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n#if CC_RECEIVE_SHADOW\nv_shadowBias = CCGetShadowBias();\n#endif\n#if USE_TWOSIDE\nvec3 viewDirect = normalize(cc_cameraPos.xyz - v_position);\nv_normal *= dot(v_normal, viewDirect) < 0.0 ? -1.0 : 1.0;\n#endif\n#if USE_NORMAL_MAP\nv_tangent.xyz = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\nv_tangent.w = In.tangent.w;\n#endif\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(pos);\nv_shadowPos = cc_matLightViewProj * pos;\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nCCLightingMapCaclUV();\n#endif\ngl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}",frag:"\n#ifdef GL_EXT_draw_buffers\n#extension GL_EXT_draw_buffers: enable\n#endif\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform mediump vec4 cc_nearFar;\nuniform mediump vec4 cc_viewPort;\nuniform vec4 albedo;\nuniform vec4 albedoScaleAndCutoff;\nuniform vec4 pbrParams;\nuniform vec4 emissive;\nuniform vec4 emissiveScaleParam;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform highp vec4 cc_shadowInvProjDepthInfo;\nuniform highp vec4 cc_shadowProjDepthInfo;\nuniform highp vec4 cc_shadowProjInfo;\nuniform mediump vec4 cc_shadowNFLSInfo;\nuniform mediump vec4 cc_shadowWHPBInfo;\nuniform mediump vec4 cc_shadowLPNNInfo;\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\nhighp float divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\nhighp vec2 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\nhighp vec3 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\nhighp vec4 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias)\n{\nvec4 newShadowPos = shadowPos;\nif(normalBias > EPSILON_LOWP)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > EPSILON) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCSpotShadowFactorBase(vec4 shadowPos, vec3 worldPos, vec2 shadowBias)\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nreturn CCGetSpotLightShadowFactorSoft2X(shadowPos, worldPos, shadowBias.x);\n}else if (pcf > 0.9) {\nreturn CCGetSpotLightShadowFactorSoft(shadowPos, worldPos, shadowBias.x);\n}else {\nreturn CCGetSpotLightShadowFactorHard(shadowPos, worldPos, shadowBias.x);\n}\n}\nfloat CCShadowFactorBase(vec4 shadowPos, vec3 N, vec2 shadowBias)\n{\nfloat realtimeShadow = 1.0;\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N, shadowBias.y);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nrealtimeShadow =  CCGetShadowFactorSoft2X(pos, shadowBias.x);\n}else if (pcf > 0.9) {\nrealtimeShadow = CCGetShadowFactorSoft(pos, shadowBias.x);\n}else {\nrealtimeShadow = CCGetShadowFactorHard(pos, shadowBias.x);\n}\nreturn mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = textureCube(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\nfloat specularIntensity;\n#if CC_RECEIVE_SHADOW\nvec2 shadowBias;\n#endif\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.08 * s.specularIntensity), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse / PI;\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\nshadow = CCShadowFactorBase(shadowPos, N, s.shadowBias);\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > EPSILON_LOWP) {\nfinalColor = diffuse * s.lightmap.rgb * shadow;\n}\n#endif\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = textureCube(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nvarying highp vec4 v_shadowPos;\n#if CC_RECEIVE_SHADOW\n#endif\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nuniform sampler2D cc_lightingMap;\n#endif\nvarying vec3 v_position;\nvarying vec2 v_uv;\n#if HAS_SECOND_UV\nvarying mediump vec2 v_uv1;\n#endif\nvarying mediump vec3 v_normal;\n#if CC_RECEIVE_SHADOW\nvarying mediump vec2 v_shadowBias;\n#endif\n#if USE_VERTEX_COLOR\nvarying lowp vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\nvarying mediump vec4 v_tangent;\nuniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\nuniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nuniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\nuniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\nuniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\nvec4 baseColor = albedo;\n#if USE_VERTEX_COLOR\nbaseColor.rgb *= SRGBToLinear(v_color.rgb);\nbaseColor.a *= v_color.a;\n#endif\n#if USE_ALBEDO_MAP\nvec4 texColor = texture2D(albedoMap, ALBEDO_UV);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\nbaseColor *= texColor;\n#endif\ns.albedo = baseColor;\ns.albedo.rgb *= albedoScaleAndCutoff.xyz;\n#if USE_ALPHA_TEST\nif (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture2D(cc_lightingMap, v_luv.xy);\ns.lightmap = lightColor.xyz * v_luv.z;\ns.lightmap_test = v_luv.z;\n#endif\ns.normal = v_normal;\n#if CC_RECEIVE_SHADOW\ns.shadowBias = v_shadowBias;\n#endif\n#if USE_NORMAL_MAP\nvec3 nmmp = texture2D(normalMap, NORMAL_UV).xyz - vec3(0.5);\nvec3 bitangent = cross(v_normal, v_tangent.xyz) * v_tangent.w;\ns.normal =\n(nmmp.x * emissiveScaleParam.w) * normalize(v_tangent.xyz) +\n(nmmp.y * emissiveScaleParam.w) * normalize(bitangent) +\nnmmp.z * normalize(s.normal);\n#endif\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\npackHighpData(s.position, s.position_fract_part, v_position);\n#else\ns.position = v_position;\n#endif\nvec4 pbr = pbrParams;\n#if USE_PBR_MAP\nvec4 res = texture2D(pbrMap, PBR_UV);\npbr.x *= res.r;\npbr.y *= res.g;\npbr.z *= res.b;\npbr.w *= res.a;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nvec4 metallicRoughness = texture2D(metallicRoughnessMap, PBR_UV);\npbr.z *= metallicRoughness.b;\npbr.y *= metallicRoughness.g;\n#endif\n#if USE_OCCLUSION_MAP\npbr.x *= texture2D(occlusionMap, PBR_UV).r;\n#endif\ns.occlusion = pbr.x;\ns.roughness = pbr.y;\ns.specularIntensity = 0.5;\ns.metallic = pbr.z;\ns.emissive = emissive.rgb * emissiveScaleParam.xyz;\n#if USE_EMISSIVE_MAP\ns.emissive *= SRGBToLinear(texture2D(emissiveMap, EMISSIVE_UV).rgb);\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n#define LIGHTS_PER_PASS 1\n#else\n#define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = litRadiusSqr / max(litRadiusSqr, distSqr);\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nreadonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nreadonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nreadonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = PI * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec2 float32x3_to_oct(in vec3 v) {\nvec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\nreturn (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n}\nvoid main () {\nStandardSurface s; surf(s);\ngl_FragData[0] = s.albedo;\ngl_FragData[1] = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\ngl_FragData[2] = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nattribute highp vec4 a_jointAnimInfo;\n#endif\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nattribute vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\n#if !USE_INSTANCING\n#if USE_BATCHING\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matWorldIT;\n#endif\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\n}\nuniform vec4 tilingOffset;\nuniform highp mat4 cc_matLightViewProj;\n#if HAS_SECOND_UV || CC_USE_LIGHTMAP\nattribute vec2 a_texCoord1;\n#endif\nvarying vec2 v_uv;\n#if HAS_SECOND_UV\nvarying vec2 v_uv1;\n#endif\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\nvec4 vert () {\nStandardVertInput In;\nCCVertInput(In);\nmat4 matWorld, matWorldIT;\nCCGetWorldMatrixFull(matWorld, matWorldIT);\nv_worldPos = matWorld * In.position;\nvec4 clipPos = cc_matLightViewProj * v_worldPos;\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#endif\nv_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nuniform vec4 albedo;\nuniform vec4 albedoScaleAndCutoff;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nuniform highp mat4 cc_matLightView;\nuniform mediump vec4 cc_shadowNFLSInfo;\nuniform mediump vec4 cc_shadowLPNNInfo;\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\nvarying vec2 v_uv;\n#if HAS_SECOND_UV\nvarying vec2 v_uv1;\n#endif\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\nvec4 baseColor = albedo;\n#if USE_ALBEDO_MAP\nbaseColor *= texture2D(albedoMap, ALBEDO_UV);\n#endif\n#if USE_ALPHA_TEST\nif (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\nif(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\nif (cc_shadowNFLSInfo.z > 0.000001) {\nreturn vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n}\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nreturn packDepthToRGBA(v_clip_depth);\n}\nreturn vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matViewProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform highp mat4 cc_matWorld;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\n#if CC_RECEIVE_SHADOW\n#endif\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\n#if CC_RECEIVE_SHADOW\nvarying vec2 v_shadowBias;\n#endif\nvarying highp vec3 v_position;\nvarying mediump vec3 v_normal;\nvarying mediump vec2 uvw;\nvarying mediump vec2 uv0;\nvarying mediump vec2 uv1;\nvarying mediump vec2 uv2;\nvarying mediump vec2 uv3;\nvarying mediump vec3 luv;\nvarying mediump vec3 diffuse;\nuniform vec4 UVScale;\nuniform vec4 lightMapUVParam;\nvoid main () {\nvec3 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nvec4 pos = vec4(worldPos, 1.0);\npos = cc_matViewProj * pos;\nuvw = a_texCoord;\nuv0 = a_position.xz * UVScale.x;\nuv1 = a_position.xz * UVScale.y;\nuv2 = a_position.xz * UVScale.z;\nuv3 = a_position.xz * UVScale.w;\n#if CC_USE_LIGHTMAP\nluv.xy = lightMapUVParam.xy + a_texCoord * lightMapUVParam.z;\nluv.z = lightMapUVParam.w;\n#endif\nv_position = worldPos;\nv_normal = a_normal;\nCC_TRANSFER_FOG(vec4(worldPos, 1.0));\n#if CC_RECEIVE_SHADOW\nv_shadowBias = vec2(0.0, 0.0);\n#endif\nv_shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\ngl_Position = pos;\n}",frag:"\n#ifdef GL_EXT_draw_buffers\n#extension GL_EXT_draw_buffers: enable\n#endif\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform mediump vec4 cc_nearFar;\nuniform mediump vec4 cc_viewPort;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform highp vec4 cc_shadowInvProjDepthInfo;\nuniform highp vec4 cc_shadowProjDepthInfo;\nuniform highp vec4 cc_shadowProjInfo;\nuniform mediump vec4 cc_shadowNFLSInfo;\nuniform mediump vec4 cc_shadowWHPBInfo;\nuniform mediump vec4 cc_shadowLPNNInfo;\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\nhighp float divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\nhighp vec2 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\nhighp vec3 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\nhighp vec4 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias)\n{\nvec4 newShadowPos = shadowPos;\nif(normalBias > EPSILON_LOWP)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > EPSILON) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCSpotShadowFactorBase(vec4 shadowPos, vec3 worldPos, vec2 shadowBias)\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nreturn CCGetSpotLightShadowFactorSoft2X(shadowPos, worldPos, shadowBias.x);\n}else if (pcf > 0.9) {\nreturn CCGetSpotLightShadowFactorSoft(shadowPos, worldPos, shadowBias.x);\n}else {\nreturn CCGetSpotLightShadowFactorHard(shadowPos, worldPos, shadowBias.x);\n}\n}\nfloat CCShadowFactorBase(vec4 shadowPos, vec3 N, vec2 shadowBias)\n{\nfloat realtimeShadow = 1.0;\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N, shadowBias.y);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nrealtimeShadow =  CCGetShadowFactorSoft2X(pos, shadowBias.x);\n}else if (pcf > 0.9) {\nrealtimeShadow = CCGetShadowFactorSoft(pos, shadowBias.x);\n}else {\nrealtimeShadow = CCGetShadowFactorHard(pos, shadowBias.x);\n}\nreturn mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = textureCube(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\nfloat specularIntensity;\n#if CC_RECEIVE_SHADOW\nvec2 shadowBias;\n#endif\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.08 * s.specularIntensity), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse / PI;\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\nshadow = CCShadowFactorBase(shadowPos, N, s.shadowBias);\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > EPSILON_LOWP) {\nfinalColor = diffuse * s.lightmap.rgb * shadow;\n}\n#endif\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = textureCube(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\nvarying highp vec4 v_shadowPos;\n#if CC_RECEIVE_SHADOW\n#endif\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvarying vec3 v_luv;\nuniform sampler2D cc_lightingMap;\n#endif\nvarying highp vec3 v_position;\nvarying mediump vec3 v_normal;\n#if CC_RECEIVE_SHADOW\nvarying vec2 v_shadowBias;\n#endif\nvarying mediump vec2 uvw;\nvarying mediump vec2 uv0;\nvarying mediump vec2 uv1;\nvarying mediump vec2 uv2;\nvarying mediump vec2 uv3;\nvarying mediump vec3 diffuse;\nvarying mediump vec3 luv;\nuniform vec4 metallic;\nuniform vec4 roughness;\nuniform sampler2D weightMap;\nuniform sampler2D detailMap0;\nuniform sampler2D detailMap1;\nuniform sampler2D detailMap2;\nuniform sampler2D detailMap3;\nuniform sampler2D normalMap0;\nuniform sampler2D normalMap1;\nuniform sampler2D normalMap2;\nuniform sampler2D normalMap3;\nuniform sampler2D lightMap;\nvoid surf (out StandardSurface s) {\n#if LAYERS > 1\nvec4 w = texture2D(weightMap, uvw);\n#endif\nvec4 baseColor = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseColor = texture2D(detailMap0, uv0);\n#elif LAYERS == 2\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\nbaseColor += texture2D(detailMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseColor += texture2D(detailMap0, uv0) * w.r;\nbaseColor += texture2D(detailMap1, uv1) * w.g;\nbaseColor += texture2D(detailMap2, uv2) * w.b;\nbaseColor += texture2D(detailMap3, uv3) * w.a;\n#else\nbaseColor = texture2D(detailMap0, uv0);\n#endif\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\npackHighpData(s.position, s.position_fract_part, v_position);\n#else\ns.position = v_position;\n#endif\n#if USE_NORMALMAP\nvec4 baseNormal = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseNormal = texture2D(normalMap0, uv0);\n#elif LAYERS == 2\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\nbaseNormal += texture2D(normalMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseNormal += texture2D(normalMap0, uv0) * w.r;\nbaseNormal += texture2D(normalMap1, uv1) * w.g;\nbaseNormal += texture2D(normalMap2, uv2) * w.b;\nbaseNormal += texture2D(normalMap3, uv3) * w.a;\n#else\nbaseNormal = texture2D(normalMap0, uv0);\n#endif\nvec3 tangent = vec3(1.0, 0.0, 0.0);\nvec3 binormal = vec3(0.0, 0.0, 1.0);\nbinormal = cross(tangent, v_normal);\ntangent = cross(v_normal, binormal);\nvec3 nmmp = baseNormal.xyz - vec3(0.5);\ns.normal =\nnmmp.x * normalize(tangent) +\nnmmp.y * normalize(binormal) +\nnmmp.z * normalize(v_normal);\n#else\ns.normal = v_normal;\n#endif\n#if CC_RECEIVE_SHADOW\ns.shadowBias = v_shadowBias;\n#endif\ns.albedo = vec4(SRGBToLinear(baseColor.rgb), 1.0);\ns.occlusion = 1.0;\n#if USE_PBR\ns.roughness = 0.0;\n#if LAYERS == 1\ns.roughness = roughness.x;\n#elif LAYERS == 2\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\n#elif LAYERS == 3\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\n#elif LAYERS == 4\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\ns.roughness += roughness.w * w.a;\n#else\ns.roughness = 1.0;\n#endif\ns.specularIntensity = 0.5;\ns.metallic = 0.0;\n#if LAYERS == 1\ns.specularIntensity = 0.5;\ns.metallic = metallic.x;\n#elif LAYERS == 2\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\n#elif LAYERS == 3\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\n#elif LAYERS == 4\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\ns.metallic += metallic.w * w.a;\n#else\ns.specularIntensity = 0.5;\ns.metallic = 0.0;\n#endif\n#else\ns.roughness = 1.0;\ns.specularIntensity = 0.5;\ns.metallic = 0.0;\n#endif\ns.emissive = vec3(0.0, 0.0, 0.0);\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture2D(lightMap, luv.xy);\ns.lightmap = lightColor.xyz * luv.z;\ns.lightmap_test = luv.z;\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n#define LIGHTS_PER_PASS 1\n#else\n#define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = litRadiusSqr / max(litRadiusSqr, distSqr);\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nreadonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nreadonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nreadonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = PI * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\ngl_FragData[0] = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec2 float32x3_to_oct(in vec3 v) {\nvec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\nreturn (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n}\nvoid main () {\nStandardSurface s; surf(s);\ngl_FragData[0] = s.albedo;\ngl_FragData[1] = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\ngl_FragData[2] = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nuniform highp mat4 cc_matWorld;\nuniform highp mat4 cc_matLightViewProj;\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nvarying vec2 v_clip_depth;\nvec4 vert () {\nvec4 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nworldPos.w = 1.0;\nvec4 clipPos = cc_matLightViewProj * worldPos;\nv_clip_depth = clipPos.zw;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nvarying vec2 v_clip_depth;\nvec4 frag () {\nreturn packDepthToRGBA(v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nattribute highp vec4 a_jointAnimInfo;\n#endif\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nattribute vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout vec4 In)\n{\nIn = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\n}\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\n#if !USE_INSTANCING\n#if USE_BATCHING\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\n#endif\n#endif\nvoid CCGetWorldMatrix(out mat4 matWorld)\n{\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\n#if USE_VERTEX_COLOR\nattribute lowp vec4 a_color;\nvarying lowp vec4 v_color;\n#endif\n#if USE_TEXTURE\nvarying vec2 v_uv;\nuniform vec4 tilingOffset;\n#endif\nvec4 vert () {\nvec4 position;\nCCVertInput(position);\nmat4 matWorld;\nCCGetWorldMatrix(matWorld);\n#if USE_TEXTURE\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(matWorld * position);\nreturn cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_fogColor;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\n#if USE_ALPHA_TEST\n#endif\n#if USE_TEXTURE\nvarying vec2 v_uv;\nuniform sampler2D mainTexture;\n#endif\nuniform vec4 mainColor;\nuniform vec4 colorScaleAndCutoff;\n#if USE_VERTEX_COLOR\nvarying lowp vec4 v_color;\n#endif\nvec4 frag () {\nvec4 o = mainColor;\no.rgb *= colorScaleAndCutoff.xyz;\n#if USE_VERTEX_COLOR\no.rgb *= SRGBToLinear(v_color.rgb);\no.a *= v_color.a;\n#endif\n#if USE_TEXTURE\nvec4 texColor = texture2D(mainTexture, v_uv);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\no *= texColor;\n#endif\n#if USE_ALPHA_TEST\nif (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n#endif\nCC_APPLY_FOG(o);\nreturn CCFragOutput(o);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nattribute highp vec4 a_jointAnimInfo;\n#endif\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nattribute vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvarying vec2 v_uv;\nuniform mediump vec4 texSize;\nuniform sampler2D outputResultMap;\nfloat luminance(vec3 color) {\nreturn dot(color, vec3(0.2126, 0.7152, 0.0722));\n}\nvoid main() {\nvec3 color = texture2D(outputResultMap, v_uv).xyz;\nif (luminance(SRGBToLinear(color)) > texSize.z) {\ngl_FragColor = vec4(color, 1.0);\n} else {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n}"},{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nattribute highp vec4 a_jointAnimInfo;\n#endif\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nattribute vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nvarying vec2 v_uv;\nuniform mediump vec4 texSize;\nuniform sampler2D bloomTexture;\nvec3 downsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture2D(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main()\n{\nvec3 result = downsample4taps(v_uv, 1.0 / texSize.xy).rgb;\ngl_FragColor = vec4(result, 1.0);\n}"},{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nattribute highp vec4 a_jointAnimInfo;\n#endif\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nattribute vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nvarying vec2 v_uv;\nuniform mediump vec4 texSize;\nuniform sampler2D bloomTexture;\nvec3 upsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture2D(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture2D(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main() {\nvec3 result = upsample4taps(v_uv, 0.5 / texSize.xy).rgb;\ngl_FragColor = vec4(result, 1.0);\n}"},{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nattribute highp vec4 a_jointAnimInfo;\n#endif\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nattribute vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nvarying vec2 v_uv;\nuniform mediump vec4 texSize;\nuniform sampler2D outputResultMap;\nuniform sampler2D bloomTexture;\nvoid main() {\nvec4 hdrColor = texture2D(outputResultMap, v_uv);\nvec3 bloomColor = texture2D(bloomTexture, v_uv).rgb;\nvec3 result = hdrColor.rgb + bloomColor * texSize.w * hdrColor.a;\ngl_FragColor = vec4(result, hdrColor.a);\n}"}],[{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nattribute highp vec4 a_jointAnimInfo;\n#endif\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nattribute vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nattribute float a_vertexId;\n#endif\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition.xy = cc_cameraPos.w == 0.0 ? vec2(position.xy.x, -position.xy.y) : position.xy;\ngl_Position = vec4(position.x, position.y, 1.0, 1.0);\nv_uv = a_texCoord;\n}",frag:"\n#ifdef GL_EXT_shader_framebuffer_fetch\n#extension GL_EXT_shader_framebuffer_fetch: enable\n#endif\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matViewProjInv;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_mainLitDir;\nuniform mediump vec4 cc_mainLitColor;\nuniform mediump vec4 cc_ambientSky;\nuniform mediump vec4 cc_ambientGround;\nuniform mediump vec4 cc_fogColor;\nuniform mediump vec4 cc_fogBase;\nuniform mediump vec4 cc_fogAdd;\nuniform mediump vec4 cc_nearFar;\nuniform mediump vec4 cc_viewPort;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\nuniform highp mat4 cc_matLightViewProj;\nuniform highp vec4 cc_shadowInvProjDepthInfo;\nuniform highp vec4 cc_shadowProjDepthInfo;\nuniform highp vec4 cc_shadowProjInfo;\nuniform mediump vec4 cc_shadowNFLSInfo;\nuniform mediump vec4 cc_shadowWHPBInfo;\nuniform mediump vec4 cc_shadowLPNNInfo;\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias)\n{\nvec4 newShadowPos = shadowPos;\nif(normalBias > EPSILON_LOWP)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > EPSILON) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCSpotShadowFactorBase(vec4 shadowPos, vec3 worldPos, vec2 shadowBias)\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nreturn CCGetSpotLightShadowFactorSoft2X(shadowPos, worldPos, shadowBias.x);\n}else if (pcf > 0.9) {\nreturn CCGetSpotLightShadowFactorSoft(shadowPos, worldPos, shadowBias.x);\n}else {\nreturn CCGetSpotLightShadowFactorHard(shadowPos, worldPos, shadowBias.x);\n}\n}\nfloat CCShadowFactorBase(vec4 shadowPos, vec3 N, vec2 shadowBias)\n{\nfloat realtimeShadow = 1.0;\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N, shadowBias.y);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nrealtimeShadow =  CCGetShadowFactorSoft2X(pos, shadowBias.x);\n}else if (pcf > 0.9) {\nrealtimeShadow = CCGetShadowFactorSoft(pos, shadowBias.x);\n}else {\nrealtimeShadow = CCGetShadowFactorHard(pos, shadowBias.x);\n}\nreturn mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DLodEXT(tex, coord, lod);\n#else\nreturn texture2D(tex, coord, lod);\n#endif\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n#ifdef GL_EXT_shader_texture_lod\nreturn textureCubeLodEXT(tex, coord, lod);\n#else\nreturn textureCube(tex, coord, lod);\n#endif\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = textureCube(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\nfloat specularIntensity;\n#if CC_RECEIVE_SHADOW\nvec2 shadowBias;\n#endif\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.08 * s.specularIntensity), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse / PI;\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\nshadow = CCShadowFactorBase(shadowPos, N, s.shadowBias);\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > EPSILON_LOWP) {\nfinalColor = diffuse * s.lightmap.rgb * shadow;\n}\n#endif\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = textureCube(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\n#if CC_PIPELINE_TYPE == 0\n#define LIGHTS_PER_PASS 1\n#else\n#define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nuniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\nuniform vec4 cc_lightColor[LIGHTS_PER_PASS];\nuniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nuniform vec4 cc_lightDir[LIGHTS_PER_PASS];\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = litRadiusSqr / max(litRadiusSqr, distSqr);\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nreadonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nreadonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nreadonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = PI * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec3 oct_to_float32x3(vec2 e) {\nvec3 v = vec3(e.xy, 1.0 - abs(e.x) - abs(e.y));\nif (v.z < 0.0) v.xy = (1.0 - abs(v.yx)) * signNotZero(v.xy);\nreturn normalize(v);\n}\nvec4 screen2WS(vec3 coord) {\nvec3 ndc = vec3(\n2.0 * (coord.x - cc_viewPort.x) / cc_viewPort.z - 1.0,\n2.0 * (coord.y - cc_viewPort.y) / cc_viewPort.w - 1.0,\n2.0 * coord.z - 1.0);\nvec4 world = ((cc_matViewProjInv) * (vec4(ndc, 1.0)));\nworld      = world / world.w;\nreturn world;\n}\nvarying vec2 v_uv;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nuniform sampler2D depth_stencil;\n#else\nuniform sampler2D gbuffer_albedoMap;\nuniform sampler2D gbuffer_normalMap;\nuniform sampler2D gbuffer_emissiveMap;\nuniform sampler2D depth_stencil;\n#endif\n#if !CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT || __VERSION__ >= 450\n#endif\nvoid main () {\nStandardSurface s;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nvec4 albedoMap = gl_LastFragData[0];\nvec4 normalMap = gl_LastFragData[1];\nvec4 emissiveMap = gl_LastFragData[2];\nfloat depth = texture2D(depth_stencil, v_uv).x;\n#else\nvec4 albedoMap = texture2D(gbuffer_albedoMap,v_uv);\nvec4 normalMap = texture2D(gbuffer_normalMap,v_uv);\nvec4 emissiveMap = texture2D(gbuffer_emissiveMap,v_uv);\nfloat depth = texture2D(depth_stencil, v_uv).x;\n#endif\ns.albedo = albedoMap;\nvec3 position = screen2WS(vec3(gl_FragCoord.xy, depth)).xyz;\ns.position = position;\ns.roughness = normalMap.z;\ns.normal = oct_to_float32x3(normalMap.xy);\ns.specularIntensity = 0.5;\ns.metallic = normalMap.w;\ns.emissive = emissiveMap.xyz;\ns.occlusion = emissiveMap.w;\nfloat fogFactor;\nCC_TRANSFER_FOG_BASE(vec4(position, 1), fogFactor);\nvec4 shadowPos;\nshadowPos = cc_matLightViewProj * vec4(position, 1);\nvec4 color = CCStandardShadingBase(s, shadowPos) +\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nCCClusterShadingAdditive(s, shadowPos);\n#else\nCCStandardShadingAdditive(s, shadowPos);\n#endif\nCC_APPLY_FOG_BASE(color, fogFactor);\ncolor = CCFragOutput(color);\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\ngl_FragData[2] = color;\n#else\ngl_FragColor = color;\n#endif\n}"}],[{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nattribute highp vec4 a_jointAnimInfo;\n#endif\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nattribute vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout vec4 In)\n{\nIn = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\n}\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\nuniform highp vec4 cc_cameraPos;\nuniform mediump vec4 cc_mainLitDir;\n#if !USE_INSTANCING\n#if USE_BATCHING\nuniform highp mat4 cc_matWorlds[10];\n#else\nuniform highp mat4 cc_matWorld;\n#endif\n#endif\nvoid CCGetWorldMatrix(out mat4 matWorld)\n{\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n}\nuniform mediump vec4 cc_planarNDInfo;\nvarying float v_dist;\nvec4 vert () {\nvec4 position;\nCCVertInput(position);\nmat4 matWorld;\nCCGetWorldMatrix(matWorld);\nvec3 P = (matWorld * position).xyz;\nvec3 L = cc_mainLitDir.xyz;\nvec3 N = cc_planarNDInfo.xyz;\nfloat d = cc_planarNDInfo.w + 0.001;\nfloat dist = (-d - dot(P, N)) / (dot(L, N) + 0.0001);\nvec3 shadowPos = P + L * dist;\nvec3 view = normalize(cc_cameraPos.xyz - shadowPos);\nfloat viewLength = length(cc_cameraPos.xyz - shadowPos);\nshadowPos += view * min(1.0, 0.005 * viewLength);\nposition = cc_matProj * cc_matView * vec4(shadowPos, 1.0);\nv_dist = dist;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform lowp vec4 cc_shadowColor;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying float v_dist;\nvec4 frag () {\nif(v_dist < 0.0)\ndiscard;\nreturn CCFragOutput(cc_shadowColor);\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nattribute highp vec4 a_jointAnimInfo;\n#endif\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nattribute vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nattribute float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nuniform vec4 cc_displacementWeights[15];\nuniform vec4 cc_displacementTextureInfo;\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\nreturn texture2D(tex, uv);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture2D(tex, x)),\ndecode32(texture2D(tex, y)),\ndecode32(texture2D(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nuniform highp vec4 cc_jointTextureInfo;\nuniform highp vec4 cc_jointAnimInfo;\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nuniform highp vec4 cc_joints[90];\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nuniform highp vec4 cc_cameraPos;\nvarying vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nuniform mediump vec4 cc_screenSize;\n#if ANTIALIAS_TYPE == 1\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\nvec2 v_rgbNW, vec2 v_rgbNE,\nvec2 v_rgbSW, vec2 v_rgbSE,\nvec2 v_rgbM) {\nvec4 color;\nmediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\nvec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\nvec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\nvec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\nvec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\nvec4 texColor = texture2D(tex, v_rgbM);\nvec3 rgbM  = texColor.xyz;\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat lumaNW = dot(rgbNW, luma);\nfloat lumaNE = dot(rgbNE, luma);\nfloat lumaSW = dot(rgbSW, luma);\nfloat lumaSE = dot(rgbSE, luma);\nfloat lumaM  = dot(rgbM,  luma);\nfloat lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\nfloat lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\nmediump vec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n(0.25 * (1.0 / 8.0)), (1.0/ 128.0));\nfloat rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\ndir = min(vec2(8.0, 8.0),\nmax(vec2(-8.0, -8.0),\ndir * rcpDirMin)) * inverseVP;\nvec3 rgbA = 0.5 * (\ntexture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\ntexture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\ntexture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\nfloat lumaB = dot(rgbB, luma);\nif ((lumaB < lumaMin) || (lumaB > lumaMax))\ncolor = vec4(rgbA, texColor.a);\nelse\ncolor = vec4(rgbB, texColor.a);\nreturn color;\n}\n#endif\nvarying vec2 v_uv;\nuniform sampler2D outputResultMap;\nvoid texcoords(vec2 fragCoord, vec2 resolution,\nout vec2 v_rgbNW, out vec2 v_rgbNE,\nout vec2 v_rgbSW, out vec2 v_rgbSE,\nout vec2 v_rgbM) {\nvec2 inverseVP = 1.0 / resolution.xy;\nv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\nv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\nv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\nv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\nv_rgbM = vec2(fragCoord * inverseVP);\n}\nvoid main () {\nmediump vec2 v_rgbNW;\nmediump vec2 v_rgbNE;\nmediump vec2 v_rgbSW;\nmediump vec2 v_rgbSE;\nmediump vec2 v_rgbM;\n#if ANTIALIAS_TYPE == 1\nvec2 resolution = cc_screenSize.xy;\nvec2 fragCoord = v_uv * resolution;\ntexcoords(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\ngl_FragColor = fxaa(outputResultMap, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n#else\ngl_FragColor = texture2D(outputResultMap, v_uv);\n#endif\n}"}],[{vert:"\nprecision highp float;\nuniform highp mat4 cc_matView;\nuniform highp mat4 cc_matProj;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\nattribute vec4 a_joints;\nattribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nattribute highp vec4 a_jointAnimInfo;\n#endif\nattribute vec4 a_matWorld0;\nattribute vec4 a_matWorld1;\nattribute vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nattribute vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nattribute vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nattribute float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nattribute float a_vertexId;\n#endif\nvarying mediump vec4 viewDir;\nvec4 vert () {\nviewDir = vec4(a_position, 1.0);\nmat4 matViewRotOnly = mat4(mat3(cc_matView));\nvec4 pos = matViewRotOnly * viewDir;\nif (cc_matProj[3].w > 0.0) {\nmat4 matProj = cc_matProj;\nmatProj[0].x = 5.2;\nmatProj[1].y = 2.6;\nmatProj[2].zw = vec2(-1.0);\nmatProj[3].zw = vec2(0.0);\npos = matProj * pos;\n} else {\npos = cc_matProj * pos;\n}\npos.z = 0.99999 * pos.w;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nuniform mediump vec4 cc_ambientSky;\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nvarying mediump vec4 viewDir;\nvec4 frag () {\n#if USE_RGBE_CUBEMAP\nvec3 c = unpackRGBE(textureCube(cc_environment, viewDir.xyz));\n#else\nvec3 c = SRGBToLinear(textureCube(cc_environment, viewDir.xyz).rgb);\n#endif\nreturn CCFragOutput(vec4(c * cc_ambientSky.w, 1.0));\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nuniform highp mat4 cc_matProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec2 v_uv;\nuniform vec4 offset;\nuniform vec4 digits[20];\nfloat getComponent(vec4 v, float i) {\nif (i < 1.0) { return v.x; }\nelse if (i < 2.0) { return v.y; }\nelse if (i < 3.0) { return v.z; }\nelse { return v.w; }\n}\nvec4 vert () {\nmat2 proj = mat2(cc_matProj[0].xy, cc_matProj[1].xy);\nproj /= abs(proj[1].x + proj[1].y);\nvec2 position = proj * a_position.xy + offset.xy;\nv_uv = a_color.xy;\nif (a_color.z >= 0.0) {\nfloat n = getComponent(digits[int(a_color.z)], a_color.w);\nv_uv += vec2(offset.z * n, 0.0);\n}\nreturn vec4(position, 0.0, 1.0);\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nvarying vec2 v_uv;\nuniform sampler2D mainTexture;\nvec4 frag () {\nreturn CCFragOutput(texture2D(mainTexture, v_uv));\n}\nvoid main() { gl_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nattribute vec2 a_position;\nattribute vec2 a_texCoord;\nvarying vec2 v_uv;\nuniform vec4 u_buffer0;\nuniform vec4 u_buffer1;\nuniform mat4 u_projection;\nvec4 vert () {\nvec2 worldPos = a_position * u_buffer1.xy + u_buffer1.zw;\nvec2 clipSpace = worldPos / u_buffer0.xy * 2.0 - 1.0;\nvec4 screenPos = u_projection * vec4(clipSpace, 0.0, 1.0);\nv_uv = a_texCoord;\nreturn screenPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvarying vec2 v_uv;\nuniform float u_percent;\nuniform sampler2D mainTexture;\nvec4 frag () {\nvec4 color = texture2D(mainTexture, v_uv);\nfloat percent = clamp(u_percent, 0.0, 1.0);\ncolor.xyz *= percent;\nreturn color;\n}\nvoid main() { gl_FragColor = frag(); }"}]],glsl3:[[{vert:"\nprecision mediump float;\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n, mat4 viewInv\n) {\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n}\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nlayout(std140) uniform builtin {\nvec4 cc_size_rotation;\n};\nvec4 vs_main() {\nvec4 pos = vec4(a_position, 1);\npos = cc_matWorld * pos;\nvec2 vertOffset = a_texCoord.xy - 0.5;\ncomputeVertPos(pos, vertOffset, quaternionFromEuler(vec3(0., 0., cc_size_rotation.z)), vec3(cc_size_rotation.xy, 0.), cc_matViewInv);\npos = cc_matViewProj * pos;\nuv = a_texCoord.xy;\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nin vec3 a_position;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 frag () {\nvec4 o = vec4(1.0);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin highp vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\npos.z -= 0.000001;\nv_color = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec4 v_color;\nvec4 front() {\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(v_color);\n#else\nreturn v_color;\n#endif\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = front(); }"},{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin highp vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\npos.z -= 0.000001;\nv_color = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec4 v_color;\nvec4 back() {\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(vec4(v_color.rgb, v_color.a * 0.2));\n#else\nreturn vec4(v_color.rgb, v_color.a * 0.2);\n#endif\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = back(); }"},{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin highp vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nout float v_distance;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\npos.z -= 0.000001;\nv_color = a_color;\nv_distance = dot(a_position, vec3(1.0, 1.0, 1.0));\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec4 v_color;\nin float v_distance;\nvec4 front() {\nif (fract(v_distance) > 0.5) {\ndiscard;\n}\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(v_color);\n#else\nreturn v_color;\n#endif\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = front(); }"},{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin highp vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nout float v_distance;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\npos.z -= 0.000001;\nv_color = a_color;\nv_distance = dot(a_position, vec3(1.0, 1.0, 1.0));\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec4 v_color;\nin float v_distance;\nvec4 back() {\nif (fract(v_distance) > 0.5) {\ndiscard;\n}\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(vec4(v_color.rgb, v_color.a * 0.2));\n#else\nreturn vec4(v_color.rgb, v_color.a * 0.2);\n#endif\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = back(); }"},{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin highp vec3 a_position;\nin vec4 a_normal;\nin vec4 a_color;\nout vec4 v_color;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\nv_color = a_color;\nfloat intensity = dot(vec3(1, 2, 4), a_normal.xyz);\nv_color.rgb -= a_normal.w * intensity * 0.1;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec4 v_color;\nvec4 front() {\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(v_color);\n#else\nreturn v_color;\n#endif\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = front(); }"},{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin highp vec3 a_position;\nin vec4 a_normal;\nin vec4 a_color;\nout vec4 v_color;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\nv_color = a_color;\nfloat intensity = dot(vec3(1, 2, 4), a_normal.xyz);\nv_color.rgb -= a_normal.w * intensity * 0.1;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec4 v_color;\nvec4 back() {\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(vec4(v_color.rgb, v_color.a * 0.2));\n#else\nreturn vec4(v_color.rgb, v_color.a * 0.2);\n#endif\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = back(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin float a_dist;\nout float v_dist;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\npos = cc_matViewProj * cc_matWorld * pos;\nv_color = a_color;\nv_dist = a_dist;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nin vec4 v_color;\nin float v_dist;\nvec4 frag () {\nvec4 o = v_color;\nfloat aa = fwidth(v_dist);\nfloat alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\no.rgb *= o.a;\no *= alpha;\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCWorldBound {\nhighp vec4 cc_worldBoundCenter;\nhighp vec4 cc_worldBoundHalfExtents;\n};\nin vec3 a_position;\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition *= cc_worldBoundHalfExtents;\nposition += cc_worldBoundCenter;\nposition = cc_matViewProj * position;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 frag () {\nreturn vec4(1, 0, 0, 1);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nvec4 eulerToQuat(vec3 euler) {\nvec3 er = euler * 0.5;\nfloat x = er.x, y = er.y, z = er.z;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat;\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nlayout(std140) uniform SampleConstants {\nvec4 u_sampleInfo;\n};\nlayout(std140) uniform TickConstants {\nvec4 u_worldRot;\nvec4 u_timeDelta;\n};\nin vec4 a_position_starttime;\nin vec4 a_size_uv;\nin vec4 a_rotation_uv;\nin vec4 a_color;\nin vec4 a_dir_life;\nin float a_rndSeed;\n#if CC_RENDER_MODE == 4\nin vec3 a_texCoord;\nin vec3 a_texCoord3;\nin vec3 a_normal;\nin vec4 a_color1;\n#endif\nvec3 unpackCurveData (sampler2D tex, vec2 coord) {\nvec4 a = texture(tex, coord);\nvec4 b = texture(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nreturn mix(a.xyz, b.xyz, c);\n}\nvec3 unpackCurveData (sampler2D tex, vec2 coord, out float w) {\nvec4 a = texture(tex, coord);\nvec4 b = texture(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nw = mix(a.w, b.w, c);\nreturn mix(a.xyz, b.xyz, c);\n}\nfloat pseudoRandom(float x) {\n#if USE_VK_SHADER\nfloat o = x;\nx = mod(x - 1.0, 2.0) - 1.0;\nfloat freqVar = 10.16640753482;\nfloat y = sin(freqVar * floor(o * 0.5 - 0.5));\nfloat v = max(0.0, 1.0-abs(x));\nv *= 0.7071067812;\nv = y < 0.0 ? -v : v;\nreturn v;\n#else\nfloat seed = mod(x, 233280.);\nfloat q = (seed * 9301. + 49297.) / 233280.;\nreturn fract(q);\n#endif\n}\n#if COLOR_OVER_TIME_MODULE_ENABLE\nuniform sampler2D color_over_time_tex0;\nlayout(std140) uniform ColorConstant {\nint u_color_mode;\n};\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nuniform sampler2D rotation_over_time_tex0;\nlayout(std140) uniform RotationConstant {\nint u_rotation_mode;\n};\n#endif\n#if SIZE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D size_over_time_tex0;\nlayout(std140) uniform SizeConstant {\nint u_size_mode;\n};\n#endif\n#if FORCE_OVER_TIME_MODULE_ENABLE\nuniform sampler2D force_over_time_tex0;\nlayout(std140) uniform ForceConstant {\nint u_force_mode;\nint u_force_space;\n};\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nuniform sampler2D velocity_over_time_tex0;\nlayout(std140) uniform VelocityConstant {\nint u_velocity_mode;\nint u_velocity_space;\n};\n#endif\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nuniform sampler2D texture_animation_tex0;\nlayout(std140) uniform AnimationConstant {\nvec4 u_anim_info;\n};\n#endif\nfloat repeat (float t, float length) {\nreturn t - floor(t / length) * length;\n}\nvec4 rotateQuat (vec4 p, vec4 q) {\nvec3 iv = cross(q.xyz, p.xyz) + q.w * p.xyz;\nvec3 res = p.xyz + 2.0 * cross(q.xyz, iv);\nreturn vec4(res.xyz, p.w);\n}\nvec4 gpvs_main () {\nfloat activeTime = u_timeDelta.x - a_position_starttime.w;\nfloat normalizedTime = clamp(activeTime / a_dir_life.w, 0.0, 1.0);\nvec2 timeCoord0 = vec2(normalizedTime, 0.);\nvec2 timeCoord1 = vec2(normalizedTime, 1.);\n#if CC_RENDER_MODE == 4\nvec2 vertIdx = vec2(a_texCoord.x, a_texCoord.y);\n#else\nvec2 vertIdx = vec2(a_size_uv.w, a_rotation_uv.w);\n#endif\nvec4 velocity = vec4(a_dir_life.xyz, 0.);\nvec4 pos = vec4(a_position_starttime.xyz, 1.);\nvec3 size = a_size_uv.xyz;\n#if SIZE_OVER_TIME_MODULE_ENABLE\nif (u_size_mode == 1) {\nsize *= unpackCurveData(size_over_time_tex0, timeCoord0);\n} else {\nvec3 size_0 = unpackCurveData(size_over_time_tex0, timeCoord0);\nvec3 size_1 = unpackCurveData(size_over_time_tex0, timeCoord1);\nfloat factor_s = pseudoRandom(a_rndSeed + 39825.);\nsize *= mix(size_0, size_1, factor_s);\n}\n#endif\nvec3 compScale = scale.xyz * size;\n#if FORCE_OVER_TIME_MODULE_ENABLE\nvec3 forceAnim = vec3(0.);\nif (u_force_mode == 1) {\nforceAnim = unpackCurveData(force_over_time_tex0, timeCoord0);\n} else {\nvec3 force_0 = unpackCurveData(force_over_time_tex0, timeCoord0);\nvec3 force_1 = unpackCurveData(force_over_time_tex0, timeCoord1);\nfloat factor_f =  pseudoRandom(a_rndSeed + 212165.);\nforceAnim = mix(force_0, force_1, factor_f);\n}\nvec4 forceTrack = vec4(forceAnim, 0.);\nif (u_force_space == 0) {\nforceTrack = rotateQuat(forceTrack, u_worldRot);\n}\nvelocity.xyz += forceTrack.xyz;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nfloat speedModifier0 = 1.;\nfloat speedModifier1 = 1.;\nvec3 velocityAnim = vec3(0.);\nif (u_velocity_mode == 1) {\nvelocityAnim = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n} else {\nvec3 vectory_0 = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\nvec3 vectory_1 = unpackCurveData(velocity_over_time_tex0, timeCoord1, speedModifier1);\nfloat factor_v = pseudoRandom(a_rndSeed + 197866.);\nvelocityAnim = mix(vectory_0, vectory_1, factor_v);\nspeedModifier0 = mix(speedModifier0, speedModifier1, factor_v);\n}\nvec4 velocityTrack = vec4(velocityAnim, 0.);\nif (u_velocity_space == 0) {\nvelocityTrack = rotateQuat(velocityTrack, u_worldRot);\n}\nvelocity.xyz += velocityTrack.xyz;\nvelocity.xyz *= speedModifier0;\n#endif\npos.xyz += velocity.xyz * normalizedTime * a_dir_life.w;\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = rotateQuat(velocity, u_worldRot);\n#endif\n#endif\nvec3 startRotation = a_rotation_uv.xyz;\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = startRotation.xyz;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., startRotation.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(startRotation);\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nif (u_rotation_mode == 1) {\nvec3 euler = unpackCurveData(rotation_over_time_tex0, timeCoord0) * normalizedTime * a_dir_life.w;\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n} else {\nvec3 rotation_0 = unpackCurveData(rotation_over_time_tex0, timeCoord0);\nvec3 rotation_1 = unpackCurveData(rotation_over_time_tex0, timeCoord1);\nfloat factor_r = pseudoRandom(a_rndSeed + 125292.);\nvec3 euler = mix(rotation_0, rotation_1, factor_r) * normalizedTime * a_dir_life.w;\n#if CC_RENDER_MODE == 3 || CC_RENDER_MODE == 2\neuler = vec3(0.0, 0.0, euler.z);\n#endif\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n}\n#endif\n#if COLOR_OVER_TIME_MODULE_ENABLE\nif (u_color_mode == 1) {\ncolor = a_color * texture(color_over_time_tex0, timeCoord0);\n} else {\nvec4 color_0 = texture(color_over_time_tex0, timeCoord0);\nvec4 color_1 = texture(color_over_time_tex0, timeCoord1);\nfloat factor_c = pseudoRandom(a_rndSeed + 91041.);\ncolor = a_color * mix(color_0, color_1, factor_c);\n}\n#else\ncolor = a_color;\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((vertIdx - 0.5));\n#if CC_RENDER_MODE == 1\nrot = vec4(0.0, 0.0, 0.0, 1.0);\n#endif\ncomputeVertPos(pos, cornerOffset, rot, compScale\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, cc_matViewInv\n#endif\n#if CC_RENDER_MODE == 1\n, cc_cameraPos.xyz\n, velocity\n, frameTile_velLenScale.z\n, frameTile_velLenScale.w\n, a_size_uv.w\n#endif\n);\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor *= a_color1;\n#endif\npos = cc_matViewProj * pos;\nfloat frameIndex = 0.;\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nfloat startFrame = 0.;\nvec3 frameInfo = vec3(0.);\nif (int(u_anim_info.x) == 1) {\nframeInfo = unpackCurveData(texture_animation_tex0, timeCoord0);\n} else {\nvec3 frameInfo0 = unpackCurveData(texture_animation_tex0, timeCoord0);\nvec3 frameInfo1 = unpackCurveData(texture_animation_tex0, timeCoord1);\nfloat factor_t = pseudoRandom(a_rndSeed + 90794.);\nframeInfo = mix(frameInfo0, frameInfo1, factor_t);\n}\nstartFrame = frameInfo.x / u_anim_info.y;\nframeIndex = repeat(u_anim_info.z * (frameInfo.y + startFrame), 1.);\n#endif\nuv = computeUV(frameIndex, vertIdx, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\nreturn pos;\n}\nvoid main() { gl_Position = gpvs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nin vec3 a_position;\nin vec4 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\nout vec3 vBarycentric;\n#endif\nvec4 vs_main() {\nhighp vec4 pos = vec4(a_position, 1);\nvec4 velocity = vec4(a_texCoord1.xyz, 0);\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\nvelocity = cc_matWorld * velocity;\n#endif\nfloat vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\nvec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\npos.xyz += camUp * vertOffset;\npos = cc_matViewProj * pos;\nuv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\ncolor = a_color;\n#if CC_DRAW_WIRE_FRAME\nvBarycentric = a_texCoord2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\n#if CC_DRAW_WIRE_FRAME\nin vec3 vBarycentric;\n#endif\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\nif (any(lessThan(vBarycentric, vec3(0.02)))) {\ncol = vec4(0., 1., 1., 1.);\n}\n#endif\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nlayout(std140) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nin vec3 a_position;\nin vec3 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_RENDER_MODE == 1\nin vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\nin vec3 a_texCoord3;\nin vec3 a_normal;\nin vec4 a_color1;\n#endif\nvec4 lpvs_main () {\nvec3 compScale = scale.xyz * a_texCoord1;\nvec4 pos = vec4(a_position, 1);\n#if CC_RENDER_MODE == 1\nvec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = cc_matWorld * velocity;\n#endif\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nvec3 rotTmp = a_texCoord2;\nfloat mulFactor = 1.0;\nif (rotTmp.x > 10.0 * 0.5) {\nrotTmp.x -= 10.0;\nmulFactor = -1.0;\n}\nvec4 rot = vec4(rotTmp, 0.0);\nrot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n#else\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = a_texCoord2;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(a_texCoord2);\n#endif\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n#elif CC_RENDER_MODE == 1\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n#elif 2\ncomputeVertPos(pos, cornerOffset, rot, compScale);\n#endif\ncolor = a_color;\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor = a_color * a_color1;\n#endif\nuv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\npos = cc_matViewProj * pos;\nreturn pos;\n}\nvoid main() { gl_Position = lpvs_main(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 v_light;\nout vec2 uv0;\n#if TWO_COLORED\nin vec4 a_color2;\nout vec4 v_dark;\n#endif\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\npos = cc_matViewProj * pos;\nuv0 = a_texCoord;\nv_light = a_color;\n#if TWO_COLORED\nv_dark = a_color2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\n#if USE_ALPHA_TEST\nlayout(std140) uniform ALPHA_TEST_DATA {\nfloat alphaThreshold;\n};\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nin vec4 v_light;\n#if TWO_COLORED\nin vec4 v_dark;\n#endif\nin vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if TWO_COLORED\nvec4 texColor = vec4(1, 1, 1, 1);\ntexColor *= texture(cc_spriteTexture, uv0);\no.a = texColor.a * v_light.a;\no.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n#else\no *= texture(cc_spriteTexture, uv0);\no *= v_light;\n#endif\nALPHA_TEST(o);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\n#endif\n#if SAMPLE_FROM_RT\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nuv0 = a_texCoord;\n#if SAMPLE_FROM_RT\nuv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n#endif\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\nlayout(std140) uniform ALPHA_TEST_DATA {\nfloat alphaThreshold;\n};\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nin vec4 color;\n#if USE_TEXTURE\nin vec2 uv0;\nuniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if USE_TEXTURE\no *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n#if IS_GRAY\nfloat gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\no.r = o.g = o.b = gray;\n#endif\n#endif\no *= color;\nALPHA_TEST(o);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nin highp vec4 a_jointAnimInfo;\n#endif\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nin vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if !USE_INSTANCING\n#if USE_BATCHING\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\n#endif\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\n}\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nout float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\n#if CC_RECEIVE_SHADOW\nvec2 CCGetShadowBias()\n{\n#if USE_INSTANCING\nreturn vec2(a_localShadowBias.x + cc_shadowWHPBInfo.w, a_localShadowBias.y + cc_shadowLPNNInfo.z);\n#elif !USE_BATCHING\nreturn vec2(cc_localShadowBias.x + cc_shadowWHPBInfo.w, cc_localShadowBias.y + cc_shadowLPNNInfo.z);\n#else\nreturn vec2(cc_shadowWHPBInfo.w, cc_shadowLPNNInfo.z);\n#endif\n}\n#endif\n#if USE_VERTEX_COLOR\nin vec4 a_color;\nout lowp vec4 v_color;\n#endif\nout vec3 v_position;\nout mediump vec3 v_normal;\nout vec2 v_uv;\n#if HAS_SECOND_UV\nout mediump vec2 v_uv1;\n#endif\n#if CC_RECEIVE_SHADOW\nout mediump vec2 v_shadowBias;\n#endif\n#if USE_NORMAL_MAP\nout mediump vec4 v_tangent;\n#endif\n#if HAS_SECOND_UV || CC_USE_LIGHTMAP\nin vec2 a_texCoord1;\n#endif\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nout vec3 v_luv;\nvoid CCLightingMapCaclUV()\n{\n#if !USE_INSTANCING\nv_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.z;\nv_luv.z = cc_lightingMapUVParam.w;\n#else\nv_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.z;\nv_luv.z = a_lightingMapUVParam.w;\n#endif\n}\n#endif\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nmat4 matWorld, matWorldIT;\nCCGetWorldMatrixFull(matWorld, matWorldIT);\nvec4 pos = matWorld * In.position;\nv_position = pos.xyz;\nv_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n#if CC_RECEIVE_SHADOW\nv_shadowBias = CCGetShadowBias();\n#endif\n#if USE_TWOSIDE\nvec3 viewDirect = normalize(cc_cameraPos.xyz - v_position);\nv_normal *= dot(v_normal, viewDirect) < 0.0 ? -1.0 : 1.0;\n#endif\n#if USE_NORMAL_MAP\nv_tangent.xyz = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\nv_tangent.w = In.tangent.w;\n#endif\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(pos);\nv_shadowPos = cc_matLightViewProj * pos;\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nCCLightingMapCaclUV();\n#endif\ngl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nin float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\nhighp float divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\nhighp vec2 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\nhighp vec3 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\nhighp vec4 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias)\n{\nvec4 newShadowPos = shadowPos;\nif(normalBias > EPSILON_LOWP)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > EPSILON) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCSpotShadowFactorBase(vec4 shadowPos, vec3 worldPos, vec2 shadowBias)\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nreturn CCGetSpotLightShadowFactorSoft2X(shadowPos, worldPos, shadowBias.x);\n}else if (pcf > 0.9) {\nreturn CCGetSpotLightShadowFactorSoft(shadowPos, worldPos, shadowBias.x);\n}else {\nreturn CCGetSpotLightShadowFactorHard(shadowPos, worldPos, shadowBias.x);\n}\n}\nfloat CCShadowFactorBase(vec4 shadowPos, vec3 N, vec2 shadowBias)\n{\nfloat realtimeShadow = 1.0;\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N, shadowBias.y);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nrealtimeShadow =  CCGetShadowFactorSoft2X(pos, shadowBias.x);\n}else if (pcf > 0.9) {\nrealtimeShadow = CCGetShadowFactorSoft(pos, shadowBias.x);\n}else {\nrealtimeShadow = CCGetShadowFactorHard(pos, shadowBias.x);\n}\nreturn mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\nfloat specularIntensity;\n#if CC_RECEIVE_SHADOW\nvec2 shadowBias;\n#endif\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.08 * s.specularIntensity), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse / PI;\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\nshadow = CCShadowFactorBase(shadowPos, N, s.shadowBias);\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > EPSILON_LOWP) {\nfinalColor = diffuse * s.lightmap.rgb * shadow;\n}\n#endif\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nin highp vec4 v_shadowPos;\n#if CC_RECEIVE_SHADOW\n#endif\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nin vec3 v_luv;\nuniform sampler2D cc_lightingMap;\n#endif\nin vec3 v_position;\nin vec2 v_uv;\n#if HAS_SECOND_UV\nin mediump vec2 v_uv1;\n#endif\nin mediump vec3 v_normal;\n#if CC_RECEIVE_SHADOW\nin mediump vec2 v_shadowBias;\n#endif\n#if USE_VERTEX_COLOR\nin lowp vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\nin mediump vec4 v_tangent;\nuniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\nuniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nuniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\nuniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\nuniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\nvec4 baseColor = albedo;\n#if USE_VERTEX_COLOR\nbaseColor.rgb *= SRGBToLinear(v_color.rgb);\nbaseColor.a *= v_color.a;\n#endif\n#if USE_ALBEDO_MAP\nvec4 texColor = texture(albedoMap, ALBEDO_UV);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\nbaseColor *= texColor;\n#endif\ns.albedo = baseColor;\ns.albedo.rgb *= albedoScaleAndCutoff.xyz;\n#if USE_ALPHA_TEST\nif (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture(cc_lightingMap, v_luv.xy);\ns.lightmap = lightColor.xyz * v_luv.z;\ns.lightmap_test = v_luv.z;\n#endif\ns.normal = v_normal;\n#if CC_RECEIVE_SHADOW\ns.shadowBias = v_shadowBias;\n#endif\n#if USE_NORMAL_MAP\nvec3 nmmp = texture(normalMap, NORMAL_UV).xyz - vec3(0.5);\nvec3 bitangent = cross(v_normal, v_tangent.xyz) * v_tangent.w;\ns.normal =\n(nmmp.x * emissiveScaleParam.w) * normalize(v_tangent.xyz) +\n(nmmp.y * emissiveScaleParam.w) * normalize(bitangent) +\nnmmp.z * normalize(s.normal);\n#endif\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\npackHighpData(s.position, s.position_fract_part, v_position);\n#else\ns.position = v_position;\n#endif\nvec4 pbr = pbrParams;\n#if USE_PBR_MAP\nvec4 res = texture(pbrMap, PBR_UV);\npbr.x *= res.r;\npbr.y *= res.g;\npbr.z *= res.b;\npbr.w *= res.a;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nvec4 metallicRoughness = texture(metallicRoughnessMap, PBR_UV);\npbr.z *= metallicRoughness.b;\npbr.y *= metallicRoughness.g;\n#endif\n#if USE_OCCLUSION_MAP\npbr.x *= texture(occlusionMap, PBR_UV).r;\n#endif\ns.occlusion = pbr.x;\ns.roughness = pbr.y;\ns.specularIntensity = 0.5;\ns.metallic = pbr.z;\ns.emissive = emissive.rgb * emissiveScaleParam.xyz;\n#if USE_EMISSIVE_MAP\ns.emissive *= SRGBToLinear(texture(emissiveMap, EMISSIVE_UV).rgb);\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n#define LIGHTS_PER_PASS 1\n#else\n#define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = litRadiusSqr / max(litRadiusSqr, distSqr);\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(std430, binding = 4) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(std430, binding = 5) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(std430, binding = 6) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = PI * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\nfragColorX = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec2 float32x3_to_oct(in vec3 v) {\nvec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\nreturn (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n}\nlayout(location = 0) out vec4 fragColor0;\nlayout(location = 1) out vec4 fragColor1;\nlayout(location = 2) out vec4 fragColor2;\nvoid main () {\nStandardSurface s; surf(s);\nfragColor0 = s.albedo;\nfragColor1 = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\nfragColor2 = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nin highp vec4 a_jointAnimInfo;\n#endif\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nin vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\n#if !USE_INSTANCING\n#if USE_BATCHING\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\n#endif\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\n}\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\n#if HAS_SECOND_UV || CC_USE_LIGHTMAP\nin vec2 a_texCoord1;\n#endif\nout vec2 v_uv;\n#if HAS_SECOND_UV\nout vec2 v_uv1;\n#endif\nout vec4 v_worldPos;\nout float v_clip_depth;\nvec4 vert () {\nStandardVertInput In;\nCCVertInput(In);\nmat4 matWorld, matWorldIT;\nCCGetWorldMatrixFull(matWorld, matWorldIT);\nv_worldPos = matWorld * In.position;\nvec4 clipPos = cc_matLightViewProj * v_worldPos;\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#endif\nv_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(std140) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\nin vec2 v_uv;\n#if HAS_SECOND_UV\nin vec2 v_uv1;\n#endif\nin vec4 v_worldPos;\nin float v_clip_depth;\n#if USE_ALBEDO_MAP\nuniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\nvec4 baseColor = albedo;\n#if USE_ALBEDO_MAP\nbaseColor *= texture(albedoMap, ALBEDO_UV);\n#endif\n#if USE_ALPHA_TEST\nif (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\nif(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\nif (cc_shadowNFLSInfo.z > 0.000001) {\nreturn vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n}\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nreturn packDepthToRGBA(v_clip_depth);\n}\nreturn vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nout float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\n#endif\n#if CC_RECEIVE_SHADOW\n#endif\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\n#if CC_RECEIVE_SHADOW\nout vec2 v_shadowBias;\n#endif\nout highp vec3 v_position;\nout mediump vec3 v_normal;\nout mediump vec2 uvw;\nout mediump vec2 uv0;\nout mediump vec2 uv1;\nout mediump vec2 uv2;\nout mediump vec2 uv3;\nout mediump vec3 luv;\nout mediump vec3 diffuse;\nlayout(std140) uniform TexCoords {\nvec4 UVScale;\nvec4 lightMapUVParam;\n};\nvoid main () {\nvec3 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nvec4 pos = vec4(worldPos, 1.0);\npos = cc_matViewProj * pos;\nuvw = a_texCoord;\nuv0 = a_position.xz * UVScale.x;\nuv1 = a_position.xz * UVScale.y;\nuv2 = a_position.xz * UVScale.z;\nuv3 = a_position.xz * UVScale.w;\n#if CC_USE_LIGHTMAP\nluv.xy = lightMapUVParam.xy + a_texCoord * lightMapUVParam.z;\nluv.z = lightMapUVParam.w;\n#endif\nv_position = worldPos;\nv_normal = a_normal;\nCC_TRANSFER_FOG(vec4(worldPos, 1.0));\n#if CC_RECEIVE_SHADOW\nv_shadowBias = vec2(0.0, 0.0);\n#endif\nv_shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\ngl_Position = pos;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\nhighp float divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\nhighp vec2 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\nhighp vec3 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\nhighp vec4 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias)\n{\nvec4 newShadowPos = shadowPos;\nif(normalBias > EPSILON_LOWP)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > EPSILON) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCSpotShadowFactorBase(vec4 shadowPos, vec3 worldPos, vec2 shadowBias)\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nreturn CCGetSpotLightShadowFactorSoft2X(shadowPos, worldPos, shadowBias.x);\n}else if (pcf > 0.9) {\nreturn CCGetSpotLightShadowFactorSoft(shadowPos, worldPos, shadowBias.x);\n}else {\nreturn CCGetSpotLightShadowFactorHard(shadowPos, worldPos, shadowBias.x);\n}\n}\nfloat CCShadowFactorBase(vec4 shadowPos, vec3 N, vec2 shadowBias)\n{\nfloat realtimeShadow = 1.0;\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N, shadowBias.y);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nrealtimeShadow =  CCGetShadowFactorSoft2X(pos, shadowBias.x);\n}else if (pcf > 0.9) {\nrealtimeShadow = CCGetShadowFactorSoft(pos, shadowBias.x);\n}else {\nrealtimeShadow = CCGetShadowFactorHard(pos, shadowBias.x);\n}\nreturn mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\nfloat specularIntensity;\n#if CC_RECEIVE_SHADOW\nvec2 shadowBias;\n#endif\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.08 * s.specularIntensity), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse / PI;\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\nshadow = CCShadowFactorBase(shadowPos, N, s.shadowBias);\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > EPSILON_LOWP) {\nfinalColor = diffuse * s.lightmap.rgb * shadow;\n}\n#endif\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nin float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\nin highp vec4 v_shadowPos;\n#if CC_RECEIVE_SHADOW\n#endif\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nin vec3 v_luv;\nuniform sampler2D cc_lightingMap;\n#endif\nin highp vec3 v_position;\nin mediump vec3 v_normal;\n#if CC_RECEIVE_SHADOW\nin vec2 v_shadowBias;\n#endif\nin mediump vec2 uvw;\nin mediump vec2 uv0;\nin mediump vec2 uv1;\nin mediump vec2 uv2;\nin mediump vec2 uv3;\nin mediump vec3 diffuse;\nin mediump vec3 luv;\nlayout(std140) uniform PbrParams {\nvec4 metallic;\nvec4 roughness;\n};\nuniform sampler2D weightMap;\nuniform sampler2D detailMap0;\nuniform sampler2D detailMap1;\nuniform sampler2D detailMap2;\nuniform sampler2D detailMap3;\nuniform sampler2D normalMap0;\nuniform sampler2D normalMap1;\nuniform sampler2D normalMap2;\nuniform sampler2D normalMap3;\nuniform sampler2D lightMap;\nvoid surf (out StandardSurface s) {\n#if LAYERS > 1\nvec4 w = texture(weightMap, uvw);\n#endif\nvec4 baseColor = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseColor = texture(detailMap0, uv0);\n#elif LAYERS == 2\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\nbaseColor += texture(detailMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\nbaseColor += texture(detailMap2, uv2) * w.b;\nbaseColor += texture(detailMap3, uv3) * w.a;\n#else\nbaseColor = texture(detailMap0, uv0);\n#endif\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\npackHighpData(s.position, s.position_fract_part, v_position);\n#else\ns.position = v_position;\n#endif\n#if USE_NORMALMAP\nvec4 baseNormal = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseNormal = texture(normalMap0, uv0);\n#elif LAYERS == 2\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\nbaseNormal += texture(normalMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\nbaseNormal += texture(normalMap2, uv2) * w.b;\nbaseNormal += texture(normalMap3, uv3) * w.a;\n#else\nbaseNormal = texture(normalMap0, uv0);\n#endif\nvec3 tangent = vec3(1.0, 0.0, 0.0);\nvec3 binormal = vec3(0.0, 0.0, 1.0);\nbinormal = cross(tangent, v_normal);\ntangent = cross(v_normal, binormal);\nvec3 nmmp = baseNormal.xyz - vec3(0.5);\ns.normal =\nnmmp.x * normalize(tangent) +\nnmmp.y * normalize(binormal) +\nnmmp.z * normalize(v_normal);\n#else\ns.normal = v_normal;\n#endif\n#if CC_RECEIVE_SHADOW\ns.shadowBias = v_shadowBias;\n#endif\ns.albedo = vec4(SRGBToLinear(baseColor.rgb), 1.0);\ns.occlusion = 1.0;\n#if USE_PBR\ns.roughness = 0.0;\n#if LAYERS == 1\ns.roughness = roughness.x;\n#elif LAYERS == 2\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\n#elif LAYERS == 3\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\n#elif LAYERS == 4\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\ns.roughness += roughness.w * w.a;\n#else\ns.roughness = 1.0;\n#endif\ns.specularIntensity = 0.5;\ns.metallic = 0.0;\n#if LAYERS == 1\ns.specularIntensity = 0.5;\ns.metallic = metallic.x;\n#elif LAYERS == 2\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\n#elif LAYERS == 3\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\n#elif LAYERS == 4\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\ns.metallic += metallic.w * w.a;\n#else\ns.specularIntensity = 0.5;\ns.metallic = 0.0;\n#endif\n#else\ns.roughness = 1.0;\ns.specularIntensity = 0.5;\ns.metallic = 0.0;\n#endif\ns.emissive = vec3(0.0, 0.0, 0.0);\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture(lightMap, luv.xy);\ns.lightmap = lightColor.xyz * luv.z;\ns.lightmap_test = luv.z;\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n#define LIGHTS_PER_PASS 1\n#else\n#define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = litRadiusSqr / max(litRadiusSqr, distSqr);\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(std430, binding = 4) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(std430, binding = 5) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(std430, binding = 6) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = PI * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\nfragColorX = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec2 float32x3_to_oct(in vec3 v) {\nvec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\nreturn (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n}\nlayout(location = 0) out vec4 fragColor0;\nlayout(location = 1) out vec4 fragColor1;\nlayout(location = 2) out vec4 fragColor2;\nvoid main () {\nStandardSurface s; surf(s);\nfragColor0 = s.albedo;\nfragColor1 = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\nfragColor2 = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nout vec2 v_clip_depth;\nvec4 vert () {\nvec4 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nworldPos.w = 1.0;\nvec4 clipPos = cc_matLightViewProj * worldPos;\nv_clip_depth = clipPos.zw;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nin vec2 v_clip_depth;\nvec4 frag () {\nreturn packDepthToRGBA(v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nin highp vec4 a_jointAnimInfo;\n#endif\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nin vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout vec4 In)\n{\nIn = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\n}\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if !USE_INSTANCING\n#if USE_BATCHING\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\n#endif\n#endif\nvoid CCGetWorldMatrix(out mat4 matWorld)\n{\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nout float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\n#if USE_VERTEX_COLOR\nin lowp vec4 a_color;\nout lowp vec4 v_color;\n#endif\n#if USE_TEXTURE\nout vec2 v_uv;\nlayout(std140) uniform TexCoords {\nvec4 tilingOffset;\n};\n#endif\nvec4 vert () {\nvec4 position;\nCCVertInput(position);\nmat4 matWorld;\nCCGetWorldMatrix(matWorld);\n#if USE_TEXTURE\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(matWorld * position);\nreturn cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nin float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\n#if USE_ALPHA_TEST\n#endif\n#if USE_TEXTURE\nin vec2 v_uv;\nuniform sampler2D mainTexture;\n#endif\nlayout(std140) uniform Constant {\nvec4 mainColor;\nvec4 colorScaleAndCutoff;\n};\n#if USE_VERTEX_COLOR\nin lowp vec4 v_color;\n#endif\nvec4 frag () {\nvec4 o = mainColor;\no.rgb *= colorScaleAndCutoff.xyz;\n#if USE_VERTEX_COLOR\no.rgb *= SRGBToLinear(v_color.rgb);\no.a *= v_color.a;\n#endif\n#if USE_TEXTURE\nvec4 texColor = texture(mainTexture, v_uv);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\no *= texColor;\n#endif\n#if USE_ALPHA_TEST\nif (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n#endif\nCC_APPLY_FOG(o);\nreturn CCFragOutput(o);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nin highp vec4 a_jointAnimInfo;\n#endif\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nin vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nin vec2 v_uv;\nlayout(std140) uniform BloomUBO {\nmediump vec4 texSize;\n};\nuniform sampler2D outputResultMap;\nlayout(location = 0) out vec4 fragColor;\nfloat luminance(vec3 color) {\nreturn dot(color, vec3(0.2126, 0.7152, 0.0722));\n}\nvoid main() {\nvec3 color = texture(outputResultMap, v_uv).xyz;\nif (luminance(SRGBToLinear(color)) > texSize.z) {\nfragColor = vec4(color, 1.0);\n} else {\nfragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n}"},{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nin highp vec4 a_jointAnimInfo;\n#endif\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nin vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin vec2 v_uv;\nlayout(std140) uniform BloomUBO {\nmediump vec4 texSize;\n};\nuniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvec3 downsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main()\n{\nvec3 result = downsample4taps(v_uv, 1.0 / texSize.xy).rgb;\nfragColor = vec4(result, 1.0);\n}"},{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nin highp vec4 a_jointAnimInfo;\n#endif\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nin vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin vec2 v_uv;\nlayout(std140) uniform BloomUBO {\nmediump vec4 texSize;\n};\nuniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvec3 upsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main() {\nvec3 result = upsample4taps(v_uv, 0.5 / texSize.xy).rgb;\nfragColor = vec4(result, 1.0);\n}"},{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nin highp vec4 a_jointAnimInfo;\n#endif\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nin vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin vec2 v_uv;\nlayout(std140) uniform BloomUBO {\nmediump vec4 texSize;\n};\nuniform sampler2D outputResultMap;\nuniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvoid main() {\nvec4 hdrColor = texture(outputResultMap, v_uv);\nvec3 bloomColor = texture(bloomTexture, v_uv).rgb;\nvec3 result = hdrColor.rgb + bloomColor * texSize.w * hdrColor.a;\nfragColor = vec4(result, hdrColor.a);\n}"}],[{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nin highp vec4 a_jointAnimInfo;\n#endif\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nin vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nin float a_vertexId;\n#endif\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition.xy = cc_cameraPos.w == 0.0 ? vec2(position.xy.x, -position.xy.y) : position.xy;\ngl_Position = vec4(position.x, position.y, 1.0, 1.0);\nv_uv = a_texCoord;\n}",frag:"\n#ifdef GL_EXT_shader_framebuffer_fetch\n#extension GL_EXT_shader_framebuffer_fetch: enable\n#endif\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nuniform highp sampler2D cc_shadowMap;\nuniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias)\n{\nvec4 newShadowPos = shadowPos;\nif(normalBias > EPSILON_LOWP)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > EPSILON) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCSpotShadowFactorBase(vec4 shadowPos, vec3 worldPos, vec2 shadowBias)\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nreturn CCGetSpotLightShadowFactorSoft2X(shadowPos, worldPos, shadowBias.x);\n}else if (pcf > 0.9) {\nreturn CCGetSpotLightShadowFactorSoft(shadowPos, worldPos, shadowBias.x);\n}else {\nreturn CCGetSpotLightShadowFactorHard(shadowPos, worldPos, shadowBias.x);\n}\n}\nfloat CCShadowFactorBase(vec4 shadowPos, vec3 N, vec2 shadowBias)\n{\nfloat realtimeShadow = 1.0;\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N, shadowBias.y);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nrealtimeShadow =  CCGetShadowFactorSoft2X(pos, shadowBias.x);\n}else if (pcf > 0.9) {\nrealtimeShadow = CCGetShadowFactorSoft(pos, shadowBias.x);\n}else {\nrealtimeShadow = CCGetShadowFactorHard(pos, shadowBias.x);\n}\nreturn mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n}\n#endif\n#if CC_USE_IBL\nuniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nuniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\nfloat specularIntensity;\n#if CC_RECEIVE_SHADOW\nvec2 shadowBias;\n#endif\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.08 * s.specularIntensity), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse / PI;\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\nshadow = CCShadowFactorBase(shadowPos, N, s.shadowBias);\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > EPSILON_LOWP) {\nfinalColor = diffuse * s.lightmap.rgb * shadow;\n}\n#endif\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\n#if CC_PIPELINE_TYPE == 0\n#define LIGHTS_PER_PASS 1\n#else\n#define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(std140) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = litRadiusSqr / max(litRadiusSqr, distSqr);\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(std430, binding = 4) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(std430, binding = 5) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(std430, binding = 6) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = PI * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec3 oct_to_float32x3(vec2 e) {\nvec3 v = vec3(e.xy, 1.0 - abs(e.x) - abs(e.y));\nif (v.z < 0.0) v.xy = (1.0 - abs(v.yx)) * signNotZero(v.xy);\nreturn normalize(v);\n}\nvec4 screen2WS(vec3 coord) {\nvec3 ndc = vec3(\n2.0 * (coord.x - cc_viewPort.x) / cc_viewPort.z - 1.0,\n2.0 * (coord.y - cc_viewPort.y) / cc_viewPort.w - 1.0,\n2.0 * coord.z - 1.0);\nvec4 world = ((cc_matViewProjInv) * (vec4(ndc, 1.0)));\nworld      = world / world.w;\nreturn world;\n}\nin vec2 v_uv;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nlayout(location = 0) inout vec4 gbuffer_albedoMap;\nlayout(location = 1) inout vec4 gbuffer_normalMap;\nlayout(location = 2) inout vec4 gbuffer_emissiveMap;\nuniform sampler2D depth_stencil;\n#else\nuniform sampler2D gbuffer_albedoMap;\nuniform sampler2D gbuffer_normalMap;\nuniform sampler2D gbuffer_emissiveMap;\nuniform sampler2D depth_stencil;\n#endif\n#if !CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT || __VERSION__ >= 450\nlayout(location = 0) out vec4 fragColor;\n#endif\nvoid main () {\nStandardSurface s;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nvec4 albedoMap = gbuffer_albedoMap;\nvec4 normalMap = gbuffer_normalMap;\nvec4 emissiveMap = gbuffer_emissiveMap;\nfloat depth = texture(depth_stencil, v_uv).x;\n#else\nvec4 albedoMap = texture(gbuffer_albedoMap,v_uv);\nvec4 normalMap = texture(gbuffer_normalMap,v_uv);\nvec4 emissiveMap = texture(gbuffer_emissiveMap,v_uv);\nfloat depth = texture(depth_stencil, v_uv).x;\n#endif\ns.albedo = albedoMap;\nvec3 position = screen2WS(vec3(gl_FragCoord.xy, depth)).xyz;\ns.position = position;\ns.roughness = normalMap.z;\ns.normal = oct_to_float32x3(normalMap.xy);\ns.specularIntensity = 0.5;\ns.metallic = normalMap.w;\ns.emissive = emissiveMap.xyz;\ns.occlusion = emissiveMap.w;\nfloat fogFactor;\nCC_TRANSFER_FOG_BASE(vec4(position, 1), fogFactor);\nvec4 shadowPos;\nshadowPos = cc_matLightViewProj * vec4(position, 1);\nvec4 color = CCStandardShadingBase(s, shadowPos) +\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nCCClusterShadingAdditive(s, shadowPos);\n#else\nCCStandardShadingAdditive(s, shadowPos);\n#endif\nCC_APPLY_FOG_BASE(color, fogFactor);\ncolor = CCFragOutput(color);\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\ngbuffer_emissiveMap = color;\n#else\nfragColor = color;\n#endif\n}"}],[{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nin highp vec4 a_jointAnimInfo;\n#endif\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nin vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout vec4 In)\n{\nIn = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\n}\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if !USE_INSTANCING\n#if USE_BATCHING\nlayout(std140) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(std140) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\n#endif\n#endif\nvoid CCGetWorldMatrix(out mat4 matWorld)\n{\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n}\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nout float v_dist;\nvec4 vert () {\nvec4 position;\nCCVertInput(position);\nmat4 matWorld;\nCCGetWorldMatrix(matWorld);\nvec3 P = (matWorld * position).xyz;\nvec3 L = cc_mainLitDir.xyz;\nvec3 N = cc_planarNDInfo.xyz;\nfloat d = cc_planarNDInfo.w + 0.001;\nfloat dist = (-d - dot(P, N)) / (dot(L, N) + 0.0001);\nvec3 shadowPos = P + L * dist;\nvec3 view = normalize(cc_cameraPos.xyz - shadowPos);\nfloat viewLength = length(cc_cameraPos.xyz - shadowPos);\nshadowPos += view * min(1.0, 0.005 * viewLength);\nposition = cc_matProj * cc_matView * vec4(shadowPos, 1.0);\nv_dist = dist;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin float v_dist;\nvec4 frag () {\nif(v_dist < 0.0)\ndiscard;\nreturn CCFragOutput(cc_shadowColor);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nin highp vec4 a_jointAnimInfo;\n#endif\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nin vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nin float a_vertexId;\nint getVertexId() {\nreturn int(a_vertexId);\n}\n#endif\n#if CC_USE_MORPH\nlayout(std140) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nuniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nuniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nuniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(std140) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(std140) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nuniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(std140) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nout vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if ANTIALIAS_TYPE == 1\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\nvec2 v_rgbNW, vec2 v_rgbNE,\nvec2 v_rgbSW, vec2 v_rgbSE,\nvec2 v_rgbM) {\nvec4 color;\nmediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\nvec3 rgbNW = texture(tex, v_rgbNW).xyz;\nvec3 rgbNE = texture(tex, v_rgbNE).xyz;\nvec3 rgbSW = texture(tex, v_rgbSW).xyz;\nvec3 rgbSE = texture(tex, v_rgbSE).xyz;\nvec4 texColor = texture(tex, v_rgbM);\nvec3 rgbM  = texColor.xyz;\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat lumaNW = dot(rgbNW, luma);\nfloat lumaNE = dot(rgbNE, luma);\nfloat lumaSW = dot(rgbSW, luma);\nfloat lumaSE = dot(rgbSE, luma);\nfloat lumaM  = dot(rgbM,  luma);\nfloat lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\nfloat lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\nmediump vec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n(0.25 * (1.0 / 8.0)), (1.0/ 128.0));\nfloat rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\ndir = min(vec2(8.0, 8.0),\nmax(vec2(-8.0, -8.0),\ndir * rcpDirMin)) * inverseVP;\nvec3 rgbA = 0.5 * (\ntexture(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\ntexture(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture(tex, fragCoord * inverseVP + dir * -0.5).xyz +\ntexture(tex, fragCoord * inverseVP + dir * 0.5).xyz);\nfloat lumaB = dot(rgbB, luma);\nif ((lumaB < lumaMin) || (lumaB > lumaMax))\ncolor = vec4(rgbA, texColor.a);\nelse\ncolor = vec4(rgbB, texColor.a);\nreturn color;\n}\n#endif\nin vec2 v_uv;\nuniform sampler2D outputResultMap;\nlayout(location = 0) out vec4 fragColor;\nvoid texcoords(vec2 fragCoord, vec2 resolution,\nout vec2 v_rgbNW, out vec2 v_rgbNE,\nout vec2 v_rgbSW, out vec2 v_rgbSE,\nout vec2 v_rgbM) {\nvec2 inverseVP = 1.0 / resolution.xy;\nv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\nv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\nv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\nv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\nv_rgbM = vec2(fragCoord * inverseVP);\n}\nvoid main () {\nmediump vec2 v_rgbNW;\nmediump vec2 v_rgbNE;\nmediump vec2 v_rgbSW;\nmediump vec2 v_rgbSE;\nmediump vec2 v_rgbM;\n#if ANTIALIAS_TYPE == 1\nvec2 resolution = cc_screenSize.xy;\nvec2 fragCoord = v_uv * resolution;\ntexcoords(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\nfragColor = fxaa(outputResultMap, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n#else\nfragColor = texture(outputResultMap, v_uv);\n#endif\n}"}],[{vert:"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\nin vec4 a_joints;\nin vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nin highp vec4 a_jointAnimInfo;\n#endif\nin vec4 a_matWorld0;\nin vec4 a_matWorld1;\nin vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nin vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nin vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nin float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nin float a_vertexId;\n#endif\nout mediump vec4 viewDir;\nvec4 vert () {\nviewDir = vec4(a_position, 1.0);\nmat4 matViewRotOnly = mat4(mat3(cc_matView));\nvec4 pos = matViewRotOnly * viewDir;\nif (cc_matProj[3].w > 0.0) {\nmat4 matProj = cc_matProj;\nmatProj[0].x = 5.2;\nmatProj[1].y = 2.6;\nmatProj[2].zw = vec2(-1.0);\nmatProj[3].zw = vec2(0.0);\npos = matProj * pos;\n} else {\npos = cc_matProj * pos;\n}\npos.z = 0.99999 * pos.w;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nuniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nin mediump vec4 viewDir;\nvec4 frag () {\n#if USE_RGBE_CUBEMAP\nvec3 c = unpackRGBE(texture(cc_environment, viewDir.xyz));\n#else\nvec3 c = SRGBToLinear(texture(cc_environment, viewDir.xyz).rgb);\n#endif\nreturn CCFragOutput(vec4(c * cc_ambientSky.w, 1.0));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec2 v_uv;\nlayout(std140) uniform Constants {\nvec4 offset;\n};\nlayout(std140) uniform PerFrameInfo {\nvec4 digits[8 * 10 / 4];\n};\nfloat getComponent(vec4 v, float i) {\nif (i < 1.0) { return v.x; }\nelse if (i < 2.0) { return v.y; }\nelse if (i < 3.0) { return v.z; }\nelse { return v.w; }\n}\nvec4 vert () {\nmat2 proj = mat2(cc_matProj[0].xy, cc_matProj[1].xy);\nproj /= abs(proj[1].x + proj[1].y);\nvec2 position = proj * a_position.xy + offset.xy;\nv_uv = a_color.xy;\nif (a_color.z >= 0.0) {\nfloat n = getComponent(digits[int(a_color.z)], a_color.w);\nv_uv += vec2(offset.z * n, 0.0);\n}\nreturn vec4(position, 0.0, 1.0);\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nin vec2 v_uv;\nuniform sampler2D mainTexture;\nvec4 frag () {\nreturn CCFragOutput(texture(mainTexture, v_uv));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nin vec2 a_position;\nin vec2 a_texCoord;\nout vec2 v_uv;\nlayout(std140) uniform Constant {\nvec4 u_buffer0;\nvec4 u_buffer1;\nmat4 u_projection;\n};\nvec4 vert () {\nvec2 worldPos = a_position * u_buffer1.xy + u_buffer1.zw;\nvec2 clipSpace = worldPos / u_buffer0.xy * 2.0 - 1.0;\nvec4 screenPos = u_projection * vec4(clipSpace, 0.0, 1.0);\nv_uv = a_texCoord;\nreturn screenPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nin vec2 v_uv;\nlayout(std140) uniform Factor {\nfloat u_percent;\n};\nuniform sampler2D mainTexture;\nvec4 frag () {\nvec4 color = texture(mainTexture, v_uv);\nfloat percent = clamp(u_percent, 0.0, 1.0);\ncolor.xyz *= percent;\nreturn color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}]],glsl4:[[{vert:"\nprecision mediump float;\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n, mat4 viewInv\n) {\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n}\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec2 a_texCoord;\nlayout(location = 2) in vec4 a_color;\nlayout(set = 1, binding = 1) uniform builtin {\nvec4 cc_size_rotation;\n};\nvec4 vs_main() {\nvec4 pos = vec4(a_position, 1);\npos = cc_matWorld * pos;\nvec2 vertOffset = a_texCoord.xy - 0.5;\ncomputeVertPos(pos, vertOffset, quaternionFromEuler(vec3(0., 0., cc_size_rotation.z)), vec3(cc_size_rotation.xy, 0.), cc_matViewInv);\npos = cc_matViewProj * pos;\nuv = a_texCoord.xy;\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\nlayout(set = 1, binding = 3) uniform sampler2D mainTexture;\nlayout(set = 1, binding = 2) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nlayout(location = 0) in vec3 a_position;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 frag () {\nvec4 o = vec4(1.0);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in highp vec3 a_position;\nlayout(location = 1) in vec4 a_color;\nlayout(location = 0) out vec4 v_color;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\npos.z -= 0.000001;\nv_color = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec4 v_color;\nvec4 front() {\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(v_color);\n#else\nreturn v_color;\n#endif\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = front(); }"},{vert:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in highp vec3 a_position;\nlayout(location = 1) in vec4 a_color;\nlayout(location = 0) out vec4 v_color;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\npos.z -= 0.000001;\nv_color = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec4 v_color;\nvec4 back() {\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(vec4(v_color.rgb, v_color.a * 0.2));\n#else\nreturn vec4(v_color.rgb, v_color.a * 0.2);\n#endif\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = back(); }"},{vert:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in highp vec3 a_position;\nlayout(location = 1) in vec4 a_color;\nlayout(location = 0) out vec4 v_color;\nlayout(location = 1) out float v_distance;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\npos.z -= 0.000001;\nv_color = a_color;\nv_distance = dot(a_position, vec3(1.0, 1.0, 1.0));\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec4 v_color;\nlayout(location = 1) in float v_distance;\nvec4 front() {\nif (fract(v_distance) > 0.5) {\ndiscard;\n}\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(v_color);\n#else\nreturn v_color;\n#endif\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = front(); }"},{vert:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in highp vec3 a_position;\nlayout(location = 1) in vec4 a_color;\nlayout(location = 0) out vec4 v_color;\nlayout(location = 1) out float v_distance;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\npos.z -= 0.000001;\nv_color = a_color;\nv_distance = dot(a_position, vec3(1.0, 1.0, 1.0));\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec4 v_color;\nlayout(location = 1) in float v_distance;\nvec4 back() {\nif (fract(v_distance) > 0.5) {\ndiscard;\n}\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(vec4(v_color.rgb, v_color.a * 0.2));\n#else\nreturn vec4(v_color.rgb, v_color.a * 0.2);\n#endif\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = back(); }"},{vert:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in highp vec3 a_position;\nlayout(location = 1) in vec4 a_normal;\nlayout(location = 2) in vec4 a_color;\nlayout(location = 0) out vec4 v_color;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\nv_color = a_color;\nfloat intensity = dot(vec3(1, 2, 4), a_normal.xyz);\nv_color.rgb -= a_normal.w * intensity * 0.1;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec4 v_color;\nvec4 front() {\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(v_color);\n#else\nreturn v_color;\n#endif\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = front(); }"},{vert:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in highp vec3 a_position;\nlayout(location = 1) in vec4 a_normal;\nlayout(location = 2) in vec4 a_color;\nlayout(location = 0) out vec4 v_color;\nvec4 vert () {\nvec4 pos = cc_matViewProj * vec4(a_position, 1);\nv_color = a_color;\nfloat intensity = dot(vec3(1, 2, 4), a_normal.xyz);\nv_color.rgb -= a_normal.w * intensity * 0.1;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec4 v_color;\nvec4 back() {\n#if USE_FORWARD_PIPELINE\nreturn CCFragOutput(vec4(v_color.rgb, v_color.a * 0.2));\n#else\nreturn vec4(v_color.rgb, v_color.a * 0.2);\n#endif\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = back(); }"}],[{vert:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_color;\nlayout(location = 0) out vec4 v_color;\nlayout(location = 2) in float a_dist;\nlayout(location = 1) out float v_dist;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\npos = cc_matViewProj * cc_matWorld * pos;\nv_color = a_color;\nv_dist = a_dist;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(location = 0) in vec4 v_color;\nlayout(location = 1) in float v_dist;\nvec4 frag () {\nvec4 o = v_color;\nfloat aa = fwidth(v_dist);\nfloat alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\no.rgb *= o.a;\no *= alpha;\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCWorldBound {\nhighp vec4 cc_worldBoundCenter;\nhighp vec4 cc_worldBoundHalfExtents;\n};\nlayout(location = 0) in vec3 a_position;\nvec4 vert () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition *= cc_worldBoundHalfExtents;\nposition += cc_worldBoundCenter;\nposition = cc_matViewProj * position;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nvec4 frag () {\nreturn vec4(1, 0, 0, 1);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nvec4 eulerToQuat(vec3 euler) {\nvec3 er = euler * 0.5;\nfloat x = er.x, y = er.y, z = er.z;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat;\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nlayout(set = 1, binding = 1) uniform SampleConstants {\nvec4 u_sampleInfo;\n};\nlayout(set = 1, binding = 2) uniform TickConstants {\nvec4 u_worldRot;\nvec4 u_timeDelta;\n};\nlayout(location = 0) in vec4 a_position_starttime;\nlayout(location = 1) in vec4 a_size_uv;\nlayout(location = 2) in vec4 a_rotation_uv;\nlayout(location = 3) in vec4 a_color;\nlayout(location = 4) in vec4 a_dir_life;\nlayout(location = 5) in float a_rndSeed;\n#if CC_RENDER_MODE == 4\nlayout(location = 6) in vec3 a_texCoord;\nlayout(location = 7) in vec3 a_texCoord3;\nlayout(location = 8) in vec3 a_normal;\nlayout(location = 9) in vec4 a_color1;\n#endif\nvec3 unpackCurveData (sampler2D tex, vec2 coord) {\nvec4 a = texture(tex, coord);\nvec4 b = texture(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nreturn mix(a.xyz, b.xyz, c);\n}\nvec3 unpackCurveData (sampler2D tex, vec2 coord, out float w) {\nvec4 a = texture(tex, coord);\nvec4 b = texture(tex, coord + u_sampleInfo.y);\nfloat c = fract(coord.x * u_sampleInfo.x);\nw = mix(a.w, b.w, c);\nreturn mix(a.xyz, b.xyz, c);\n}\nfloat pseudoRandom(float x) {\n#if USE_VK_SHADER\nfloat o = x;\nx = mod(x - 1.0, 2.0) - 1.0;\nfloat freqVar = 10.16640753482;\nfloat y = sin(freqVar * floor(o * 0.5 - 0.5));\nfloat v = max(0.0, 1.0-abs(x));\nv *= 0.7071067812;\nv = y < 0.0 ? -v : v;\nreturn v;\n#else\nfloat seed = mod(x, 233280.);\nfloat q = (seed * 9301. + 49297.) / 233280.;\nreturn fract(q);\n#endif\n}\n#if COLOR_OVER_TIME_MODULE_ENABLE\nlayout(set = 1, binding = 10) uniform sampler2D color_over_time_tex0;\nlayout(set = 1, binding = 3) uniform ColorConstant {\nint u_color_mode;\n};\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nlayout(set = 1, binding = 11) uniform sampler2D rotation_over_time_tex0;\nlayout(set = 1, binding = 4) uniform RotationConstant {\nint u_rotation_mode;\n};\n#endif\n#if SIZE_OVER_TIME_MODULE_ENABLE\nlayout(set = 1, binding = 12) uniform sampler2D size_over_time_tex0;\nlayout(set = 1, binding = 5) uniform SizeConstant {\nint u_size_mode;\n};\n#endif\n#if FORCE_OVER_TIME_MODULE_ENABLE\nlayout(set = 1, binding = 13) uniform sampler2D force_over_time_tex0;\nlayout(set = 1, binding = 6) uniform ForceConstant {\nint u_force_mode;\nint u_force_space;\n};\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nlayout(set = 1, binding = 14) uniform sampler2D velocity_over_time_tex0;\nlayout(set = 1, binding = 7) uniform VelocityConstant {\nint u_velocity_mode;\nint u_velocity_space;\n};\n#endif\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nlayout(set = 1, binding = 15) uniform sampler2D texture_animation_tex0;\nlayout(set = 1, binding = 8) uniform AnimationConstant {\nvec4 u_anim_info;\n};\n#endif\nfloat repeat (float t, float length) {\nreturn t - floor(t / length) * length;\n}\nvec4 rotateQuat (vec4 p, vec4 q) {\nvec3 iv = cross(q.xyz, p.xyz) + q.w * p.xyz;\nvec3 res = p.xyz + 2.0 * cross(q.xyz, iv);\nreturn vec4(res.xyz, p.w);\n}\nvec4 gpvs_main () {\nfloat activeTime = u_timeDelta.x - a_position_starttime.w;\nfloat normalizedTime = clamp(activeTime / a_dir_life.w, 0.0, 1.0);\nvec2 timeCoord0 = vec2(normalizedTime, 0.);\nvec2 timeCoord1 = vec2(normalizedTime, 1.);\n#if CC_RENDER_MODE == 4\nvec2 vertIdx = vec2(a_texCoord.x, a_texCoord.y);\n#else\nvec2 vertIdx = vec2(a_size_uv.w, a_rotation_uv.w);\n#endif\nvec4 velocity = vec4(a_dir_life.xyz, 0.);\nvec4 pos = vec4(a_position_starttime.xyz, 1.);\nvec3 size = a_size_uv.xyz;\n#if SIZE_OVER_TIME_MODULE_ENABLE\nif (u_size_mode == 1) {\nsize *= unpackCurveData(size_over_time_tex0, timeCoord0);\n} else {\nvec3 size_0 = unpackCurveData(size_over_time_tex0, timeCoord0);\nvec3 size_1 = unpackCurveData(size_over_time_tex0, timeCoord1);\nfloat factor_s = pseudoRandom(a_rndSeed + 39825.);\nsize *= mix(size_0, size_1, factor_s);\n}\n#endif\nvec3 compScale = scale.xyz * size;\n#if FORCE_OVER_TIME_MODULE_ENABLE\nvec3 forceAnim = vec3(0.);\nif (u_force_mode == 1) {\nforceAnim = unpackCurveData(force_over_time_tex0, timeCoord0);\n} else {\nvec3 force_0 = unpackCurveData(force_over_time_tex0, timeCoord0);\nvec3 force_1 = unpackCurveData(force_over_time_tex0, timeCoord1);\nfloat factor_f =  pseudoRandom(a_rndSeed + 212165.);\nforceAnim = mix(force_0, force_1, factor_f);\n}\nvec4 forceTrack = vec4(forceAnim, 0.);\nif (u_force_space == 0) {\nforceTrack = rotateQuat(forceTrack, u_worldRot);\n}\nvelocity.xyz += forceTrack.xyz;\n#endif\n#if VELOCITY_OVER_TIME_MODULE_ENABLE\nfloat speedModifier0 = 1.;\nfloat speedModifier1 = 1.;\nvec3 velocityAnim = vec3(0.);\nif (u_velocity_mode == 1) {\nvelocityAnim = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\n} else {\nvec3 vectory_0 = unpackCurveData(velocity_over_time_tex0, timeCoord0, speedModifier0);\nvec3 vectory_1 = unpackCurveData(velocity_over_time_tex0, timeCoord1, speedModifier1);\nfloat factor_v = pseudoRandom(a_rndSeed + 197866.);\nvelocityAnim = mix(vectory_0, vectory_1, factor_v);\nspeedModifier0 = mix(speedModifier0, speedModifier1, factor_v);\n}\nvec4 velocityTrack = vec4(velocityAnim, 0.);\nif (u_velocity_space == 0) {\nvelocityTrack = rotateQuat(velocityTrack, u_worldRot);\n}\nvelocity.xyz += velocityTrack.xyz;\nvelocity.xyz *= speedModifier0;\n#endif\npos.xyz += velocity.xyz * normalizedTime * a_dir_life.w;\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = rotateQuat(velocity, u_worldRot);\n#endif\n#endif\nvec3 startRotation = a_rotation_uv.xyz;\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = startRotation.xyz;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., startRotation.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(startRotation);\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nif (u_rotation_mode == 1) {\nvec3 euler = unpackCurveData(rotation_over_time_tex0, timeCoord0) * normalizedTime * a_dir_life.w;\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n} else {\nvec3 rotation_0 = unpackCurveData(rotation_over_time_tex0, timeCoord0);\nvec3 rotation_1 = unpackCurveData(rotation_over_time_tex0, timeCoord1);\nfloat factor_r = pseudoRandom(a_rndSeed + 125292.);\nvec3 euler = mix(rotation_0, rotation_1, factor_r) * normalizedTime * a_dir_life.w;\n#if CC_RENDER_MODE == 3 || CC_RENDER_MODE == 2\neuler = vec3(0.0, 0.0, euler.z);\n#endif\nvec4 quat = eulerToQuat(euler);\nmat3 mLocal = quatToMat3(quat);\nmat3 mStart = quatToMat3(rot);\nrot = mat3ToQuat(mStart * mLocal);\n}\n#endif\n#if COLOR_OVER_TIME_MODULE_ENABLE\nif (u_color_mode == 1) {\ncolor = a_color * texture(color_over_time_tex0, timeCoord0);\n} else {\nvec4 color_0 = texture(color_over_time_tex0, timeCoord0);\nvec4 color_1 = texture(color_over_time_tex0, timeCoord1);\nfloat factor_c = pseudoRandom(a_rndSeed + 91041.);\ncolor = a_color * mix(color_0, color_1, factor_c);\n}\n#else\ncolor = a_color;\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((vertIdx - 0.5));\n#if CC_RENDER_MODE == 1\nrot = vec4(0.0, 0.0, 0.0, 1.0);\n#endif\ncomputeVertPos(pos, cornerOffset, rot, compScale\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, cc_matViewInv\n#endif\n#if CC_RENDER_MODE == 1\n, cc_cameraPos.xyz\n, velocity\n, frameTile_velLenScale.z\n, frameTile_velLenScale.w\n, a_size_uv.w\n#endif\n);\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor *= a_color1;\n#endif\npos = cc_matViewProj * pos;\nfloat frameIndex = 0.;\n#if TEXTURE_ANIMATION_MODULE_ENABLE\nfloat startFrame = 0.;\nvec3 frameInfo = vec3(0.);\nif (int(u_anim_info.x) == 1) {\nframeInfo = unpackCurveData(texture_animation_tex0, timeCoord0);\n} else {\nvec3 frameInfo0 = unpackCurveData(texture_animation_tex0, timeCoord0);\nvec3 frameInfo1 = unpackCurveData(texture_animation_tex0, timeCoord1);\nfloat factor_t = pseudoRandom(a_rndSeed + 90794.);\nframeInfo = mix(frameInfo0, frameInfo1, factor_t);\n}\nstartFrame = frameInfo.x / u_anim_info.y;\nframeIndex = repeat(u_anim_info.z * (frameInfo.y + startFrame), 1.);\n#endif\nuv = computeUV(frameIndex, vertIdx, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\nreturn pos;\n}\nvoid main() { gl_Position = gpvs_main(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\nlayout(set = 1, binding = 16) uniform sampler2D mainTexture;\nlayout(set = 1, binding = 9) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision mediump float;\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\nlayout(location = 2) out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\nhighp vec4 pos = vec4(a_position, 1);\nvec4 velocity = vec4(a_texCoord1.xyz, 0);\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\nvelocity = cc_matWorld * velocity;\n#endif\nfloat vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\nvec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\npos.xyz += camUp * vertOffset;\npos = cc_matViewProj * pos;\nuv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\ncolor = a_color;\n#if CC_DRAW_WIRE_FRAME\nvBarycentric = a_texCoord2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vs_main(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\n#if CC_DRAW_WIRE_FRAME\nlayout(location = 2) in vec3 vBarycentric;\n#endif\nlayout(set = 1, binding = 2) uniform sampler2D mainTexture;\nlayout(set = 1, binding = 1) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\nif (any(lessThan(vBarycentric, vec3(0.02)))) {\ncol = vec4(0., 1., 1., 1.);\n}\n#endif\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nvec4 quaternionFromAxis (vec3 xAxis,vec3 yAxis,vec3 zAxis){\nmat3 m = mat3(xAxis,yAxis,zAxis);\nfloat trace = m[0][0] + m[1][1] + m[2][2];\nvec4 quat;\nif (trace > 0.) {\nfloat s = 0.5 / sqrt(trace + 1.0);\nquat.w = 0.25 / s;\nquat.x = (m[2][1] - m[1][2]) * s;\nquat.y = (m[0][2] - m[2][0]) * s;\nquat.z = (m[1][0] - m[0][1]) * s;\n} else if ((m[0][0] > m[1][1]) && (m[0][0] > m[2][2])) {\nfloat s = 2.0 * sqrt(1.0 + m[0][0] - m[1][1] - m[2][2]);\nquat.w = (m[2][1] - m[1][2]) / s;\nquat.x = 0.25 * s;\nquat.y = (m[0][1] + m[1][0]) / s;\nquat.z = (m[0][2] + m[2][0]) / s;\n} else if (m[1][1] > m[2][2]) {\nfloat s = 2.0 * sqrt(1.0 + m[1][1] - m[0][0] - m[2][2]);\nquat.w = (m[0][2] - m[2][0]) / s;\nquat.x = (m[0][1] + m[1][0]) / s;\nquat.y = 0.25 * s;\nquat.z = (m[1][2] + m[2][1]) / s;\n} else {\nfloat s = 2.0 * sqrt(1.0 + m[2][2] - m[0][0] - m[1][1]);\nquat.w = (m[1][0] - m[0][1]) / s;\nquat.x = (m[0][2] + m[2][0]) / s;\nquat.y = (m[1][2] + m[2][1]) / s;\nquat.z = 0.25 * s;\n}\nfloat len = quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w;\nif (len > 0.) {\nlen = 1. / sqrt(len);\nquat.x = quat.x * len;\nquat.y = quat.y * len;\nquat.z = quat.z * len;\nquat.w = quat.w * len;\n}\nreturn quat;\n}\nvec4 quaternionFromEuler (vec3 angle){\nfloat x = angle.x / 2.;\nfloat y = angle.y / 2.;\nfloat z = angle.z / 2.;\nfloat sx = sin(x);\nfloat cx = cos(x);\nfloat sy = sin(y);\nfloat cy = cos(y);\nfloat sz = sin(z);\nfloat cz = cos(z);\nvec4 quat = vec4(0);\nquat.x = sx * cy * cz + cx * sy * sz;\nquat.y = cx * sy * cz + sx * cy * sz;\nquat.z = cx * cy * sz - sx * sy * cz;\nquat.w = cx * cy * cz - sx * sy * sz;\nreturn quat;\n}\nmat4 matrixFromRT (vec4 q, vec3 p){\nfloat x2 = q.x + q.x;\nfloat y2 = q.y + q.y;\nfloat z2 = q.z + q.z;\nfloat xx = q.x * x2;\nfloat xy = q.x * y2;\nfloat xz = q.x * z2;\nfloat yy = q.y * y2;\nfloat yz = q.y * z2;\nfloat zz = q.z * z2;\nfloat wx = q.w * x2;\nfloat wy = q.w * y2;\nfloat wz = q.w * z2;\nreturn mat4(\n1. - (yy + zz), xy + wz, xz - wy, 0,\nxy - wz, 1. - (xx + zz), yz + wx, 0,\nxz + wy, yz - wx, 1. - (xx + yy), 0,\np.x, p.y, p.z, 1\n);\n}\nmat4 matFromRTS (vec4 q, vec3 t, vec3 s){\nfloat x = q.x, y = q.y, z = q.z, w = q.w;\nfloat x2 = x + x;\nfloat y2 = y + y;\nfloat z2 = z + z;\nfloat xx = x * x2;\nfloat xy = x * y2;\nfloat xz = x * z2;\nfloat yy = y * y2;\nfloat yz = y * z2;\nfloat zz = z * z2;\nfloat wx = w * x2;\nfloat wy = w * y2;\nfloat wz = w * z2;\nfloat sx = s.x;\nfloat sy = s.y;\nfloat sz = s.z;\nreturn mat4((1. - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\n(xy - wz) * sy, (1. - (xx + zz)) * sy, (yz + wx) * sy, 0,\n(xz + wy) * sz, (yz - wx) * sz, (1. - (xx + yy)) * sz, 0,\nt.x, t.y, t.z, 1);\n}\nvec4 quatMultiply (vec4 a, vec4 b){\nvec4 quat;\nquat.x = a.x * b.w + a.w * b.x + a.y * b.z - a.z * b.y;\nquat.y = a.y * b.w + a.w * b.y + a.z * b.x - a.x * b.z;\nquat.z = a.z * b.w + a.w * b.z + a.x * b.y - a.y * b.x;\nquat.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\nreturn quat;\n}\nvoid rotateVecFromQuat (inout vec3 v, vec4 q){\nfloat ix = q.w * v.x + q.y * v.z - q.z * v.y;\nfloat iy = q.w * v.y + q.z * v.x - q.x * v.z;\nfloat iz = q.w * v.z + q.x * v.y - q.y * v.x;\nfloat iw = -q.x * v.x - q.y * v.y - q.z * v.z;\nv.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\nv.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\nv.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n}\nvec3 rotateInLocalSpace (vec3 pos, vec3 xAxis, vec3 yAxis, vec3 zAxis, vec4 q){\nvec4 viewQuat = quaternionFromAxis(xAxis, yAxis, zAxis);\nvec4 rotQuat = quatMultiply(viewQuat, q);\nrotateVecFromQuat(pos, rotQuat);\nreturn pos;\n}\nmat3 quatToMat3(vec4 q) {\nvec3 m0 = vec3(\n1.0 - 2.0 * q.y * q.y - 2.0 * q.z * q.z,\n2.0 * q.x * q.y + 2.0 * q.w * q.z,\n2.0 * q.x * q.z - 2.0 * q.w * q.y);\nvec3 m1 = vec3(\n2.0 * q.x * q.y - 2.0 * q.w * q.z,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.z * q.z,\n2.0 * q.y * q.z + 2.0 * q.w * q.x);\nvec3 m2 = vec3(\n2.0 * q.x * q.z + 2.0 * q.w * q.y,\n2.0 * q.y * q.z - 2.0 * q.w * q.x,\n1.0 - 2.0 * q.x * q.x - 2.0 * q.y * q.y);\nreturn mat3(m0, m1, m2);\n}\nvec4 mat3ToQuat(mat3 mat) {\nfloat tr = mat[0][0] + mat[1][1] + mat[2][2];\nfloat qw, qx, qy, qz;\nif (tr > 0.0) {\nfloat S = sqrt(tr + 1.0) * 2.0;\nfloat invS = 1.0 / S;\nqw = 0.25 * S;\nqx = (mat[1][2] - mat[2][1]) * invS;\nqy = (mat[2][0] - mat[0][2]) * invS;\nqz = (mat[0][1] - mat[1][0]) * invS;\n} else if ((mat[0][0] > mat[1][1])&&(mat[0][0] > mat[2][2])) {\nfloat S = sqrt(1.0 + mat[0][0] - mat[1][1] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[1][2] - mat[2][1]) * invS;\nqx = 0.25 * S;\nqy = (mat[1][0] + mat[0][1]) * invS;\nqz = (mat[2][0] + mat[0][2]) * invS;\n} else if (mat[1][1] > mat[2][2]) {\nfloat S = sqrt(1.0 + mat[1][1] - mat[0][0] - mat[2][2]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[2][0] - mat[0][2]) * invS;\nqx = (mat[1][0] + mat[0][1]) * invS;\nqy = 0.25 * S;\nqz = (mat[2][1] + mat[1][2]) * invS;\n} else {\nfloat S = sqrt(1.0 + mat[2][2] - mat[0][0] - mat[1][1]) * 2.0;\nfloat invS = 1.0 / S;\nqw = (mat[0][1] - mat[1][0]) * invS;\nqx = (mat[2][0] + mat[0][2]) * invS;\nqy = (mat[2][1] + mat[1][2]) * invS;\nqz = 0.25 * S;\n}\nreturn vec4(qx, qy, qz, qw);\n}\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 mainTiling_Offset;\nvec4 frameTile_velLenScale;\nvec4 scale;\nvec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nvoid computeVertPos (inout vec4 pos, vec2 vertOffset, vec4 q, vec3 s\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\n, mat4 viewInv\n#endif\n#if CC_RENDER_MODE == 1\n, vec3 eye\n, vec4 velocity\n, float velocityScale\n, float lengthScale\n, float xIndex\n#endif\n) {\n#if CC_RENDER_MODE == 0\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = normalize(vec3(viewInv[0][0], viewInv[1][0], viewInv[2][0]));\nvec3 camY = normalize(vec3(viewInv[0][1], viewInv[1][1], viewInv[2][1]));\nvec3 camZ = normalize(vec3(viewInv[0][2], viewInv[1][2], viewInv[2][2]));\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, camZ, q);\n#elif CC_RENDER_MODE == 1\nvec3 camRight = normalize(cross(pos.xyz - eye, velocity.xyz)) * s.x;\nvec3 camUp = velocity.xyz * velocityScale + normalize(velocity.xyz) * lengthScale * s.y;\npos.xyz += (camRight * abs(vertOffset.x) * sign(vertOffset.y)) - camUp * xIndex;\n#elif CC_RENDER_MODE == 2\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nvec3 camX = vec3(1, 0, 0);\nvec3 camY = vec3(0, 0, -1);\npos.xyz += rotateInLocalSpace(viewSpaceVert, camX, camY, cross(camX, camY), q);\n#elif CC_RENDER_MODE == 3\nvec3 viewSpaceVert = vec3(vertOffset.x * s.x, vertOffset.y * s.y, 0.);\nrotateVecFromQuat(viewSpaceVert, q);\nvec3 camX = normalize(vec3(cc_matView[0][0], cc_matView[1][0], cc_matView[2][0]));\nvec3 camY = vec3(0, 1, 0);\nvec3 offset = camX * viewSpaceVert.x + camY * viewSpaceVert.y;\npos.xyz += offset;\n#else\npos.x += vertOffset.x;\npos.y += vertOffset.y;\n#endif\n}\nvec2 computeUV (float frameIndex, vec2 vertIndex, vec2 frameTile){\nvec2 aniUV = vec2(0, floor(frameIndex * frameTile.y));\naniUV.x = floor(frameIndex * frameTile.x * frameTile.y - aniUV.y * frameTile.x);\n#if CC_RENDER_MODE != 4\nvertIndex.y = 1. - vertIndex.y;\n#endif\nreturn (aniUV.xy + vertIndex) / vec2(frameTile.x, frameTile.y);\n}\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_RENDER_MODE == 1\nlayout(location = 8) in vec3 a_color1;\n#endif\n#if CC_RENDER_MODE == 4\nlayout(location = 6) in vec3 a_texCoord3;\nlayout(location = 7) in vec3 a_normal;\nlayout(location = 8) in vec4 a_color1;\n#endif\nvec4 lpvs_main () {\nvec3 compScale = scale.xyz * a_texCoord1;\nvec4 pos = vec4(a_position, 1);\n#if CC_RENDER_MODE == 1\nvec4 velocity = vec4(a_color1.xyz, 0);\n#endif\n#if !CC_USE_WORLD_SPACE\npos = cc_matWorld * pos;\n#if CC_RENDER_MODE == 1\nvelocity = cc_matWorld * velocity;\n#endif\n#endif\n#if ROTATION_OVER_TIME_MODULE_ENABLE\nvec3 rotTmp = a_texCoord2;\nfloat mulFactor = 1.0;\nif (rotTmp.x > 10.0 * 0.5) {\nrotTmp.x -= 10.0;\nmulFactor = -1.0;\n}\nvec4 rot = vec4(rotTmp, 0.0);\nrot.w = mulFactor * sqrt(abs(1.0 - rot.x * rot.x - rot.y * rot.y - rot.z * rot.z));\n#else\n#if CC_RENDER_MODE != 4\n#if CC_RENDER_MODE == 0\nvec3 rotEuler = a_texCoord2;\n#elif CC_RENDER_MODE == 1\nvec3 rotEuler = vec3(0.);\n#else\nvec3 rotEuler = vec3(0., 0., a_texCoord2.z);\n#endif\nvec4 rot = quaternionFromEuler(rotEuler);\n#else\nvec4 rot = quaternionFromEuler(a_texCoord2);\n#endif\n#endif\n#if CC_RENDER_MODE != 4\nvec2 cornerOffset = vec2((a_texCoord.xy - 0.5));\n#if CC_RENDER_MODE == 0 || CC_RENDER_MODE == 3\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_matViewInv);\n#elif CC_RENDER_MODE == 1\ncomputeVertPos(pos, cornerOffset, rot, compScale, cc_cameraPos.xyz, velocity, frameTile_velLenScale.z, frameTile_velLenScale.w, a_texCoord.x);\n#elif 2\ncomputeVertPos(pos, cornerOffset, rot, compScale);\n#endif\ncolor = a_color;\n#else\nmat3 rotMat = quatToMat3(rot);\nmat3 nodeMat = quatToMat3(nodeRotation);\nrotMat = nodeMat * rotMat;\nrot = mat3ToQuat(rotMat);\nmat4 xformNoScale = matrixFromRT(rot, pos.xyz);\nmat4 xform = matFromRTS(rot, pos.xyz, compScale);\npos = xform * vec4(a_texCoord3, 1);\nvec4 normal = xformNoScale * vec4(a_normal, 0);\ncolor = a_color * a_color1;\n#endif\nuv = computeUV(a_texCoord.z, a_texCoord.xy, frameTile_velLenScale.xy) * mainTiling_Offset.xy + mainTiling_Offset.zw;\npos = cc_matViewProj * pos;\nreturn pos;\n}\nvoid main() { gl_Position = lpvs_main(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\nlayout(set = 1, binding = 2) uniform sampler2D mainTexture;\nlayout(set = 1, binding = 1) uniform FragConstants {\nvec4 tintColor;\n};\nvec4 add () {\nvec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\nreturn CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"}],[{vert:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\n#endif\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec2 a_texCoord;\nlayout(location = 2) in vec4 a_color;\nlayout(location = 0) out vec4 v_light;\nlayout(location = 1) out vec2 uv0;\n#if TWO_COLORED\nlayout(location = 3) in vec4 a_color2;\nlayout(location = 2) out vec4 v_dark;\n#endif\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\npos = cc_matViewProj * pos;\nuv0 = a_texCoord;\nv_light = a_color;\n#if TWO_COLORED\nv_dark = a_color2;\n#endif\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\n#if USE_ALPHA_TEST\nlayout(set = 1, binding = 0) uniform ALPHA_TEST_DATA {\nfloat alphaThreshold;\n};\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nlayout(location = 0) in vec4 v_light;\n#if TWO_COLORED\nlayout(location = 2) in vec4 v_dark;\n#endif\nlayout(location = 1) in vec2 uv0;\nlayout(set = 2, binding = 11) uniform sampler2D cc_spriteTexture;\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if TWO_COLORED\nvec4 texColor = vec4(1, 1, 1, 1);\ntexColor *= texture(cc_spriteTexture, uv0);\no.a = texColor.a * v_light.a;\no.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n#else\no *= texture(cc_spriteTexture, uv0);\no *= v_light;\n#endif\nALPHA_TEST(o);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\n#endif\n#if SAMPLE_FROM_RT\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#endif\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec2 a_texCoord;\nlayout(location = 2) in vec4 a_color;\nlayout(location = 0) out vec4 color;\nlayout(location = 1) out vec2 uv0;\nvec4 vert () {\nvec4 pos = vec4(a_position, 1);\n#if USE_LOCAL\npos = cc_matWorld * pos;\n#endif\n#if USE_PIXEL_ALIGNMENT\npos = cc_matView * pos;\npos.xyz = floor(pos.xyz);\npos = cc_matProj * pos;\n#else\npos = cc_matViewProj * pos;\n#endif\nuv0 = a_texCoord;\n#if SAMPLE_FROM_RT\nuv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n#endif\ncolor = a_color;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\nreturn vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\nreturn texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\nlayout(set = 1, binding = 0) uniform ALPHA_TEST_DATA {\nfloat alphaThreshold;\n};\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n#if USE_ALPHA_TEST\nif (color.a < alphaThreshold) discard;\n#endif\n}\nvoid ALPHA_TEST (in float alpha) {\n#if USE_ALPHA_TEST\nif (alpha < alphaThreshold) discard;\n#endif\n}\nlayout(location = 0) in vec4 color;\n#if USE_TEXTURE\nlayout(location = 1) in vec2 uv0;\nlayout(set = 2, binding = 11) uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\nvec4 o = vec4(1, 1, 1, 1);\n#if USE_TEXTURE\no *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n#if IS_GRAY\nfloat gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\no.r = o.g = o.b = gray;\n#endif\n#endif\no *= color;\nALPHA_TEST(o);\nreturn o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nlayout(location = 6) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(location = 7) in vec4 a_matWorld0;\nlayout(location = 8) in vec4 a_matWorld1;\nlayout(location = 9) in vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nlayout(location = 10) in vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nlayout(location = 11) in vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\n#endif\n#if CC_USE_MORPH\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if !USE_INSTANCING\n#if USE_BATCHING\nlayout(set = 2, binding = 0) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\n#endif\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\n}\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nlayout(location = 0) out float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nlayout(location = 1) out highp vec4 v_shadowPos;\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\n#if CC_RECEIVE_SHADOW\nlayout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\nlayout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\n#endif\n#if CC_RECEIVE_SHADOW\nvec2 CCGetShadowBias()\n{\n#if USE_INSTANCING\nreturn vec2(a_localShadowBias.x + cc_shadowWHPBInfo.w, a_localShadowBias.y + cc_shadowLPNNInfo.z);\n#elif !USE_BATCHING\nreturn vec2(cc_localShadowBias.x + cc_shadowWHPBInfo.w, cc_localShadowBias.y + cc_shadowLPNNInfo.z);\n#else\nreturn vec2(cc_shadowWHPBInfo.w, cc_shadowLPNNInfo.z);\n#endif\n}\n#endif\n#if USE_VERTEX_COLOR\nlayout(location = 14) in vec4 a_color;\nlayout(location = 2) out lowp vec4 v_color;\n#endif\nlayout(location = 3) out vec3 v_position;\nlayout(location = 4) out mediump vec3 v_normal;\nlayout(location = 5) out vec2 v_uv;\n#if HAS_SECOND_UV\nlayout(location = 6) out mediump vec2 v_uv1;\n#endif\n#if CC_RECEIVE_SHADOW\nlayout(location = 7) out mediump vec2 v_shadowBias;\n#endif\n#if USE_NORMAL_MAP\nlayout(location = 8) out mediump vec4 v_tangent;\n#endif\n#if HAS_SECOND_UV || CC_USE_LIGHTMAP\nlayout(location = 15) in vec2 a_texCoord1;\n#endif\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nlayout(location = 9) out vec3 v_luv;\nvoid CCLightingMapCaclUV()\n{\n#if !USE_INSTANCING\nv_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.z;\nv_luv.z = cc_lightingMapUVParam.w;\n#else\nv_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.z;\nv_luv.z = a_lightingMapUVParam.w;\n#endif\n}\n#endif\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nmat4 matWorld, matWorldIT;\nCCGetWorldMatrixFull(matWorld, matWorldIT);\nvec4 pos = matWorld * In.position;\nv_position = pos.xyz;\nv_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n#if CC_RECEIVE_SHADOW\nv_shadowBias = CCGetShadowBias();\n#endif\n#if USE_TWOSIDE\nvec3 viewDirect = normalize(cc_cameraPos.xyz - v_position);\nv_normal *= dot(v_normal, viewDirect) < 0.0 ? -1.0 : 1.0;\n#endif\n#if USE_NORMAL_MAP\nv_tangent.xyz = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\nv_tangent.w = In.tangent.w;\n#endif\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(pos);\nv_shadowPos = cc_matLightViewProj * pos;\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nCCLightingMapCaclUV();\n#endif\ngl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nlayout(location = 0) in float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\nhighp float divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\nhighp vec2 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\nhighp vec3 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\nhighp vec4 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nlayout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\nlayout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias)\n{\nvec4 newShadowPos = shadowPos;\nif(normalBias > EPSILON_LOWP)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > EPSILON) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCSpotShadowFactorBase(vec4 shadowPos, vec3 worldPos, vec2 shadowBias)\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nreturn CCGetSpotLightShadowFactorSoft2X(shadowPos, worldPos, shadowBias.x);\n}else if (pcf > 0.9) {\nreturn CCGetSpotLightShadowFactorSoft(shadowPos, worldPos, shadowBias.x);\n}else {\nreturn CCGetSpotLightShadowFactorHard(shadowPos, worldPos, shadowBias.x);\n}\n}\nfloat CCShadowFactorBase(vec4 shadowPos, vec3 N, vec2 shadowBias)\n{\nfloat realtimeShadow = 1.0;\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N, shadowBias.y);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nrealtimeShadow =  CCGetShadowFactorSoft2X(pos, shadowBias.x);\n}else if (pcf > 0.9) {\nrealtimeShadow = CCGetShadowFactorSoft(pos, shadowBias.x);\n}else {\nrealtimeShadow = CCGetShadowFactorHard(pos, shadowBias.x);\n}\nreturn mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n}\n#endif\n#if CC_USE_IBL\nlayout(set = 0, binding = 4) uniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nlayout(set = 0, binding = 6) uniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\nfloat specularIntensity;\n#if CC_RECEIVE_SHADOW\nvec2 shadowBias;\n#endif\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.08 * s.specularIntensity), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse / PI;\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\nshadow = CCShadowFactorBase(shadowPos, N, s.shadowBias);\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > EPSILON_LOWP) {\nfinalColor = diffuse * s.lightmap.rgb * shadow;\n}\n#endif\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nlayout(location = 1) in highp vec4 v_shadowPos;\n#if CC_RECEIVE_SHADOW\n#endif\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nlayout(location = 9) in vec3 v_luv;\nlayout(set = 2, binding = 10) uniform sampler2D cc_lightingMap;\n#endif\nlayout(location = 3) in vec3 v_position;\nlayout(location = 5) in vec2 v_uv;\n#if HAS_SECOND_UV\nlayout(location = 6) in mediump vec2 v_uv1;\n#endif\nlayout(location = 4) in mediump vec3 v_normal;\n#if CC_RECEIVE_SHADOW\nlayout(location = 7) in mediump vec2 v_shadowBias;\n#endif\n#if USE_VERTEX_COLOR\nlayout(location = 2) in lowp vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\nlayout(set = 1, binding = 1) uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\nlayout(location = 8) in mediump vec4 v_tangent;\nlayout(set = 1, binding = 2) uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\nlayout(set = 1, binding = 3) uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nlayout(set = 1, binding = 4) uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\nlayout(set = 1, binding = 5) uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\nlayout(set = 1, binding = 6) uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\nvec4 baseColor = albedo;\n#if USE_VERTEX_COLOR\nbaseColor.rgb *= SRGBToLinear(v_color.rgb);\nbaseColor.a *= v_color.a;\n#endif\n#if USE_ALBEDO_MAP\nvec4 texColor = texture(albedoMap, ALBEDO_UV);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\nbaseColor *= texColor;\n#endif\ns.albedo = baseColor;\ns.albedo.rgb *= albedoScaleAndCutoff.xyz;\n#if USE_ALPHA_TEST\nif (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture(cc_lightingMap, v_luv.xy);\ns.lightmap = lightColor.xyz * v_luv.z;\ns.lightmap_test = v_luv.z;\n#endif\ns.normal = v_normal;\n#if CC_RECEIVE_SHADOW\ns.shadowBias = v_shadowBias;\n#endif\n#if USE_NORMAL_MAP\nvec3 nmmp = texture(normalMap, NORMAL_UV).xyz - vec3(0.5);\nvec3 bitangent = cross(v_normal, v_tangent.xyz) * v_tangent.w;\ns.normal =\n(nmmp.x * emissiveScaleParam.w) * normalize(v_tangent.xyz) +\n(nmmp.y * emissiveScaleParam.w) * normalize(bitangent) +\nnmmp.z * normalize(s.normal);\n#endif\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\npackHighpData(s.position, s.position_fract_part, v_position);\n#else\ns.position = v_position;\n#endif\nvec4 pbr = pbrParams;\n#if USE_PBR_MAP\nvec4 res = texture(pbrMap, PBR_UV);\npbr.x *= res.r;\npbr.y *= res.g;\npbr.z *= res.b;\npbr.w *= res.a;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\nvec4 metallicRoughness = texture(metallicRoughnessMap, PBR_UV);\npbr.z *= metallicRoughness.b;\npbr.y *= metallicRoughness.g;\n#endif\n#if USE_OCCLUSION_MAP\npbr.x *= texture(occlusionMap, PBR_UV).r;\n#endif\ns.occlusion = pbr.x;\ns.roughness = pbr.y;\ns.specularIntensity = 0.5;\ns.metallic = pbr.z;\ns.emissive = emissive.rgb * emissiveScaleParam.xyz;\n#if USE_EMISSIVE_MAP\ns.emissive *= SRGBToLinear(texture(emissiveMap, EMISSIVE_UV).rgb);\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n#define LIGHTS_PER_PASS 1\n#else\n#define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(set = 2, binding = 1) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = litRadiusSqr / max(litRadiusSqr, distSqr);\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(set = 1, binding = 7) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(set = 1, binding = 8) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(set = 1, binding = 9) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = PI * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\nfragColorX = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec2 float32x3_to_oct(in vec3 v) {\nvec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\nreturn (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n}\nlayout(location = 0) out vec4 fragColor0;\nlayout(location = 1) out vec4 fragColor1;\nlayout(location = 2) out vec4 fragColor2;\nvoid main () {\nStandardSurface s; surf(s);\nfragColor0 = s.albedo;\nfragColor1 = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\nfragColor2 = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nlayout(location = 6) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(location = 7) in vec4 a_matWorld0;\nlayout(location = 8) in vec4 a_matWorld1;\nlayout(location = 9) in vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nlayout(location = 10) in vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nlayout(location = 11) in vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\n#endif\n#if CC_USE_MORPH\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\n#if !USE_INSTANCING\n#if USE_BATCHING\nlayout(set = 2, binding = 0) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\n#endif\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\nmatWorldIT = matWorld;\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\nmatWorldIT = matWorld;\n#else\nmatWorld = cc_matWorld;\nmatWorldIT = cc_matWorldIT;\n#endif\n}\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\n#if HAS_SECOND_UV || CC_USE_LIGHTMAP\nlayout(location = 14) in vec2 a_texCoord1;\n#endif\nlayout(location = 0) out vec2 v_uv;\n#if HAS_SECOND_UV\nlayout(location = 1) out vec2 v_uv1;\n#endif\nlayout(location = 2) out vec4 v_worldPos;\nlayout(location = 3) out float v_clip_depth;\nvec4 vert () {\nStandardVertInput In;\nCCVertInput(In);\nmat4 matWorld, matWorldIT;\nCCGetWorldMatrixFull(matWorld, matWorldIT);\nv_worldPos = matWorld * In.position;\nvec4 clipPos = cc_matLightViewProj * v_worldPos;\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if HAS_SECOND_UV\nv_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n#endif\nv_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 tilingOffset;\nvec4 albedo;\nvec4 albedoScaleAndCutoff;\nvec4 pbrParams;\nvec4 emissive;\nvec4 emissiveScaleParam;\n};\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nlayout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\nlayout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\n#endif\nlayout(location = 0) in vec2 v_uv;\n#if HAS_SECOND_UV\nlayout(location = 1) in vec2 v_uv1;\n#endif\nlayout(location = 2) in vec4 v_worldPos;\nlayout(location = 3) in float v_clip_depth;\n#if USE_ALBEDO_MAP\nlayout(set = 1, binding = 1) uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\nvec4 baseColor = albedo;\n#if USE_ALBEDO_MAP\nbaseColor *= texture(albedoMap, ALBEDO_UV);\n#endif\n#if USE_ALPHA_TEST\nif (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n#endif\nif(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\nif (cc_shadowNFLSInfo.z > 0.000001) {\nreturn vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n}\n}\nif (cc_shadowLPNNInfo.y > 0.000001) {\nreturn packDepthToRGBA(v_clip_depth);\n}\nreturn vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nlayout(location = 0) out float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nlayout(location = 1) out highp vec4 v_shadowPos;\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#if CC_RECEIVE_SHADOW\nlayout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\nlayout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\n#endif\n#if CC_RECEIVE_SHADOW\n#endif\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\n#if CC_RECEIVE_SHADOW\nlayout(location = 2) out vec2 v_shadowBias;\n#endif\nlayout(location = 3) out highp vec3 v_position;\nlayout(location = 4) out mediump vec3 v_normal;\nlayout(location = 5) out mediump vec2 uvw;\nlayout(location = 6) out mediump vec2 uv0;\nlayout(location = 7) out mediump vec2 uv1;\nlayout(location = 8) out mediump vec2 uv2;\nlayout(location = 9) out mediump vec2 uv3;\nlayout(location = 10) out mediump vec3 luv;\nlayout(location = 11) out mediump vec3 diffuse;\nlayout(set = 1, binding = 0) uniform TexCoords {\nvec4 UVScale;\nvec4 lightMapUVParam;\n};\nvoid main () {\nvec3 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nvec4 pos = vec4(worldPos, 1.0);\npos = cc_matViewProj * pos;\nuvw = a_texCoord;\nuv0 = a_position.xz * UVScale.x;\nuv1 = a_position.xz * UVScale.y;\nuv2 = a_position.xz * UVScale.z;\nuv3 = a_position.xz * UVScale.w;\n#if CC_USE_LIGHTMAP\nluv.xy = lightMapUVParam.xy + a_texCoord * lightMapUVParam.z;\nluv.z = lightMapUVParam.w;\n#endif\nv_position = worldPos;\nv_normal = a_normal;\nCC_TRANSFER_FOG(vec4(worldPos, 1.0));\n#if CC_RECEIVE_SHADOW\nv_shadowBias = vec2(0.0, 0.0);\n#endif\nv_shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\ngl_Position = pos;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\nhighp float divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\nhighp vec2 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\nhighp vec3 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\nmainPart = fract(data);\nmodPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\nhighp vec4 divide = data / modValue;\nmainPart = floor(divide);\nmodPart = (data - mainPart * modValue) / modValue;\n}\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nlayout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\nlayout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias)\n{\nvec4 newShadowPos = shadowPos;\nif(normalBias > EPSILON_LOWP)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > EPSILON) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCSpotShadowFactorBase(vec4 shadowPos, vec3 worldPos, vec2 shadowBias)\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nreturn CCGetSpotLightShadowFactorSoft2X(shadowPos, worldPos, shadowBias.x);\n}else if (pcf > 0.9) {\nreturn CCGetSpotLightShadowFactorSoft(shadowPos, worldPos, shadowBias.x);\n}else {\nreturn CCGetSpotLightShadowFactorHard(shadowPos, worldPos, shadowBias.x);\n}\n}\nfloat CCShadowFactorBase(vec4 shadowPos, vec3 N, vec2 shadowBias)\n{\nfloat realtimeShadow = 1.0;\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N, shadowBias.y);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nrealtimeShadow =  CCGetShadowFactorSoft2X(pos, shadowBias.x);\n}else if (pcf > 0.9) {\nrealtimeShadow = CCGetShadowFactorSoft(pos, shadowBias.x);\n}else {\nrealtimeShadow = CCGetShadowFactorHard(pos, shadowBias.x);\n}\nreturn mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n}\n#endif\n#if CC_USE_IBL\nlayout(set = 0, binding = 4) uniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nlayout(set = 0, binding = 6) uniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\nfloat specularIntensity;\n#if CC_RECEIVE_SHADOW\nvec2 shadowBias;\n#endif\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.08 * s.specularIntensity), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse / PI;\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\nshadow = CCShadowFactorBase(shadowPos, N, s.shadowBias);\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > EPSILON_LOWP) {\nfinalColor = diffuse * s.lightmap.rgb * shadow;\n}\n#endif\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nlayout(location = 0) in float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\nlayout(location = 1) in highp vec4 v_shadowPos;\n#if CC_RECEIVE_SHADOW\n#endif\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nlayout(location = 12) in vec3 v_luv;\nlayout(set = 2, binding = 10) uniform sampler2D cc_lightingMap;\n#endif\nlayout(location = 3) in highp vec3 v_position;\nlayout(location = 4) in mediump vec3 v_normal;\n#if CC_RECEIVE_SHADOW\nlayout(location = 2) in vec2 v_shadowBias;\n#endif\nlayout(location = 5) in mediump vec2 uvw;\nlayout(location = 6) in mediump vec2 uv0;\nlayout(location = 7) in mediump vec2 uv1;\nlayout(location = 8) in mediump vec2 uv2;\nlayout(location = 9) in mediump vec2 uv3;\nlayout(location = 11) in mediump vec3 diffuse;\nlayout(location = 10) in mediump vec3 luv;\nlayout(set = 1, binding = 1) uniform PbrParams {\nvec4 metallic;\nvec4 roughness;\n};\nlayout(set = 1, binding = 2) uniform sampler2D weightMap;\nlayout(set = 1, binding = 3) uniform sampler2D detailMap0;\nlayout(set = 1, binding = 4) uniform sampler2D detailMap1;\nlayout(set = 1, binding = 5) uniform sampler2D detailMap2;\nlayout(set = 1, binding = 6) uniform sampler2D detailMap3;\nlayout(set = 1, binding = 7) uniform sampler2D normalMap0;\nlayout(set = 1, binding = 8) uniform sampler2D normalMap1;\nlayout(set = 1, binding = 9) uniform sampler2D normalMap2;\nlayout(set = 1, binding = 10) uniform sampler2D normalMap3;\nlayout(set = 1, binding = 11) uniform sampler2D lightMap;\nvoid surf (out StandardSurface s) {\n#if LAYERS > 1\nvec4 w = texture(weightMap, uvw);\n#endif\nvec4 baseColor = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseColor = texture(detailMap0, uv0);\n#elif LAYERS == 2\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\nbaseColor += texture(detailMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseColor += texture(detailMap0, uv0) * w.r;\nbaseColor += texture(detailMap1, uv1) * w.g;\nbaseColor += texture(detailMap2, uv2) * w.b;\nbaseColor += texture(detailMap3, uv3) * w.a;\n#else\nbaseColor = texture(detailMap0, uv0);\n#endif\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\npackHighpData(s.position, s.position_fract_part, v_position);\n#else\ns.position = v_position;\n#endif\n#if USE_NORMALMAP\nvec4 baseNormal = vec4(0, 0, 0, 0);\n#if LAYERS == 1\nbaseNormal = texture(normalMap0, uv0);\n#elif LAYERS == 2\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\n#elif LAYERS == 3\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\nbaseNormal += texture(normalMap2, uv2) * w.b;\n#elif LAYERS == 4\nbaseNormal += texture(normalMap0, uv0) * w.r;\nbaseNormal += texture(normalMap1, uv1) * w.g;\nbaseNormal += texture(normalMap2, uv2) * w.b;\nbaseNormal += texture(normalMap3, uv3) * w.a;\n#else\nbaseNormal = texture(normalMap0, uv0);\n#endif\nvec3 tangent = vec3(1.0, 0.0, 0.0);\nvec3 binormal = vec3(0.0, 0.0, 1.0);\nbinormal = cross(tangent, v_normal);\ntangent = cross(v_normal, binormal);\nvec3 nmmp = baseNormal.xyz - vec3(0.5);\ns.normal =\nnmmp.x * normalize(tangent) +\nnmmp.y * normalize(binormal) +\nnmmp.z * normalize(v_normal);\n#else\ns.normal = v_normal;\n#endif\n#if CC_RECEIVE_SHADOW\ns.shadowBias = v_shadowBias;\n#endif\ns.albedo = vec4(SRGBToLinear(baseColor.rgb), 1.0);\ns.occlusion = 1.0;\n#if USE_PBR\ns.roughness = 0.0;\n#if LAYERS == 1\ns.roughness = roughness.x;\n#elif LAYERS == 2\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\n#elif LAYERS == 3\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\n#elif LAYERS == 4\ns.roughness += roughness.x * w.r;\ns.roughness += roughness.y * w.g;\ns.roughness += roughness.z * w.b;\ns.roughness += roughness.w * w.a;\n#else\ns.roughness = 1.0;\n#endif\ns.specularIntensity = 0.5;\ns.metallic = 0.0;\n#if LAYERS == 1\ns.specularIntensity = 0.5;\ns.metallic = metallic.x;\n#elif LAYERS == 2\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\n#elif LAYERS == 3\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\n#elif LAYERS == 4\ns.metallic += metallic.x * w.r;\ns.metallic += metallic.y * w.g;\ns.metallic += metallic.z * w.b;\ns.metallic += metallic.w * w.a;\n#else\ns.specularIntensity = 0.5;\ns.metallic = 0.0;\n#endif\n#else\ns.roughness = 1.0;\ns.specularIntensity = 0.5;\ns.metallic = 0.0;\n#endif\ns.emissive = vec3(0.0, 0.0, 0.0);\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nvec4 lightColor = texture(lightMap, luv.xy);\ns.lightmap = lightColor.xyz * luv.z;\ns.lightmap_test = luv.z;\n#endif\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n#define LIGHTS_PER_PASS 1\n#else\n#define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(set = 2, binding = 1) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = litRadiusSqr / max(litRadiusSqr, distSqr);\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(set = 1, binding = 12) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(set = 1, binding = 13) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(set = 1, binding = 14) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = PI * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nvec4 color = CCClusterShadingAdditive(s, v_shadowPos);\n#else\nvec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n#endif\nfragColorX = CCFragOutput(color);\n}\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\nlayout(location = 0) out vec4 fragColorX;\nvoid main () {\nStandardSurface s; surf(s);\nvec4 color = CCStandardShadingBase(s, v_shadowPos);\nCC_APPLY_FOG(color, s.position.xyz);\nfragColorX = CCFragOutput(color);\n}\n#elif CC_PIPELINE_TYPE == 1\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec2 float32x3_to_oct(in vec3 v) {\nvec2 p = v.xy * (1.0 / (abs(v.x) + abs(v.y) + abs(v.z)));\nreturn (v.z <= 0.0) ? ((1.0 - abs(p.yx)) * signNotZero(p)) : p;\n}\nlayout(location = 0) out vec4 fragColor0;\nlayout(location = 1) out vec4 fragColor1;\nlayout(location = 2) out vec4 fragColor2;\nvoid main () {\nStandardSurface s; surf(s);\nfragColor0 = s.albedo;\nfragColor1 = vec4(float32x3_to_oct(s.normal), s.roughness, s.metallic);\nfragColor2 = vec4(s.emissive, s.occlusion);\n}\n#endif"},{vert:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 0) out vec2 v_clip_depth;\nvec4 vert () {\nvec4 worldPos;\nworldPos.x = cc_matWorld[3][0] + a_position.x;\nworldPos.y = cc_matWorld[3][1] + a_position.y;\nworldPos.z = cc_matWorld[3][2] + a_position.z;\nworldPos.w = 1.0;\nvec4 clipPos = cc_matLightViewProj * worldPos;\nv_clip_depth = clipPos.zw;\nreturn clipPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec4 packDepthToRGBA (float depth) {\nvec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\nret = fract(ret);\nret -= vec4(ret.yzw, 0.0) / 255.0;\nreturn ret;\n}\nlayout(location = 0) in vec2 v_clip_depth;\nvec4 frag () {\nreturn packDepthToRGBA(v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nlayout(location = 6) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(location = 7) in vec4 a_matWorld0;\nlayout(location = 8) in vec4 a_matWorld1;\nlayout(location = 9) in vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nlayout(location = 10) in vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nlayout(location = 11) in vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\n#endif\n#if CC_USE_MORPH\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout vec4 In)\n{\nIn = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\n}\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if !USE_INSTANCING\n#if USE_BATCHING\nlayout(set = 2, binding = 0) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\n#endif\n#endif\nvoid CCGetWorldMatrix(out mat4 matWorld)\n{\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nlayout(location = 0) out float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\nCC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\n#if USE_VERTEX_COLOR\nlayout(location = 14) in lowp vec4 a_color;\nlayout(location = 1) out lowp vec4 v_color;\n#endif\n#if USE_TEXTURE\nlayout(location = 2) out vec2 v_uv;\nlayout(set = 1, binding = 0) uniform TexCoords {\nvec4 tilingOffset;\n};\n#endif\nvec4 vert () {\nvec4 position;\nCCVertInput(position);\nmat4 matWorld;\nCCGetWorldMatrix(matWorld);\n#if USE_TEXTURE\nv_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n#if SAMPLE_FROM_RT\nv_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n#endif\n#endif\n#if USE_VERTEX_COLOR\nv_color = a_color;\n#endif\nCC_TRANSFER_FOG(matWorld * position);\nreturn cc_matProj * (cc_matView * matWorld) * position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision highp float;\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nlayout(location = 0) in float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\nCC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\nfloat factor;\nCC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\nfloat factor = v_fog_factor;\n#endif\nCC_APPLY_FOG_BASE(color, factor);\n}\n#if USE_ALPHA_TEST\n#endif\n#if USE_TEXTURE\nlayout(location = 2) in vec2 v_uv;\nlayout(set = 1, binding = 2) uniform sampler2D mainTexture;\n#endif\nlayout(set = 1, binding = 1) uniform Constant {\nvec4 mainColor;\nvec4 colorScaleAndCutoff;\n};\n#if USE_VERTEX_COLOR\nlayout(location = 1) in lowp vec4 v_color;\n#endif\nvec4 frag () {\nvec4 o = mainColor;\no.rgb *= colorScaleAndCutoff.xyz;\n#if USE_VERTEX_COLOR\no.rgb *= SRGBToLinear(v_color.rgb);\no.a *= v_color.a;\n#endif\n#if USE_TEXTURE\nvec4 texColor = texture(mainTexture, v_uv);\ntexColor.rgb = SRGBToLinear(texColor.rgb);\no *= texColor;\n#endif\n#if USE_ALPHA_TEST\nif (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n#endif\nCC_APPLY_FOG(o);\nreturn CCFragOutput(o);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nlayout(location = 6) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(location = 7) in vec4 a_matWorld0;\nlayout(location = 8) in vec4 a_matWorld1;\nlayout(location = 9) in vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nlayout(location = 10) in vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nlayout(location = 11) in vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\n#endif\n#if CC_USE_MORPH\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) out vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(location = 0) in vec2 v_uv;\nlayout(set = 1, binding = 0) uniform BloomUBO {\nmediump vec4 texSize;\n};\nlayout(set = 1, binding = 1) uniform sampler2D outputResultMap;\nlayout(location = 0) out vec4 fragColor;\nfloat luminance(vec3 color) {\nreturn dot(color, vec3(0.2126, 0.7152, 0.0722));\n}\nvoid main() {\nvec3 color = texture(outputResultMap, v_uv).xyz;\nif (luminance(SRGBToLinear(color)) > texSize.z) {\nfragColor = vec4(color, 1.0);\n} else {\nfragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n}"},{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nlayout(location = 6) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(location = 7) in vec4 a_matWorld0;\nlayout(location = 8) in vec4 a_matWorld1;\nlayout(location = 9) in vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nlayout(location = 10) in vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nlayout(location = 11) in vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\n#endif\n#if CC_USE_MORPH\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) out vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in vec2 v_uv;\nlayout(set = 1, binding = 0) uniform BloomUBO {\nmediump vec4 texSize;\n};\nlayout(set = 1, binding = 1) uniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvec3 downsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main()\n{\nvec3 result = downsample4taps(v_uv, 1.0 / texSize.xy).rgb;\nfragColor = vec4(result, 1.0);\n}"},{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nlayout(location = 6) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(location = 7) in vec4 a_matWorld0;\nlayout(location = 8) in vec4 a_matWorld1;\nlayout(location = 9) in vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nlayout(location = 10) in vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nlayout(location = 11) in vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\n#endif\n#if CC_USE_MORPH\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) out vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in vec2 v_uv;\nlayout(set = 1, binding = 0) uniform BloomUBO {\nmediump vec4 texSize;\n};\nlayout(set = 1, binding = 1) uniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvec3 upsample4taps(vec2 uv, vec2 halfpixel) {\nvec3 sum = texture(bloomTexture, uv + vec2(-halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(halfpixel.x, -halfpixel.y)).xyz;\nsum += texture(bloomTexture, uv + vec2(-halfpixel.x, -halfpixel.y)).xyz;\nreturn sum / 4.0;\n}\nvoid main() {\nvec3 result = upsample4taps(v_uv, 0.5 / texSize.xy).rgb;\nfragColor = vec4(result, 1.0);\n}"},{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nlayout(location = 6) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(location = 7) in vec4 a_matWorld0;\nlayout(location = 8) in vec4 a_matWorld1;\nlayout(location = 9) in vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nlayout(location = 10) in vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nlayout(location = 11) in vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\n#endif\n#if CC_USE_MORPH\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) out vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in vec2 v_uv;\nlayout(set = 1, binding = 0) uniform BloomUBO {\nmediump vec4 texSize;\n};\nlayout(set = 1, binding = 1) uniform sampler2D outputResultMap;\nlayout(set = 1, binding = 2) uniform sampler2D bloomTexture;\nlayout(location = 0) out vec4 fragColor;\nvoid main() {\nvec4 hdrColor = texture(outputResultMap, v_uv);\nvec3 bloomColor = texture(bloomTexture, v_uv).rgb;\nvec3 result = hdrColor.rgb + bloomColor * texSize.w * hdrColor.a;\nfragColor = vec4(result, hdrColor.a);\n}"}],[{vert:"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nlayout(location = 6) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(location = 7) in vec4 a_matWorld0;\nlayout(location = 8) in vec4 a_matWorld1;\nlayout(location = 9) in vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nlayout(location = 10) in vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nlayout(location = 11) in vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\n#endif\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) out vec2 v_uv;\nvoid main () {\nvec4 position;\nposition = vec4(a_position, 1.0);\nposition.xy = cc_cameraPos.w == 0.0 ? vec2(position.xy.x, -position.xy.y) : position.xy;\ngl_Position = vec4(position.x, position.y, 1.0, 1.0);\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nhighp float unpackHighpData (float mainPart, float modPart) {\nhighp float data = mainPart;\nreturn data + modPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\nhighp float data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\nhighp vec2 data = mainPart;\nreturn data + modPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\nhighp vec2 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\nhighp vec3 data = mainPart;\nreturn data + modPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\nhighp vec3 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\nhighp vec4 data = mainPart;\nreturn data + modPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\nhighp vec4 data = mainPart * modValue;\nreturn data + modPart * modValue;\n}\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\nfloat dist = length(viewPos);\nreturn (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\nvec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\nreturn CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\nlayout(set = 0, binding = 3) uniform highp sampler2D cc_shadowMap;\nlayout(set = 0, binding = 5) uniform highp sampler2D cc_spotLightingMap;\nvec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias)\n{\nvec4 newShadowPos = shadowPos;\nif(normalBias > EPSILON_LOWP)\n{\nvec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\nif(viewNormal.z < 0.1)\nnewShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n}\nreturn newShadowPos;\n}\nvec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n{\nvec3 viewSpacePos;\nviewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\nviewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\nviewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\nvec4 clipSpacePos;\nclipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\nclipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\nif (cc_shadowNFLSInfo.z > EPSILON) {\nclipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\nclipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n}\nreturn clipSpacePos;\n}\nvec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n{\nfloat coeffA = cc_shadowProjDepthInfo.x;\nfloat coeffB = cc_shadowProjDepthInfo.y;\nfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\nviewSpacePos_z += viewspaceDepthBias;\nvec4 result = shadowPos;\nresult.z = viewSpacePos_z * coeffA + coeffB;\nreturn result;\n}\nfloat CCGetShadowFactorHard (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_shadowMap, clipPos.xy).x;\n}\nshadow = step(clipPos.z, closestDepth);\nreturn shadow;\n}\nfloat CCGetShadowFactorSoft (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetShadowFactorSoft2X (vec4 shadowPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat offsetDepth = clipPos.z;\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat shadow = 0.0;\nfloat closestDepth = 0.0;\nfloat depth = clipPos.z;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nclosestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n} else {\nclosestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n}\nshadow = step(depth, closestDepth);\nreturn shadow;\n}\nfloat CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\nvec2 clipPos_offset = clipPos.xy + oneTap;\nfloat block0, block1, block2, block3;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n}\nfloat coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block2, block3, coefX);\nfloat coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\nreturn mix(resultX, resultY, coefY);\n}\nfloat CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos, float bias) {\nvec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, bias);\nvec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\nif (clipPos.x < 0.0 || clipPos.x > 1.0 ||\nclipPos.y < 0.0 || clipPos.y > 1.0 ||\nclipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\nclipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\nfloat depth = 0.0;\nif (cc_shadowNFLSInfo.z > EPSILON) {\ndepth = CCGetLinearDepth(worldPos);\n} else {\ndepth = clipPos.z;\n}\nvec2 mapSize = cc_shadowWHPBInfo.xy;\nvec2 oneTap = 1.0 / mapSize;\nfloat clipPos_offset_L = clipPos.x - oneTap.x;\nfloat clipPos_offset_R = clipPos.x + oneTap.x;\nfloat clipPos_offset_U = clipPos.y - oneTap.y;\nfloat clipPos_offset_D = clipPos.y + oneTap.y;\nfloat block0, block1, block2, block3, block4, block5, block6, block7, block8;\nif (cc_shadowLPNNInfo.y > EPSILON) {\nblock0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\nblock8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n} else {\nblock0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\nblock1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\nblock2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\nblock3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\nblock4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\nblock5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\nblock6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\nblock7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\nblock8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n}\nfloat coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\nfloat coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\nfloat shadow = 0.0;\nfloat resultX = mix(block0, block1, coefX);\nfloat resultY = mix(block3, block4, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block1, block2, coefX);\nresultY = mix(block4, block5, coefX);\nshadow += mix(resultX , resultY, coefY);\nresultX = mix(block3, block4, coefX);\nresultY = mix(block6, block7, coefX);\nshadow += mix(resultX, resultY, coefY);\nresultX = mix(block4, block5, coefX);\nresultY = mix(block7, block8, coefX);\nshadow += mix(resultX, resultY, coefY);\nreturn shadow * 0.25;\n}\nfloat CCSpotShadowFactorBase(vec4 shadowPos, vec3 worldPos, vec2 shadowBias)\n{\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nreturn CCGetSpotLightShadowFactorSoft2X(shadowPos, worldPos, shadowBias.x);\n}else if (pcf > 0.9) {\nreturn CCGetSpotLightShadowFactorSoft(shadowPos, worldPos, shadowBias.x);\n}else {\nreturn CCGetSpotLightShadowFactorHard(shadowPos, worldPos, shadowBias.x);\n}\n}\nfloat CCShadowFactorBase(vec4 shadowPos, vec3 N, vec2 shadowBias)\n{\nfloat realtimeShadow = 1.0;\nvec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N, shadowBias.y);\nfloat pcf = cc_shadowWHPBInfo.z;\nif (pcf > 1.9) {\nrealtimeShadow =  CCGetShadowFactorSoft2X(pos, shadowBias.x);\n}else if (pcf > 0.9) {\nrealtimeShadow = CCGetShadowFactorSoft(pos, shadowBias.x);\n}else {\nrealtimeShadow = CCGetShadowFactorHard(pos, shadowBias.x);\n}\nreturn mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n}\n#endif\n#if CC_USE_IBL\nlayout(set = 0, binding = 4) uniform samplerCube cc_environment;\nvec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\nreturn textureLod(tex, coord, lod);\n}\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\n#if CC_USE_DIFFUSEMAP\nlayout(set = 0, binding = 6) uniform samplerCube cc_diffuseMap;\n#endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\nvec3 NxH = cross(N, H);\nfloat OneMinusNoHSqr = dot(NxH, NxH);\nfloat a = roughness * roughness;\nfloat n = NoH * a;\nfloat p = a / (OneMinusNoHSqr + n * n);\nreturn p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\nreturn (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\nconst vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\nconst vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\nvec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\nAB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\nreturn specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\nvec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n#if CC_USE_IBL\nfloat mip = roughness * mipCount;\nfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\nfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\nvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\nvec4 filtered = texture(cc_environment, R);\n#if CC_USE_IBL == 2\nbiased.rgb = unpackRGBE(biased);\nfiltered.rgb = unpackRGBE(filtered);\n#else\nbiased.rgb = SRGBToLinear(biased.rgb);\nfiltered.rgb = SRGBToLinear(filtered.rgb);\n#endif\nreturn mix(biased.rgb, filtered.rgb, denoiseIntensity);\n#else\nreturn vec3(0.0, 0.0, 0.0);\n#endif\n}\n#endif\nstruct StandardSurface {\nvec4 albedo;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nvec3 position, position_fract_part;\n#else\nvec3 position;\n#endif\nvec3 normal;\nvec3 emissive;\nvec3 lightmap;\nfloat lightmap_test;\nfloat roughness;\nfloat metallic;\nfloat occlusion;\nfloat specularIntensity;\n#if CC_RECEIVE_SHADOW\nvec2 shadowBias;\n#endif\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.08 * s.specularIntensity), s.albedo.rgb, s.metallic);\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 L = normalize(-cc_mainLitDir.xyz);\nvec3 H = normalize(L + V);\nfloat NH = max(dot(N, H), 0.0);\nfloat NL = max(dot(N, L), 0.0);\nvec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\nvec3 diffuseContrib = diffuse / PI;\nvec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\nvec3 dirlightContrib = (diffuseContrib + specularContrib);\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (NL > 0.0 && cc_mainLitDir.w > 0.0) {\nshadow = CCShadowFactorBase(shadowPos, N, s.shadowBias);\n}\n#endif\ndirlightContrib *= shadow;\nfinalColor *= dirlightContrib;\n#if CC_USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\nif (s.lightmap_test > EPSILON_LOWP) {\nfinalColor = diffuse * s.lightmap.rgb * shadow;\n}\n#endif\nfloat fAmb = 0.5 - N.y * 0.5;\nvec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n#if CC_USE_IBL\n#if CC_USE_DIFFUSEMAP\nvec4 diffuseMap = texture(cc_diffuseMap, N);\n#if CC_USE_DIFFUSEMAP == 2\nambDiff = unpackRGBE(diffuseMap);\n#else\nambDiff = SRGBToLinear(diffuseMap.rgb);\n#endif\n#endif\nvec3 R = normalize(reflect(-V, N));\n#if USE_REFLECTION_DENOISE\nvec3 env = GetEnvReflectionWithMipFiltering(R, s.roughness, cc_ambientGround.w, 0.6);\n#else\nvec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n#if CC_USE_IBL == 2\nvec3 env = unpackRGBE(envmap);\n#else\nvec3 env = SRGBToLinear(envmap.rgb);\n#endif\n#endif\nfinalColor += env * cc_ambientSky.w * specular * s.occlusion;\n#endif\nfinalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\nfinalColor += s.emissive;\nreturn vec4(finalColor, s.albedo.a);\n}\n#if CC_PIPELINE_TYPE == 0\n#define LIGHTS_PER_PASS 1\n#else\n#define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nlayout(set = 2, binding = 1) uniform CCForwardLight {\nhighp vec4 cc_lightPos[LIGHTS_PER_PASS];\nvec4 cc_lightColor[LIGHTS_PER_PASS];\nvec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\nvec4 cc_lightDir[LIGHTS_PER_PASS];\n};\n#endif\nfloat SmoothDistAtt (float distSqr, float invSqrAttRadius) {\nfloat factor = distSqr * invSqrAttRadius;\nfloat smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\nreturn smoothFactor * smoothFactor;\n}\nfloat GetDistAtt (float distSqr, float invSqrAttRadius) {\nfloat attenuation = 1.0 / max(distSqr, 0.01*0.01);\nattenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\nreturn attenuation;\n}\nfloat GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\nfloat cd = dot(litDir, L);\nfloat attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\nreturn (attenuation * attenuation);\n}\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\nvec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.0);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nint numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\nfor (int i = 0; i < LIGHTS_PER_PASS; i++) {\nif (i >= numLights) break;\nvec3 SLU = cc_lightPos[i].xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.0);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = cc_lightSizeRangeAngle[i].x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = litRadiusSqr / max(litRadiusSqr, distSqr);\nfloat attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (cc_lightPos[i].w > 0.0) {\nfloat cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\nfloat cosOuter = cc_lightSizeRangeAngle[i].z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = cc_lightColor[i].rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (cc_lightPos[i].w > 0.0 && cc_lightSizeRangeAngle[i].w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nlayout(set = 1, binding = 4) readonly buffer b_ccLightsBuffer { vec4 b_ccLights[]; };\nlayout(set = 1, binding = 5) readonly buffer b_clusterLightIndicesBuffer { uint b_clusterLightIndices[]; };\nlayout(set = 1, binding = 6) readonly buffer b_clusterLightGridBuffer { uvec4 b_clusterLightGrid[]; };\nstruct CCLight\n{\nvec4 cc_lightPos;\nvec4 cc_lightColor;\nvec4 cc_lightSizeRangeAngle;\nvec4 cc_lightDir;\n};\nstruct Cluster\n{\nvec3 minBounds;\nvec3 maxBounds;\n};\nstruct LightGrid\n{\nuint offset;\nuint ccLights;\n};\nCCLight getCCLight(uint i)\n{\nCCLight light;\nlight.cc_lightPos = b_ccLights[4u * i + 0u];\nlight.cc_lightColor = b_ccLights[4u * i + 1u];\nlight.cc_lightSizeRangeAngle = b_ccLights[4u * i + 2u];\nlight.cc_lightDir = b_ccLights[4u * i + 3u];\nreturn light;\n}\nLightGrid getLightGrid(uint cluster)\n{\nuvec4 gridvec = b_clusterLightGrid[cluster];\nLightGrid grid;\ngrid.offset = gridvec.x;\ngrid.ccLights = gridvec.y;\nreturn grid;\n}\nuint getGridLightIndex(uint start, uint offset)\n{\nreturn b_clusterLightIndices[start + offset];\n}\nuint getClusterZIndex(vec4 worldPos)\n{\nfloat scale = float(24) / log(cc_nearFar.y / cc_nearFar.x);\nfloat bias = -(float(24) * log(cc_nearFar.x) / log(cc_nearFar.y / cc_nearFar.x));\nfloat eyeDepth = -(cc_matView * worldPos).z;\nuint zIndex = uint(max(log(eyeDepth) * scale + bias, 0.0));\nreturn zIndex;\n}\nuint getClusterIndex(vec4 fragCoord, vec4 worldPos)\n{\nuint zIndex = getClusterZIndex(worldPos);\nfloat clusterSizeX = ceil(cc_viewPort.z / float(16));\nfloat clusterSizeY = ceil(cc_viewPort.w / float(8));\nuvec3 indices = uvec3(uvec2(fragCoord.xy / vec2(clusterSizeX, clusterSizeY)), zIndex);\nuint cluster = (16u * 8u) * indices.z + 16u * indices.y + indices.x;\nreturn cluster;\n}\nvec4 CCClusterShadingAdditive (StandardSurface s, vec4 shadowPos) {\nvec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\nvec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\nvec3 diffuseContrib = diffuse / PI;\nvec3 position;\n#if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\nposition = unpackHighpData(s.position, s.position_fract_part);\n#else\nposition = s.position;\n#endif\nvec3 N = normalize(s.normal);\nvec3 V = normalize(cc_cameraPos.xyz - position);\nfloat NV = max(abs(dot(N, V)), 0.001);\nspecular = BRDFApprox(specular, s.roughness, NV);\nvec3 finalColor = vec3(0.0);\nuint cluster = getClusterIndex(gl_FragCoord, vec4(position, 1.0));\nLightGrid grid = getLightGrid(cluster);\nuint numLights = grid.ccLights;\nfor (uint i = 0u; i < 100u; i++) {\nif (i >= numLights) break;\nuint lightIndex = getGridLightIndex(grid.offset, i);\nCCLight light = getCCLight(lightIndex);\nvec3 SLU = light.cc_lightPos.xyz - position;\nvec3 SL = normalize(SLU);\nvec3 SH = normalize(SL + V);\nfloat SNL = max(dot(N, SL), 0.001);\nfloat SNH = max(dot(N, SH), 0.0);\nfloat distSqr = dot(SLU, SLU);\nfloat litRadius = light.cc_lightSizeRangeAngle.x;\nfloat litRadiusSqr = litRadius * litRadius;\nfloat illum = PI * (litRadiusSqr / max(litRadiusSqr , distSqr));\nfloat attRadiusSqrInv = 1.0 / max(light.cc_lightSizeRangeAngle.y, 0.01);\nattRadiusSqrInv *= attRadiusSqrInv;\nfloat att = GetDistAtt(distSqr, attRadiusSqrInv);\nvec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\nif (light.cc_lightPos.w > 0.0) {\nfloat cosInner = max(dot(-light.cc_lightDir.xyz, SL), 0.01);\nfloat cosOuter = light.cc_lightSizeRangeAngle.z;\nfloat litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\nfloat litAngleOffset = -cosOuter * litAngleScale;\natt *= GetAngleAtt(SL, -light.cc_lightDir.xyz, litAngleScale, litAngleOffset);\n}\nvec3 lightColor = light.cc_lightColor.rgb;\nfloat shadow = 1.0;\n#if CC_RECEIVE_SHADOW\nif (light.cc_lightPos.w > 0.0) {\nshadow = CCSpotShadowFactorBase(shadowPos, position, s.shadowBias);\n}\n#endif\nlightColor *= shadow;\nfinalColor += SNL * lightColor * light.cc_lightColor.w * illum * att * (diffuseContrib + lspec);\n}\nreturn vec4(finalColor, 0.0);\n}\n#endif\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nfloat LinearFog(vec4 pos) {\nvec4 wPos = pos;\nfloat cam_dis = distance(cc_cameraPos, wPos);\nfloat fogStart = cc_fogBase.x;\nfloat fogEnd = cc_fogBase.y;\nreturn clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * fogDensity);\nreturn f;\n}\nfloat ExpSquaredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat fogStart = cc_fogBase.x;\nfloat fogDensity = cc_fogBase.z;\nfloat cam_dis = max(distance(cc_cameraPos, wPos) - fogStart, 0.0) / fogAtten * 4.;\nfloat f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\nreturn f;\n}\nfloat LayeredFog(vec4 pos) {\nvec4 wPos = pos;\nfloat fogAtten = cc_fogAdd.z;\nfloat _FogTop = cc_fogAdd.x;\nfloat _FogRange = cc_fogAdd.y;\nvec3 camWorldProj = cc_cameraPos.xyz;\ncamWorldProj.y = 0.;\nvec3 worldPosProj = wPos.xyz;\nworldPosProj.y = 0.;\nfloat fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\nfloat fDeltaY, fDensityIntegral;\nif (cc_cameraPos.y > _FogTop) {\nif (wPos.y < _FogTop) {\nfDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\nfDensityIntegral = fDeltaY * fDeltaY * 0.5;\n} else {\nfDeltaY = 0.;\nfDensityIntegral = 0.;\n}\n} else {\nif (wPos.y < _FogTop) {\nfloat fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfloat fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\nfDeltaY = abs(fDeltaA - fDeltaB);\nfDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n} else {\nfDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\nfDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n}\n}\nfloat fDensity;\nif (fDeltaY != 0.) {\nfDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n} else {\nfDensity = 0.;\n}\nfloat f = exp(-fDensity);\nreturn f;\n}\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\nfactor = LinearFog(pos);\n#elif CC_USE_FOG == 1\nfactor = ExpFog(pos);\n#elif CC_USE_FOG == 2\nfactor = ExpSquaredFog(pos);\n#elif CC_USE_FOG == 3\nfactor = LayeredFog(pos);\n#else\nfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\ncolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\nvec2 signNotZero(vec2 v) {\nreturn vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n}\nvec3 oct_to_float32x3(vec2 e) {\nvec3 v = vec3(e.xy, 1.0 - abs(e.x) - abs(e.y));\nif (v.z < 0.0) v.xy = (1.0 - abs(v.yx)) * signNotZero(v.xy);\nreturn normalize(v);\n}\nvec4 screen2WS(vec3 coord) {\nvec3 ndc = vec3(\n2.0 * (coord.x - cc_viewPort.x) / cc_viewPort.z - 1.0,\n2.0 * (coord.y - cc_viewPort.y) / cc_viewPort.w - 1.0,\ncoord.z);\nvec4 world = ((cc_matViewProjInv) * (vec4(ndc, 1.0)));\nworld      = world / world.w;\nreturn world;\n}\nlayout(location = 0) in vec2 v_uv;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nlayout(set = 1, binding = 0, input_attachment_index = 0) uniform subpassInput gbuffer_albedoMap;\nlayout(set = 1, binding = 1, input_attachment_index = 1) uniform subpassInput gbuffer_normalMap;\nlayout(set = 1, binding = 2, input_attachment_index = 2) uniform subpassInput gbuffer_emissiveMap;\nlayout(set = 1, binding = 3, input_attachment_index = 3) uniform subpassInput depth_stencil;\n#else\nlayout(set = 1, binding = 0) uniform sampler2D gbuffer_albedoMap;\nlayout(set = 1, binding = 1) uniform sampler2D gbuffer_normalMap;\nlayout(set = 1, binding = 2) uniform sampler2D gbuffer_emissiveMap;\nlayout(set = 1, binding = 3) uniform sampler2D depth_stencil;\n#endif\n#if !CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT || __VERSION__ >= 450\nlayout(location = 0) out vec4 fragColor;\n#endif\nvoid main () {\nStandardSurface s;\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nvec4 albedoMap = subpassLoad(gbuffer_albedoMap);\nvec4 normalMap = subpassLoad(gbuffer_normalMap);\nvec4 emissiveMap = subpassLoad(gbuffer_emissiveMap);\nfloat depth = subpassLoad(depth_stencil).x;\n#else\nvec4 albedoMap = texture(gbuffer_albedoMap,v_uv);\nvec4 normalMap = texture(gbuffer_normalMap,v_uv);\nvec4 emissiveMap = texture(gbuffer_emissiveMap,v_uv);\nfloat depth = texture(depth_stencil, v_uv).x;\n#endif\ns.albedo = albedoMap;\nvec3 position = screen2WS(vec3(gl_FragCoord.xy, depth)).xyz;\ns.position = position;\ns.roughness = normalMap.z;\ns.normal = oct_to_float32x3(normalMap.xy);\ns.specularIntensity = 0.5;\ns.metallic = normalMap.w;\ns.emissive = emissiveMap.xyz;\ns.occlusion = emissiveMap.w;\nfloat fogFactor;\nCC_TRANSFER_FOG_BASE(vec4(position, 1), fogFactor);\nvec4 shadowPos;\nshadowPos = cc_matLightViewProj * vec4(position, 1);\nvec4 color = CCStandardShadingBase(s, shadowPos) +\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 1\nCCClusterShadingAdditive(s, shadowPos);\n#else\nCCStandardShadingAdditive(s, shadowPos);\n#endif\nCC_APPLY_FOG_BASE(color, fogFactor);\ncolor = CCFragOutput(color);\n#if CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT\nfragColor = color;\n#else\nfragColor = color;\n#endif\n}"}],[{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nlayout(location = 6) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(location = 7) in vec4 a_matWorld0;\nlayout(location = 8) in vec4 a_matWorld1;\nlayout(location = 9) in vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nlayout(location = 10) in vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nlayout(location = 11) in vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\n#endif\n#if CC_USE_MORPH\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout vec4 In)\n{\nIn = vec4(a_position, 1.0);\n#if CC_USE_MORPH\napplyMorph(In);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In);\n#endif\n}\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if !USE_INSTANCING\n#if USE_BATCHING\nlayout(set = 2, binding = 0) uniform CCLocalBatched {\nhighp mat4 cc_matWorlds[10];\n};\n#else\nlayout(set = 2, binding = 0) uniform CCLocal {\nhighp mat4 cc_matWorld;\nhighp mat4 cc_matWorldIT;\nhighp vec4 cc_lightingMapUVParam;\nhighp vec4 cc_localShadowBias;\n};\n#endif\n#endif\nvoid CCGetWorldMatrix(out mat4 matWorld)\n{\n#if USE_INSTANCING\nmatWorld = mat4(\nvec4(a_matWorld0.xyz, 0.0),\nvec4(a_matWorld1.xyz, 0.0),\nvec4(a_matWorld2.xyz, 0.0),\nvec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n);\n#elif USE_BATCHING\nmatWorld = cc_matWorlds[int(a_dyn_batch_id)];\n#else\nmatWorld = cc_matWorld;\n#endif\n}\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nlayout(location = 0) out float v_dist;\nvec4 vert () {\nvec4 position;\nCCVertInput(position);\nmat4 matWorld;\nCCGetWorldMatrix(matWorld);\nvec3 P = (matWorld * position).xyz;\nvec3 L = cc_mainLitDir.xyz;\nvec3 N = cc_planarNDInfo.xyz;\nfloat d = cc_planarNDInfo.w + 0.001;\nfloat dist = (-d - dot(P, N)) / (dot(L, N) + 0.0001);\nvec3 shadowPos = P + L * dist;\nvec3 view = normalize(cc_cameraPos.xyz - shadowPos);\nfloat viewLength = length(cc_cameraPos.xyz - shadowPos);\nshadowPos += view * min(1.0, 0.005 * viewLength);\nposition = cc_matProj * cc_matView * vec4(shadowPos, 1.0);\nv_dist = dist;\nreturn position;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 2) uniform CCShadow {\nhighp mat4 cc_matLightPlaneProj;\nhighp mat4 cc_matLightView;\nhighp mat4 cc_matLightViewProj;\nhighp vec4 cc_shadowInvProjDepthInfo;\nhighp vec4 cc_shadowProjDepthInfo;\nhighp vec4 cc_shadowProjInfo;\nmediump vec4 cc_shadowNFLSInfo;\nmediump vec4 cc_shadowWHPBInfo;\nmediump vec4 cc_shadowLPNNInfo;\nlowp vec4 cc_shadowColor;\nmediump vec4 cc_planarNDInfo;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in float v_dist;\nvec4 frag () {\nif(v_dist < 0.0)\ndiscard;\nreturn CCFragOutput(cc_shadowColor);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\nrgba = rgba * 255.0;\nhighp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\nhighp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\nhighp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\nreturn Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nlayout(location = 6) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(location = 7) in vec4 a_matWorld0;\nlayout(location = 8) in vec4 a_matWorld1;\nlayout(location = 9) in vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nlayout(location = 10) in vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nlayout(location = 11) in vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\nint getVertexId() {\nreturn gl_VertexIndex;\n}\n#endif\n#if CC_USE_MORPH\nlayout(set = 2, binding = 4) uniform CCMorph {\nvec4 cc_displacementWeights[15];\nvec4 cc_displacementTextureInfo;\n};\nvec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\nfloat pixelIndexF = float(pixelIndex);\nfloat x = mod(pixelIndexF, textureResolution.x);\nfloat y = floor(pixelIndexF / textureResolution.x);\nreturn vec2(x, y);\n}\nvec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\nreturn (vec2(location.x, location.y) + .5) / textureResolution;\n}\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\nivec2 texSize = textureSize(tex, 0);\nreturn texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n}\n#else\nvec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\nint pixelIndex = elementIndex * 4;\nvec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\nvec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\nvec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\nreturn vec4(\ndecode32(texture(tex, x)),\ndecode32(texture(tex, y)),\ndecode32(texture(tex, z)),\n1.0\n);\n}\n#endif\nfloat getDisplacementWeight(int index) {\nint quot = index / 4;\nint remainder = index - quot * 4;\nif (remainder == 0) {\nreturn cc_displacementWeights[quot].x;\n} else if (remainder == 1) {\nreturn cc_displacementWeights[quot].y;\n} else if (remainder == 2) {\nreturn cc_displacementWeights[quot].z;\n} else {\nreturn cc_displacementWeights[quot].w;\n}\n}\nvec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n#if CC_MORPH_PRECOMPUTED\nreturn fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n#else\nvec3 result = vec3(0, 0, 0);\nint nVertices = int(cc_displacementTextureInfo.z);\nfor (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\nresult += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n}\nreturn result;\n#endif\n}\n#if CC_MORPH_TARGET_HAS_POSITION\nlayout(set = 2, binding = 7) uniform sampler2D cc_PositionDisplacements;\nvec3 getPositionDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nlayout(set = 2, binding = 8) uniform sampler2D cc_NormalDisplacements;\nvec3 getNormalDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n}\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\nlayout(set = 2, binding = 9) uniform sampler2D cc_TangentDisplacements;\nvec3 getTangentDisplacement(int vertexId) {\nreturn getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n}\n#endif\nvoid applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nint vertexId = getVertexId();\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_NORMAL\nnormal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n#endif\n#if CC_MORPH_TARGET_HAS_TANGENT\ntangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n#endif\n}\nvoid applyMorph (inout vec4 position) {\n#if CC_MORPH_TARGET_HAS_POSITION\nposition.xyz = position.xyz + getPositionDisplacement(getVertexId());\n#endif\n}\n#endif\n#if CC_USE_SKINNING\n#if CC_USE_BAKED_ANIMATION\nlayout(set = 2, binding = 3) uniform CCSkinningTexture {\nhighp vec4 cc_jointTextureInfo;\n};\nlayout(set = 2, binding = 2) uniform CCSkinningAnimation {\nhighp vec4 cc_jointAnimInfo;\n};\nlayout(set = 2, binding = 6) uniform highp sampler2D cc_jointTexture;\nvoid CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n{\n#if USE_INSTANCING\nhighp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n#else\nhighp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n#endif\ninvSize = cc_jointTextureInfo.w;\nhighp float tempY = floor(temp * invSize);\nx = floor(temp - tempY * cc_jointTextureInfo.x);\ny = (tempY + 0.5) * invSize;\n}\n#else\nlayout(set = 2, binding = 3) uniform CCSkinning {\nhighp vec4 cc_joints[30 * 3];\n};\n#endif\n#if CC_USE_BAKED_ANIMATION\n#if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(3.0, i, x, y, invSize);\nvec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\nvec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\nvec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#else\nmat4 getJointMatrix (float i) {\nhighp float x, y, invSize;\nCCGetJointTextureCoords(12.0, i, x, y, invSize);\nvec4 v1 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n);\nvec4 v2 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n);\nvec4 v3 = vec4(\ndecode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\ndecode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n);\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\n#else\nmat4 getJointMatrix (float i) {\nint idx = int(i);\nvec4 v1 = cc_joints[idx * 3];\nvec4 v2 = cc_joints[idx * 3 + 1];\nvec4 v3 = cc_joints[idx * 3 + 2];\nreturn mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n}\n#endif\nmat4 skinMatrix () {\nvec4 joints = vec4(a_joints);\nreturn getJointMatrix(joints.x) * a_weights.x\n+ getJointMatrix(joints.y) * a_weights.y\n+ getJointMatrix(joints.z) * a_weights.z\n+ getJointMatrix(joints.w) * a_weights.w;\n}\nvoid CCSkin (inout vec4 position) {\nmat4 m = skinMatrix();\nposition = m * position;\n}\nvoid CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\nmat4 m = skinMatrix();\nposition = m * position;\nnormal = (m * vec4(normal, 0.0)).xyz;\ntangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n}\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\nIn.position = vec4(a_position, 1.0);\nIn.normal = a_normal;\nIn.tangent = a_tangent;\n#if CC_USE_MORPH\napplyMorph(In.position, In.normal, In.tangent);\n#endif\n#if CC_USE_SKINNING\nCCSkin(In.position, In.normal, In.tangent);\n#endif\n}\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) out vec2 v_uv;\nvoid main () {\nStandardVertInput In;\nCCVertInput(In);\nIn.position.xy = cc_cameraPos.w == 0.0 ? vec2(In.position.xy.x, -In.position.xy.y) : In.position.xy;\ngl_Position = In.position;\ngl_Position.y = gl_Position.y;\nv_uv = a_texCoord;\n}",frag:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#if ANTIALIAS_TYPE == 1\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\nvec2 v_rgbNW, vec2 v_rgbNE,\nvec2 v_rgbSW, vec2 v_rgbSE,\nvec2 v_rgbM) {\nvec4 color;\nmediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\nvec3 rgbNW = texture(tex, v_rgbNW).xyz;\nvec3 rgbNE = texture(tex, v_rgbNE).xyz;\nvec3 rgbSW = texture(tex, v_rgbSW).xyz;\nvec3 rgbSE = texture(tex, v_rgbSE).xyz;\nvec4 texColor = texture(tex, v_rgbM);\nvec3 rgbM  = texColor.xyz;\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat lumaNW = dot(rgbNW, luma);\nfloat lumaNE = dot(rgbNE, luma);\nfloat lumaSW = dot(rgbSW, luma);\nfloat lumaSE = dot(rgbSE, luma);\nfloat lumaM  = dot(rgbM,  luma);\nfloat lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\nfloat lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\nmediump vec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n(0.25 * (1.0 / 8.0)), (1.0/ 128.0));\nfloat rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\ndir = min(vec2(8.0, 8.0),\nmax(vec2(-8.0, -8.0),\ndir * rcpDirMin)) * inverseVP;\nvec3 rgbA = 0.5 * (\ntexture(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\ntexture(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture(tex, fragCoord * inverseVP + dir * -0.5).xyz +\ntexture(tex, fragCoord * inverseVP + dir * 0.5).xyz);\nfloat lumaB = dot(rgbB, luma);\nif ((lumaB < lumaMin) || (lumaB > lumaMax))\ncolor = vec4(rgbA, texColor.a);\nelse\ncolor = vec4(rgbB, texColor.a);\nreturn color;\n}\n#endif\nlayout(location = 0) in vec2 v_uv;\nlayout(set = 1, binding = 0) uniform sampler2D outputResultMap;\nlayout(location = 0) out vec4 fragColor;\nvoid texcoords(vec2 fragCoord, vec2 resolution,\nout vec2 v_rgbNW, out vec2 v_rgbNE,\nout vec2 v_rgbSW, out vec2 v_rgbSE,\nout vec2 v_rgbM) {\nvec2 inverseVP = 1.0 / resolution.xy;\nv_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\nv_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\nv_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\nv_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\nv_rgbM = vec2(fragCoord * inverseVP);\n}\nvoid main () {\nmediump vec2 v_rgbNW;\nmediump vec2 v_rgbNE;\nmediump vec2 v_rgbSW;\nmediump vec2 v_rgbSE;\nmediump vec2 v_rgbM;\n#if ANTIALIAS_TYPE == 1\nvec2 resolution = cc_screenSize.xy;\nvec2 fragCoord = v_uv * resolution;\ntexcoords(fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\nfragColor = fxaa(outputResultMap, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n#else\nfragColor = texture(outputResultMap, v_uv);\n#endif\n}"}],[{vert:"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nstruct StandardVertInput {\nhighp vec4 position;\nvec3 normal;\nvec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_SKINNING\nlayout(location = 4) in u32vec4 a_joints;\nlayout(location = 5) in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n#if CC_USE_BAKED_ANIMATION\nlayout(location = 6) in highp vec4 a_jointAnimInfo;\n#endif\nlayout(location = 7) in vec4 a_matWorld0;\nlayout(location = 8) in vec4 a_matWorld1;\nlayout(location = 9) in vec4 a_matWorld2;\n#if CC_USE_LIGHTMAP\nlayout(location = 10) in vec4 a_lightingMapUVParam;\n#endif\n#if CC_RECEIVE_SHADOW\nlayout(location = 11) in vec2 a_localShadowBias;\n#endif\n#elif USE_BATCHING\nlayout(location = 12) in float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\n#endif\nlayout(location = 0) out mediump vec4 viewDir;\nvec4 vert () {\nviewDir = vec4(a_position, 1.0);\nmat4 matViewRotOnly = mat4(mat3(cc_matView));\nvec4 pos = matViewRotOnly * viewDir;\nif (cc_matProj[3].w > 0.0) {\nmat4 matProj = cc_matProj;\nmatProj[0].x = 5.2;\nmatProj[1].y = 2.6;\nmatProj[2].zw = vec2(-1.0);\nmatProj[3].zw = vec2(0.0);\npos = matProj * pos;\n} else {\npos = cc_matProj * pos;\n}\npos.z = 0.99999 * pos.w;\nreturn pos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(set = 0, binding = 4) uniform samplerCube cc_environment;\nvec3 unpackRGBE (vec4 rgbe) {\nreturn rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n}\nvec3 SRGBToLinear (vec3 gamma) {\nreturn gamma * gamma;\n}\nvec3 ACESToneMap (vec3 color) {\ncolor = min(color, vec3(8.0));\nconst float A = 2.51;\nconst float B = 0.03;\nconst float C = 2.43;\nconst float D = 0.59;\nconst float E = 0.14;\nreturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n#if CC_USE_HDR\ncolor.rgb = ACESToneMap(color.rgb);\n#endif\ncolor.rgb = sqrt(color.rgb);\nreturn color;\n}\nlayout(location = 0) in mediump vec4 viewDir;\nvec4 frag () {\n#if USE_RGBE_CUBEMAP\nvec3 c = unpackRGBE(texture(cc_environment, viewDir.xyz));\n#else\nvec3 c = SRGBToLinear(texture(cc_environment, viewDir.xyz).rgb);\n#endif\nreturn CCFragOutput(vec4(c * cc_ambientSky.w, 1.0));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_color;\nlayout(location = 0) out vec2 v_uv;\nlayout(set = 1, binding = 0) uniform Constants {\nvec4 offset;\n};\nlayout(set = 1, binding = 1) uniform PerFrameInfo {\nvec4 digits[8 * 10 / 4];\n};\nfloat getComponent(vec4 v, float i) {\nif (i < 1.0) { return v.x; }\nelse if (i < 2.0) { return v.y; }\nelse if (i < 3.0) { return v.z; }\nelse { return v.w; }\n}\nvec4 vert () {\nmat2 proj = mat2(cc_matProj[0].xy, cc_matProj[1].xy);\nproj /= abs(proj[1].x + proj[1].y);\nvec2 position = proj * a_position.xy + offset.xy;\nv_uv = a_color.xy;\nif (a_color.z >= 0.0) {\nfloat n = getComponent(digits[int(a_color.z)], a_color.w);\nv_uv += vec2(offset.z * n, 0.0);\n}\nreturn vec4(position, 0.0, 1.0);\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\nhighp   vec4 cc_time;\nmediump vec4 cc_screenSize;\nmediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\nhighp   mat4 cc_matView;\nhighp   mat4 cc_matViewInv;\nhighp   mat4 cc_matProj;\nhighp   mat4 cc_matProjInv;\nhighp   mat4 cc_matViewProj;\nhighp   mat4 cc_matViewProjInv;\nhighp   vec4 cc_cameraPos;\nmediump vec4 cc_screenScale;\nmediump vec4 cc_exposure;\nmediump vec4 cc_mainLitDir;\nmediump vec4 cc_mainLitColor;\nmediump vec4 cc_ambientSky;\nmediump vec4 cc_ambientGround;\nmediump vec4 cc_fogColor;\nmediump vec4 cc_fogBase;\nmediump vec4 cc_fogAdd;\nmediump vec4 cc_nearFar;\nmediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\nreturn color;\n}\nlayout(location = 0) in vec2 v_uv;\nlayout(set = 1, binding = 2) uniform sampler2D mainTexture;\nvec4 frag () {\nreturn CCFragOutput(texture(mainTexture, v_uv));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}],[{vert:"\nprecision mediump float;\nlayout(location = 0) in vec2 a_position;\nlayout(location = 1) in vec2 a_texCoord;\nlayout(location = 0) out vec2 v_uv;\nlayout(set = 1, binding = 0) uniform Constant {\nvec4 u_buffer0;\nvec4 u_buffer1;\nmat4 u_projection;\n};\nvec4 vert () {\nvec2 worldPos = a_position * u_buffer1.xy + u_buffer1.zw;\nvec2 clipSpace = worldPos / u_buffer0.xy * 2.0 - 1.0;\nvec4 screenPos = u_projection * vec4(clipSpace, 0.0, 1.0);\nv_uv = a_texCoord;\nreturn screenPos;\n}\nvoid main() { gl_Position = vert(); }",frag:"\nprecision mediump float;\nlayout(location = 0) in vec2 v_uv;\nlayout(set = 1, binding = 1) uniform Factor {\nfloat u_percent;\n};\nlayout(set = 1, binding = 2) uniform sampler2D mainTexture;\nvec4 frag () {\nvec4 color = texture(mainTexture, v_uv);\nfloat percent = clamp(u_percent, 0.0, 1.0);\ncolor.xyz *= percent;\nreturn color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"}]]},Fm=e("builtinResMgr",u.builtinResMgr=new class{constructor(){this._device=null,this._resources={}}initBuiltinRes(e){this._device=e;const t=this._resources,n=new Uint8Array(16),i=new Uint8Array(16),s=new Uint8Array(16),o=new Uint8Array(16),r=new Uint8Array(16);let a=0;for(let e=0;e<4;e++)n[a]=0,n[a+1]=0,n[a+2]=0,n[a+3]=255,i[a]=0,i[a+1]=0,i[a+2]=0,i[a+3]=0,s[a]=119,s[a+1]=119,s[a+2]=119,s[a+3]=255,o[a]=255,o[a+1]=255,o[a+2]=255,o[a+3]=255,r[a]=127,r[a+1]=127,r[a+2]=255,r[a+3]=255,a+=4;const c=new Uint8Array(1024);a=0;for(let e=0;e<256;e++)c[a]=221,c[a+1]=221,c[a+2]=221,c[a+3]=255,a+=4;a=0;for(let e=0;e<8;e++){for(let e=0;e<8;e++)c[a]=85,c[a+1]=85,c[a+2]=85,c[a+3]=255,a+=4;a+=32}a+=32;for(let e=0;e<8;e++){for(let e=0;e<8;e++)c[a]=85,c[a+1]=85,c[a+2]=85,c[a+3]=255,a+=4;a+=32}const l={width:2,height:2,_data:n,_compressed:!1,format:bm.PixelFormat.RGBA8888},h={width:2,height:2,_data:i,_compressed:!1,format:bm.PixelFormat.RGBA8888},_={width:2,height:2,_data:s,_compressed:!1,format:bm.PixelFormat.RGBA8888},d={width:2,height:2,_data:o,_compressed:!1,format:bm.PixelFormat.RGBA8888},p={width:2,height:2,_data:r,_compressed:!1,format:bm.PixelFormat.RGBA8888},f={width:16,height:16,_data:c,_compressed:!1,format:bm.PixelFormat.RGBA8888},m=new hm(l),g=new bm;g._uuid="black-texture",g.image=m,t[g._uuid]=g;const v=new hm(h),y=new bm;y._uuid="empty-texture",y.image=v,t[y._uuid]=y;const x=new Nm;x._uuid="black-cube-texture",x.setMipFilter(Nm.Filter.NEAREST),x.image={front:new hm(l),back:new hm(l),left:new hm(l),right:new hm(l),top:new hm(l),bottom:new hm(l)},t[x._uuid]=x;const S=new hm(_),C=new bm;C._uuid="grey-texture",C.image=S,t[C._uuid]=C;const E=new hm(d),T=new bm;T._uuid="white-texture",T.image=E,t[T._uuid]=T;const b=new Nm;b._uuid="white-cube-texture",b.setMipFilter(Nm.Filter.NEAREST),b.image={front:new hm(d),back:new hm(d),left:new hm(d),right:new hm(d),top:new hm(d),bottom:new hm(d)},t[b._uuid]=b;const A=new hm(p),P=new bm;P._uuid="normal-texture",P.image=A,t[P._uuid]=P;const w=new hm(f),I=new bm;I._uuid="default-texture",I.image=w,t[I._uuid]=I;const R=new Nm;if(R.setMipFilter(Nm.Filter.NEAREST),R._uuid="default-cube-texture",R.image={front:new hm(f),back:new hm(f),left:new hm(f),right:new hm(f),top:new hm(f),bottom:new hm(f)},t[R._uuid]=R,u.SpriteFrame){const e=new u.SpriteFrame,n=m,i=new bm;i.image=n,e.texture=i,e._uuid="default-spriteframe",t[e._uuid]=e}const D=Rf(e);if(!D)return Promise.reject(Error("Failed to initialize builtin shaders: unknown device."));const O=Bm[D];return O?Promise.resolve().then((()=>{Lm.forEach(((e,t)=>{const n=Object.assign(new u.EffectAsset,e);n.shaders.forEach(((e,n)=>{const i=O[t][n];i&&(e[D]=i)})),n.hideInEditor=!0,n.onLoaded()})),this._initMaterials()})):Promise.reject(Error(`Current device is requiring builtin shaders of version ${D} but shaders of that version are not assembled in this build.`))}get(e){return this._resources[e]}_initMaterials(){const e=this._resources,t=[],n=new u.Material;n._uuid="standard-material",n.initialize({effectName:"standard"}),e[n._uuid]=n,t.push(n);const i=new u.Material;i._uuid="missing-effect-material",i.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),i.setProperty("mainColor",u.color("#ffff00")),e[i._uuid]=i,t.push(i);const s=new u.Material;s._uuid="missing-material",s.initialize({effectName:"unlit",defines:{USE_COLOR:!0}}),s.setProperty("mainColor",u.color("#ff00ff")),e[s._uuid]=s,t.push(s);const o=new u.Material;o._uuid="default-clear-stencil",o.initialize({defines:{USE_TEXTURE:!1},effectName:"clear-stencil"}),e[o._uuid]=o,t.push(o);const r=new u.Material;r._uuid="ui-base-material",r.initialize({defines:{USE_TEXTURE:!1},effectName:"sprite"}),e[r._uuid]=r,t.push(r);const a=new u.Material;a._uuid="ui-sprite-material",a.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"sprite"}),e[a._uuid]=a,t.push(a);const c=new u.Material;c._uuid="ui-alpha-test-material",c.initialize({defines:{USE_TEXTURE:!0,USE_ALPHA_TEST:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"sprite"}),e[c._uuid]=c,t.push(c);const l=new u.Material;l._uuid="ui-sprite-gray-material",l.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!0},effectName:"sprite"}),e[l._uuid]=l,t.push(l);const h=new u.Material;h._uuid="ui-sprite-alpha-sep-material",h.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!0,IS_GRAY:!1},effectName:"sprite"}),e[h._uuid]=h,t.push(h);const _=new u.Material;_._uuid="ui-sprite-gray-alpha-sep-material",_.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!0,IS_GRAY:!0},effectName:"sprite"}),e[_._uuid]=_,t.push(_);const d=new u.Material;d._uuid="ui-graphics-material",d.initialize({effectName:"graphics"}),e[d._uuid]=d,t.push(d);const p=new u.Material;p._uuid="default-particle-material",p.initialize({effectName:"particle"}),e[p._uuid]=p,t.push(p);{const n=new u.Material;n._uuid="default-particle-gpu-material",n.initialize({effectName:"particle-gpu"}),e[n._uuid]=n,t.push(n)}const f=new u.Material;f._uuid="default-trail-material",f.initialize({effectName:"particle-trail"}),e[f._uuid]=f,t.push(f);const m=new u.Material;m._uuid="default-billboard-material",m.initialize({effectName:"billboard"}),e[m._uuid]=m,t.push(m);const g=new u.Material;g._uuid="default-spine-material",g.initialize({defines:{USE_TEXTURE:!0,CC_USE_EMBEDDED_ALPHA:!1,IS_GRAY:!1},effectName:"spine"}),e[g._uuid]=g,t.push(g),u.game.on(u.Game.EVENT_GAME_INITED,(()=>{for(let e=0;e<t.length;++e){const n=t[e];for(let e=0;e<n.passes.length;++e)n.passes[e].tryCompile()}}))}}),zm=(()=>{const e=new Map;let t=0;return n=>"number"==typeof n?n:(e.has(n)||(e.set(n,1<<t),t++),e.get(n))})();class Um{constructor(e){this.instances=[],this.pass=void 0,this.hasPendingModels=!1,this.dynamicOffsets=[],this._device=void 0,this._device=e.device,this.pass=e}destroy(){for(let e=0;e<this.instances.length;++e){const t=this.instances[e];t.vb.destroy(),t.ia.destroy()}this.instances.length=0}merge(e,t,n,i=null){const s=t.buffer.length;if(!s)return;const o=e.inputAssembler,r=e.descriptorSet.getTexture(Kp);let a=i;a||(a=e.shaders[n]);const c=e.descriptorSet;for(let e=0;e<this.instances.length;++e){const n=this.instances[e];if(!(n.ia.indexBuffer!==o.indexBuffer||n.count>=1024)&&n.lightingMap===r&&n.stride===s){if(n.count>=n.capacity){n.capacity<<=1;const e=n.stride*n.capacity,t=n.data;n.data=new Uint8Array(e),n.data.set(t),n.vb.resize(e)}return n.shader!==a&&(n.shader=a),n.descriptorSet!==c&&(n.descriptorSet=c),n.data.set(t.buffer,n.stride*n.count++),void(this.hasPendingModels=!0)}}const l=this._device.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.HOST|ai.DEVICE,32*s,s)),h=new Uint8Array(32*s),u=o.vertexBuffers.slice(),_=o.attributes.slice(),d=o.indexBuffer;for(let e=0;e<t.attributes.length;e++){const n=t.attributes[e],i=new vs(n.name,n.format,n.isNormalized,u.length,!0);_.push(i)}h.set(t.buffer),u.push(l);const p=new xs(_,u,d),f=this._device.createInputAssembler(p);this.instances.push({count:1,capacity:32,vb:l,data:h,ia:f,stride:s,shader:a,descriptorSet:c,lightingMap:r}),this.hasPendingModels=!0}uploadBuffers(e){for(let t=0;t<this.instances.length;++t){const n=this.instances[t];n.count&&(n.ia.instanceCount=n.count,e.updateBuffer(n.vb,n.data))}}clear(){for(let e=0;e<this.instances.length;++e)this.instances[e].count=0;this.hasPendingModels=!1}}class Gm{constructor(e){this.batches=[],this.dynamicOffsets=[],this._device=void 0,this._device=e.device}destroy(){for(let e=0;e<this.batches.length;++e){const t=this.batches[e];for(let e=0;e<t.vbs.length;++e)t.vbs[e].destroy();t.vbIdx.destroy(),t.ia.destroy(),t.ubo.destroy()}this.batches.length=0}merge(e,t,n){const i=e.subMesh.flatBuffers;if(0===i.length)return;let s=0,o=0;const r=i[0].count,a=e.passes[t],c=e.shaders[t],l=e.descriptorSet;let h=!1;for(let e=0;e<this.batches.length;++e){const t=this.batches[e];if(t.vbs.length===i.length&&t.mergeCount<Rp.BATCHING_COUNT){h=!0;for(let e=0;e<t.vbs.length;++e)if(t.vbs[e].stride!==i[e].stride){h=!1;break}if(h){for(let e=0;e<t.vbs.length;++e){const n=i[e],o=t.vbs[e],a=t.vbDatas[e];s=(r+t.vbCount)*n.stride,s>o.size&&(o.resize(s),t.vbDatas[e]=new Uint8Array(s),t.vbDatas[e].set(a)),t.vbDatas[e].set(n.buffer,t.vbCount*n.stride)}let e=t.vbIdxData;o=4*(r+t.vbCount),o>t.vbIdx.size&&(t.vbIdx.resize(o),t.vbIdxData=new Float32Array(o/Float32Array.BYTES_PER_ELEMENT),t.vbIdxData.set(e),e=t.vbIdxData);const h=t.vbCount,u=h+r,_=t.mergeCount;if(e[h]!==_||e[u-1]!==_)for(let t=h;t<u;t++)e[t]=_+.1;return On.toArray(t.uboData,n.transform.worldMatrix,Rp.MAT_WORLDS_OFFSET+16*t.mergeCount),t.mergeCount||(l.bindBuffer(Rp.BINDING,t.ubo),l.update(),t.pass=a,t.shader=c,t.descriptorSet=l),++t.mergeCount,t.vbCount+=r,void(t.ia.vertexCount+=r)}}}const u=[],_=[],d=[];for(let e=0;e<i.length;++e){const t=i[e],n=this._device.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.HOST|ai.DEVICE,t.count*t.stride,t.stride));n.update(t.buffer.buffer),u.push(n),_.push(new Uint8Array(n.size)),d.push(n)}const p=this._device.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.HOST|ai.DEVICE,4*r,4)),f=new Float32Array(r);f.fill(0),p.update(f),d.push(p);const m=e.inputAssembler.attributes,g=new Array(m.length+1);for(let e=0;e<m.length;++e)g[e]=m[e];g[m.length]=new vs("a_dyn_batch_id",ti.R32F,!1,i.length);const v=new xs(g,d),y=this._device.createInputAssembler(v),x=this._device.createBuffer(new es(si.UNIFORM|si.TRANSFER_DST,ai.HOST|ai.DEVICE,Rp.SIZE,Rp.SIZE));l.bindBuffer(Rp.BINDING,x),l.update();const S=new Float32Array(Rp.COUNT);On.toArray(S,n.transform.worldMatrix,Rp.MAT_WORLDS_OFFSET),this.batches.push({mergeCount:1,vbs:u,vbDatas:_,vbIdx:p,vbIdxData:f,vbCount:r,ia:y,ubo:x,uboData:S,pass:a,shader:c,descriptorSet:l})}clear(){for(let e=0;e<this.batches.length;++e){const t=this.batches[e];t.vbCount=0,t.mergeCount=0,t.ia.vertexCount=0}}}const Vm=new es(si.UNIFORM|si.TRANSFER_DST,ai.DEVICE),Hm=new ts(null),km=new Ds(null);let jm;!function(e){e[e.NONE=0]="NONE",e[e.INSTANCING=1]="INSTANCING",e[e.VB_MERGING=2]="VB_MERGING"}(jm||(jm={}));class Wm{static fillPipelineInfo(e,t){void 0!==t.priority&&e._setPriority(t.priority),void 0!==t.primitive&&e._setPrimitive(t.primitive),void 0!==t.stage&&e._setStage(t.stage),void 0!==t.dynamicStates&&e._setDynamicState(t.dynamicStates),void 0!==t.phase&&e._setPhase(zm(t.phase));const n=e._bs;if(t.blendState){const e=t.blendState,{targets:i}=e;i&&i.forEach(((e,t)=>{n.setTarget(t,e)})),void 0!==e.isA2C&&(n.isA2C=e.isA2C),void 0!==e.isIndepend&&(n.isIndepend=e.isIndepend),void 0!==e.blendColor&&(n.blendColor=e.blendColor)}e._rs.assign(t.rasterizerState),e._dss.assign(t.depthStencilState)}static getPassHash(e){let t=`${Df.getKey(e.program,e.defines)},${e._primitive},${e._dynamicStates}`;var n;return t+=function(e){let t=`,bs,${e.isA2C}`;for(const n of e.targets)t+=`,bt,${n.blend},${n.blendEq},${n.blendAlphaEq},${n.blendColorMask}`,t+=`,${n.blendSrc},${n.blendDst},${n.blendSrcAlpha},${n.blendDstAlpha}`;return t}(e._bs),t+=function(e){let t=`,dss,${e.depthTest},${e.depthWrite},${e.depthFunc}`;return t+=`,${e.stencilTestFront},${e.stencilFuncFront},${e.stencilRefFront},${e.stencilReadMaskFront}`,t+=`,${e.stencilFailOpFront},${e.stencilZFailOpFront},${e.stencilPassOpFront},${e.stencilWriteMaskFront}`,t+=`,${e.stencilTestBack},${e.stencilFuncBack},${e.stencilRefBack},${e.stencilReadMaskBack}`,t+=`,${e.stencilFailOpBack},${e.stencilZFailOpBack},${e.stencilPassOpBack},${e.stencilWriteMaskBack}`,t}(e._dss),t+=`,rs,${(n=e._rs).cullMode},${n.depthBias},${n.isFrontFaceCCW}`,fo(t,666)}get native(){return this._nativeObj}constructor(e){this._rootBuffer=null,this._buffers=[],this._descriptorSet=null,this._pipelineLayout=null,this._passIndex=0,this._propertyIndex=0,this._programName="",this._dynamics={},this._propertyHandleMap={},this._rootBlock=null,this._blocksInt=[],this._blocks=[],this._shaderInfo=null,this._defines={},this._properties={},this._shader=null,this._bs=new Io,this._dss=new Do,this._rs=new Ro,this._priority=tp.DEFAULT,this._stage=ep.DEFAULT,this._phase=zm("default"),this._primitive=Pi.TRIANGLE_LIST,this._batchingScheme=jm.NONE,this._dynamicStates=Di.NONE,this._instancedBuffers={},this._batchedBuffers={},this._hash=0,this._root=void 0,this._device=void 0,this._passHandle=0,this._rootBufferDirty=!1,this._root=e,this._device=e.device}initialize(e){this._doInit(e),this.resetUBOs(),this.resetTextures(),this.tryCompile()}getHandle(e,t=0,n=ii.UNKNOWN){let i=this._propertyHandleMap[e];return i?(n?i=vf(i,n):t&&(i=vf(i,pf(i)-t)),i+t):0}getBinding(e){const t=this.getHandle(e);return t?Wm.getBindingFromHandle(t):-1}setUniform(e,t){const n=Wm.getBindingFromHandle(e),i=Wm.getTypeFromHandle(e),s=Wm.getOffsetFromHandle(e),o=this._getBlockView(i,n);xf[i](o,t,s),this._setRootBufferDirty(!0)}getUniform(e,t){const n=Wm.getBindingFromHandle(e),i=Wm.getTypeFromHandle(e),s=Wm.getOffsetFromHandle(e),o=this._getBlockView(i,n);return yf[i](o,t,s)}setUniformArray(e,t){const n=Wm.getBindingFromHandle(e),i=Wm.getTypeFromHandle(e),s=Qs(i)>>2,o=this._getBlockView(i,n);let r=Wm.getOffsetFromHandle(e);for(let e=0;e<t.length;e++,r+=s)null!==t[e]&&xf[i](o,t[e],r);this._setRootBufferDirty(!0)}bindTexture(e,t,n){this._descriptorSet.bindTexture(e,t,n||0)}bindSampler(e,t,n){this._descriptorSet.bindSampler(e,t,n||0)}setDynamicState(e,t){const n=this._dynamics[e];n&&n.value===t||(n.value=t,n.dirty=!0)}overridePipelineStates(e,t){console.warn("base pass cannot override states, please use pass instance instead.")}_setRootBufferDirty(e){this._rootBufferDirty=e,this._nativeObj.setRootBufferDirty(e)}update(){this._descriptorSet?(this._rootBuffer&&this._rootBufferDirty&&(this._rootBuffer.update(this._rootBlock),this._setRootBufferDirty(!1)),this._descriptorSet.update(),this._nativeObj.update()):N(12006)}getInstancedBuffer(e=0){return this._instancedBuffers[e]||(this._instancedBuffers[e]=new Um(this))}getBatchedBuffer(e=0){return this._batchedBuffers[e]||(this._batchedBuffers[e]=new Gm(this))}_initNative(){this._nativeObj||(this._nativeObj=new Pa,this._passHandle=sa.alloc(),this._nativePriority=sa.getTypedArray(this._passHandle,ta.PRIORITY),this._nativeStage=sa.getTypedArray(this._passHandle,ta.STAGE),this._nativePhase=sa.getTypedArray(this._passHandle,ta.PHASE),this._nativePrimitive=sa.getTypedArray(this._passHandle,ta.PRIMITIVE),this._nativeBatchingScheme=sa.getTypedArray(this._passHandle,ta.BATCHING_SCHEME),this._nativeDynamicStates=sa.getTypedArray(this._passHandle,ta.DYNAMIC_STATE),this._nativeHash=sa.getTypedArray(this._passHandle,ta.HASH),this._nativeObj.initWithData(sa.getBuffer(this._passHandle)))}_destroy(){this._nativeObj=null,this._passHandle&&sa.free(this._passHandle)}destroy(){for(let e=0;e<this._shaderInfo.blocks.length;e++){const t=this._shaderInfo.blocks[e];this._buffers[t.binding].destroy()}this._buffers=[],this._rootBuffer&&(this._rootBuffer.destroy(),this._rootBuffer=null);for(const e in this._instancedBuffers)this._instancedBuffers[e].destroy();for(const e in this._batchedBuffers)this._batchedBuffers[e].destroy();this._descriptorSet.destroy(),this._rs.destroy(),this._dss.destroy(),this._bs.destroy(),this._destroy()}resetUniform(e){const t=this.getHandle(e);if(!t)return;const n=Wm.getTypeFromHandle(t),i=Wm.getBindingFromHandle(t),s=Wm.getOffsetFromHandle(t),o=Wm.getCountFromHandle(t),r=this._getBlockView(n,i),a=this._properties[e],c=a&&a.value||Cf(n),l=(Qs(n)>>2)*o;for(let e=0;e+c.length<=l;e+=c.length)r.set(c,s+e);this._setRootBufferDirty(!0)}resetTexture(e,t){const n=this.getHandle(e);if(!n)return;const i=Wm.getTypeFromHandle(n),s=Wm.getBindingFromHandle(n),o=this._properties[e],r=o&&o.value,a=r?`${r}-texture`:Cf(i),c=Fm.get(a),l=c&&c.getGFXTexture(),h=o&&void 0!==o.samplerHash?Eo.unpackFromHash(o.samplerHash):c&&c.getSamplerInfo(),u=this._device.getSampler(h);this._descriptorSet.bindSampler(s,u,t),this._descriptorSet.bindTexture(s,l,t)}resetUBOs(){for(let e=0;e<this._shaderInfo.blocks.length;e++){const t=this._shaderInfo.blocks[e];let n=0;for(let e=0;e<t.members.length;e++){const i=t.members[e],s=this._getBlockView(i.type,t.binding),o=this._properties[i.name],r=o&&o.value||Cf(i.type),a=(Qs(i.type)>>2)*i.count;for(let e=0;e+r.length<=a;e+=r.length)s.set(r,n+e);n+=a}}this._setRootBufferDirty(!0)}resetTextures(){for(let e=0;e<this._shaderInfo.samplerTextures.length;e++){const t=this._shaderInfo.samplerTextures[e];for(let e=0;e<t.count;e++)this.resetTexture(t.name,e)}}tryCompile(){const{pipeline:e}=this._root;if(!e)return!1;this._syncBatchingScheme();const t=Df.getGFXShader(this._device,this._programName,this._defines,e);return t?(this._shader=t,this._setPipelineLayout(Df.getTemplateInfo(this._programName).pipelineLayout),this._setHash(Wm.getPassHash(this)),!0):(console.warn(`create shader ${this._programName} failed`),!1)}getShaderVariant(e=null){if(!this._shader&&!this.tryCompile())return console.warn("pass resources incomplete"),null;if(!e)return this._shader;const{pipeline:t}=this._root;for(let t=0;t<e.length;t++){const n=e[t];this._defines[n.name]=n.value}const n=Df.getGFXShader(this._device,this._programName,this._defines,t);for(let t=0;t<e.length;t++){const n=e[t];delete this._defines[n.name]}return n}beginChangeStatesSilently(){}endChangeStatesSilently(){}_setPriority(e){this._priority=e,this._nativePriority[0]=e}_setStage(e){this._stage=e,this._nativeStage[0]=e}_setPhase(e){this._phase=e,this._nativePhase[0]=e}_setPrimitive(e){this._primitive=e,this._nativePrimitive[0]=e}_setState(e,t,n,i){this._bs=e,this._dss=t,this._rs=n,this._descriptorSet=i,this._nativeObj.blendState=e.native,this._nativeObj.depthStencilState=t.native,this._nativeObj.rasterizerState=n.native,this._nativeObj.descriptorSet=i}_doInit(e,t=!1){this._initNative(),this._setPriority(tp.DEFAULT),this._setStage(ep.DEFAULT),this._setPhase(zm("default")),this._setPrimitive(Pi.TRIANGLE_LIST),this._passIndex=e.passIndex,this._propertyIndex=void 0!==e.propertyIndex?e.propertyIndex:e.passIndex,this._programName=e.program,this._defines=t?{...e.defines}:e.defines,this._shaderInfo=Df.getTemplate(e.program),this._properties=e.properties||this._properties;const n=this._device;Wm.fillPipelineInfo(this,e),e.stateOverrides&&Wm.fillPipelineInfo(this,e.stateOverrides),km.layout=Df.getDescriptorSetLayout(this._device,e.program),this._descriptorSet=this._device.createDescriptorSet(km),this._setState(this._bs,this._dss,this._rs,this._descriptorSet);const i=this._shaderInfo.blocks,s=Df.getTemplateInfo(e.program),{blockSizes:o,handleMap:r}=s,a=n.capabilities.uboOffsetAlignment,c=[];let l=0,h=0;for(let e=0;e<i.length;e++){const t=o[e];c.push(h),h+=Math.ceil(t/a)*a,l=t}const u=c[c.length-1]+l;u&&(Vm.size=16*Math.ceil(u/16),this._rootBuffer=n.createBuffer(Vm),this._rootBlock=new ArrayBuffer(u),this._nativeObj.setRootBufferAndBlock(this._rootBuffer,this._rootBlock));for(let e=0,t=0;e<i.length;e++){const{binding:s}=i[e],r=o[e];Hm.buffer=this._rootBuffer,Hm.offset=c[t++],Hm.range=16*Math.ceil(r/16);const a=this._buffers[s]=n.createBuffer(Hm);this._blocks[s]=new Float32Array(this._rootBlock,Hm.offset,r/Float32Array.BYTES_PER_ELEMENT),this._blocksInt[s]=new Int32Array(this._blocks[s].buffer,this._blocks[s].byteOffset,this._blocks[s].length),this._descriptorSet.bindBuffer(s,a)}const _=this._propertyHandleMap=r,d={};for(const e in this._properties){const t=this._properties[e];t.handleInfo&&(d[e]=this.getHandle.apply(this,t.handleInfo))}Object.assign(_,d)}_syncBatchingScheme(){this._defines.USE_INSTANCING?this._device.hasFeature(ei.INSTANCED_ARRAYS)?this._setBatchingScheme(jm.INSTANCING):(this._defines.USE_INSTANCING=!1,this._setBatchingScheme(jm.NONE)):this._defines.USE_BATCHING?this._setBatchingScheme(jm.VB_MERGING):this._setBatchingScheme(jm.NONE)}_setBatchingScheme(e){this._batchingScheme=e,this._nativeBatchingScheme[0]=e}_setDynamicState(e){this._dynamicStates=e,this._nativeDynamicStates[0]=e}_setHash(e){this._hash=e,this._nativeHash[0]=e}_getBlockView(e,t){return e<ii.FLOAT?this._blocksInt[t]:this._blocks[t]}_setPipelineLayout(e){this._pipelineLayout=e,this._nativeObj.setPipelineLayout(e)}_initPassFromTarget(e,t,n,i){this._initNative(),this._setPriority(e.priority),this._setStage(e.stage),this._setPhase(e.phase),this._setBatchingScheme(e.batchingScheme),this._setPrimitive(e.primitive),this._setDynamicState(e.dynamicStates),this._setState(n,t,e.rasterizerState,e.descriptorSet),this._passIndex=e.passIndex,this._propertyIndex=e.propertyIndex,this._programName=e.program,this._defines=e.defines,this._shaderInfo=e._shaderInfo,this._properties=e._properties,this._blocks=e._blocks,this._blocksInt=e._blocksInt,this._dynamics=e._dynamics,this._shader=e._shader,this._setPipelineLayout(Df.getTemplateInfo(this._programName).pipelineLayout),this._setHash(e._hash^i)}get root(){return this._root}get device(){return this._device}get shaderInfo(){return this._shaderInfo}get localSetLayout(){return Df.getDescriptorSetLayout(this._device,this._programName,!0)}get program(){return this._programName}get properties(){return this._properties}get defines(){return this._defines}get passIndex(){return this._passIndex}get propertyIndex(){return this._propertyIndex}get dynamics(){return this._dynamics}get blocks(){return this._blocks}get blocksInt(){return this._blocksInt}get rootBufferDirty(){return this._rootBufferDirty}get priority(){return this._priority}get primitive(){return this._primitive}get stage(){return this._stage}get phase(){return this._phase}get rasterizerState(){return this._rs}get depthStencilState(){return this._dss}get blendState(){return this._bs}get dynamicStates(){return this._dynamicStates}get batchingScheme(){return this._batchingScheme}get descriptorSet(){return this._descriptorSet}get hash(){return this._hash}get pipelineLayout(){return this._pipelineLayout}}Wm.getTypeFromHandle=pf,Wm.getBindingFromHandle=ff,Wm.getCountFromHandle=mf,Wm.getOffsetFromHandle=gf;class qm{static getOrCreatePipelineState(e,t,n,i,s){const o=t.hash^i.hash^s.attributesHash^n.typedID;let r=this._PSOHashMap.get(o);if(!r){const a=t.pipelineLayout,c=new Ns(s.attributes),l=new No(n,a,i,c,t.rasterizerState,t.depthStencilState,t.blendState,t.primitive,t.dynamicStates);r=e.createPipelineState(l),this._PSOHashMap.set(o,r)}return r}}function Xm(e,t){e.x=t.x*t.x,e.y=t.y*t.y,e.z=t.z*t.z}var Ym,Km,$m,Qm,Jm,Zm,eg,tg,ng;qm._PSOHashMap=new Map;const ig=new Gn;let sg,og,rg,ag,cg,lg=e("Material",(Ym=mc("cc.Material"),Km=Zc(Gf),Ym((Jm=ac((Qm=class e extends xh{static getHash(e){let t=0;for(const n of e.passes)t^=n.hash;return t}constructor(){super(),rc(this,"_effectAsset",Jm,this),rc(this,"_techIdx",Zm,this),rc(this,"_defines",eg,this),rc(this,"_states",tg,this),rc(this,"_props",ng,this),this._passes=[],this._hash=0}get effectAsset(){return this._effectAsset}get effectName(){return this._effectAsset?this._effectAsset.name:""}get technique(){return this._techIdx}get passes(){return this._passes}get hash(){return this._hash}get parent(){return null}get owner(){return null}initialize(e){this._passes.length?D(12005):(this._defines||(this._defines=[]),this._states||(this._states=[]),this._props||(this._props=[]),this._fillInfo(e),this._update())}reset(e){this.initialize(e)}destroy(){return this._doDestroy(),super.destroy()}recompileShaders(e,t){console.warn(`Shaders in material asset '${this.name}' cannot be modified at runtime, please instantiate the material first.`)}overridePipelineStates(e,t){console.warn(`Pipeline states in material asset '${this.name}' cannot be modified at runtime, please instantiate the material first.`)}onLoaded(){this._update()}resetUniforms(e=!0){this._props.length=this._passes.length;for(let e=0;e<this._props.length;e++)this._props[e]={};if(e)for(const e of this._passes)e.resetUBOs(),e.resetTextures()}setProperty(e,t,n){let i=!1;if(void 0===n){const n=this._passes,s=n.length;for(let o=0;o<s;o++){const s=n[o];this._uploadProperty(s,e,t)&&(this._props[s.propertyIndex][e]=t,i=!0)}}else{if(n>=this._passes.length)return void console.warn(`illegal pass index: ${n}.`);const s=this._passes[n];this._uploadProperty(s,e,t)&&(this._props[s.propertyIndex][e]=t,i=!0)}i||console.warn(`illegal property name: ${e}.`)}getProperty(e,t){if(void 0===t){const t=this._props,n=t.length;for(let i=0;i<n;i++){const n=t[i];if(e in n)return n[e]}}else{if(t>=this._props.length)return console.warn(`illegal pass index: ${t}.`),null;const n=this._props[this._passes[t].propertyIndex];if(e in n)return n[e]}return null}copy(e,t){this._techIdx=e._techIdx,this._props.length=e._props.length;for(let t=0;t<e._props.length;t++)this._props[t]={...e._props[t]};this._defines.length=e._defines.length;for(let t=0;t<e._defines.length;t++)this._defines[t]={...e._defines[t]};this._states.length=e._states.length;for(let t=0;t<e._states.length;t++)this._states[t]={...e._states[t]};this._effectAsset=e._effectAsset,t&&this._fillInfo(t),this._update()}_fillInfo(e){void 0!==e.technique&&(this._techIdx=e.technique),e.effectAsset?this._effectAsset=e.effectAsset:e.effectName&&(this._effectAsset=Gf.get(e.effectName)),e.defines&&this._prepareInfo(e.defines,this._defines),e.states&&this._prepareInfo(e.states,this._states)}_prepareInfo(e,t){let n=e;if(!Array.isArray(n)){const e=this._effectAsset?this._effectAsset.techniques[this._techIdx].passes.length:1;n=Array(e).fill(n)}for(let e=0;e<n.length;++e)Object.assign(t[e]||(t[e]={}),n[e])}_createPasses(){const e=this._effectAsset.techniques[this._techIdx||0];if(!e)return[];const t=e.passes.length,n=[];for(let i=0;i<t;++i){const t=e.passes[i],s=t.passIndex=i,o=t.defines=this._defines[s]||(this._defines[s]={});if(t.stateOverrides=this._states[s]||(this._states[s]={}),void 0!==t.propertyIndex&&Object.assign(o,this._defines[t.propertyIndex]),void 0!==t.embeddedMacros&&Object.assign(o,t.embeddedMacros),t.switch&&!o[t.switch])continue;const r=new Wm(u.director.root);r.initialize(t),n.push(r)}return n}_update(t=!0){if(this._effectAsset){this._passes=this._createPasses();const e=this._effectAsset.techniques[this._techIdx].passes.length;if(this._props.length=e,t)this._passes.forEach(((e,t)=>{let n=this._props[t];n||(n=this._props[t]={}),void 0!==e.propertyIndex&&Object.assign(n,this._props[e.propertyIndex]);for(const t in n)this._uploadProperty(e,t,n[t])}));else for(let e=0;e<this._props.length;e++)this._props[e]={}}this._hash=e.getHash(this)}_uploadProperty(e,t,n){const i=e.getHandle(t);if(!i)return!1;if(Wm.getTypeFromHandle(i)<ii.SAMPLER1D)if(Array.isArray(n))e.setUniformArray(i,n);else if(null!==n){var s;if(null===(s=e.properties[t])||void 0===s?void 0:s.linear){const e=n;Xm(ig,e),ig.w=e.w,n=ig}e.setUniform(i,n)}else e.resetUniform(t);else if(Array.isArray(n))for(let t=0;t<n.length;t++)this._bindTexture(e,i,n[t],t);else n?this._bindTexture(e,i,n):e.resetTexture(t);return!0}_bindTexture(e,t,n,i){const s=Wm.getBindingFromHandle(t);if(n instanceof Co)e.bindTexture(s,n,i);else if(n instanceof sm){const t=n.getGFXTexture();if(!t||!t.width||!t.height)return;e.bindTexture(s,t,i),e.bindSampler(s,n.getGFXSampler(),i)}}_doDestroy(){if(this._passes&&this._passes.length)for(const e of this._passes)e.destroy();this._passes.length=0}initDefault(e){super.initDefault(e),this.initialize({effectName:"unlit",defines:{USE_COLOR:!0},technique:0}),this.setProperty("mainColor",new dn("#ff00ff"))}validate(){return!!this._effectAsset&&!this._effectAsset.isDefault&&this.passes.length>0}}).prototype,"_effectAsset",[Km],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Zm=ac(Qm.prototype,"_techIdx",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),eg=ac(Qm.prototype,"_defines",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),tg=ac(Qm.prototype,"_states",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),ng=ac(Qm.prototype,"_props",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),$m=Qm))||$m));u.Material=lg,function(e){e[e.VERTICAL=0]="VERTICAL",e[e.HORIZONTAL=1]="HORIZONTAL"}(sg||(sg={})),function(e){e[e.ORTHO=0]="ORTHO",e[e.PERSPECTIVE=1]="PERSPECTIVE"}(og||(og={})),function(e){e[e.F1_8=0]="F1_8",e[e.F2_0=1]="F2_0",e[e.F2_2=2]="F2_2",e[e.F2_5=3]="F2_5",e[e.F2_8=4]="F2_8",e[e.F3_2=5]="F3_2",e[e.F3_5=6]="F3_5",e[e.F4_0=7]="F4_0",e[e.F4_5=8]="F4_5",e[e.F5_0=9]="F5_0",e[e.F5_6=10]="F5_6",e[e.F6_3=11]="F6_3",e[e.F7_1=12]="F7_1",e[e.F8_0=13]="F8_0",e[e.F9_0=14]="F9_0",e[e.F10_0=15]="F10_0",e[e.F11_0=16]="F11_0",e[e.F13_0=17]="F13_0",e[e.F14_0=18]="F14_0",e[e.F16_0=19]="F16_0",e[e.F18_0=20]="F18_0",e[e.F20_0=21]="F20_0",e[e.F22_0=22]="F22_0"}(rg||(rg={})),function(e){e[e.ISO100=0]="ISO100",e[e.ISO200=1]="ISO200",e[e.ISO400=2]="ISO400",e[e.ISO800=3]="ISO800"}(ag||(ag={})),function(e){e[e.D1=0]="D1",e[e.D2=1]="D2",e[e.D4=2]="D4",e[e.D8=3]="D8",e[e.D15=4]="D15",e[e.D30=5]="D30",e[e.D60=6]="D60",e[e.D125=7]="D125",e[e.D250=8]="D250",e[e.D500=9]="D500",e[e.D1000=10]="D1000",e[e.D2000=11]="D2000",e[e.D4000=12]="D4000"}(cg||(cg={}));const hg=[1.8,2,2.2,2.5,2.8,3.2,3.5,4,4.5,5,5.6,6.3,7.1,8,9,10,11,13,14,16,18,20,22],ug=[1,.5,1/4,1/8,1/15,1/30,1/60,.008,.004,.002,.001,5e-4,1/4e3],_g=[100,200,400,800],dg=new gn,pg=new gn,fg=new On,mg=Fi.STENCIL<<1,gg=[];class vg{static get standardExposureValue(){return 1/38400}static get standardLightMeterScale(){return 1e4}get name(){return this._name}get scene(){return this._scene}set node(e){this._node=e,this._nativeObj.node=this._node.native}get node(){return this._node}set window(e){this._window=e,e&&(this._nativeObj.window=this._window.native)}get window(){return this._window}set enabled(e){this._enabled=e}get enabled(){return this._enabled}set visibility(e){this._visibility=e,this._nativeObj.visibility=this._visibility}get visibility(){return this._visibility}get priority(){return this._priority}set priority(e){this._priority=e}get width(){return this._width}get height(){return this._height}set position(e){this._position=e,this._nativeObj.position=this._position}get position(){return this._position}set forward(e){this._forward=e,this._nativeObj.forward=this._forward}get forward(){return this._forward}set aperture(e){this._aperture=e,this._apertureValue=hg[this._aperture],this.updateExposure()}get aperture(){return this._aperture}get apertureValue(){return this._apertureValue}set shutter(e){this._shutter=e,this._shutterValue=ug[this._shutter],this.updateExposure()}get shutter(){return this._shutter}get shutterValue(){return this._shutterValue}set iso(e){this._iso=e,this._isoValue=_g[this._iso],this.updateExposure()}get iso(){return this._iso}get isoValue(){return this._isoValue}get exposure(){return this._exposure}get clearFlag(){return this._clearFlag}set clearFlag(e){this._clearFlag=e,this._nativeObj.clearFlag=e}set clearColor(e){this._clearColor.x=e.x,this._clearColor.y=e.y,this._clearColor.z=e.z,this._clearColor.w=e.w,this._nativeObj.clearColor=this._clearColor}get clearColor(){return this._clearColor}get clearDepth(){return this._clearDepth}set clearDepth(e){this._clearDepth=e,this._nativeObj.clearDepth=e}get clearStencil(){return this._clearStencil}set clearStencil(e){this._clearStencil=e,this._nativeObj.clearStencil=e}set projectionType(e){this._proj=e,this._isProjDirty=!0}get projectionType(){return this._proj}get aspect(){return this._aspect}set orthoHeight(e){this._orthoHeight=e,this._isProjDirty=!0}get orthoHeight(){return this._orthoHeight}set fovAxis(e){this._fovAxis=e,this._isProjDirty=!0}get fovAxis(){return this._fovAxis}set fov(e){this._fov=e,this._nativeObj.fov=e,this._isProjDirty=!0}get fov(){return this._fov}set nearClip(e){this._nearClip=e,this._nativeObj.nearClip=this._nearClip,this._isProjDirty=!0}get nearClip(){return this._nearClip}set farClip(e){this._farClip=e,this._nativeObj.farClip=this._farClip,this._isProjDirty=!0}get farClip(){return this._farClip}get viewport(){return this._viewport}set viewport(e){D(8302),this.setViewportInOrientedSpace(e)}set frustum(e){this._frustum=e,this._nativeObj.frustum=this._frustum}get frustum(){return this._frustum}get matView(){return this._matView}get matProj(){return this._matProj}get matProjInv(){return this._matProjInv}get matViewProj(){return this._matViewProj}get matViewProjInv(){return this._matViewProjInv}get native(){return this._nativeObj}constructor(e){if(this.isWindowSize=!0,this.screenScale=void 0,this._device=void 0,this._scene=null,this._node=null,this._name=null,this._enabled=!1,this._proj=-1,this._aspect=void 0,this._orthoHeight=10,this._fovAxis=sg.VERTICAL,this._fov=$t(45),this._nearClip=1,this._farClip=1e3,this._clearColor=new $i(.2,.2,.2,1),this._viewport=new Wn(0,0,1,1),this._orientedViewport=new Wn(0,0,1,1),this._curTransform=Zn.IDENTITY,this._isProjDirty=!0,this._matView=new On,this._matProj=new On,this._matProjInv=new On,this._matViewProj=new On,this._matViewProjInv=new On,this._frustum=new Ka,this._forward=new gn,this._position=new gn,this._priority=0,this._aperture=rg.F16_0,this._apertureValue=void 0,this._shutter=cg.D125,this._shutterValue=0,this._iso=ag.ISO100,this._isoValue=0,this._window=null,this._width=1,this._height=1,this._clearFlag=Fi.NONE,this._clearDepth=1,this._visibility=cf,this._exposure=0,this._clearStencil=0,this._device=e,this._apertureValue=hg[this._aperture],this._shutterValue=ug[this._shutter],this._isoValue=_g[this._iso],this._aspect=this.screenScale=1,this._frustum.accurate=!0,!gg.length){const t=e.capabilities.clipSpaceSignY;gg[Zn.IDENTITY]=new On(1,0,0,0,0,t),gg[Zn.ROTATE_90]=new On(0,1,0,0,-t,0),gg[Zn.ROTATE_180]=new On(-1,0,0,0,0,-t),gg[Zn.ROTATE_270]=new On(0,-1,0,0,t,0)}}_setWidth(e){this._width=e,this._nativeObj.width=e}_setHeight(e){this._height=e,this._nativeObj.height=e}_setScene(e){this._scene=e,this._nativeObj.scene=e?e.native:null}_updateAspect(e=!0){if(this._aspect=this.window.width*this._viewport.width/(this.window.height*this._viewport.height),e){const e=this.window.swapchain;(e&&e.surfaceTransform||Zn.IDENTITY)%2&&(this._aspect=1/this._aspect)}this._isProjDirty=!0,this._nativeObj.aspect=this._aspect}_init(e){this._nativeObj=new Ea,this._scene&&(this._nativeObj.scene=this._scene.native),this._nativeObj.frustum=this._frustum}_destroy(){this._nativeObj=null}initialize(e){this._init(e),this.node=e.node,this._setWidth(1),this._setHeight(1),this.clearFlag=Fi.NONE,this.clearDepth=1,this.visibility=cf,this._name=e.name,this._proj=e.projection,this._priority=e.priority||0,this._aspect=this.screenScale=1,this.updateExposure(),this.changeTargetWindow(e.window)}destroy(){this._node=null,this.detachFromScene(),this._window&&(this._window.detachCamera(this),this.window=null),this._name=null,this._destroy()}attachToScene(e){this._enabled=!0,this._setScene(e)}detachFromScene(){this._enabled=!1,this._setScene(null)}resize(e,t){this._window&&(this._setWidth(e),this._setHeight(t),this._updateAspect())}setFixedSize(e,t){this._setWidth(e),this._setHeight(t),this._updateAspect(!1),this.isWindowSize=!1}syncCameraEditor(e){}update(e=!1){var t;if(!this._node)return;let n=!1;(this._node.hasChangedFlags||e)&&(On.invert(this._matView,this._node.worldMatrix),this._nativeObj.matView=this._matView,this._forward.x=-this._matView.m02,this._forward.y=-this._matView.m06,this._forward.z=-this._matView.m10,this._node.getWorldPosition(this._position),this._nativeObj.position=this._position,this._nativeObj.forward=this._forward,n=!0);const i=null===(t=this.window)||void 0===t?void 0:t.swapchain,s=i&&i.surfaceTransform||Zn.IDENTITY;if(this._isProjDirty||this._curTransform!==s){this._curTransform=s;const e=this._device.capabilities.clipSpaceSignY;if(this._proj===og.PERSPECTIVE)On.perspective(this._matProj,this._fov,this._aspect,this._nearClip,this._farClip,this._fovAxis===sg.VERTICAL,this._device.capabilities.clipSpaceMinZ,e,s);else{const t=this._orthoHeight*this._aspect,n=this._orthoHeight;On.ortho(this._matProj,-t,t,-n,n,this._nearClip,this._farClip,this._device.capabilities.clipSpaceMinZ,e,s)}this._nativeObj.aspect=this._aspect,On.invert(this._matProjInv,this._matProj),this._nativeObj.matProj=this._matProj,this._nativeObj.matProjInv=this._matProjInv,n=!0,this._isProjDirty=!1}n&&(On.multiply(this._matViewProj,this._matProj,this._matView),On.invert(this._matViewProjInv,this._matViewProj),this._frustum.update(this._matViewProj,this._matViewProjInv),this._nativeObj.matViewProj=this._matViewProj,this._nativeObj.matViewProjInv=this._matViewProjInv,this._nativeObj.frustum=this._frustum)}setViewportInOrientedSpace(e){var t;const{x:n,width:i,height:s}=e,o=this._device.capabilities.screenSpaceSignY<0?1-e.y-s:e.y,r=null===(t=this.window)||void 0===t?void 0:t.swapchain;switch(r&&r.surfaceTransform||Zn.IDENTITY){case Zn.ROTATE_90:this._viewport.x=1-o-s,this._viewport.y=n,this._viewport.width=s,this._viewport.height=i;break;case Zn.ROTATE_180:this._viewport.x=1-n-i,this._viewport.y=1-o-s,this._viewport.width=i,this._viewport.height=s;break;case Zn.ROTATE_270:this._viewport.x=o,this._viewport.y=1-n-i,this._viewport.width=s,this._viewport.height=i;break;case Zn.IDENTITY:this._viewport.x=n,this._viewport.y=o,this._viewport.width=i,this._viewport.height=s}this._orientedViewport.x=n,this._orientedViewport.y=o,this._orientedViewport.width=i,this._orientedViewport.height=s,this._nativeObj.viewPort=this._viewport,this.resize(this.width,this.height)}changeTargetWindow(e=null){this._window&&this._window.detachCamera(this);const t=e||u.director.root.mainWindow;if(t){t.attachCamera(this),this.window=t;const e=t.swapchain;(e&&e.surfaceTransform||Zn.IDENTITY)%2?this.resize(t.height,t.width):this.resize(t.width,t.height)}}detachCamera(){this._window&&this._window.detachCamera(this)}screenPointToRay(e,t,n){if(!this._node)return null;const i=this.width,s=this.height,o=this._orientedViewport.x*i,r=this._orientedViewport.y*s,a=this._orientedViewport.width*i,c=this._orientedViewport.height*s,l=this._proj===og.PERSPECTIVE,h=this._device.capabilities.clipSpaceSignY,u=Dn[this._curTransform];gn.set(dg,(t-o)/a*2-1,(n-r)/c*2-1,l?1:-1);const{x:_,y:d}=dg;return dg.x=_*u[0]+d*u[2]*h,dg.y=_*u[1]+d*u[3]*h,gn.transformMat4(l?dg:e.o,dg,this._matViewProjInv),l?(this._node.getWorldPosition(pg),Yo.fromPoints(e,pg,dg)):gn.transformQuat(e.d,gn.FORWARD,this._node.worldRotation),e}screenToWorld(e,t){const n=this.width,i=this.height,s=this._orientedViewport.x*n,o=this._orientedViewport.y*i,r=this._orientedViewport.width*n,a=this._orientedViewport.height*i,c=this._device.capabilities.clipSpaceSignY,l=Dn[this._curTransform];if(this._proj===og.PERSPECTIVE){gn.set(e,(t.x-s)/r*2-1,(t.y-o)/a*2-1,1);const{x:n,y:i}=e;e.x=n*l[0]+i*l[2]*c,e.y=n*l[1]+i*l[3]*c,gn.transformMat4(e,e,this._matViewProjInv),this._node&&this._node.getWorldPosition(dg),gn.lerp(e,dg,e,Kt(this._nearClip/this._farClip,1,t.z))}else{gn.set(e,(t.x-s)/r*2-1,(t.y-o)/a*2-1,2*t.z-1);const{x:n,y:i}=e;e.x=n*l[0]+i*l[2]*c,e.y=n*l[1]+i*l[3]*c,gn.transformMat4(e,e,this._matViewProjInv)}return e}worldToScreen(e,t){const n=this._device.capabilities.clipSpaceSignY,i=Dn[this._curTransform];gn.transformMat4(e,t,this._matViewProj);const{x:s,y:o}=e;e.x=s*i[0]+o*i[2]*n,e.y=s*i[1]+o*i[3]*n;const r=this.width,a=this.height,c=this._orientedViewport.x*r,l=this._orientedViewport.y*a,h=this._orientedViewport.width*r,u=this._orientedViewport.height*a;return e.x=c+.5*(e.x+1)*h,e.y=l+.5*(e.y+1)*u,e.z=.5*e.z+.5,e}worldMatrixToScreen(e,t,n,i){On.multiply(e,this._matViewProj,t),On.multiply(e,gg[this._curTransform],e);const s=n/2,o=i/2;return On.identity(fg),On.transform(fg,fg,gn.set(dg,s,o,0)),On.scale(fg,fg,gn.set(dg,s,o,1)),On.multiply(e,fg,e),e}setExposure(e){this._exposure=.833333/2**e,this._nativeObj.exposure=this._exposure}updateExposure(){const e=Math.log2(this._apertureValue*this._apertureValue/this._shutterValue*100/this._isoValue);this.setExposure(e)}}const yg=qe({Low_256x256:256,Medium_512x512:512,High_1024x1024:1024,Ultra_2048x2048:2048}),xg=qe({Planar:0,ShadowMap:1}),Sg=qe({HARD:0,SOFT:1,SOFT_2X:2}),Cg=xg.ShadowMap+1;class Eg{get enabled(){return this._enabled}set enabled(e){this._setEnable(e),this.activate()}get type(){return this._type}set type(e){this._setType(e),this.activate()}get normal(){return this._normal}set normal(e){gn.copy(this._normal,e),this._nativeObj.normal=this._normal}get distance(){return this._distance}set distance(e){this._distance=e,this._nativeObj.distance=e}get shadowColor(){return this._shadowColor}set shadowColor(e){this._shadowColor=e,this._nativeObj.color=e}get size(){return this._size}set size(e){this._size.set(e),this._nativeObj.size=e}get shadowMapDirty(){return this._shadowMapDirty}set shadowMapDirty(e){this._shadowMapDirty=e,this._nativeObj.shadowMapDirty=e}get matLight(){return this._matLight}get material(){return this._material}get instancingMaterial(){return this._instancingMaterial}get native(){return this._nativeObj}constructor(){this.fixedSphere=new er(0,0,0,.01),this.maxReceived=4,this.firstSetCSM=!1,this.shadowCameraFar=0,this.matShadowView=new On,this.matShadowProj=new On,this.matShadowViewProj=new On,this._enabled=!1,this._type=Cg,this._distance=0,this._normal=new gn(0,1,0),this._shadowColor=new dn(0,0,0,76),this._size=new Bn(512,512),this._shadowMapDirty=!1,this._matLight=new On,this._material=null,this._instancingMaterial=null,this._nativeObj=new Sa}getPlanarShader(e){return this._material||(this._material=new lg,this._material.initialize({effectName:"planar-shadow"}),this._nativeObj.planarPass=this._material.passes[0].native),this._material.passes[0].getShaderVariant(e)}getPlanarInstanceShader(e){return this._instancingMaterial||(this._instancingMaterial=new lg,this._instancingMaterial.initialize({effectName:"planar-shadow",defines:{USE_INSTANCING:!0}}),this._nativeObj.instancePass=this._instancingMaterial.passes[0].native),this._instancingMaterial.passes[0].getShaderVariant(e)}_setEnable(e){this._enabled=e,this._nativeObj.enabled=e,e||this._setType(Cg)}_setType(e){this._type=this.enabled?e:Cg,this._nativeObj.shadowType=this._type}initialize(e){this._setEnable(e.enabled),this._setType(e.type),this.normal=e.planeDirection,this.distance=e.planeHeight,this.shadowColor=e.shadowColor,this.maxReceived=e.maxReceived,this.size=e.size}activate(){this.enabled&&this.type===xg.Planar&&this._updatePlanarInfo()}_updatePlanarInfo(){this._material||(this._material=new lg,this._material.initialize({effectName:"planar-shadow"}),this._nativeObj.planarPass=this._material.passes[0].native),this._instancingMaterial||(this._instancingMaterial=new lg,this._instancingMaterial.initialize({effectName:"planar-shadow",defines:{USE_INSTANCING:!0}}),this._nativeObj.instancePass=this._instancingMaterial.passes[0].native)}_destroy(){this._nativeObj=null}destroy(){this._destroy(),this._material&&this._material.destroy(),this._instancingMaterial&&this._instancingMaterial.destroy(),this.fixedSphere.destroy()}}Eg.MAX_FAR=2e3,Eg.COEFFICIENT_OF_EXPANSION=2*Math.sqrt(3),u.Shadows=Eg;const Tg=new gn,bg=(new gn,new gn,new gn),Ag=new On,Pg=new Ua,wg=new Ua;let Ig=!1;const Rg=er.create(0,0,0,1),Dg=new er,Og=new Ka;Og.accurate=!0;let Ng=new Ka;Ng.accurate=!0;const Mg=new Ka,Lg=new On,Bg=new On,Fg=new On,zg=new On,Ug=new On,Gg=new On,Vg=new On,Hg=new gn,kg=new Bn,jg=new gn,Wg=new gn,qg=new gn(0,0,0),Xg=(new Ua,new Bl((()=>({model:null,depth:0})),128)),Yg=new Bl((()=>({model:null,depth:0})),128),Kg=new Bl((()=>({model:null,depth:0})),128);function $g(e,t){let n=0;e.node&&(gn.subtract(Tg,e.node.worldPosition,t.position),n=gn.dot(Tg,t.forward));const i=Xg.alloc();return i.model=e,i.depth=n,i}function Qg(e,t){let n=0;e.node&&(gn.subtract(Tg,e.node.worldPosition,t.position),n=gn.dot(Tg,t.forward));const i=Yg.alloc();return i.model=e,i.depth=n,i}function Jg(e,t){let n=0;e.node&&(gn.subtract(Tg,e.node.worldPosition,t.position),n=gn.dot(Tg,t.forward));const i=Kg.alloc();return i.model=e,i.depth=n,i}function Zg(e,t){const n=e.pipelineSceneData.validPunctualLights;n.length=0;const{spotLights:i}=t.scene;for(let e=0;e<i.length;e++){const s=i[e];s.baked||(er.set(Rg,s.position.x,s.position.y,s.position.z,s.range),Vr.sphereFrustum(Rg,t.frustum)&&n.push(s))}const{sphereLights:s}=t.scene;for(let e=0;e<s.length;e++){const i=s[e];i.baked||(er.set(Rg,i.position.x,i.position.y,i.position.z,i.range),Vr.sphereFrustum(Rg,t.frustum)&&n.push(i))}}function ev(e,t){const n=t.scene,i=n.mainLight,s=e.pipelineSceneData,o=s.shadows,r=s.skybox,a=s.renderObjects;Xg.freeArray(a),a.length=0;const c=s.castShadowObjects;Kg.freeArray(c),c.length=0,Ig=!1;let l=null;if(o.enabled&&(e.pipelineUBO.updateShadowUBORange(fp.SHADOW_COLOR_OFFSET,o.shadowColor),o.type===xg.ShadowMap))if(l=e.pipelineSceneData.dirShadowObjects,Yg.freeArray(l),l.length=0,i&&i.node)!function(e,t,n,i,s){const o=t.device;if(n.shadowFixedArea){const t=n.shadowOrthoSize,i=n.shadowOrthoSize,r=n.shadowNear,a=n.shadowFar;On.fromRT(Lg,n.node.getWorldRotation(),n.node.getWorldPosition()),On.invert(Bg,Lg),On.ortho(zg,-t,t,-i,i,r,a,o.capabilities.clipSpaceMinZ,o.capabilities.clipSpaceSignY),On.multiply(Ug,zg,Bg),On.invert(Fg,Bg),s.matShadowView=Bg,s.matShadowProj=zg,s.matShadowViewProj=Ug,Ka.createOrtho(e,2*t,2*i,r,a,Fg)}else{const t=n.shadowInvisibleOcclusionRange,r=s.size.x;!function(e,t){if(!t.node)return;const n=t.node,i=n.getWorldPosition(),s=n.getWorldRotation();On.fromRT(e,s,i),e.m08*=-1,e.m09*=-1,e.m10*=-1}(Ag,i),Ka.split(Og,i,Ag,.1,n.shadowDistance),Ng=Ka.clone(Og),On.fromRT(Lg,n.node.rotation,qg),On.invert(Bg,Lg),On.invert(Fg,Bg);const a=Bg.clone();Ng.transform(Bg),Ua.fromPoints(Pg,new gn(1e7,1e7,1e7),new gn(-1e7,-1e7,-1e7)),Pg.mergeFrustum(Ng);const c=2*Pg.halfExtents.z;bg.set(Pg.center.x,Pg.center.y,Pg.center.z+Pg.halfExtents.z+t),gn.transformMat4(bg,bg,Fg),On.fromRT(Lg,n.node.rotation,bg),On.invert(Bg,Lg),On.invert(Fg,Bg);const l=gn.distance(Og.vertices[0],Og.vertices[6]);Dg.center.set(0,0,0),Dg.radius=-1,Dg.mergePoints(Og.vertices);const h=.8*l+.4*Dg.radius;s.shadowCameraFar=c+t;const u=.5*h;if(On.ortho(zg,-u,u,-u,u,.1,s.shadowCameraFar,o.capabilities.clipSpaceMinZ,o.capabilities.clipSpaceSignY),r>0){On.multiply(Gg,zg,a),gn.transformMat4(Hg,bg,Gg);const t=2/r;kg.set(t,t);const i=Hg.x%kg.x,o=Hg.y%kg.y;jg.set(Hg.x-i,Hg.y-o,Hg.z),On.invert(Vg,Gg),gn.transformMat4(Wg,jg,Vg),On.fromRT(Lg,n.node.rotation,Wg),On.invert(Bg,Lg),On.invert(Fg,Bg),Ka.createOrtho(e,h,h,.1,s.shadowCameraFar,Fg)}else{for(let t=0;t<8;t++)e.vertices[t].set(0,0,0);e.updatePlanes()}On.multiply(Ug,zg,Bg),s.matShadowView=Bg,s.matShadowProj=zg,s.matShadowViewProj=Ug}}(Mg,e,i,t,o);else{for(let e=0;e<8;e++)Mg.vertices[e].set(0,0,0);Mg.updatePlanes()}i&&o.type===xg.Planar&&function(e,t){const n=e.pipelineSceneData.shadows,i=t.direction,s=n.normal,o=n.distance+.001,r=1/gn.dot(s,i),a=i.x*r,c=i.y*r,l=i.z*r,h=s.x,u=s.y,_=s.z,d=n.matLight;d.m00=1-h*a,d.m01=-h*c,d.m02=-h*l,d.m03=0,d.m04=-u*a,d.m05=1-u*c,d.m06=-u*l,d.m07=0,d.m08=-_*a,d.m09=-_*c,d.m10=1-_*l,d.m11=0,d.m12=a*o,d.m13=c*o,d.m14=l*o,d.m15=1,e.pipelineUBO.updateShadowUBORange(fp.MAT_LIGHT_PLANE_PROJ_OFFSET,n.matLight)}(e,i),r.enabled&&r.model&&t.clearFlag&mg&&a.push($g(r.model,t));const h=n.models,u=t.visibility;for(let e=0;e<h.length;e++){const n=h[e];if(n.enabled&&(n.castShadow&&c.push(Jg(n,t)),o.firstSetCSM&&n.worldBounds&&(Ig||(wg.copy(n.worldBounds),Ig=!0),Ua.merge(wg,wg,n.worldBounds)),n.node&&(u&n.node.layer)===n.node.layer||u&n.visFlags)){if(null!=l&&n.castShadow&&n.worldBounds&&Vr.aabbFrustum(n.worldBounds,Mg)&&l.push(Qg(n,t)),n.worldBounds&&!Vr.aabbFrustum(n.worldBounds,t.frustum))continue;a.push($g(n,t))}}}const tv=new cs(pi.LINEAR,pi.LINEAR,pi.NONE,fi.CLAMP,fi.CLAMP,fi.CLAMP),nv=new cs(pi.POINT,pi.POINT,pi.NONE,fi.CLAMP,fi.CLAMP,fi.CLAMP);class iv{get descriptorSetMap(){return this._descriptorSetMap}get linearSampler(){return this._linearSampler}get pointSampler(){return this._pointSampler}get descriptorSetLayout(){return this._descriptorSetLayout}get globalDescriptorSet(){return this._globalDescriptorSet}constructor(e){this._device=void 0,this._descriptorSetMap=new Map,this._globalDescriptorSet=void 0,this._descriptorSetLayout=void 0,this._linearSampler=void 0,this._pointSampler=void 0,this._device=e.device,this._linearSampler=this._device.getSampler(tv),this._pointSampler=this._device.getSampler(nv);const t=new Rs(np.bindings);this._descriptorSetLayout=this._device.createDescriptorSetLayout(t),this._globalDescriptorSet=this._device.createDescriptorSet(new Ds(this._descriptorSetLayout))}bindBuffer(e,t){this._globalDescriptorSet.bindBuffer(e,t);const n=this._descriptorSetMap.values();let i=n.next();for(;!i.done;)i.value.bindBuffer(e,t),i=n.next()}bindSampler(e,t){this._globalDescriptorSet.bindSampler(e,t);const n=this._descriptorSetMap.values();let i=n.next();for(;!i.done;)i.value.bindSampler(e,t),i=n.next()}bindTexture(e,t){this._globalDescriptorSet.bindTexture(e,t);const n=this._descriptorSetMap.values();let i=n.next();for(;!i.done;)i.value.bindTexture(e,t),i=n.next()}update(){this._globalDescriptorSet.update();const e=this._descriptorSetMap.values();let t=e.next();for(;!t.done;)t.value.update(),t=e.next()}getOrCreateDescriptorSet(e){const t=this._device;if(!this._descriptorSetMap.has(e)){const n=this._globalDescriptorSet,i=t.createDescriptorSet(new Ds(this._descriptorSetLayout));this._descriptorSetMap.set(e,i);for(let e=sp.UBO_GLOBAL;e<sp.COUNT;e++)i.bindBuffer(e,n.getBuffer(e)),i.bindSampler(e,n.getSampler(e)),i.bindTexture(e,n.getTexture(e));const s=t.createBuffer(new es(si.UNIFORM|si.TRANSFER_DST,ai.HOST|ai.DEVICE,fp.SIZE,fp.SIZE));i.bindBuffer(fp.BINDING,s),i.update()}return this._descriptorSetMap.get(e)}destroy(){this._descriptorSetLayout.destroy()}}let sv=0;const ov={};var rv={addStage(e){if(void 0!==ov[e])return;const t=1<<sv;ov[e]=t,sv+=1},stageID(e){const t=ov[e];return void 0===t?-1:t},stageIDs(e){let t=0;for(const n of e){const e=ov[n];void 0!==e&&(t|=e)}return t}};const av=new Ds(null);class cv{constructor(){this._device=null,this._passes=null,this._shaders=null,this._subMesh=null,this._patches=null,this._priority=tp.DEFAULT,this._inputAssembler=null,this._descriptorSet=null,this._worldBoundDescriptorSet=null,this._planarInstanceShader=null,this._planarShader=null,this._reflectionTex=null,this._reflectionSampler=null}_destroyDescriptorSet(){this._descriptorSet.destroy(),this._nativeObj.setDescriptorSet(null),this._descriptorSet=null}_destroyWorldBoundDescriptorSet(){this._worldBoundDescriptorSet.destroy(),this._nativeObj.setWorldBoundDescriptorSet(null),this._worldBoundDescriptorSet=null}_destroyInputAssembler(){this._inputAssembler.destroy(),this._nativeObj.setInputAssembler(null),this._inputAssembler=null}_createDescriptorSet(e){this._descriptorSet=this._device.createDescriptorSet(e),this._nativeObj.setDescriptorSet(this._descriptorSet)}_createWorldBoundDescriptorSet(e){this._worldBoundDescriptorSet=this._device.createDescriptorSet(e),this._nativeObj.setWorldBoundDescriptorSet(this._worldBoundDescriptorSet)}set passes(e){e.length>8?N(12004,8):(this._passes=e,this._flushPassInfo(),this._passes[0].batchingScheme===jm.VB_MERGING&&(this.subMesh.genFlatBuffers(),this._setSubMesh(this.subMesh)),this._descriptorSet&&(this._destroyDescriptorSet(),av.layout=e[0].localSetLayout,this._createDescriptorSet(av)))}get passes(){return this._passes}get shaders(){return this._shaders}set subMesh(e){this._inputAssembler.destroy(),this._inputAssembler.initialize(e.iaInfo),this._passes[0].batchingScheme===jm.VB_MERGING&&this.subMesh.genFlatBuffers(),this._setSubMesh(e)}get subMesh(){return this._subMesh}set priority(e){this._priority=e,this._nativeObj.setPriority(e)}get priority(){return this._priority}get inputAssembler(){return this._inputAssembler}get descriptorSet(){return this._descriptorSet}get worldBoundDescriptorSet(){return this._worldBoundDescriptorSet}get patches(){return this._patches}get planarInstanceShader(){return this._planarInstanceShader}get planarShader(){return this._planarShader}_setInputAssembler(e){this._inputAssembler=this._device.createInputAssembler(e),this._nativeObj.setInputAssembler(this._inputAssembler)}_setSubMesh(e){this._subMesh=e,this._nativeObj.setSubMeshBuffers(e.flatBuffers)}get native(){return this._nativeObj}_init(){this._nativeObj=new wa}initialize(e,t,n=null){const i=u.director.root;this._device=i.device,av.layout=t[0].localSetLayout,this._init(),this._setInputAssembler(e.iaInfo),this._createDescriptorSet(av);const s=u.director.root.pipeline.pipelineSceneData.getOcclusionQueryPass(),o=new Ds(null);if(o.layout=s.localSetLayout,this._createWorldBoundDescriptorSet(o),this._setSubMesh(e),this._patches=n,this._passes=t,this._flushPassInfo(),t[0].batchingScheme===jm.VB_MERGING&&(this.subMesh.genFlatBuffers(),this._setSubMesh(this.subMesh)),this.priority=tp.DEFAULT,t[0].phase===zm("reflection")){let e=i.mainWindow.width,t=i.mainWindow.height;const n=512;t<e?(e=n*e/t,t=n):(e=n,t=n*t/e),this._reflectionTex=this._device.createTexture(new rs(ci.TEX2D,li.STORAGE|li.TRANSFER_SRC|li.SAMPLED,ti.RGBA8,e,t)),this.descriptorSet.bindTexture(tf,this._reflectionTex),this._reflectionSampler=this._device.getSampler(new cs(pi.LINEAR,pi.LINEAR,pi.NONE,fi.CLAMP,fi.CLAMP,fi.CLAMP)),this.descriptorSet.bindSampler(tf,this._reflectionSampler),this.descriptorSet.bindTexture(of,this._reflectionTex)}}_initNativePlanarShadowShader(e){this._planarShader=e.getPlanarShader(this._patches),this._nativeObj.setPlanarShader(this._planarShader)}initPlanarShadowShader(){const e=u.director.root.pipeline.pipelineSceneData.shadows;this._initNativePlanarShadowShader(e)}_initNativePlanarShadowInstanceShader(e){this._planarInstanceShader=e.getPlanarInstanceShader(this._patches),this._nativeObj.setPlanarInstanceShader(this._planarInstanceShader)}initPlanarShadowInstanceShader(){const e=u.director.root.pipeline.pipelineSceneData.shadows;this._initNativePlanarShadowInstanceShader(e)}_destroy(){this._nativeObj=null}destroy(){this._destroyDescriptorSet(),this._destroyWorldBoundDescriptorSet(),this._destroyInputAssembler(),this.priority=tp.DEFAULT,this._patches=null,this._subMesh=null,this._passes=null,this._shaders=null,this._reflectionTex&&this._reflectionTex.destroy(),this._reflectionTex=null,this._reflectionSampler=null,this._destroy()}update(){for(let e=0;e<this._passes.length;++e)this._passes[e].update();this._descriptorSet.update(),this._worldBoundDescriptorSet.update()}onPipelineStateChanged(){const e=this._passes;if(e){for(let t=0;t<e.length;t++){const n=e[t];n.beginChangeStatesSilently(),n.tryCompile(),n.endChangeStatesSilently()}this._flushPassInfo()}}onMacroPatchesStateChanged(e){this._patches=e;const t=this._passes;if(t){for(let e=0;e<t.length;e++){const n=t[e];n.beginChangeStatesSilently(),n.tryCompile(),n.endChangeStatesSilently()}this._flushPassInfo()}}_flushPassInfo(){const e=this._passes;if(e){this._shaders||(this._shaders=[]),this._shaders.length=e.length;for(let t=0,n=e.length;t<n;t++)this._shaders[t]=e[t].getShaderVariant(this.patches);{const t=e.map((e=>e.native));this._nativeObj.setPasses(t),this._nativeObj.setShaders(this._shaders)}}}}const lv=new On,hv=[{name:"CC_RECEIVE_SHADOW",value:!0}],uv=[{name:"CC_USE_LIGHTMAP",value:!0}];let _v;!function(e){e[e.DEFAULT=0]="DEFAULT",e[e.SKINNING=1]="SKINNING",e[e.BAKED_SKINNING=2]="BAKED_SKINNING",e[e.BATCH_2D=3]="BATCH_2D",e[e.PARTICLE_BATCH=4]="PARTICLE_BATCH",e[e.LINE=5]="LINE"}(_v||(_v={}));const dv=new cs(pi.LINEAR,pi.LINEAR,pi.NONE,fi.CLAMP,fi.CLAMP,fi.CLAMP),pv=new cs(pi.LINEAR,pi.LINEAR,pi.LINEAR,fi.CLAMP,fi.CLAMP,fi.CLAMP);class fv{get subModels(){return this._subModels}get inited(){return this._inited}get worldBounds(){return this._worldBounds}get modelBounds(){return this._modelBounds}get localBuffer(){return this._localBuffer}get worldBoundBuffer(){return this._worldBoundBuffer}get updateStamp(){return this._updateStamp}get isInstancingEnabled(){return this._instMatWorldIdx>=0}get shadowBias(){return this._shadowBias}set shadowBias(e){this._shadowBias=e,this._nativeObj.setShadowBias(e)}get shadowNormalBias(){return this._shadowNormalBias}set shadowNormalBias(e){this._shadowNormalBias=e,this._nativeObj.setShadowNormalBias(e)}get receiveShadow(){return this._receiveShadow}set receiveShadow(e){this._setReceiveShadow(e),this.onMacroPatchesStateChanged()}get castShadow(){return this._castShadow}set castShadow(e){this._castShadow=e,this._nativeObj.setCastShadow(e)}get node(){return this._node}set node(e){this._node=e,this._nativeObj.setNode(e.native)}get transform(){return this._transform}set transform(e){this._transform=e,this._nativeObj.setTransform(e.native)}get visFlags(){return this._visFlags}set visFlags(e){this._visFlags=e,this._nativeObj.seVisFlag(e)}get enabled(){return this._enabled}set enabled(e){this._enabled=e,this._nativeObj.setEnabled(e)}get native(){return this._nativeObj}constructor(){this.type=_v.DEFAULT,this.scene=null,this.isDynamicBatching=!1,this.instancedAttributes={buffer:null,views:[],attributes:[]},this._worldBounds=null,this._modelBounds=null,this._subModels=[],this._node=null,this._transform=null,this._device=void 0,this._inited=!1,this._descriptorSetCount=1,this._updateStamp=-1,this._localDataUpdated=!0,this._localData=new Float32Array(wp.COUNT),this._localBuffer=null,this._instMatWorldIdx=-1,this._lightmap=null,this._lightmapUVParam=new Gn,this._worldBoundBuffer=null,this._receiveShadow=!1,this._castShadow=!1,this._shadowBias=0,this._shadowNormalBias=0,this._enabled=!0,this._visFlags=Zd.Enum.NONE,this._device=u.director.root.device}_setReceiveShadow(e){this._receiveShadow=e,this._nativeObj.setReceiveShadow(e)}_init(){this._nativeObj=new ua}initialize(){this._inited||(this._init(),this._setReceiveShadow(!0),this.castShadow=!1,this.enabled=!0,this.visFlags=Zd.Enum.NONE,this._inited=!0)}_destroySubmodel(e){e.destroy()}_destroy(){this._nativeObj=null}destroy(){const e=this._subModels;for(let t=0;t<e.length;t++){const e=this._subModels[t];this._destroySubmodel(e)}this._localBuffer&&(this._localBuffer.destroy(),this._localBuffer=null),this._worldBoundBuffer&&(this._worldBoundBuffer.destroy(),this._worldBoundBuffer=null),this._worldBounds=null,this._modelBounds=null,this._subModels.length=0,this._inited=!1,this._localDataUpdated=!0,this._transform=null,this._node=null,this.isDynamicBatching=!1,this._destroy()}attachToScene(e){this.scene=e,this._localDataUpdated=!0}detachFromScene(){this.scene=null}updateTransform(e){const t=this.transform;if(t.hasChangedFlags||t._dirtyFlags){t.updateWorldTransform(),this._localDataUpdated=!0;const e=this._worldBounds;this._modelBounds&&e&&this._modelBounds.transform(t._mat,t._pos,t._rot,t._scale,e)}}updateWorldBound(){const e=this.transform;if(null!==e){e.updateWorldTransform(),this._localDataUpdated=!0;const t=this._worldBounds;this._modelBounds&&t&&this._modelBounds.transform(e._mat,e._pos,e._rot,e._scale,t)}}_applyLocalData(){}_applyLocalBuffer(){this._nativeObj.setLocalBuffer(this._localBuffer)}_applyWorldBoundBuffer(){this._nativeObj.setWorldBoundBuffer(this._worldBoundBuffer)}updateUBOs(e){const t=this._subModels;for(let e=0;e<t.length;e++)t[e].update();if(this._updateStamp=e,!this._localDataUpdated)return;this._localDataUpdated=!1;const n=this.transform._mat,i=this._instMatWorldIdx;if(i>=0){const e=this.instancedAttributes.views;!function(e,t,n,i){t[0]=e.m00,t[1]=e.m01,t[2]=e.m02,t[3]=e.m12,n[0]=e.m04,n[1]=e.m05,n[2]=e.m06,n[3]=e.m13,i[0]=e.m08,i[1]=e.m09,i[2]=e.m10,i[3]=e.m14}(n,e[i],e[i+1],e[i+2])}else this._localBuffer&&(On.toArray(this._localData,n,wp.MAT_WORLD_OFFSET),On.inverseTranspose(lv,n),On.toArray(this._localData,lv,wp.MAT_WORLD_IT_OFFSET),this._localBuffer.update(this._localData),this._applyLocalData(),this._applyLocalBuffer())}_updateNativeBounds(){this._nativeObj.setBounds(this._worldBounds.native)}createBoundingShape(e,t){e&&t&&(this._modelBounds=Ua.fromPoints(Ua.create(),e,t),this._worldBounds=Ua.clone(this._modelBounds),this._updateNativeBounds())}_createSubModel(){return new cv}initSubModel(e,t,n){this.initialize(),null==this._subModels[e]?this._subModels[e]=this._createSubModel():this._subModels[e].destroy(),this._subModels[e].initialize(t,n.passes,this.getMacroPatches(e)),this._subModels[e].initPlanarShadowShader(),this._subModels[e].initPlanarShadowInstanceShader(),this._updateAttributesAndBinding(e),this._nativeObj.setSubModel(e,this._subModels[e].native)}setSubModelMesh(e,t){this._subModels[e]&&(this._subModels[e].subMesh=t)}setSubModelMaterial(e,t){this._subModels[e]&&(this._subModels[e].passes=t.passes,this._updateAttributesAndBinding(e))}onGlobalPipelineStateChanged(){const e=this._subModels;for(let t=0;t<e.length;t++)e[t].onPipelineStateChanged()}onMacroPatchesStateChanged(){const e=this._subModels;for(let t=0;t<e.length;t++)e[t].onMacroPatchesStateChanged(this.getMacroPatches(t))}updateLightingmap(e,t){Gn.toArray(this._localData,t,wp.LIGHTINGMAP_UVPARAM),this._localDataUpdated=!0,this._lightmap=e,this._lightmapUVParam=t,this.onMacroPatchesStateChanged(),null===e&&(e=Fm.get("empty-texture"));const n=e.getGFXTexture();if(n){const i=this._device.getSampler(e.mipmaps.length>1?pv:dv),s=this._subModels;for(let e=0;e<s.length;e++){const{descriptorSet:t}=s[e];t.bindTexture(Kp,n),t.bindSampler(Kp,i),t.update()}this._nativeObj.updateLightingmap(t,i,n)}}updateLocalShadowBias(){const e=this._localData;e[wp.LOCAL_SHADOW_BIAS+0]=this._shadowBias,e[wp.LOCAL_SHADOW_BIAS+1]=this._shadowNormalBias,e[wp.LOCAL_SHADOW_BIAS+2]=0,e[wp.LOCAL_SHADOW_BIAS+3]=0,this._localDataUpdated=!0}getMacroPatches(e){let t=this.receiveShadow?hv:null;return null!=this._lightmap&&(t=t?t.concat(uv):uv),t}_updateAttributesAndBinding(e){const t=this._subModels[e];if(!t)return;this._initLocalDescriptors(e),this._updateLocalDescriptors(e,t.descriptorSet),this._initWorldBoundDescriptors(e),this._updateWorldBoundDescriptors(e,t.worldBoundDescriptorSet);const n=t.passes[0].getShaderVariant(t.patches);this._updateInstancedAttributes(n.attributes,t.passes[0])}_getInstancedAttributeIndex(e){const{attributes:t}=this.instancedAttributes;for(let n=0;n<t.length;n++)if(t[n].name===e)return n;return-1}_setInstMatWorldIdx(e){this._instMatWorldIdx=e,this._nativeObj.setInstMatWorldIdx(e)}_updateInstancedAttributes(e,t){if(!t.device.hasFeature(ei.INSTANCED_ARRAYS))return;let n=0;for(let t=0;t<e.length;t++){const i=e[t];i.isInstanced&&(n+=Hs[i.format].size)}const i=this.instancedAttributes;i.buffer=new Uint8Array(n),i.views.length=i.attributes.length=0;let s=0;for(let t=0;t<e.length;t++){const n=e[t];if(!n.isInstanced)continue;const o=new vs;o.format=n.format,o.name=n.name,o.isNormalized=n.isNormalized,o.location=n.location,i.attributes.push(o);const r=Hs[n.format],a=new(Js(r))(i.buffer.buffer,s,r.count);i.views.push(a),s+=r.size}t.batchingScheme===jm.INSTANCING&&t.getInstancedBuffer().destroy(),this._setInstMatWorldIdx(this._getInstancedAttributeIndex("a_matWorld0")),this._localDataUpdated=!0,this._nativeObj.setInstancedAttrBlock(i.buffer.buffer,i.views,i.attributes)}_initLocalDescriptors(e){this._localBuffer||(this._localBuffer=this._device.createBuffer(new es(si.UNIFORM|si.TRANSFER_DST,ai.DEVICE,wp.SIZE,wp.SIZE)),this._applyLocalBuffer())}_initWorldBoundDescriptors(e){this._worldBoundBuffer||(this._worldBoundBuffer=this._device.createBuffer(new es(si.UNIFORM|si.TRANSFER_DST,ai.DEVICE,Ip.SIZE,Ip.SIZE)),this._applyWorldBoundBuffer())}_updateLocalDescriptors(e,t){this._localBuffer&&t.bindBuffer(wp.BINDING,this._localBuffer)}_updateWorldBoundDescriptors(e,t){this._worldBoundBuffer&&t.bindBuffer(Ip.BINDING,this._worldBoundBuffer)}}class mv{set enabled(e){this._enabled=e,this._nativeObj.enabled=e}get enabled(){return this._enabled}get skyColor(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._skyColorHDR:this._skyColorLDR}set skyColor(e){const t=u.director.root.pipeline.pipelineSceneData.isHDR;t?this._skyColorHDR.set(e):this._skyColorLDR.set(e),this._nativeObj.skyColor=t?this._skyColorHDR:this._skyColorLDR}get skyIllum(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._skyIllumHDR:this._skyIllumLDR}set skyIllum(e){const t=u.director.root.pipeline.pipelineSceneData.isHDR;t?this._skyIllumHDR=e:this._skyIllumLDR=e,this._nativeObj.skyIllum=t?this._skyIllumHDR:this._skyIllumLDR}get groundAlbedo(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._groundAlbedoHDR:this._groundAlbedoLDR}set groundAlbedo(e){const t=u.director.root.pipeline.pipelineSceneData.isHDR;t?this._groundAlbedoHDR.set(e):this._groundAlbedoLDR.set(e),this._nativeObj.groundAlbedo=t?this._groundAlbedoHDR:this._groundAlbedoLDR}get native(){return this._nativeObj}constructor(){this._groundAlbedoHDR=new Gn(.2,.2,.2,1),this._skyColorHDR=new Gn(.2,.5,.8,1),this._skyIllumHDR=0,this._groundAlbedoLDR=new Gn(.2,.2,.2,1),this._skyColorLDR=new Gn(.2,.5,.8,1),this._skyIllumLDR=0,this._enabled=!1,this._nativeObj=new xa}initialize(e){this._skyColorHDR=e.skyColorHDR,this._groundAlbedoHDR.set(e.groundAlbedoHDR),this._skyIllumHDR=e.skyIllumHDR,this._skyColorLDR=e.skyColorLDR,this._groundAlbedoLDR.set(e.groundAlbedoLDR),this._skyIllumLDR=e.skyIllumLDR,this._nativeObj.skyIllum=this.skyIllum,this._nativeObj.skyColor=this.skyColor,this._nativeObj.groundAlbedo=this.groundAlbedo}_destroy(){this._nativeObj=null}destroy(){this._destroy()}}mv.SUN_ILLUM=65e3,mv.SKY_ILLUM=2e4,u.Ambient=mv;class gv extends Wm{get parent(){return this._parent}constructor(e,t){super(e.root),this._parent=void 0,this._owner=void 0,this._dontNotify=!1,this._parent=e,this._owner=t,this._doInit(this._parent,!0);for(let e=0;e<this._shaderInfo.blocks.length;e++){const t=this._shaderInfo.blocks[e],n=this._blocks[t.binding],i=this._parent.blocks[t.binding];n.set(i)}this._setRootBufferDirty(!0);const n=this._parent;for(let e=0;e<this._shaderInfo.samplerTextures.length;e++){const t=this._shaderInfo.samplerTextures[e];for(let e=0;e<t.count;e++){const i=n._descriptorSet.getSampler(t.binding,e),s=n._descriptorSet.getTexture(t.binding,e);this._descriptorSet.bindSampler(t.binding,i,e),this._descriptorSet.bindTexture(t.binding,s,e)}}super.tryCompile()}overridePipelineStates(e,t){this._bs.reset(),this._rs.reset(),this._dss.reset(),Wm.fillPipelineInfo(this,e),Wm.fillPipelineInfo(this,t),this._onStateChange()}tryCompile(e){if(e&&!Ef(this._defines,e))return!1;const t=super.tryCompile();return this._onStateChange(),t}beginChangeStatesSilently(){this._dontNotify=!0}endChangeStatesSilently(){this._dontNotify=!1}_syncBatchingScheme(){this._defines.USE_BATCHING=this._defines.USE_INSTANCING=!1,this._setBatchingScheme(jm.NONE)}_onStateChange(){this._setHash(Wm.getPassHash(this)),this._owner.onPassStateChange(this._dontNotify)}}class vv extends lg{get parent(){return this._parent}get owner(){return this._owner}constructor(e){super(),this._passes=[],this._parent=void 0,this._owner=void 0,this._subModelIdx=0,this._parent=e.parent,this._owner=e.owner||null,this._subModelIdx=e.subModelIdx||0,this.copy(this._parent)}recompileShaders(e,t){if(this._passes&&this.effectAsset)if(void 0===t)for(const t of this._passes)t.tryCompile(e);else this._passes[t].tryCompile(e)}overridePipelineStates(e,t){if(!this._passes||!this.effectAsset)return;const n=this.effectAsset.techniques[this.technique].passes;if(void 0===t)for(let t=0;t<this._passes.length;t++){const i=this._passes[t],s=this._states[t]||(this._states[t]={});for(const t in e)s[t]=e[t];i.overridePipelineStates(n[i.passIndex],s)}else{const i=this._states[t]||(this._states[t]={});for(const t in e)i[t]=e[t];this._passes[t].overridePipelineStates(n[t],i)}}destroy(){return this._doDestroy(),!0}onPassStateChange(e){this._hash=lg.getHash(this),!e&&this._owner&&this._owner._onRebuildPSO(this._subModelIdx,this)}_createPasses(){const e=[],t=this._parent.passes;if(!t)return e;for(let n=0;n<t.length;++n)e.push(new gv(t[n],this));return e}}let yv=null,xv=null;const Sv=qe({HEMISPHERE_DIFFUSE:0,AUTOGEN_HEMISPHERE_DIFFUSE_WITH_REFLECTION:1,DIFFUSEMAP_WITH_REFLECTION:2});class Cv{get model(){return this._model}get enabled(){return this._enabled}set enabled(e){this._setEnabled(e),e?this.activate():this._updatePipeline()}get useHDR(){return this._useHDR}set useHDR(e){this._setUseHDR(e),this.setEnvMaps(this._envmapHDR,this._envmapLDR)}get useIBL(){return this._useIBL}set useIBL(e){this._setUseIBL(e),this._updatePipeline()}get useDiffuseMap(){return this._useDiffuseMap}set useDiffuseMap(e){this._useDiffuseMap=e,this._updatePipeline()}get isRGBE(){return!!this.envmap&&this.envmap.isRGBE}get envmap(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._envmapHDR:this._envmapLDR}set envmap(e){u.director.root.pipeline.pipelineSceneData.isHDR?this.setEnvMaps(e,this._envmapLDR):this.setEnvMaps(this._envmapHDR,e)}get diffuseMap(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._diffuseMapHDR:this._diffuseMapLDR}set diffuseMap(e){u.director.root.pipeline.pipelineSceneData.isHDR?this.setDiffuseMaps(e,this._diffuseMapLDR):this.setDiffuseMaps(this._diffuseMapHDR,e)}get native(){return this._nativeObj}constructor(){this._envmapLDR=null,this._envmapHDR=null,this._diffuseMapLDR=null,this._diffuseMapHDR=null,this._globalDSManager=null,this._model=null,this._default=null,this._enabled=!1,this._useIBL=!1,this._useHDR=!0,this._useDiffuseMap=!1,this._nativeObj=new va}_setEnabled(e){this._enabled=e,this._nativeObj.enabled=e}_setUseIBL(e){this._useIBL=e,this._nativeObj.useIBL=e}_setUseHDR(e){this._useHDR=e,this._nativeObj.useHDR=e}_setUseDiffuseMap(e){this._useDiffuseMap=e,this._nativeObj.useDiffuseMap=e}initialize(e){this._setEnabled(e.enabled),this._setUseIBL(e.useIBL),this._setUseDiffuseMap(e.applyDiffuseMap),this._setUseHDR(e.useHDR)}setEnvMaps(e,t){this._envmapHDR=e,this._envmapLDR=t,this._updateGlobalBinding(),this._updatePipeline()}setDiffuseMaps(e,t){this._diffuseMapHDR=e,this._diffuseMapLDR=t,this._updateGlobalBinding(),this._updatePipeline()}activate(){const e=u.director.root.pipeline;this._globalDSManager=e.globalDSManager,this._default=Fm.get("default-cube-texture"),this._model||(this._model=u.director.root.createModel(u.renderer.scene.Model),this._model._initLocalDescriptors=()=>{},this._model._initWorldBoundDescriptors=()=>{},this._nativeObj.model=this._model.native);let t=this._default.isRGBE;if(this.envmap&&(t=this.envmap.isRGBE),!xv){const e=new lg;e.initialize({effectName:"skybox",defines:{USE_RGBE_CUBEMAP:t}}),xv=new vv({parent:e})}this.enabled&&(yv||(yv=u.utils.createMesh(u.primitives.box({width:2,height:2,length:2}))),this._model.initSubModel(0,yv.renderingSubMeshes[0],xv)),this.envmap||(this.envmap=this._default),this.diffuseMap||(this.diffuseMap=this._default),this._updateGlobalBinding(),this._updatePipeline()}_updatePipeline(){this._nativeObj.isRGBE=this.isRGBE;const e=u.director.root,t=e.pipeline,n=this.useIBL?this.isRGBE?2:1:0,i=this.useIBL&&this.useDiffuseMap&&this.diffuseMap?this.isRGBE?2:1:0,s=this.useHDR;t.macros.CC_USE_IBL===n&&t.macros.CC_USE_DIFFUSEMAP===i&&t.macros.CC_USE_HDR===s||(t.macros.CC_USE_IBL=n,t.macros.CC_USE_DIFFUSEMAP=i,t.macros.CC_USE_HDR=s,e.onGlobalPipelineStateChanged()),this.enabled&&xv&&xv.recompileShaders({USE_RGBE_CUBEMAP:this.isRGBE}),this._model&&this._model.setSubModelMaterial(0,xv)}_updateGlobalBinding(){if(this._globalDSManager){const e=u.director.root.device,t=this.envmap?this.envmap:this._default;if(t){const n=t.getGFXTexture(),i=e.getSampler(t.getSamplerInfo());this._globalDSManager.bindSampler(yp,i),this._globalDSManager.bindTexture(yp,n)}const n=this.diffuseMap?this.diffuseMap:this._default;if(n){const t=n.getGFXTexture(),i=e.getSampler(n.getSamplerInfo());this._globalDSManager.bindSampler(Cp,i),this._globalDSManager.bindTexture(Cp,t)}this._globalDSManager.update()}}_destroy(){this._nativeObj=null}destroy(){this._destroy()}}u.Skybox=Cv;const Ev=new Gn,Tv=qe({LINEAR:0,EXP:1,EXP_SQUARED:2,LAYERED:3}),bv=Tv.LAYERED+1;class Av{set enabled(e){this._setEnable(e),e?this.activate():(this._type=bv,this._updatePipeline())}get enabled(){return this._enabled}set accurate(e){this._setAccurate(e),this._updatePipeline()}get accurate(){return this._accurate}set fogColor(e){this._fogColor.set(e),Ev.set(e.x,e.y,e.z,e.w),Xm(this._colorArray,Ev),this._nativeObj.color=this._fogColor}get fogColor(){return this._fogColor}get type(){return this._type}set type(e){this._setType(e),this.enabled&&this._updatePipeline()}get fogDensity(){return this._fogDensity}set fogDensity(e){this._fogDensity=e,this._nativeObj.density=e}get fogStart(){return this._fogStart}set fogStart(e){this._fogStart=e,this._nativeObj.start=e}get fogEnd(){return this._fogEnd}set fogEnd(e){this._fogEnd=e,this._nativeObj.end=e}get fogAtten(){return this._fogAtten}set fogAtten(e){this._fogAtten=e,this._nativeObj.atten=e}get fogTop(){return this._fogTop}set fogTop(e){this._fogTop=e,this._nativeObj.top=e}get fogRange(){return this._fogRange}set fogRange(e){this._fogRange=e,this._nativeObj.range=e}get colorArray(){return this._colorArray}get native(){return this._nativeObj}constructor(){this._fogColor=new dn("#C8C8C8"),this._colorArray=new Gn(.2,.2,.2,1),this._enabled=!1,this._accurate=!1,this._type=0,this._fogDensity=.3,this._fogStart=.5,this._fogEnd=300,this._fogAtten=5,this._fogTop=1.5,this._fogRange=1.2,this._nativeObj=new ya}_setType(e){this._type=this.enabled?e:bv,this._nativeObj.type=this._type}_setEnable(e){this._enabled=e,this._nativeObj.enabled=e}_setAccurate(e){this._accurate=e,this._nativeObj.accurate=e}initialize(e){this.fogColor=e.fogColor,this._setEnable(e.enabled),this._setAccurate(e.accurate),this._setType(e.type),this.fogDensity=e.fogDensity,this.fogStart=e.fogStart,this.fogEnd=e.fogEnd,this.fogAtten=e.fogAtten,this.fogTop=e.fogTop,this.fogRange=e.fogRange}activate(){this._updatePipeline()}_updatePipeline(){const e=u.director.root,t=this.enabled?this.type:bv,n=this.accurate?1:0,i=e.pipeline;i.macros.CC_USE_FOG===t&&i.macros.CC_USE_ACCURATE_FOG===n||(i.macros.CC_USE_FOG=t,i.macros.CC_USE_ACCURATE_FOG=n,e.onGlobalPipelineStateChanged())}_destroy(){this._nativeObj=null}destroy(){this._destroy()}}u.Fog=Av;class Pv{set enabled(e){this._enabled=e,this._nativeObj.enabled=e}get enabled(){return this._enabled}get minPos(){return this._minPos}set minPos(e){this._minPos=e,this._nativeObj.minPos=e}get maxPos(){return this._maxPos}set maxPos(e){this._maxPos=e,this._nativeObj.maxPos=e}get depth(){return this._depth}set depth(e){this._depth=e,this._nativeObj.depth=e}get native(){return this._nativeObj}constructor(){this._enabled=!1,this._minPos=new gn(0,0,0),this._maxPos=new gn(0,0,0),this._depth=0,this._nativeObj=new Ca}initialize(e){this._enabled=e.enabled,this._minPos=e.minPos,this._maxPos=e.maxPos,this._depth=e.depth,this._nativeObj.enabled=this._enabled,this._nativeObj.minPos=this._minPos,this._nativeObj.maxPos=this._maxPos,this._nativeObj.depth=this._depth}_destroy(){this._nativeObj=null}destroy(){this._destroy()}}let wv,Iv,Rv;function Dv(e,t){t<1e3?t=1e3:t>15e3&&(t=15e3);const n=t*t,i=(.860117757+.000154118254*t+1.28641212e-7*n)/(1+.000842420235*t+7.08145163e-7*n),s=(.317398726+422806245e-13*t+4.20481691e-8*n)/(1-289741816e-13*t+1.61456053e-7*n),o=2*i-8*s+4,r=3*i/o,a=2*s/o,c=1/a*r,l=1/a*(1-r-a);e.x=3.2404542*c-1.5371385+-.4985314*l,e.y=-.969266*c+1.8760108+.041556*l,e.z=.0556434*c-.2040259+1.0572252*l}!function(e){e[e.LOCAL=0]="LOCAL",e[e.WORLD=1]="WORLD"}(wv||(wv=e("NodeSpace",{}))),function(e){e[e.NONE=0]="NONE",e[e.POSITION=1]="POSITION",e[e.ROTATION=2]="ROTATION",e[e.SCALE=4]="SCALE",e[e.RS=e.ROTATION|e.SCALE]="RS",e[e.TRS=e.POSITION|e.ROTATION|e.SCALE]="TRS",e[e.TRS_MASK=~e.TRS]="TRS_MASK"}(Iv||(Iv=e("TransformBit",{}))),u.internal.TransformBit=Iv,function(e){e[e.DIRECTIONAL=0]="DIRECTIONAL",e[e.SPHERE=1]="SPHERE",e[e.SPOT=2]="SPOT",e[e.UNKNOWN=3]="UNKNOWN"}(Rv||(Rv={}));const Ov=e=>4*Math.PI*Math.PI*e*e;class Nv{constructor(){this._baked=!1,this._color=new gn(1,1,1),this._colorTemp=6550,this._colorTempRGB=new gn(1,1,1),this._scene=null,this._node=null,this._name=null,this._useColorTemperature=!1,this._type=Rv.UNKNOWN}_init(){switch(this._type){case Rv.DIRECTIONAL:this._nativeObj=new fa;break;case Rv.SPHERE:this._nativeObj=new ga;break;case Rv.SPOT:this._nativeObj=new ma}this._nativeObj.setType(this._type)}_destroy(){this._nativeObj=null}get baked(){return this._baked}set baked(e){this._baked=e,this._nativeObj.setBaked(e)}set color(e){this._color.set(e),this._nativeObj.setColor(e)}get color(){return this._color}set useColorTemperature(e){this._useColorTemperature=e,this._nativeObj.setUseColorTemperature(e)}get useColorTemperature(){return this._useColorTemperature}set colorTemperature(e){this._colorTemp=e,Dv(this._colorTempRGB,this._colorTemp),this._nativeObj.setColorTemperatureRGB(this._colorTempRGB)}get colorTemperature(){return this._colorTemp}get colorTemperatureRGB(){return this._colorTempRGB}set node(e){this._node=e,this._node&&(this._node.hasChangedFlags|=Iv.ROTATION,this._nativeObj.setNode(e?e.native:null))}get node(){return this._node}get type(){return this._type}get name(){return this._name}set name(e){this._name=e}get scene(){return this._scene}get native(){return this._nativeObj}initialize(){this._init(),this.color=new gn(1,1,1),this.colorTemperature=6550}attachToScene(e){this._scene=e}detachFromScene(){this._scene=null}destroy(){this._name=null,this._node=null,this._destroy()}update(){}}const Mv=new gn(0,0,-1),Lv=new gn;class Bv extends Nv{set direction(e){gn.normalize(this._dir,e),this._nativeObj.setDirection(e)}get direction(){return this._dir}get illuminance(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._illuminanceHDR:this._illuminanceLDR}set illuminance(e){u.director.root.pipeline.pipelineSceneData.isHDR?this.illuminanceHDR=e:this.illuminanceLDR=e}get illuminanceHDR(){return this._illuminanceHDR}set illuminanceHDR(e){this._illuminanceHDR=e,this._nativeObj.setIlluminanceHDR(e)}get illuminanceLDR(){return this._illuminanceLDR}set illuminanceLDR(e){this._illuminanceLDR=e,this._nativeObj.setIlluminanceLDR(e)}get shadowEnabled(){return this._shadowEnabled}set shadowEnabled(e){this._shadowEnabled=e,this._nativeObj.setShadowEnabled(e)}get shadowPcf(){return this._shadowPcf}set shadowPcf(e){this._shadowPcf=e,this._nativeObj.setShadowPcf(e)}get shadowBias(){return this._shadowBias}set shadowBias(e){this._shadowBias=e,this._nativeObj.setShadowBias(e)}get shadowNormalBias(){return this._shadowNormalBias}set shadowNormalBias(e){this._shadowNormalBias=e,this._nativeObj.setShadowNormalBias(e)}get shadowSaturation(){return this._shadowSaturation}set shadowSaturation(e){this._shadowSaturation=e,this._nativeObj.setShadowSaturation(this._shadowSaturation)}get shadowDistance(){return this._shadowDistance}set shadowDistance(e){this._shadowDistance=Math.min(e,Eg.MAX_FAR),this._nativeObj.setShadowDistance(e)}get shadowInvisibleOcclusionRange(){return this._shadowInvisibleOcclusionRange}set shadowInvisibleOcclusionRange(e){this._shadowInvisibleOcclusionRange=Math.min(e,Eg.MAX_FAR),this._nativeObj.setShadowInvisibleOcclusionRange(e)}get shadowFixedArea(){return this._shadowFixedArea}set shadowFixedArea(e){this._shadowFixedArea=e,this._nativeObj.setShadowFixedArea(e)}get shadowNear(){return this._shadowNear}set shadowNear(e){this._shadowNear=e,this._nativeObj.setShadowNear(e)}get shadowFar(){return this._shadowFar}set shadowFar(e){this._shadowFar=Math.min(e,Eg.MAX_FAR),this._nativeObj.setShadowFar(e)}get shadowOrthoSize(){return this._shadowOrthoSize}set shadowOrthoSize(e){this._shadowOrthoSize=e,this._nativeObj.setShadowOrthoSize(e)}constructor(){super(),this._dir=new gn(1,-1,-1),this._illuminanceHDR=mv.SUN_ILLUM,this._illuminanceLDR=1,this._shadowEnabled=!1,this._shadowPcf=Sg.HARD,this._shadowBias=1e-5,this._shadowNormalBias=0,this._shadowSaturation=1,this._shadowDistance=100,this._shadowInvisibleOcclusionRange=200,this._shadowFixedArea=!1,this._shadowNear=.1,this._shadowFar=10,this._shadowOrthoSize=5,this._type=Rv.DIRECTIONAL}initialize(){super.initialize(),this.illuminance=mv.SUN_ILLUM,this.direction=new gn(1,-1,-1)}update(){this._node&&this._node.hasChangedFlags&&(this.direction=gn.transformQuat(Lv,Mv,this._node.worldRotation))}}class Fv extends Nv{_init(){super._init(),this._nativeObj.setPosition(this._pos),this._nativeObj.setAABB(this._aabb.native)}_destroy(){super._destroy()}get position(){return this._pos}set size(e){this._size=e,this._nativeObj.setSize(e)}get size(){return this._size}set range(e){this._range=e,this._nativeObj.setRange(e),this._needUpdate=!0}get range(){return this._range}get luminance(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._luminanceHDR:this._luminanceLDR}set luminance(e){u.director.root.pipeline.pipelineSceneData.isHDR?this.luminanceHDR=e:this.luminanceLDR=e}get luminanceHDR(){return this._luminanceHDR}set luminanceHDR(e){this._luminanceHDR=e,this._nativeObj.setLuminanceHDR(e)}set luminanceLDR(e){this._luminanceLDR=e,this._nativeObj.setLuminanceLDR(e)}get aabb(){return this._aabb}constructor(){super(),this._needUpdate=!1,this._size=.15,this._range=1,this._luminanceHDR=0,this._luminanceLDR=0,this._pos=void 0,this._aabb=void 0,this._aabb=Ua.create(),this._pos=new gn,this._type=Rv.SPHERE}initialize(){super.initialize(),this.size=.15,this.range=1,this.luminanceHDR=1700/Ov(.15),this.luminanceLDR=1}update(){if(this._node&&(this._node.hasChangedFlags||this._needUpdate)){this._node.getWorldPosition(this._pos);const e=this._range;Ua.set(this._aabb,this._pos.x,this._pos.y,this._pos.z,e,e,e),this._needUpdate=!1}}}const zv=new gn(0,0,-1),Uv=new Tn,Gv=new On,Vv=new On,Hv=new On,kv=new On;class jv extends Nv{_init(){super._init();{const e=this._nativeObj;e.setAABB(this._aabb.native),e.setFrustum(this._frustum),e.setDirection(this._dir),e.setPosition(this._pos)}}_destroy(){super._destroy()}_setDirection(e){this._dir.set(e),this._nativeObj.setDirection(e)}get position(){return this._pos}set size(e){this._size=e,this._nativeObj.setSize(e)}get size(){return this._size}set range(e){this._range=e,this._nativeObj.setRange(e),this._needUpdate=!0}get range(){return this._range}get luminance(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._luminanceHDR:this._luminanceLDR}set luminance(e){u.director.root.pipeline.pipelineSceneData.isHDR?this.luminanceHDR=e:this.luminanceLDR=e}get luminanceHDR(){return this._luminanceHDR}set luminanceHDR(e){this._luminanceHDR=e,this._nativeObj.setLuminanceHDR(e)}get luminanceLDR(){return this._luminanceLDR}set luminanceLDR(e){this._luminanceLDR=e,this._nativeObj.setLuminanceLDR(e)}get direction(){return this._dir}get spotAngle(){return this._spotAngle}set spotAngle(e){this._angle=e,this._spotAngle=Math.cos(.5*e),this._nativeObj.setAngle(this._spotAngle),this._needUpdate=!0}get angle(){return this._angle}get aabb(){return this._aabb}get frustum(){return this._frustum}get shadowEnabled(){return this._shadowEnabled}set shadowEnabled(e){this._shadowEnabled=e,this._nativeObj.setShadowEnabled(e)}get shadowPcf(){return this._shadowPcf}set shadowPcf(e){this._shadowPcf=e,this._nativeObj.setShadowPcf(e)}get shadowBias(){return this._shadowBias}set shadowBias(e){this._shadowBias=e,this._nativeObj.setShadowBias(e)}get shadowNormalBias(){return this._shadowNormalBias}set shadowNormalBias(e){this._shadowNormalBias=e,this._nativeObj.setShadowNormalBias(e)}constructor(){super(),this._dir=new gn(1,-1,-1),this._range=5,this._spotAngle=Math.cos(Math.PI/6),this._pos=void 0,this._aabb=void 0,this._frustum=void 0,this._angle=0,this._needUpdate=!1,this._size=.15,this._luminanceHDR=0,this._luminanceLDR=0,this._shadowEnabled=!1,this._shadowPcf=Sg.HARD,this._shadowBias=1e-5,this._shadowNormalBias=0,this._aabb=Ua.create(),this._frustum=Ka.create(),this._pos=new gn,this._type=Rv.SPOT}initialize(){super.initialize(),this.size=.15,this.luminanceHDR=1700/Ov(.15),this.luminanceLDR=1,this.range=Math.cos(Math.PI/6),this._setDirection(new gn(1,-1,-1))}update(){this._node&&(this._node.hasChangedFlags||this._needUpdate)&&(this._node.getWorldPosition(this._pos),gn.transformQuat(this._dir,zv,this._node.getWorldRotation(Uv)),gn.normalize(this._dir,this._dir),Ua.set(this._aabb,this._pos.x,this._pos.y,this._pos.z,this._range,this._range,this._range),this._node.getWorldRT(Gv),On.invert(Gv,Gv),On.perspective(Vv,this._angle,1,.001,this._range),On.multiply(Hv,Vv,Gv),this._frustum.update(Hv,kv),this._needUpdate=!1)}}class Wv{get root(){return this._root}get name(){return this._name}get cameras(){return this._cameras}get mainLight(){return this._mainLight}get sphereLights(){return this._sphereLights}get spotLights(){return this._spotLights}get models(){return this._models}get batches(){return this._batches}get native(){return this._nativeObj}static registerCreateFunc(e){e._createSceneFun=e=>new Wv(e)}constructor(e){this._root=void 0,this._name="",this._cameras=[],this._models=[],this._batches=[],this._directionalLights=[],this._sphereLights=[],this._spotLights=[],this._mainLight=null,this._modelId=0,this._root=e,this._createNativeObject()}initialize(e){return this._name=e.name,!0}activate(){this._nativeObj.activate()}update(e){{const t=[];for(let e=0,n=this._batches.length;e<n;++e)t.push(this._batches[e].native);return this._nativeObj.updateBatches(t),void this._nativeObj.update(e)}}destroy(){this.removeCameras(),this.removeSphereLights(),this.removeSpotLights(),this.removeModels(),this._destroy()}addCamera(e){e.attachToScene(this),this._cameras.push(e)}removeCamera(e){for(let t=0;t<this._cameras.length;++t)if(this._cameras[t]===e)return this._cameras.splice(t,1),void e.detachFromScene()}removeCameras(){for(const e of this._cameras)e.detachFromScene();this._cameras.splice(0)}setMainLight(e){this._mainLight=e,this._nativeObj.setMainLight(e?e.native:null)}unsetMainLight(e){if(this._mainLight===e){const e=this._directionalLights;if(e.length)return this.setMainLight(e[e.length-1]),void(this._mainLight.node&&(this._mainLight.node.hasChangedFlags|=Iv.ROTATION));this.setMainLight(null)}}addDirectionalLight(e){e.attachToScene(this),this._directionalLights.push(e)}removeDirectionalLight(e){for(let t=0;t<this._directionalLights.length;++t)if(this._directionalLights[t]===e)return e.detachFromScene(),void this._directionalLights.splice(t,1)}addSphereLight(e){e.attachToScene(this),this._sphereLights.push(e),this._nativeObj.addSphereLight(e.native)}removeSphereLight(e){for(let t=0;t<this._sphereLights.length;++t)if(this._sphereLights[t]===e)return e.detachFromScene(),this._sphereLights.splice(t,1),void this._nativeObj.removeSphereLight(e.native)}addSpotLight(e){e.attachToScene(this),this._spotLights.push(e),this._nativeObj.addSpotLight(e.native)}removeSpotLight(e){for(let t=0;t<this._spotLights.length;++t)if(this._spotLights[t]===e)return e.detachFromScene(),this._spotLights.splice(t,1),void this._nativeObj.removeSpotLight(e.native)}removeSphereLights(){for(let e=0;e<this._sphereLights.length;++e)this._sphereLights[e].detachFromScene();this._sphereLights.length=0,this._nativeObj.removeSphereLights()}removeSpotLights(){for(let e=0;e<this._spotLights.length;++e)this._spotLights[e].detachFromScene();this._spotLights=[],this._nativeObj.removeSpotLights()}addModel(e){switch(e.attachToScene(this),this._models.push(e),e.type){case _v.SKINNING:this._nativeObj.addSkinningModel(e.native);break;case _v.BAKED_SKINNING:this._nativeObj.addBakedSkinningModel(e.native);break;case _v.DEFAULT:default:this._nativeObj.addModel(e.native)}}removeModel(e){for(let t=0;t<this._models.length;++t)if(this._models[t]===e)return e.detachFromScene(),this._models.splice(t,1),void this._nativeObj.removeModel(t)}removeModels(){for(const e of this._models)e.detachFromScene(),e.destroy();this._models.length=0,this._nativeObj.removeModels()}addBatch(e){this._batches.push(e)}removeBatch(e){for(let t=0;t<this._batches.length;++t)if(this._batches[t]===e)return this._batches.splice(t,1),void this._nativeObj.removeBatch(t)}removeBatches(){this._batches.length=0,this._nativeObj.removeBatches()}onGlobalPipelineStateChanged(){for(const e of this._models)e.onGlobalPipelineStateChanged()}generateModelId(){return this._modelId++}_destroy(){this._nativeObj=null}_createNativeObject(){this._nativeObj||(this._nativeObj=new ba)}}var qv=Object.freeze({__proto__:null,get CameraFOVAxis(){return sg},get CameraProjection(){return og},get CameraAperture(){return rg},get CameraISO(){return ag},get CameraShutter(){return cg},SKYBOX_FLAG:mg,Camera:vg,get ModelType(){return _v},Model:fv,SubModel:cv,Ambient:mv,EnvironmentLightingType:Sv,Skybox:Cv,ShadowSize:yg,ShadowType:xg,PCFType:Sg,Shadows:Eg,FogType:Tv,Fog:Av,Octree:Pv,ColorTemperatureToRGB:Dv,get LightType(){return Rv},nt2lm:Ov,Light:Nv,DirectionalLight:Bv,SphereLight:Fv,SpotLight:jv,RenderScene:Wv});let Xv,Yv;function Kv(e){return--e,e|=e>>16,e|=e>>8,e|=e>>4,e|=e>>2,e|=e>>1,++e}function $v(e,t){return Math.ceil(e/t)*t}!function(e){e[e.OPAQUE=0]="OPAQUE",e[e.TRANSPARENT=1]="TRANSPARENT",e[e.OVERLAY=2]="OVERLAY"}(Xv||(Xv={})),function(e){e[e.DEFAULT=1]="DEFAULT",e[e.FORWARD=2]="FORWARD",e[e.SHADOWCAST=4]="SHADOWCAST"}(Yv||(Yv={}));class Qv{constructor(e){this._device=void 0,this._format=ti.UNKNOWN,this._formatSize=0,this._chunks=[],this._chunkCount=0,this._handles=[],this._region0=new Yi,this._region1=new Yi,this._region2=new Yi,this._roundUpFn=null,this._bufferViewCtor=Uint8Array,this._channels=4,this._alignment=1,this._device=e}initialize(e){const t=Hs[e.format];this._format=e.format,this._formatSize=t.size,this._channels=t.count,this._bufferViewCtor=Js(t),this._roundUpFn=e.roundUpFn||null,this._alignment=e.alignment||1,e.inOrderFree&&(this.alloc=this._McDonaldAlloc)}destroy(){for(let e=0;e<this._chunkCount;++e)this._chunks[e].texture.destroy();this._chunks.length=0,this._handles.length=0}alloc(e,t){e=$v(e,this._alignment);let n=-1,i=-1;if(void 0!==t&&(n=t,i=this._findAvailableSpace(e,n)),i<0)for(let t=0;t<this._chunkCount&&(n=t,i=this._findAvailableSpace(e,n),!(i>=0));++t);if(i>=0){const t=this._chunks[n];t.start+=e;const s={chunkIdx:n,start:i,end:i+e,texture:t.texture};return this._handles.push(s),s}const s=Math.sqrt(e/this._formatSize),o=this._roundUpFn&&this._roundUpFn(s,this._formatSize)||Math.max(1024,Kv(s)),r=this._chunks[this.createChunk(o)];r.start+=e;const a={chunkIdx:this._chunkCount-1,start:0,end:e,texture:r.texture};return this._handles.push(a),a}free(e){for(let t=0;t<this._handles.length;++t)if(this._handles[t]===e)return this._chunks[e.chunkIdx].end=e.end,void this._handles.splice(t,1)}createChunk(e){const t=e*e*this._formatSize;T(`TextureBufferPool: Allocate chunk ${this._chunkCount}, size: ${t}, format: ${this._format}`);const n={texture:this._device.createTexture(new rs(ci.TEX2D,li.SAMPLED|li.TRANSFER_DST,this._format,e,e)),size:t,start:0,end:t};return this._chunks[this._chunkCount]=n,this._chunkCount++}update(e,t){const n=[],i=[],s=e.start/this._formatSize;let o=t.byteLength/this._formatSize,r=s%e.texture.width,a=Math.floor(s/e.texture.width),c=Math.min(e.texture.width-r,o),l=0;r>0&&(this._region0.texOffset.x=r,this._region0.texOffset.y=a,this._region0.texExtent.width=c,this._region0.texExtent.height=1,n.push(new this._bufferViewCtor(t,l*this._formatSize,c*this._channels)),i.push(this._region0),r=0,a+=1,o-=c,l+=c),o>0&&(this._region1.texOffset.x=r,this._region1.texOffset.y=a,o>e.texture.width?(this._region1.texExtent.width=e.texture.width,this._region1.texExtent.height=Math.floor(o/e.texture.width),c=this._region1.texExtent.width*this._region1.texExtent.height):(c=o,this._region1.texExtent.width=c,this._region1.texExtent.height=1),n.push(new this._bufferViewCtor(t,l*this._formatSize,c*this._channels)),i.push(this._region1),r=0,a+=this._region1.texExtent.height,o-=c,l+=c),o>0&&(this._region2.texOffset.x=r,this._region2.texOffset.y=a,this._region2.texExtent.width=o,this._region2.texExtent.height=1,n.push(new this._bufferViewCtor(t,l*this._formatSize,o*this._channels)),i.push(this._region2)),this._device.copyBuffersToTexture(n,e.texture,i)}_findAvailableSpace(e,t){const n=this._chunks[t];let i=!1,s=n.start;if(s+e<=n.size)i=!0;else{s=0;const o=this._handles.filter((e=>e.chunkIdx===t)).sort(((e,t)=>e.start-t.start));for(let t=0;t<o.length;t++){const n=o[t];if(s+e<=n.start){i=!0;break}s=n.end}!i&&s+e<=n.size&&(i=!0)}return i?s:-1}_McDonaldAlloc(e){e=$v(e,this._alignment);for(let t=0;t<this._chunkCount;++t){const n=this._chunks[t];let i=!1,s=n.start;if(s+e<=n.end?i=!0:s>n.end?s+e<=n.size?i=!0:e<=n.end&&(n.start=s=0,i=!0):s===n.end&&(n.start=s=0,n.end=n.size,e<=n.end&&(i=!0)),i){n.start+=e;const i={chunkIdx:t,start:s,end:s+e,texture:n.texture};return this._handles.push(i),i}}const t=Math.sqrt(e/this._formatSize),n=this._roundUpFn&&this._roundUpFn(t,this._formatSize)||Math.max(1024,Kv(t)),i=this._chunks[this.createChunk(n)];i.start+=e;const s={chunkIdx:this._chunkCount,start:0,end:e,texture:i.texture};return this._handles.push(s),s}}H(Wv.prototype,"RenderScene.prototype",[{name:"raycastUI2DNode"},{name:"raycastUINode"}]),H(Wv.prototype,"RenderScene.prototype",[{name:"raycastAll",suggest:"using intersect.rayModel in geometry"},{name:"raycastAllModels",suggest:"using intersect.rayModel in geometry"},{name:"raycastSingleModel",suggest:"using intersect.rayModel in geometry"},{name:"raycastAllCanvas",suggest:"using intersect.rayAABB in geometry"},{name:"rayResultCanvas"},{name:"rayResultModels"},{name:"rayResultAll"},{name:"rayResultSingleModel"}]);const Jv={};H(Jv,"CameraVisFlags",[{name:"GENERAL"}]),V(Jv,"CameraVisFlags",[{name:"PROFILER",newName:"PROFILER",target:Zd.BitMask,targetName:"PROFILER"},{name:"GIZMOS",newName:"GIZMOS",target:Zd.BitMask,targetName:"GIZMOS"},{name:"EDITOR",newName:"EDITOR",target:Zd.BitMask,targetName:"EDITOR"},{name:"UI",newName:"UI",target:Zd.BitMask,targetName:"UI_3D"},{name:"UI2D",newName:"UI2D",target:Zd.BitMask,targetName:"UI_2D"}]),u.CameraVisFlags=Jv;const Zv={};H(Zv,"VisibilityFlags",[{name:"GENERAL"}]),V(Zv,"VisibilityFlags",[{name:"ALWALS",newName:"ALWALS",target:Zd.Enum,targetName:"ALWALS"},{name:"PROFILER",newName:"PROFILER",target:Zd.Enum,targetName:"PROFILER"},{name:"GIZMOS",newName:"GIZMOS",target:Zd.Enum,targetName:"GIZMOS"},{name:"EDITOR",newName:"EDITOR",target:Zd.Enum,targetName:"EDITOR"},{name:"UI",newName:"UI",target:Zd.Enum,targetName:"UI_3D"},{name:"UI2D",newName:"UI2D",target:Zd.Enum,targetName:"UI_2D"}]),u.VisibilityFlags=Zv,V(Wm.prototype,"Pass.prototype",[{name:"getBindingTypeFromHandle",newName:"getDescriptorTypeFromHandle"}]),H(vg.prototype,"Camera.prototype",[{name:"getSplitFrustum"},{name:"setMatView"},{name:"setMatViewInv"},{name:"setMatProjInv"},{name:"setMatViewProjInv"},{name:"setMatProj"},{name:"setMatViewProj"},{name:"getMatViewInv"}]),H(Eg.prototype,"Shadows.prototype",[{name:"aspect"},{name:"selfShadow"},{name:"linear"},{name:"packing"},{name:"autoAdapt"},{name:"fixedArea"},{name:"pcf"},{name:"bias"},{name:"normalBias"},{name:"near"},{name:"far"},{name:"shadowDistance"},{name:"invisibleOcclusionRange"},{name:"orthoSize"},{name:"saturation"}]),H(jv.prototype,"SpotLight.prototype",[{name:"aspect"}]);const ey=rv.addStage;var ty=Object.freeze({__proto__:null,addStage:ey,scene:qv,createIA:function(e,t){if(!t.positions)return console.error("The data must have positions field"),null;const n=[],i=t.positions.length/3;for(let e=0;e<i;++e)n.push(t.positions[3*e],t.positions[3*e+1],t.positions[3*e+2]),t.normals&&n.push(t.normals[3*e],t.normals[3*e+1],t.normals[3*e+2]),t.uvs&&n.push(t.uvs[2*e],t.uvs[2*e+1]),t.colors&&n.push(t.colors[3*e],t.colors[3*e+1],t.colors[3*e+2]);const s=[];s.push(new vs(zi.ATTR_POSITION,ti.RGB32F)),t.normals&&s.push(new vs(zi.ATTR_NORMAL,ti.RGB32F)),t.uvs&&s.push(new vs(zi.ATTR_TEX_COORD,ti.RG32F)),t.colors&&s.push(new vs(zi.ATTR_COLOR,ti.RGB32F));const o=e.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.DEVICE,4*n.length,4*n.length/i));o.update(new Float32Array(n));let r=null;return t.indices&&(r=e.createBuffer(new es(si.INDEX|si.TRANSFER_DST,ai.DEVICE,2*t.indices.length,2)),r.update(new Uint16Array(t.indices))),e.createInputAssembler(new xs(s,[o],r))},get RenderQueue(){return Xv},get PassStage(){return Yv},genHandle:df,getTypeFromHandle:pf,getBindingFromHandle:ff,getCountFromHandle:mf,getOffsetFromHandle:gf,customizeType:vf,type2reader:yf,type2writer:xf,getDefaultFromType:Cf,overrideMacros:Ef,get BatchingSchemes(){return jm},Pass:Wm,getDeviceShaderVersion:Rf,programLib:Df,nearestPOT:Kv,TextureBufferPool:Qv,MaterialInstance:vv,PassInstance:gv,get PoolType(){return $r},NULL_HANDLE:0,get NodeView(){return Qr},NodePool:ea,get PassView(){return ta},PassPool:sa,get AABBView(){return oa},AABBPool:ca,RenderScene:Wv,NativeNode:la,NativeScene:ha,NativeModel:ua,NativeSkinningModel:_a,NativeBakedSkinningModel:da,NativeLight:pa,NativeDirectionalLight:fa,NativeSpotLight:ma,NativeSphereLight:ga,NaitveSkybox:va,NativeFog:ya,NativeAmbient:xa,NativeShadow:Sa,NativeOctree:Ca,NativeCamera:Ea,NativeRenderWindow:Ta,NativeRenderScene:ba,NativeDrawBatch2D:Aa,NativePass:Pa,NativeSubModel:wa,NativeRoot:Ia,NativePipelineSharedSceneData:Ra,NativeAABB:Da,NativeGeometryRenderer:Oa,CameraVisFlags:Jv,VisibilityFlags:Zv});e("renderer",ty);const ny=new gn,iy=new gn,sy=new gn,oy=new gn,ry=new gn,ay=new gn,cy=new gn,ly=new gn,hy=new gn,uy=new gn;var _y;!function(e){e[e.LINE=0]="LINE",e[e.DASHED_LINE=1]="DASHED_LINE",e[e.TRIANGLE=2]="TRIANGLE"}(_y||(_y={}));class dy{constructor(){this._maxVertices=0,this._vertexCount=0,this._stride=0}init(e,t,n,i){this._maxVertices=t,this._vertexCount=0,this._stride=n,this._vertices=new Float32Array(t*n/Float32Array.BYTES_PER_ELEMENT)}empty(){return 0===this._vertexCount}reset(){this._vertexCount=0}update(){if(!this.empty()){const e=Math.min(this._vertexCount,this._maxVertices)*this._stride;this._buffer.update(this._vertices,e)}}destroy(){this._inputAssembler&&this._inputAssembler.destroy(),this._buffer&&this._buffer.destroy()}}class py{constructor(){this.lines=[],this.dashedLines=[],this.triangles=[];for(let e=0;e<2;e++)this.lines[e]=new dy,this.dashedLines[e]=new dy,this.triangles[e]=new dy}}class fy{constructor(){this._device=null,this._pipeline=null,this._buffers=void 0,this._nativeObj=null,this._buffers=new py,this._nativeObj=new Oa}get native(){return this._nativeObj}activate(e,t,n){this._device=e,this._pipeline=t;const i=[new vs(zi.ATTR_POSITION,ti.RGB32F),new vs(zi.ATTR_COLOR,ti.RGBA32F)],s=[new vs(zi.ATTR_POSITION,ti.RGB32F),new vs(zi.ATTR_NORMAL,ti.RGBA32F),new vs(zi.ATTR_COLOR,ti.RGBA32F)],o=n?n.maxLines:1e5,r=n?n.maxDashedLines:1e4,a=n?n.maxTriangles:1e4,c=Float32Array.BYTES_PER_ELEMENT*(gn.length+dn.length),l=Float32Array.BYTES_PER_ELEMENT*(gn.length+Gn.length+dn.length);for(let e=0;e<2;e++)this._buffers.lines[e].init(this._device,2*o,c,i),this._buffers.dashedLines[e].init(this._device,2*r,c,i),this._buffers.triangles[e].init(this._device,3*a,l,s)}flush(){for(let e=0;e<2;e++){const t=this._buffers.lines[e];t.empty()||(this._nativeObj.flushFromJSB(_y.LINE,e,t._vertices,t._vertexCount),t.reset());const n=this._buffers.dashedLines[e];n.empty()||(this._nativeObj.flushFromJSB(_y.DASHED_LINE,e,n._vertices,n._vertexCount),n.reset());const i=this._buffers.triangles[e];i.empty()||(this._nativeObj.flushFromJSB(_y.TRIANGLE,e,i._vertices,i._vertexCount),i.reset())}}render(e,t){this.update();const n=this._pipeline.pipelineSceneData.geometryRendererPasses,i=this._pipeline.pipelineSceneData.geometryRendererShaders;let s=0;const o=[1,2];for(let r=0;r<2;r++){const a=this._buffers.lines[r];if(!a.empty()){const c=new is;c.vertexCount=a._vertexCount;for(let l=0;l<o[r];l++){const o=n[s+l],r=i[s+l],h=qm.getOrCreatePipelineState(this._device,o,r,e,a._inputAssembler);t.bindPipelineState(h),t.bindDescriptorSet(up.MATERIAL,o.descriptorSet),t.bindInputAssembler(a._inputAssembler),t.draw(c)}}s+=o[r]}for(let r=0;r<2;r++){const a=this._buffers.dashedLines[r];if(!a.empty()){const c=new is;c.vertexCount=a._vertexCount;for(let l=0;l<o[r];l++){const o=n[s+l],r=i[s+l],h=qm.getOrCreatePipelineState(this._device,o,r,e,a._inputAssembler);t.bindPipelineState(h),t.bindDescriptorSet(up.MATERIAL,o.descriptorSet),t.bindInputAssembler(a._inputAssembler),t.draw(c)}}s+=o[r]}for(let r=0;r<2;r++){const a=this._buffers.triangles[r];if(!a.empty()){const c=new is;c.vertexCount=a._vertexCount;for(let l=0;l<o[r];l++){const o=n[s+l],r=i[s+l],h=qm.getOrCreatePipelineState(this._device,o,r,e,a._inputAssembler);t.bindPipelineState(h),t.bindDescriptorSet(up.MATERIAL,o.descriptorSet),t.bindInputAssembler(a._inputAssembler),t.draw(c)}}s+=o[r]}this.reset()}destroy(){this._nativeObj=null}empty(){for(let e=0;e<2;e++)if(!this._buffers.lines[e].empty()||!this._buffers.dashedLines[e].empty()||!this._buffers.triangles[e].empty())return!1;return!0}update(){for(let e=0;e<2;e++)this._buffers.lines[e].update(),this._buffers.dashedLines[e].update(),this._buffers.triangles[e].update()}reset(){for(let e=0;e<2;e++)this._buffers.lines[e].reset(),this._buffers.dashedLines[e].reset(),this._buffers.triangles[e].reset()}addDashedLine(e,t,n,i=!0){const s=this._buffers.dashedLines[i?1:0];if(s._vertexCount+2>s._maxVertices)return void D(12008);let o=s._vertexCount*(gn.length+dn.length);gn.toArray(s._vertices,e,o),o+=gn.length,dn.toArray(s._vertices,n,o),o+=dn.length,gn.toArray(s._vertices,t,o),o+=gn.length,dn.toArray(s._vertices,n,o),s._vertexCount+=2}addLine(e,t,n,i=!0){const s=this._buffers.lines[i?1:0];if(s._vertexCount+2>s._maxVertices)return void D(12008);let o=s._vertexCount*(gn.length+dn.length);gn.toArray(s._vertices,e,o),o+=gn.length,dn.toArray(s._vertices,n,o),o+=dn.length,gn.toArray(s._vertices,t,o),o+=gn.length,dn.toArray(s._vertices,n,o),s._vertexCount+=2}addTriangle(e,t,n,i,s=!0,o=!0,r=!1){if(s)return this.addLine(e,t,i,o),this.addLine(t,n,i,o),void this.addLine(n,e,i,o);const a=this._buffers.triangles[o?1:0];if(a._vertexCount+3>a._maxVertices)return void D(12009);const c=new Gn(Gn.ZERO);if(!r){const i=new gn(t.x-e.x,t.y-e.y,t.z-e.z),s=new gn(n.x-e.x,n.y-e.y,n.z-e.z),o=new gn;gn.normalize(o,gn.cross(o,i,s)),c.set(o.x,o.y,o.z,1)}let l=a._vertexCount*(gn.length+Gn.length+dn.length);gn.toArray(a._vertices,e,l),l+=gn.length,Gn.toArray(a._vertices,c,l),l+=Gn.length,dn.toArray(a._vertices,i,l),l+=dn.length,gn.toArray(a._vertices,t,l),l+=gn.length,Gn.toArray(a._vertices,c,l),l+=Gn.length,dn.toArray(a._vertices,i,l),l+=dn.length,gn.toArray(a._vertices,n,l),l+=gn.length,Gn.toArray(a._vertices,c,l),l+=Gn.length,dn.toArray(a._vertices,i,l),a._vertexCount+=3}addQuad(e,t,n,i,s,o=!0,r=!0,a=!1){o?(this.addLine(e,t,s,r),this.addLine(t,n,s,r),this.addLine(n,i,s,r),this.addLine(i,e,s,r)):(this.addTriangle(e,t,n,s,o,r,a),this.addTriangle(e,n,i,s,o,r,a))}addBoundingBox(e,t,n=!0,i=!0,s=!1,o=!1,r=new On){ny.set(e.center.x-e.halfExtents.x,e.center.y-e.halfExtents.y,e.center.z-e.halfExtents.z),iy.set(e.center.x+e.halfExtents.x,e.center.y+e.halfExtents.y,e.center.z+e.halfExtents.z),sy.set(ny.x,ny.y,ny.z),oy.set(iy.x,ny.y,ny.z),ry.set(ny.x,iy.y,ny.z),ay.set(iy.x,iy.y,ny.z),cy.set(ny.x,ny.y,iy.z),ly.set(iy.x,ny.y,iy.z),hy.set(ny.x,iy.y,iy.z),uy.set(iy.x,iy.y,iy.z),o&&(gn.transformMat4(sy,sy,r),gn.transformMat4(oy,oy,r),gn.transformMat4(ry,ry,r),gn.transformMat4(ay,ay,r),gn.transformMat4(cy,cy,r),gn.transformMat4(ly,ly,r),gn.transformMat4(hy,hy,r),gn.transformMat4(uy,uy,r)),n?(this.addLine(hy,uy,t,i),this.addLine(uy,ay,t,i),this.addLine(ay,ry,t,i),this.addLine(ry,hy,t,i),this.addLine(cy,ly,t,i),this.addLine(ly,oy,t,i),this.addLine(oy,sy,t,i),this.addLine(sy,cy,t,i),this.addLine(hy,cy,t,i),this.addLine(uy,ly,t,i),this.addLine(ay,oy,t,i),this.addLine(ry,sy,t,i)):(this.addQuad(cy,ly,uy,hy,t,n,i,s),this.addQuad(ly,oy,ay,uy,t,n,i,s),this.addQuad(oy,sy,ry,ay,t,n,i,s),this.addQuad(sy,cy,hy,ry,t,n,i,s),this.addQuad(hy,uy,ay,ry,t,n,i,s),this.addQuad(sy,oy,ly,cy,t,n,i,s))}addCross(e,t,n,i=!0){const s=.5*t,o=new gn(e.x-s,e.y,e.z),r=new gn(e.x+s,e.y,e.z);this.addLine(o,r,n,i),o.set(e.x,e.y-s,e.z),r.set(e.x,e.y+s,e.z),this.addLine(o,r,n,i),o.set(e.x,e.y,e.z-s),r.set(e.x,e.y,e.z+s),this.addLine(o,r,n,i)}addFrustum(e,t,n=!0){const i=e.vertices;this.addLine(i[0],i[1],t,n),this.addLine(i[1],i[2],t,n),this.addLine(i[2],i[3],t,n),this.addLine(i[3],i[0],t,n),this.addLine(i[4],i[5],t,n),this.addLine(i[5],i[6],t,n),this.addLine(i[6],i[7],t,n),this.addLine(i[7],i[4],t,n),this.addLine(i[0],i[4],t,n),this.addLine(i[1],i[5],t,n),this.addLine(i[2],i[6],t,n),this.addLine(i[3],i[7],t,n)}addCapsule(e,t,n,i,s=32,o=8,r=!0,a=!0,c=!1,l=!1,h=new On){const u=2*Math.PI/s,_=Math.PI/2/o,d=new gn(e.x,e.y-n/2,e.z),p=new gn(e.x,e.y+n/2,e.z),f=new Array,m=new Array;for(let e=0;e<o+1;e++){const n=new Array,i=new Array,o=e*_,r=Math.sin(o),a=Math.cos(o);for(let e=0;e<s+1;e++){const s=e*u,o=Math.sin(s),c=Math.cos(s),l=new gn(t*r*c,t*a,t*r*o),h=new gn(d.x+l.x,d.y-l.y,d.z+l.z),_=new gn(p.x+l.x,p.y+l.y,p.z+l.z);n.push(h),i.push(_)}f.push(n),m.push(i)}if(l)for(let e=0;e<o+1;e++)for(let t=0;t<s+1;t++)gn.transformMat4(f[e][t],f[e][t],h),gn.transformMat4(m[e][t],m[e][t],h);for(let e=0;e<o;e++)for(let t=0;t<s;t++)this.addTriangle(f[e+1][t],f[e][t+1],f[e][t],i,r,a,c),this.addTriangle(f[e+1][t],f[e+1][t+1],f[e][t+1],i,r,a,c),this.addTriangle(m[e][t],m[e+1][t+1],m[e+1][t],i,r,a,c),this.addTriangle(m[e][t],m[e][t+1],m[e+1][t+1],i,r,a,c);const g=f[o],v=m[o];for(let e=0;e<s;e++)this.addTriangle(v[e],g[e+1],g[e],i,r,a,c),this.addTriangle(v[e],v[e+1],g[e+1],i,r,a,c)}addCylinder(e,t,n,i,s=32,o=!0,r=!0,a=!1,c=!1,l=new On){const h=2*Math.PI/s,u=new gn(e.x,e.y-n/2,e.z),_=new gn(e.x,e.y+n/2,e.z),d=new Array,p=new Array;for(let e=0;e<s+1;e++){const n=e*h,i=new gn(t*Math.cos(n),0,t*Math.sin(n)),s=new gn(i.x+u.x,i.y+u.y,i.z+u.z),o=new gn(i.x+_.x,i.y+_.y,i.z+_.z);d.push(s),p.push(o)}if(c){gn.transformMat4(u,u,l),gn.transformMat4(_,_,l);for(let e=0;e<s+1;e++)gn.transformMat4(d[e],d[e],l),gn.transformMat4(p[e],p[e],l)}for(let e=0;e<s;e++)this.addTriangle(_,p[e+1],p[e],i,o,r,a),this.addTriangle(u,d[e],d[e+1],i,o,r,a),this.addTriangle(p[e],d[e+1],d[e],i,o,r,a),this.addTriangle(p[e],p[e+1],d[e+1],i,o,r,a)}addCone(e,t,n,i,s=32,o=!0,r=!0,a=!1,c=!1,l=new On){const h=2*Math.PI/s,u=new gn(e.x,e.y-n/2,e.z),_=new gn(e.x,e.y+n/2,e.z),d=new Array;for(let e=0;e<s+1;e++){const n=new gn(t*Math.cos(e*h),0,t*Math.sin(e*h)),i=new gn(n.x+u.x,n.y+u.y,n.z+u.z);d.push(i)}if(c){gn.transformMat4(u,u,l),gn.transformMat4(_,_,l);for(let e=0;e<s+1;e++)gn.transformMat4(d[e],d[e],l)}for(let e=0;e<s;e++)this.addTriangle(_,d[e+1],d[e],i,o,r,a),this.addTriangle(u,d[e],d[e+1],i,o,r,a)}addCircle(e,t,n,i=32,s=!0,o=!1,r=new On){const a=2*Math.PI/i,c=new Array;for(let n=0;n<i+1;n++){const i=new gn(t*Math.cos(n*a),0,t*Math.sin(n*a)),s=new gn(i.x+e.x,i.y+e.y,i.z+e.z);c.push(s)}if(o)for(let e=0;e<i+1;e++)gn.transformMat4(c[e],c[e],r);for(let e=0;e<i;e++)this.addLine(c[e],c[e+1],n,s)}addArc(e,t,n,i,s,o=32,r=!0,a=!1,c=new On){const l=$t(i),h=($t(s)-l)/o,u=new Array;for(let n=0;n<o+1;n++){const i=new gn(t*Math.cos(n*h+l),0,t*Math.sin(n*h+l)),s=new gn(i.x+e.x,i.y+e.y,i.z+e.z);u.push(s)}if(a)for(let e=0;e<o+1;e++)gn.transformMat4(u[e],u[e],c);for(let e=0;e<o;e++)this.addLine(u[e],u[e+1],n,r)}addPolygon(e,t,n,i=6,s=!0,o=!0,r=!1,a=!1,c=new On){s?this.addCircle(e,t,n,i,o,a,c):this.addDisc(e,t,n,i,s,o,r,a,c)}addDisc(e,t,n,i=32,s=!0,o=!0,r=!1,a=!1,c=new On){const l=2*Math.PI/i,h=new Array,u=new gn(e);for(let e=0;e<i+1;e++){const n=new gn(t*Math.cos(e*l),0,t*Math.sin(e*l)),i=new gn(n.x+u.x,n.y+u.y,n.z+u.z);h.push(i)}if(a){gn.transformMat4(u,u,c);for(let e=0;e<i+1;e++)gn.transformMat4(h[e],h[e],c)}for(let e=0;e<i;e++)this.addTriangle(u,h[e],h[e+1],n,s,o,r);if(!s)for(let e=0;e<i;e++)this.addTriangle(u,h[e+1],h[e],n,s,o,r)}addSector(e,t,n,i,s,o=32,r=!0,a=!0,c=!1,l=!1,h=new On){const u=$t(i),_=($t(s)-u)/o,d=new Array,p=new gn(e);for(let e=0;e<o+1;e++){const n=new gn(t*Math.cos(e*_),0,t*Math.sin(e*_)),i=new gn(n.x+p.x,n.y+p.y,n.z+p.z);d.push(i)}if(l){gn.transformMat4(p,p,h);for(let e=0;e<o+1;e++)gn.transformMat4(d[e],d[e],h)}for(let e=0;e<o;e++)this.addTriangle(p,d[e],d[e+1],n,r,a,c);if(!r)for(let e=0;e<o;e++)this.addTriangle(p,d[e+1],d[e],n,r,a,c)}addSphere(e,t,n,i=32,s=16,o=!0,r=!0,a=!1,c=!1,l=new On){const h=2*Math.PI/i,u=Math.PI/s,_=new Array;for(let n=0;n<s+1;n++){const s=new Array,o=n*u,r=Math.sin(o),a=Math.cos(o);for(let n=0;n<i+1;n++){const i=n*h,o=Math.sin(i),c=Math.cos(i),l=new gn(t*r*c,t*a,t*r*o),u=new gn(e.x+l.x,e.y+l.y,e.z+l.z);s.push(u)}_.push(s)}if(c)for(let e=0;e<s+1;e++)for(let t=0;t<i+1;t++)gn.transformMat4(_[e][t],_[e][t],l);for(let e=0;e<s;e++)for(let t=0;t<i;t++)this.addTriangle(_[e][t],_[e+1][t+1],_[e+1][t],n,o,r,a),this.addTriangle(_[e][t],_[e][t+1],_[e+1][t+1],n,o,r,a)}addTorus(e,t,n,i,s=32,o=16,r=!0,a=!0,c=!1,l=!1,h=new On){const u=2*Math.PI/s,_=2*Math.PI/o,d=new Array;for(let i=0;i<s+1;i++){const s=new Array,r=i*u,a=Math.sin(r),c=Math.cos(r);for(let i=0;i<o+1;i++){const o=i*_,r=Math.sin(o),l=Math.cos(o),h=new gn((t+n*l)*c,n*r,(t+n*l)*a),u=new gn(e.x+h.x,e.y+h.y,e.z+h.z);s.push(u)}d.push(s)}if(l)for(let e=0;e<s+1;e++)for(let t=0;t<o+1;t++)gn.transformMat4(d[e][t],d[e][t],h);for(let e=0;e<s;e++)for(let t=0;t<o;t++)this.addTriangle(d[e][t+1],d[e+1][t],d[e][t],i,r,a,c),this.addTriangle(d[e][t+1],d[e+1][t+1],d[e+1][t],i,r,a,c)}addOctahedron(e,t,n,i=!0,s=!0,o=!1,r=!1,a=new On){const c=new Array;if(c.push(new gn(t+e.x,e.y,e.z)),c.push(new gn(e.x,e.y,e.z-t)),c.push(new gn(-t+e.x,e.y,e.z)),c.push(new gn(e.x,e.y,e.z+t)),c.push(new gn(e.x,e.y+t,e.z)),c.push(new gn(e.x,e.y-t,e.z)),r)for(let e=0;e<c.length;e++)gn.transformMat4(c[e],c[e],a);i?(this.addLine(c[0],c[1],n,s),this.addLine(c[1],c[2],n,s),this.addLine(c[2],c[3],n,s),this.addLine(c[3],c[0],n,s),this.addLine(c[0],c[4],n,s),this.addLine(c[1],c[4],n,s),this.addLine(c[2],c[4],n,s),this.addLine(c[3],c[4],n,s),this.addLine(c[0],c[5],n,s),this.addLine(c[1],c[5],n,s),this.addLine(c[2],c[5],n,s),this.addLine(c[3],c[5],n,s)):(this.addTriangle(c[0],c[1],c[4],n,i,s,o),this.addTriangle(c[1],c[2],c[4],n,i,s,o),this.addTriangle(c[2],c[3],c[4],n,i,s,o),this.addTriangle(c[3],c[0],c[4],n,i,s,o),this.addTriangle(c[0],c[3],c[5],n,i,s,o),this.addTriangle(c[3],c[2],c[5],n,i,s,o),this.addTriangle(c[2],c[1],c[5],n,i,s,o),this.addTriangle(c[1],c[0],c[5],n,i,s,o))}addBezier(e,t,n,i,s,o=32,r=!0,a=!1,c=new On){const l=1/o,h=new Array,u=new gn(e),_=new gn(t),d=new gn(n),p=new gn(i);a&&(gn.transformMat4(u,u,c),gn.transformMat4(_,_,c),gn.transformMat4(d,d,c),gn.transformMat4(p,p,c));for(let e=0;e<o+1;e++){const t=e*l,n=(1-t)*(1-t)*(1-t),i=3*t*(1-t)*(1-t),s=3*t*t*(1-t),o=t*t*t,r=new gn(n*u.x+i*_.x+s*d.x+o*p.x,n*u.y+i*_.y+s*d.y+o*p.y,n*u.z+i*_.z+s*d.z+o*p.z);h.push(r)}for(let e=0;e<o;e++)this.addLine(h[e],h[e+1],s,r)}addMesh(e,t,n,i=!0,s=!1,o=new On){for(let r=0;r<t.length;r+=3){const a=new gn(e.x+t[r].x,e.y+t[r].y,e.z+t[r].z),c=new gn(e.x+t[r+1].x,e.y+t[r+1].y,e.z+t[r+1].z),l=new gn(e.x+t[r+2].x,e.y+t[r+2].y,e.z+t[r+2].z);s&&(gn.transformMat4(a,a,o),gn.transformMat4(c,c,o),gn.transformMat4(l,l,o)),this.addLine(a,c,n,i),this.addLine(c,l,n,i),this.addLine(l,a,n,i)}}addIndexedMesh(e,t,n,i,s=!0,o=!1,r=new On){for(let a=0;a<n.length;a+=3){const c=new gn(e.x+t[n[a]].x,e.y+t[n[a]].y,e.z+t[n[a]].z),l=new gn(e.x+t[n[a+1]].x,e.y+t[n[a+1]].y,e.z+t[n[a+1]].z),h=new gn(e.x+t[n[a+2]].x,e.y+t[n[a+2]].y,e.z+t[n[a+2]].z);o&&(gn.transformMat4(c,c,r),gn.transformMat4(l,l,r),gn.transformMat4(h,h,r)),this.addLine(c,l,i,s),this.addLine(l,h,i,s),this.addLine(h,c,i,s)}}}const my=new On,gy=new On,vy=new On,yy=new Gn,xy=new Gn(0,0,1,0);class Sy{constructor(){this._globalUBO=new Float32Array(dp.COUNT),this._cameraUBO=new Float32Array(pp.COUNT),this._shadowUBO=new Float32Array(fp.COUNT)}static updateGlobalUBOView(e,t){const n=u.director.root,i=t,s=Math.floor(e.width),o=Math.floor(e.height);i[dp.TIME_OFFSET]=n.cumulativeTime,i[dp.TIME_OFFSET+1]=n.frameTime,i[dp.TIME_OFFSET+2]=u.director.getTotalFrames(),i[dp.SCREEN_SIZE_OFFSET]=s,i[dp.SCREEN_SIZE_OFFSET+1]=o,i[dp.SCREEN_SIZE_OFFSET+2]=1/s,i[dp.SCREEN_SIZE_OFFSET+3]=1/o,i[dp.NATIVE_SIZE_OFFSET]=s,i[dp.NATIVE_SIZE_OFFSET+1]=o,i[dp.NATIVE_SIZE_OFFSET+2]=1/i[dp.NATIVE_SIZE_OFFSET],i[dp.NATIVE_SIZE_OFFSET+3]=1/i[dp.NATIVE_SIZE_OFFSET+1]}static updateCameraUBOView(e,t,n){var i;const s=(n.scene?n.scene:u.director.getScene().renderScene).mainLight,o=e.pipelineSceneData,r=o.ambient,a=o.skybox,c=o.fog,l=o.shadows,h=t,_=n.exposure,d=o.isHDR;if(h[pp.SCREEN_SCALE_OFFSET]=o.shadingScale,h[pp.SCREEN_SCALE_OFFSET+1]=o.shadingScale,h[pp.SCREEN_SCALE_OFFSET+2]=1/h[pp.SCREEN_SCALE_OFFSET],h[pp.SCREEN_SCALE_OFFSET+3]=1/h[pp.SCREEN_SCALE_OFFSET+1],h[pp.EXPOSURE_OFFSET]=_,h[pp.EXPOSURE_OFFSET+1]=1/_,h[pp.EXPOSURE_OFFSET+2]=d?1:0,h[pp.EXPOSURE_OFFSET+3]=1/vg.standardExposureValue,s){const e=s.shadowEnabled&&l.type===xg.ShadowMap?1:0,t=s.direction;if(xy.set(t.x,t.y,t.z,e),Gn.toArray(h,xy,pp.MAIN_LIT_DIR_OFFSET),gn.toArray(h,s.color,pp.MAIN_LIT_COLOR_OFFSET),s.useColorTemperature){const e=s.colorTemperatureRGB;h[pp.MAIN_LIT_COLOR_OFFSET]*=e.x,h[pp.MAIN_LIT_COLOR_OFFSET+1]*=e.y,h[pp.MAIN_LIT_COLOR_OFFSET+2]*=e.z}h[pp.MAIN_LIT_COLOR_OFFSET+3]=d?s.illuminance*_:s.illuminance}else xy.set(0,0,1,0),Gn.toArray(h,xy,pp.MAIN_LIT_DIR_OFFSET),Gn.toArray(h,Gn.ZERO,pp.MAIN_LIT_COLOR_OFFSET);const p=r.skyColor;p.w=d?r.skyIllum*_:r.skyIllum,h[pp.AMBIENT_SKY_OFFSET+0]=p.x,h[pp.AMBIENT_SKY_OFFSET+1]=p.y,h[pp.AMBIENT_SKY_OFFSET+2]=p.z,h[pp.AMBIENT_SKY_OFFSET+3]=p.w,h[pp.AMBIENT_GROUND_OFFSET+0]=r.groundAlbedo.x,h[pp.AMBIENT_GROUND_OFFSET+1]=r.groundAlbedo.y,h[pp.AMBIENT_GROUND_OFFSET+2]=r.groundAlbedo.z,h[pp.AMBIENT_GROUND_OFFSET+3]=a.envmap?null===(i=a.envmap)||void 0===i?void 0:i.mipmapLevel:1,On.toArray(h,n.matView,pp.MAT_VIEW_OFFSET),On.toArray(h,n.node.worldMatrix,pp.MAT_VIEW_INV_OFFSET),gn.toArray(h,n.position,pp.CAMERA_POS_OFFSET),On.toArray(h,n.matProj,pp.MAT_PROJ_OFFSET),On.toArray(h,n.matProjInv,pp.MAT_PROJ_INV_OFFSET),On.toArray(h,n.matViewProj,pp.MAT_VIEW_PROJ_OFFSET),On.toArray(h,n.matViewProjInv,pp.MAT_VIEW_PROJ_INV_OFFSET),h[pp.CAMERA_POS_OFFSET+3]=this.getCombineSignY();const f=c.colorArray;h[pp.GLOBAL_FOG_COLOR_OFFSET]=f.x,h[pp.GLOBAL_FOG_COLOR_OFFSET+1]=f.y,h[pp.GLOBAL_FOG_COLOR_OFFSET+2]=f.z,h[pp.GLOBAL_FOG_COLOR_OFFSET+3]=f.z,h[pp.GLOBAL_FOG_BASE_OFFSET]=c.fogStart,h[pp.GLOBAL_FOG_BASE_OFFSET+1]=c.fogEnd,h[pp.GLOBAL_FOG_BASE_OFFSET+2]=c.fogDensity,h[pp.GLOBAL_FOG_ADD_OFFSET]=c.fogTop,h[pp.GLOBAL_FOG_ADD_OFFSET+1]=c.fogRange,h[pp.GLOBAL_FOG_ADD_OFFSET+2]=c.fogAtten,h[pp.NEAR_FAR_OFFSET]=n.nearClip,h[pp.NEAR_FAR_OFFSET+1]=n.farClip,h[pp.VIEW_PORT_OFFSET]=o.shadingScale*n.window.width*n.viewport.x,h[pp.VIEW_PORT_OFFSET+1]=o.shadingScale*n.window.height*n.viewport.y,h[pp.VIEW_PORT_OFFSET+2]=o.shadingScale*n.window.width*n.viewport.z,h[pp.VIEW_PORT_OFFSET+3]=o.shadingScale*n.window.height*n.viewport.w}static updateShadowUBOView(e,t,n){const i=e.device,s=n.scene.mainLight,o=e.pipelineSceneData.shadows,r=t;if(o.enabled){if(s&&s.shadowEnabled&&o.type===xg.ShadowMap){let e=.1,n=0;const a=o.matShadowView,c=o.matShadowProj,l=o.matShadowViewProj;s.shadowFixedArea?(e=s.shadowNear,n=s.shadowFar):(e=.1,n=o.shadowCameraFar),On.toArray(t,a,fp.MAT_LIGHT_VIEW_OFFSET),r[fp.SHADOW_PROJ_DEPTH_INFO_OFFSET+0]=c.m10,r[fp.SHADOW_PROJ_DEPTH_INFO_OFFSET+1]=c.m14,r[fp.SHADOW_PROJ_DEPTH_INFO_OFFSET+2]=c.m11,r[fp.SHADOW_PROJ_DEPTH_INFO_OFFSET+3]=c.m15,r[fp.SHADOW_PROJ_INFO_OFFSET+0]=c.m00,r[fp.SHADOW_PROJ_INFO_OFFSET+1]=c.m05,r[fp.SHADOW_PROJ_INFO_OFFSET+2]=1/c.m00,r[fp.SHADOW_PROJ_INFO_OFFSET+3]=1/c.m05,On.toArray(t,l,fp.MAT_LIGHT_VIEW_PROJ_OFFSET);const h=0,u=lf(i)?0:1;r[fp.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET+0]=e,r[fp.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET+1]=n,r[fp.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET+2]=h,r[fp.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET+3]=1-s.shadowSaturation,r[fp.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET+0]=o.size.x,r[fp.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET+1]=o.size.y,r[fp.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET+2]=s.shadowPcf,r[fp.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET+3]=s.shadowBias,r[fp.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET+0]=0,r[fp.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET+1]=u,r[fp.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET+2]=s.shadowNormalBias,r[fp.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET+3]=0}else s&&o.type===xg.Planar&&(function(e,t,n){const i=t.direction,s=e.normal,o=e.distance+.001,r=1/gn.dot(s,i),a=i.x*r,c=i.y*r,l=i.z*r,h=s.x,u=s.y,_=s.z,d=e.matLight;d.m00=1-h*a,d.m01=-h*c,d.m02=-h*l,d.m03=0,d.m04=-u*a,d.m05=1-u*c,d.m06=-u*l,d.m07=0,d.m08=-_*a,d.m09=-_*c,d.m10=1-_*l,d.m11=0,d.m12=a*o,d.m13=c*o,d.m14=l*o,d.m15=1,On.toArray(n,d,fp.MAT_LIGHT_PLANE_PROJ_OFFSET)}(o,s,r),function(e,t){gn.normalize(Tg,e.normal),t[fp.PLANAR_NORMAL_DISTANCE_INFO_OFFSET+0]=Tg.x,t[fp.PLANAR_NORMAL_DISTANCE_INFO_OFFSET+1]=Tg.y,t[fp.PLANAR_NORMAL_DISTANCE_INFO_OFFSET+2]=Tg.z,t[fp.PLANAR_NORMAL_DISTANCE_INFO_OFFSET+3]=e.distance}(o,r));dn.toArray(r,o.shadowColor,fp.SHADOW_COLOR_OFFSET)}}static updateShadowUBOLightView(e,t,n){const i=e.device,s=e.pipelineSceneData.shadows,o=t,r=lf(i)?0:1;let a=.1,c=0;const l=s.matShadowView,h=s.matShadowProj,u=s.matShadowViewProj;switch(n.type){case Rv.DIRECTIONAL:{const e=n;e.shadowFixedArea?(a=e.shadowNear,c=e.shadowFar):(a=.1,c=s.shadowCameraFar),On.toArray(t,l,fp.MAT_LIGHT_VIEW_OFFSET),o[fp.SHADOW_PROJ_DEPTH_INFO_OFFSET+0]=h.m10,o[fp.SHADOW_PROJ_DEPTH_INFO_OFFSET+1]=h.m14,o[fp.SHADOW_PROJ_DEPTH_INFO_OFFSET+2]=h.m11,o[fp.SHADOW_PROJ_DEPTH_INFO_OFFSET+3]=h.m15,o[fp.SHADOW_PROJ_INFO_OFFSET+0]=h.m00,o[fp.SHADOW_PROJ_INFO_OFFSET+1]=h.m05,o[fp.SHADOW_PROJ_INFO_OFFSET+2]=1/h.m00,o[fp.SHADOW_PROJ_INFO_OFFSET+3]=1/h.m05,On.toArray(t,u,fp.MAT_LIGHT_VIEW_PROJ_OFFSET),yy.set(a,c,0,1-e.shadowSaturation),Gn.toArray(o,yy,fp.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET),yy.set(0,r,e.shadowNormalBias,0),Gn.toArray(o,yy,fp.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET),yy.set(s.size.x,s.size.y,e.shadowPcf,e.shadowBias),Gn.toArray(o,yy,fp.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET);break}case Rv.SPOT:{const e=n;On.invert(my,n.node.getWorldMatrix()),On.toArray(o,my,fp.MAT_LIGHT_VIEW_OFFSET),On.perspective(gy,n.angle,1,.001,n.range),On.multiply(vy,gy,my),On.toArray(o,vy,fp.MAT_LIGHT_VIEW_PROJ_OFFSET),yy.set(.01,n.range,0,0),Gn.toArray(o,yy,fp.SHADOW_NEAR_FAR_LINEAR_SATURATION_INFO_OFFSET),yy.set(1,r,e.shadowNormalBias,0),Gn.toArray(o,yy,fp.SHADOW_LIGHT_PACKING_NBIAS_NULL_INFO_OFFSET),yy.set(s.size.x,s.size.y,e.shadowPcf,e.shadowBias),Gn.toArray(o,yy,fp.SHADOW_WIDTH_HEIGHT_PCF_BIAS_INFO_OFFSET);break}}dn.toArray(o,s.shadowColor,fp.SHADOW_COLOR_OFFSET)}static getCombineSignY(){return Sy._combineSignY}_initCombineSignY(){const e=this._device;Sy._combineSignY=.5*e.capabilities.screenSpaceSignY+.5<<1|.5*e.capabilities.clipSpaceSignY+.5}activate(e,t){this._device=e,this._pipeline=t;const n=this._pipeline.descriptorSet;this._initCombineSignY();const i=e.createBuffer(new es(si.UNIFORM|si.TRANSFER_DST,ai.HOST|ai.DEVICE,dp.SIZE,dp.SIZE));n.bindBuffer(dp.BINDING,i);const s=e.createBuffer(new es(si.UNIFORM|si.TRANSFER_DST,ai.HOST|ai.DEVICE,pp.SIZE,pp.SIZE));n.bindBuffer(pp.BINDING,s);const o=e.createBuffer(new es(si.UNIFORM|si.TRANSFER_DST,ai.HOST|ai.DEVICE,fp.SIZE,fp.SIZE));n.bindBuffer(fp.BINDING,o)}updateGlobalUBO(e){const t=this._pipeline.globalDSManager,n=this._pipeline.descriptorSet,i=this._pipeline.commandBuffers;n.update(),Sy.updateGlobalUBOView(e,this._globalUBO),i[0].updateBuffer(n.getBuffer(dp.BINDING),this._globalUBO),t.bindBuffer(dp.BINDING,n.getBuffer(dp.BINDING)),t.update()}updateCameraUBO(e){const t=this._pipeline.globalDSManager,n=this._pipeline.descriptorSet,i=this._pipeline.commandBuffers;Sy.updateCameraUBOView(this._pipeline,this._cameraUBO,e),i[0].updateBuffer(n.getBuffer(pp.BINDING),this._cameraUBO),t.bindBuffer(pp.BINDING,n.getBuffer(pp.BINDING)),t.update()}updateShadowUBO(e){const t=this._pipeline.pipelineSceneData;if(!t.shadows.enabled)return;const n=this._pipeline.descriptorSet,i=this._pipeline.commandBuffers,s=t.shadowFrameBufferMap,o=e.scene.mainLight;o&&s.has(o)&&n.bindTexture(mp,s.get(o).colorTextures[0]),Sy.updateShadowUBOView(this._pipeline,this._shadowUBO,e),n.update(),i[0].updateBuffer(n.getBuffer(fp.BINDING),this._shadowUBO)}updateShadowUBOLight(e,t){Sy.updateShadowUBOLightView(this._pipeline,this._shadowUBO,t),e.bindTexture(mp,Fm.get("default-texture").getGFXTexture()),e.bindTexture(bp,Fm.get("default-texture").getGFXTexture()),e.update(),e.getBuffer(fp.BINDING).update(this._shadowUBO)}updateShadowUBORange(e,t){t instanceof On?On.toArray(this._shadowUBO,t,e):t instanceof dn&&dn.toArray(this._shadowUBO,t,e)}destroy(){}}var Cy,Ey,Ty,by,Ay,Py,wy,Iy,Ry;Sy._combineSignY=0;let Dy=(Cy=mc("RenderStage"),Ey=Wc(),Ty=Wc(),by=Wc(),Cy((wy=ac((Py=class{constructor(){rc(this,"_name",wy,this),rc(this,"_priority",Iy,this),this._enabled=!0,rc(this,"_tag",Ry,this)}get name(){return this._name}get priority(){return this._priority}get tag(){return this._tag}set enabled(e){this._enabled=e}get enabled(){return this._enabled}initialize(e){return this._name=e.name,this._priority=e.priority,e.tag&&(this._tag=e.tag),!0}activate(e,t){this._pipeline=e,this._flow=t}}).prototype,"_name",[Ey,Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),Iy=ac(Py.prototype,"_priority",[Ty,Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Ry=ac(Py.prototype,"_tag",[by,Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Ay=Py))||Ay);var Oy,Ny,My,Ly,By,Fy,zy,Uy,Gy,Vy,Hy,ky;u.RenderStage=Dy;let jy,Wy=(Oy=mc("RenderFlow"),Ny=Wc(),My=Wc(),Ly=Wc(),By=Wc(),Fy=Zc([Dy]),Oy((Gy=ac((Uy=class{constructor(){rc(this,"_name",Gy,this),rc(this,"_priority",Vy,this),rc(this,"_tag",Hy,this),rc(this,"_stages",ky,this)}get name(){return this._name}get priority(){return this._priority}get tag(){return this._tag}get stages(){return this._stages}get pipeline(){return this._pipeline}initialize(e){return this._name=e.name,this._priority=e.priority,this._stages=e.stages,e.tag&&(this._tag=e.tag),!0}activate(e){this._pipeline=e,this._stages.sort(((e,t)=>e.priority-t.priority));for(let t=0,n=this._stages.length;t<n;t++)this._stages[t].activate(e,this)}render(e){for(let t=0,n=this._stages.length;t<n;t++)this._stages[t].enabled&&this._stages[t].render(e)}destroy(){for(let e=0,t=this._stages.length;e<t;e++)this._stages[e].destroy();this._stages.length=0}}).prototype,"_name",[Ny,Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),Vy=ac(Uy.prototype,"_priority",[My,Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Hy=ac(Uy.prototype,"_tag",[Ly,Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ky=ac(Uy.prototype,"_stages",[By,Fy,Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),zy=Uy))||zy);u.RenderFlow=Wy,function(e){e.RENDER_FRAME_BEGIN="render-frame-begin",e.RENDER_FRAME_END="render-frame-end",e.RENDER_CAMERA_BEGIN="render-camera-begin",e.RENDER_CAMERA_END="render-camera-end",e.ATTACHMENT_SCALE_CAHNGED="attachment-scale-changed"}(jy||(jy=e("PipelineEventType",{})));class qy extends Xl{constructor(...e){super(...e),this.eventTargetOn=super.on,this.eventTargetOnce=super.once}on(e,t,n,i){return this.eventTargetOn(e,t,n,i)}once(e,t,n){return this.eventTargetOnce(e,t,n)}}var Xy,Yy,Ky,$y,Qy,Jy,Zy,ex;e("PipelineEventProcessor",qy);const tx=new Hi,nx=new Ki;class ix{constructor(){this.renderPass=null,this.sampler=null,this.prefiterTex=null,this.downsampleTexs=[],this.upsampleTexs=[],this.combineTex=null,this.prefilterFramebuffer=null,this.downsampleFramebuffers=[],this.upsampleFramebuffers=[],this.combineFramebuffer=null}}class sx{constructor(){this.quadIB=null,this.quadVB=null,this.quadIA=null}}let ox=(Xy=mc("cc.RenderPipeline"),Yy=Wc(),Ky=Wc(),$y=Zc([Wy]),Xy((Zy=ac((Jy=class extends xh{constructor(...e){super(...e),rc(this,"_tag",Zy,this),rc(this,"_flows",ex,this),this._quadIB=null,this._quadVBOnscreen=null,this._quadVBOffscreen=null,this._quadIAOnscreen=null,this._quadIAOffscreen=null,this._eventProcessor=new qy,this._commandBuffers=[],this._pipelineUBO=new Sy,this._macros={},this._constantMacros="",this._profiler=null,this._geometryRenderer=new fy,this._pipelineRenderData=null,this._renderPasses=new Map,this._width=0,this._height=0,this._lastUsedRenderArea=new Hi,this._clusterEnabled=!1,this._bloomEnabled=!1}get tag(){return this._tag}get flows(){return this._flows}get quadIAOnscreen(){return this._quadIAOnscreen}get quadIAOffscreen(){return this._quadIAOffscreen}getPipelineRenderData(){return this._pipelineRenderData}get constantMacros(){return this._constantMacros}get macros(){return this._macros}get device(){return this._device}get globalDSManager(){return this._globalDSManager}get descriptorSetLayout(){return this._globalDSManager.descriptorSetLayout}get descriptorSet(){return this._descriptorSet}get commandBuffers(){return this._commandBuffers}get pipelineUBO(){return this._pipelineUBO}get pipelineSceneData(){return this._pipelineSceneData}set profiler(e){this._profiler=e}get profiler(){return this._profiler}get geometryRenderer(){return this._geometryRenderer}set clusterEnabled(e){this._clusterEnabled=e}get clusterEnabled(){return this._clusterEnabled}set bloomEnabled(e){this._bloomEnabled=e}get bloomEnabled(){return this._bloomEnabled}initialize(e){return this._flows=e.flows,e.tag&&(this._tag=e.tag),!0}createRenderPass(e,t,n){const i=this._device,s=new Ss,o=new Cs;s.format=t,o.format=n,o.stencilStoreOp=Ei.DISCARD,o.depthStoreOp=Ei.DISCARD,e&Fi.COLOR||(e&mg?s.loadOp=Ci.DISCARD:(s.loadOp=Ci.LOAD,s.barrier=i.getGeneralBarrier(new As(Ti.COLOR_ATTACHMENT_WRITE,Ti.COLOR_ATTACHMENT_WRITE)))),(e&Fi.DEPTH_STENCIL)!==Fi.DEPTH_STENCIL&&(e&Fi.DEPTH||(o.depthLoadOp=Ci.LOAD),e&Fi.STENCIL||(o.stencilLoadOp=Ci.LOAD)),o.barrier=i.getGeneralBarrier(new As(Ti.DEPTH_STENCIL_ATTACHMENT_WRITE,Ti.DEPTH_STENCIL_ATTACHMENT_WRITE));const r=new bs([s],o);return i.createRenderPass(r)}getRenderPass(e,t){let n=this._renderPasses.get(e);return n||(n=this.createRenderPass(e,t.colorTextures[0].format,t.depthStencilTexture.format),this._renderPasses.set(e,n),n)}applyFramebufferRatio(e){const t=this.pipelineSceneData,n=this._width*t.shadingScale,i=this._height*t.shadingScale,s=e.colorTextures;for(let e=0;e<s.length;e++)s[e].resize(n,i);e.depthStencilTexture&&e.depthStencilTexture.resize(n,i),e.destroy(),e.initialize(new ws(e.renderPass,s,e.depthStencilTexture))}generateRenderArea(e,t){const n=e.viewport,i=e.window.width,s=e.window.height;t.x=n.x*i,t.y=n.y*s,t.width=n.width*i,t.height=n.height*s}generateViewport(e,t){this.generateRenderArea(e,tx),t||(t=nx);const n=this.pipelineSceneData.shadingScale;return t.left=tx.x*n,t.top=tx.y*n,t.width=tx.width*n,t.height=tx.height*n,t}generateScissor(e,t){t||(t=tx),this.generateRenderArea(e,t);const n=this.pipelineSceneData.shadingScale;return t.x*=n,t.y*=n,t.width*=n,t.height*=n,t}activate(e){const t=u.director.root;this._device=t.device,this._generateConstantMacros(),this._globalDSManager=new iv(this),this._descriptorSet=this._globalDSManager.globalDescriptorSet,this._pipelineUBO.activate(this._device,this),this._macros.CC_USE_HDR=this._pipelineSceneData.isHDR,this._generateConstantMacros(),this._pipelineSceneData.activate(this._device,this),this._geometryRenderer.activate(this._device,this);for(let e=0;e<this._flows.length;e++)this._flows[e].activate(this);return!0}_ensureEnoughSize(e){}render(e){if(0!==e.length){this._commandBuffers[0].begin(),this.emit(jy.RENDER_FRAME_BEGIN,e),this._ensureEnoughSize(e),function(e){for(let t=e.length-1;t>=0;--t)if(e[t].window.swapchain)return}(e);for(let t=0;t<e.length;t++){const n=e[t];if(n.scene){this.emit(jy.RENDER_CAMERA_BEGIN,n),Zg(this,n),ev(this,n),this._pipelineUBO.updateGlobalUBO(n.window),this._pipelineUBO.updateCameraUBO(n);for(let e=0;e<this._flows.length;e++)this._flows[e].render(n);this.emit(jy.RENDER_CAMERA_END,n)}}this.emit(jy.RENDER_FRAME_END,e),this._commandBuffers[0].end(),this._device.queue.submit(this._commandBuffers)}}_destroyQuadInputAssembler(){this._quadIB&&(this._quadIB.destroy(),this._quadIB=null),this._quadVBOnscreen&&(this._quadVBOnscreen.destroy(),this._quadVBOnscreen=null),this._quadVBOffscreen&&(this._quadVBOffscreen.destroy(),this._quadVBOffscreen=null),this._quadIAOnscreen&&(this._quadIAOnscreen.destroy(),this._quadIAOnscreen=null),this._quadIAOffscreen&&(this._quadIAOffscreen.destroy(),this._quadIAOffscreen=null)}_destroyBloomData(){var e;const t=this._pipelineRenderData.bloom;if(null!==t){t.prefiterTex&&t.prefiterTex.destroy(),t.prefilterFramebuffer&&t.prefilterFramebuffer.destroy();for(let e=0;e<t.downsampleTexs.length;++e)t.downsampleTexs[e].destroy(),t.downsampleFramebuffers[e].destroy();t.downsampleTexs.length=0,t.downsampleFramebuffers.length=0;for(let e=0;e<t.upsampleTexs.length;++e)t.upsampleTexs[e].destroy(),t.upsampleFramebuffers[e].destroy();t.upsampleTexs.length=0,t.upsampleFramebuffers.length=0,t.combineTex&&t.combineTex.destroy(),t.combineFramebuffer&&t.combineFramebuffer.destroy(),null===(e=t.renderPass)||void 0===e||e.destroy(),this._pipelineRenderData.bloom=null}}_genQuadVertexData(e,t){const n=new Float32Array(16),i=t.x/this._width,s=(t.x+t.width)/this._width;let o=t.y/this._height,r=(t.y+t.height)/this._height;if(this.device.capabilities.screenSpaceSignY>0){const e=r;r=o,o=e}let a=0;switch(e){case Zn.IDENTITY:a=0,n[a++]=-1,n[a++]=-1,n[a++]=i,n[a++]=r,n[a++]=1,n[a++]=-1,n[a++]=s,n[a++]=r,n[a++]=-1,n[a++]=1,n[a++]=i,n[a++]=o,n[a++]=1,n[a++]=1,n[a++]=s,n[a++]=o;break;case Zn.ROTATE_90:a=0,n[a++]=-1,n[a++]=-1,n[a++]=s,n[a++]=r,n[a++]=1,n[a++]=-1,n[a++]=s,n[a++]=o,n[a++]=-1,n[a++]=1,n[a++]=i,n[a++]=r,n[a++]=1,n[a++]=1,n[a++]=i,n[a++]=o;break;case Zn.ROTATE_180:a=0,n[a++]=-1,n[a++]=-1,n[a++]=i,n[a++]=o,n[a++]=1,n[a++]=-1,n[a++]=s,n[a++]=o,n[a++]=-1,n[a++]=1,n[a++]=i,n[a++]=r,n[a++]=1,n[a++]=1,n[a++]=s,n[a++]=r;break;case Zn.ROTATE_270:a=0,n[a++]=-1,n[a++]=-1,n[a++]=i,n[a++]=o,n[a++]=1,n[a++]=-1,n[a++]=i,n[a++]=r,n[a++]=-1,n[a++]=1,n[a++]=s,n[a++]=o,n[a++]=1,n[a++]=1,n[a++]=s,n[a++]=r}return n}_createQuadInputAssembler(){const e=new sx,t=4*Float32Array.BYTES_PER_ELEMENT,n=4*t,i=this._device.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.DEVICE|ai.HOST,n,t));if(!i)return e;const s=Uint8Array.BYTES_PER_ELEMENT,o=6*s,r=this._device.createBuffer(new es(si.INDEX|si.TRANSFER_DST,ai.DEVICE,o,s));if(!r)return e;const a=new Uint8Array(6);a[0]=0,a[1]=1,a[2]=2,a[3]=1,a[4]=3,a[5]=2,r.update(a);const c=new Array(2);c[0]=new vs("a_position",ti.RG32F),c[1]=new vs("a_texCoord",ti.RG32F);const l=this._device.createInputAssembler(new xs(c,[i],r));return e.quadIB=r,e.quadVB=i,e.quadIA=l,e}updateQuadVertexData(e,t){const n=this._lastUsedRenderArea;if(n.x===e.x&&n.y===e.y&&n.width===e.width&&n.height===e.height)return;const i=this._genQuadVertexData(Zn.IDENTITY,e);this._quadVBOffscreen.update(i);const s=this._genQuadVertexData(t.swapchain&&t.swapchain.surfaceTransform||Zn.IDENTITY,e);this._quadVBOnscreen.update(s),n.copy(e)}destroy(){var e,t;for(let e=0;e<this._flows.length;e++)this._flows[e].destroy();this._flows.length=0,this._descriptorSet&&this._descriptorSet.destroy(),null===(e=this._globalDSManager)||void 0===e||e.destroy();for(let e=0;e<this._commandBuffers.length;e++)this._commandBuffers[e].destroy();return this._commandBuffers.length=0,this._pipelineUBO.destroy(),null===(t=this._pipelineSceneData)||void 0===t||t.destroy(),this._geometryRenderer.destroy(),super.destroy()}_generateConstantMacros(){let e="";e+=`#define CC_DEVICE_SUPPORT_FLOAT_TEXTURE ${this.device.getFormatFeatures(ti.RGBA32F)&(ui.RENDER_TARGET|ui.SAMPLED_TEXTURE)?1:0}\n`,e+=`#define CC_ENABLE_CLUSTERED_LIGHT_CULLING ${this._clusterEnabled?1:0}\n`,e+=`#define CC_DEVICE_MAX_VERTEX_UNIFORM_VECTORS ${this.device.capabilities.maxVertexUniformVectors}\n`,e+=`#define CC_DEVICE_MAX_FRAGMENT_UNIFORM_VECTORS ${this.device.capabilities.maxFragmentUniformVectors}\n`,e+=`#define CC_DEVICE_CAN_BENEFIT_FROM_INPUT_ATTACHMENT ${this.device.hasFeature(ei.INPUT_ATTACHMENT_BENEFIT)?1:0}\n`,e+=`#define CC_PLATFORM_ANDROID_AND_WEBGL ${nh.os===Ql.ANDROID&&nh.isBrowser?1:0}\n`,e+=`#define CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES ${Qe.ENABLE_WEBGL_HIGHP_STRUCT_VALUES?1:0}\n`,this._constantMacros=e}generateBloomRenderData(){if(null!=this._pipelineRenderData.bloom)return;const e=this._pipelineRenderData.bloom=new ix,t=this.device,n=new Ss;n.format=ti.RGBA8,n.loadOp=Ci.CLEAR,n.storeOp=Ei.STORE,n.barrier=t.getGeneralBarrier(new As(Ti.NONE,Ti.COLOR_ATTACHMENT_WRITE)),e.renderPass=t.createRenderPass(new bs([n]));let i=this._width,s=this._height;e.prefiterTex=t.createTexture(new rs(ci.TEX2D,li.COLOR_ATTACHMENT|li.SAMPLED,ti.RGBA8,i>>1,s>>1)),e.prefilterFramebuffer=t.createFramebuffer(new ws(e.renderPass,[e.prefiterTex])),i>>=1,s>>=1;for(let n=0;n<6;++n)e.downsampleTexs.push(t.createTexture(new rs(ci.TEX2D,li.COLOR_ATTACHMENT|li.SAMPLED,ti.RGBA8,i>>1,s>>1))),e.downsampleFramebuffers[n]=t.createFramebuffer(new ws(e.renderPass,[e.downsampleTexs[n]])),e.upsampleTexs.push(t.createTexture(new rs(ci.TEX2D,li.COLOR_ATTACHMENT|li.SAMPLED,ti.RGBA8,i,s))),e.upsampleFramebuffers[n]=t.createFramebuffer(new ws(e.renderPass,[e.upsampleTexs[n]])),i>>=1,s>>=1;e.combineTex=t.createTexture(new rs(ci.TEX2D,li.COLOR_ATTACHMENT|li.SAMPLED,ti.RGBA8,this._width,this._height)),e.combineFramebuffer=t.createFramebuffer(new ws(e.renderPass,[e.combineTex])),e.sampler=this.globalDSManager.linearSampler}on(e,t,n,i){return this._eventProcessor.on(e,t,n,i)}once(e,t,n){return this._eventProcessor.once(e,t,n)}off(e,t,n){this._eventProcessor.off(e,t,n)}emit(e,t,n,i,s,o){this._eventProcessor.emit(e,t,n,i,s,o)}targetOff(e){this._eventProcessor.targetOff(e)}removeAll(e){this._eventProcessor.removeAll(e)}hasEventListener(e,t,n){return this._eventProcessor.hasEventListener(e,t,n)}}).prototype,"_tag",[Yy,Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ex=ac(Jy.prototype,"_flows",[Ky,$y,Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Qy=Jy))||Qy);function rx(e,t){for(const n of t)Array.isArray(n)?rx(e,n):e.push(n)}function ax(e){const t=[];return rx(t,e),t.join("")}u.RenderPipeline=ox;const cx=rl.Flags.Destroyed,lx=rl.Flags.PersistentMask,hx=zt.IDENTIFIER_RE,ux="var ",_x="o",dx={"cc.ClickEvent":!1,"cc.PrefabInfo":!1},px=zt.escapeForJS;class fx{constructor(e,t){this.varName=void 0,this.expression=void 0,this.varName=e,this.expression=t}toString(){return`${ux+this.varName}=${this.expression};`}}function mx(e,t){return t instanceof fx?new fx(t.varName,e+t.expression):e+t}function gx(e,t,n){Array.isArray(n)?(n[0]=mx(t,n[0]),e.push(n)):e.push(`${mx(t,n)};`)}class vx{constructor(e){this._exps=void 0,this._targetExp=void 0,this._exps=[],this._targetExp=e}append(e,t){this._exps.push([e,t])}writeCode(e){let t;if(this._exps.length>1)e.push(`t=${this._targetExp};`),t="t";else{if(1!==this._exps.length)return;t=this._targetExp}for(let n=0;n<this._exps.length;n++){const i=this._exps[n];gx(e,`${t+yx(i[0])}=`,i[1])}}}function yx(e){return hx.test(e)?`.${e}`:`[${px(e)}]`}vx.pool=void 0,vx.pool=new Ve((e=>{e._exps.length=0,e._targetExp=null}),1),vx.pool.get=function(e){const t=this._get()||new vx;return t._targetExp=e,t};class xx{constructor(e,t){let n;this.parent=void 0,this.objsToClear_iN$t=void 0,this.codeArray=void 0,this.objs=void 0,this.funcs=void 0,this.funcModuleCache=void 0,this.globalVariables=void 0,this.globalVariableId=void 0,this.localVariableId=void 0,this.result=void 0,this.parent=t,this.objsToClear_iN$t=[],this.codeArray=[],this.objs=[],this.funcs=[],this.funcModuleCache=pe(),be(this.funcModuleCache,dx),this.globalVariables=[],this.globalVariableId=0,this.localVariableId=0,this.codeArray.push("var o,t;","if(R){","o=R;","}else{",`o=R=new ${this.getFuncModule(e.constructor,!0)}();`,"}"),e._iN$t={globalVar:"R"},this.objsToClear_iN$t.push(e),this.enumerateObject(this.codeArray,e),this.globalVariables.length>0&&(n=`${ux+this.globalVariables.join(",")};`);const i=ax(["return (function(R){",n||[],this.codeArray,"return o;","})"]);this.result=Function("O","F",i)(this.objs,this.funcs);for(let e=0,t=this.objsToClear_iN$t.length;e<t;++e)this.objsToClear_iN$t[e]._iN$t=null;this.objsToClear_iN$t.length=0}getFuncModule(e,t){const n=fe(e);if(n){const t=this.funcModuleCache[n];if(t)return t;if(void 0===t){let t=-1!==n.indexOf(".");if(t)try{if(t=e===Function(`return ${n}`)(),t)return this.funcModuleCache[n]=n,n}catch(e){}}}let i=this.funcs.indexOf(e);i<0&&(i=this.funcs.length,this.funcs.push(e));let s=`F[${i}]`;return t&&(s=`(${s})`),this.funcModuleCache[n]=s,s}getObjRef(e){let t=this.objs.indexOf(e);return t<0&&(t=this.objs.length,this.objs.push(e)),`O[${t}]`}setValueType(e,t,n,i){const s=vx.pool.get(i);let o=t.constructor.__props__;o||(o=Object.keys(t));for(let e=0;e<o.length;e++){const i=o[e],r=n[i];if(t[i]===r)continue;const a=this.enumerateField(n,i,r);s.append(i,a)}s.writeCode(e),vx.pool.put(s)}enumerateCCClass(e,t,n){const i=n.__values__,s=pt(n);for(let n=0;n<i.length;n++){const o=i[n],r=t[o];let a=s[o+"$_$default"];if(!Sx(a,r))if("object"==typeof r&&r instanceof u.ValueType&&(a=zt.getDefault(a),a&&a.constructor===r.constructor)){const t=_x+yx(o);this.setValueType(e,a,r,t)}else this.setObjProp(e,t,o,r)}}instantiateArray(e){if(0===e.length)return"[]";const t="a"+ ++this.localVariableId,n=[new fx(t,`new Array(${e.length})`)];e._iN$t={globalVar:"",source:n},this.objsToClear_iN$t.push(e);for(let i=0;i<e.length;++i)gx(n,`${t}[${i}]=`,this.enumerateField(e,i,e[i]));return n}instantiateTypedArray(e){const t=e.constructor.name;if(0===e.length)return`new ${t}`;const n="a"+ ++this.localVariableId,i=[new fx(n,`new ${t}(${e.length})`)];e._iN$t={globalVar:"",source:i},this.objsToClear_iN$t.push(e);for(let t=0;t<e.length;++t)0!==e[t]&&gx(i,`${n}[${t}]=`,e[t]);return i}enumerateField(e,t,n){if("object"==typeof n&&n){const e=n._iN$t;if(e){let t=e.globalVar;if(!t){t=e.globalVar="v"+ ++this.globalVariableId,this.globalVariables.push(t);const n=e.source[0];e.source[0]=mx(`${t}=`,n)}return t}return ArrayBuffer.isView(n)?this.instantiateTypedArray(n):Array.isArray(n)?this.instantiateArray(n):this.instantiateObj(n)}return"function"==typeof n?this.getFuncModule(n):"string"==typeof n?px(n):("_objFlags"===t&&e instanceof rl&&(n&=lx),n)}setObjProp(e,t,n,i){gx(e,`${_x+yx(n)}=`,this.enumerateField(t,n,i))}enumerateObject(e,t){const n=t.constructor;if(Ut(n))this.enumerateCCClass(e,t,n);else for(const n in t){if(!t.hasOwnProperty(n)||95===n.charCodeAt(0)&&95===n.charCodeAt(1)&&"__type__"!==n)continue;const i=t[n];"object"==typeof i&&i&&i===t._iN$t||this.setObjProp(e,t,n,i)}}instantiateObj(e){if(e instanceof u.ValueType)return zt.getNewValueTypeCode(e);if(e instanceof u.Asset)return this.getObjRef(e);if(e._objFlags&cx)return null;let t;const n=e.constructor;if(Ut(n)){if(this.parent)if(this.parent instanceof u.Component){if(e instanceof u._BaseNode||e instanceof u.Component)return this.getObjRef(e)}else if(this.parent instanceof u._BaseNode)if(e instanceof u._BaseNode){if(!e.isChildOf(this.parent))return this.getObjRef(e)}else if(e instanceof u.Component){var i;if(!(null===(i=e.node)||void 0===i?void 0:i.isChildOf(this.parent)))return this.getObjRef(e)}t=new fx(_x,`new ${this.getFuncModule(n,!0)}()`)}else if(n===Object)t=new fx(_x,"{}");else{if(n)return this.getObjRef(e);t=new fx(_x,"Object.create(null)")}const s=[t];return e._iN$t={globalVar:"",source:s},this.objsToClear_iN$t.push(e),this.enumerateObject(s,e),["(function(){",s,"return o;})();"]}}function Sx(e,t){if("function"==typeof e)try{e=e()}catch(e){return!1}if(e===t)return!0;if(e&&t&&"object"==typeof e&&"object"==typeof t&&e.constructor===t.constructor)if(e instanceof u.ValueType){if(e.equals(t))return!0}else{if(Array.isArray(e))return 0===e.length&&0===t.length;if(e.constructor===Object)return le(e)&&le(t)}return!1}class Cx{get uiTransformComp(){return this._uiTransformComp||(this._uiTransformComp=this._node.getComponent("cc.UITransform")),this._uiTransformComp}set uiTransformComp(e){this._uiTransformComp=e}get uiComp(){return this._uiComp}set uiComp(e){this._uiComp&&e?D(12002):this._uiComp=e}get opacity(){return this._opacity}get localOpacity(){return this._localOpacity}set localOpacity(e){this._localOpacity=e,this.colorDirty=!0}constructor(e){this._uiComp=null,this._opacity=1,this._localOpacity=1,this.colorDirty=!0,this._uiTransformComp=null,this._node=void 0,this._node=e}applyOpacity(e){this._opacity=this._localOpacity*e}static markOpacityTree(e,t=!0){}}let Ex;var Tx,bx,Ax,Px,wx,Ix,Rx,Dx,Ox;rl.Flags.Destroying,function(e){e.TOUCH_START="touch-start",e.TOUCH_MOVE="touch-move",e.TOUCH_END="touch-end",e.TOUCH_CANCEL="touch-cancel",e.MOUSE_DOWN="mouse-down",e.MOUSE_MOVE="mouse-move",e.MOUSE_UP="mouse-up",e.MOUSE_WHEEL="mouse-wheel",e.MOUSE_ENTER="mouse-enter",e.MOUSE_LEAVE="mouse-leave",e.KEY_DOWN="keydown",e.KEY_UP="keyup",e.DEVICEMOTION="devicemotion",e.TRANSFORM_CHANGED="transform-changed",e.SCENE_CHANGED_FOR_PERSISTS="scene-changed-for-persists",e.SIZE_CHANGED="size-changed",e.ANCHOR_CHANGED="anchor-changed",e.COLOR_CHANGED="color-changed",e.CHILD_ADDED="child-added",e.CHILD_REMOVED="child-removed",e.PARENT_CHANGED="parent-changed",e.NODE_DESTROYED="node-destroyed",e.LAYER_CHANGED="layer-changed",e.SIBLING_ORDER_CHANGED="sibling-order-changed",e.ACTIVE_IN_HIERARCHY_CHANGED="active-in-hierarchy-changed"}(Ex||(Ex=e("NodeEventType",{})));const Nx=rl.Flags.Destroying,Mx=rl.Flags.DontDestroy,Lx=rl.Flags.Deactivating,Bx=new ie("Node");function Fx(e){return e?"string"==typeof e?Ue(e):e:(N(3804),null)}let zx=e("BaseNode",mc("cc.BaseNode")((Ox=Dx=class e extends rl{get components(){return this._components}get _persistNode(){return(this._objFlags&Mx)>0}set _persistNode(e){e?this._objFlags|=Mx:this._objFlags&=~Mx}get name(){return this._name}set name(e){this._name=e}get uuid(){return this._id}get children(){return this._children}get active(){return this._active}set active(e){if(e=!!e,this._active!==e){this._active=e;const t=this._parent;t&&t._activeInHierarchy&&u.director._nodeActivator.activateNode(this,e)}}get activeInHierarchy(){return this._activeInHierarchy}get parent(){return this._parent}set parent(e){this.setParent(e)}get scene(){return this._scene}get eventProcessor(){return this._eventProcessor}static _setScene(e){e._updateScene()}static _findComponent(e,t){const n=t,i=e._components;if(n._sealed)for(let e=0;e<i.length;++e){const n=i[e];if(n.constructor===t)return n}else for(let e=0;e<i.length;++e){const n=i[e];if(n instanceof t)return n}return null}static _findComponents(e,t,n){const i=t,s=e._components;if(i._sealed)for(let e=0;e<s.length;++e){const i=s[e];i.constructor===t&&n.push(i)}else for(let e=0;e<s.length;++e){const i=s[e];i instanceof t&&n.push(i)}}static _findChildComponent(t,n){for(let i=0;i<t.length;++i){const s=t[i];let o=e._findComponent(s,n);if(o)return o;if(s._children.length>0&&(o=e._findChildComponent(s._children,n),o))return o}return null}static _findChildComponents(t,n,i){for(let s=0;s<t.length;++s){const o=t[s];e._findComponents(o,n,i),o._children.length>0&&e._findChildComponents(o._children,n,i)}}_updateScene(){null==this._parent?C("Node %s(%s) has not attached to a scene.",this.name,this.uuid):this._scene=this._parent._scene}constructor(e){super(e),rc(this,"_parent",Ax,this),rc(this,"_children",Px,this),rc(this,"_active",wx,this),rc(this,"_components",Ix,this),rc(this,"_prefab",Rx,this),this._scene=null,this._activeInHierarchy=!1,this._id=Bx.getNewId(),this._name=void 0,this._eventProcessor=new u.NodeEventProcessor(this),this._eventMask=0,this._siblingIndex=0,this._originalSceneId="",this._registerIfAttached=void 0,this._name=void 0!==e?e:"New Node"}attr(e){be(this,e)}getParent(){return this._parent}setParent(e,t=!1){if(this._parent===e)return;const n=this._parent,i=e;if(this._parent=i,this._siblingIndex=0,this._onSetParent(n,t),this.emit&&this.emit(Ex.PARENT_CHANGED,n),n&&!(n._objFlags&Nx)){const e=n._children.indexOf(this);n._children.splice(e,1),n._updateSiblingIndex(),n.emit&&n.emit(Ex.CHILD_REMOVED,this)}i&&(i._children.push(this),this._siblingIndex=i._children.length-1,i.emit&&i.emit(Ex.CHILD_ADDED,this)),this._onHierarchyChanged(n)}getChildByUuid(e){if(!e)return x("Invalid uuid"),null;const t=this._children;for(let n=0,i=t.length;n<i;n++)if(t[n]._id===e)return t[n];return null}getChildByName(e){if(!e)return x("Invalid name"),null;const t=this._children;for(let n=0,i=t.length;n<i;n++)if(t[n]._name===e)return t[n];return null}getChildByPath(e){const t=e.split("/");let n=this;for(let e=0;e<t.length;++e){const i=t[e];if(0===i.length)continue;const s=n.children.find((e=>e.name===i));if(!s)return null;n=s}return n}addChild(e){e.setParent(this)}insertChild(e,t){e.parent=this,e.setSiblingIndex(t)}getSiblingIndex(){return this._siblingIndex}setSiblingIndex(e){if(!this._parent)return;if(this._parent._objFlags&Lx)return void N(3821);const t=this._parent._children;e=-1!==e?e:t.length-1;const n=t.indexOf(this);e!==n&&(t.splice(n,1),e<t.length?t.splice(e,0,this):t.push(this),this._parent._updateSiblingIndex(),this._onSiblingIndexChanged&&this._onSiblingIndexChanged(e))}walk(t,n){let i=1,s=null,o=null,r=0,a=e._stacks[e._stackId];a||(a=[],e._stacks.push(a)),e._stackId++,a.length=0,a[0]=this;let c=null,l=!1;for(;i;)if(i--,o=a[i],o)if(!l&&t?t(o):l&&n&&n(o),a[i]=null,l){if(c===this._parent)break;if(l=!1,s)if(r++,s[r])a[i]=s[r],i++;else if(c&&(a[i]=c,i++,l=!0,c._parent?(s=c._parent._children,r=s.indexOf(c),c=c._parent):(c=null,s=null),r<0))break}else o._children.length>0?(c=o,s=o._children,r=0,a[i]=s[r],i++):(a[i]=o,i++,l=!0);a.length=0,e._stackId--}removeFromParent(){this._parent&&this._parent.removeChild(this)}removeChild(e){this._children.indexOf(e)>-1&&(e.parent=null)}removeAllChildren(){const e=this._children;for(let t=e.length-1;t>=0;t--){const n=e[t];n&&(n.parent=null)}this._children.length=0}isChildOf(e){let t=this;do{if(t===e)return!0;t=t._parent}while(t);return!1}getComponent(t){const n=Fx(t);return n?e._findComponent(this,n):null}getComponents(t){const n=Fx(t),i=[];return n&&e._findComponents(this,n,i),i}getComponentInChildren(t){const n=Fx(t);return n?e._findChildComponent(this._children,n):null}getComponentsInChildren(t){const n=Fx(t),i=[];return n&&(e._findComponents(this,n,i),e._findChildComponents(this._children,n,i)),i}addComponent(e){let t;if("string"==typeof e){if(t=Ue(e),!t)throw u._RF.peek()&&N(3808,e),TypeError(F(3807,e))}else{if(!e)throw TypeError(F(3804));t=e}if("function"!=typeof t)throw TypeError(F(3809));if(!we(t,u.Component))throw TypeError(F(3810));const n=t._requireComponent;if(n)if(Array.isArray(n))for(let e=0;e<n.length;e++){const t=n[e];this.getComponent(t)||this.addComponent(t)}else{const e=n;this.getComponent(e)||this.addComponent(e)}const i=new t;return i.node=this,this._components.push(i),this._activeInHierarchy&&u.director._nodeActivator.activateComp(i),i}removeComponent(e){if(!e)return void N(3813);let t=null;t=e instanceof Gh?e:this.getComponent(e),t&&t.destroy()}on(e,t,n,i=!1){switch(e){case Ex.TRANSFORM_CHANGED:this._eventMask|=1}this._eventProcessor.on(e,t,n,i)}off(e,t,n,i=!1){if(this._eventProcessor.off(e,t,n,i),!this._eventProcessor.hasEventListener(e))switch(e){case Ex.TRANSFORM_CHANGED:this._eventMask&=-2}}once(e,t,n,i){this._eventProcessor.once(e,t,n,i)}emit(e,t,n,i,s,o){this._eventProcessor.emit(e,t,n,i,s,o)}dispatchEvent(e){this._eventProcessor.dispatchEvent(e)}hasEventListener(e,t,n){return this._eventProcessor.hasEventListener(e,t,n)}targetOff(e){this._eventProcessor.targetOff(e),1&this._eventMask&&!this._eventProcessor.hasEventListener(Ex.TRANSFORM_CHANGED)&&(this._eventMask&=-2)}destroy(){return!!super.destroy()&&(this.active=!1,!0)}destroyAllChildren(){const e=this._children;for(let t=0;t<e.length;++t)e[t].destroy()}_removeComponent(e){if(e){if(!(this._objFlags&Nx)){const t=this._components.indexOf(e);-1!==t?this._components.splice(t,1):e.node!==this&&N(3815)}}else N(3814)}_updateSiblingIndex(){for(let e=0;e<this._children.length;++e)this._children[e]._siblingIndex=e;this.emit(Ex.SIBLING_ORDER_CHANGED)}_onSetParent(t,n=!1){this._parent&&(null!=t&&t._scene===this._parent._scene||null==this._parent._scene||this.walk(e._setScene))}_onPostActivated(e){}_onBatchCreated(e){this._parent&&(this._siblingIndex=this._parent.children.indexOf(this))}_onPreDestroy(){this._onPreDestroyBase()}_onHierarchyChanged(e){return this._onHierarchyChangedBase(e)}_instantiate(e,t){return e||(e=u.instantiate._clone(this,this)),e._prefab,e._parent=null,e._onBatchCreated(t),e}_onHierarchyChangedBase(e){const t=this._parent;!this._persistNode||t instanceof u.Scene||u.game.removePersistRootNode(this);const n=this._active&&!(!t||!t._activeInHierarchy);this._activeInHierarchy!==n&&u.director._nodeActivator.activateNode(this,n)}_onPreDestroyBase(){this._objFlags|=Nx;const e=this._parent,t=!!e&&0!=(e._objFlags&Nx);if(this._persistNode&&u.game.removePersistRootNode(this),!t&&e){this.emit(Ex.PARENT_CHANGED,this);const t=e._children.indexOf(this);e._children.splice(t,1),this._siblingIndex=0,e._updateSiblingIndex(),e.emit&&e.emit(Ex.CHILD_REMOVED,this)}this.emit(Ex.NODE_DESTROYED,this),this._eventProcessor.destroy();const n=this._children;for(let e=0;e<n.length;++e)n[e]._destroyImmediate();const i=this._components;for(let e=0;e<i.length;++e)i[e]._destroyImmediate();return t}},Dx.idGenerator=Bx,Dx._stacks=[[]],Dx._stackId=0,ac((bx=Ox).prototype,"_persistNode",[xc],Object.getOwnPropertyDescriptor(bx.prototype,"_persistNode"),bx.prototype),ac(bx.prototype,"name",[Lc],Object.getOwnPropertyDescriptor(bx.prototype,"name"),bx.prototype),ac(bx.prototype,"children",[Lc],Object.getOwnPropertyDescriptor(bx.prototype,"children"),bx.prototype),ac(bx.prototype,"active",[Lc],Object.getOwnPropertyDescriptor(bx.prototype,"active"),bx.prototype),ac(bx.prototype,"activeInHierarchy",[Lc],Object.getOwnPropertyDescriptor(bx.prototype,"activeInHierarchy"),bx.prototype),ac(bx.prototype,"parent",[Lc],Object.getOwnPropertyDescriptor(bx.prototype,"parent"),bx.prototype),Ax=ac(bx.prototype,"_parent",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Px=ac(bx.prototype,"_children",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),wx=ac(bx.prototype,"_active",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Ix=ac(bx.prototype,"_components",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Rx=ac(bx.prototype,"_prefab",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Tx=bx))||Tx);var Ux,Gx,Vx,Hx,kx,jx,Wx,qx,Xx,Yx,Kx;u._BaseNode=zx;const $x=new gn,Qx=new Tn,Jx=new Tn,Zx=new Tn,eS=new Sn,tS=new Sn,nS=new On,iS=[],sS=[],oS=[];class rS{constructor(){this._chunks=[],this._freelists=[],this._createChunk()}alloc(){const e=this._freelists.length;for(let t=0;t<e;++t)if(this._freelists[t].length)return this._createView(t);return this._createChunk(),this._createView(e)}free(e,t){const n=this._freelists.length;for(let i=0;i<n;++i)if(this._chunks[i]===e)return void this._freelists[i].push(t)}clear(){const e=this._chunks.length;for(let t=0;t<e;++t)this._chunks[t].fill(0)}_createChunk(){this._chunks.push(new Uint32Array(rS.CAPACITY_PER_CHUNK));const e=[];for(let t=rS.CAPACITY_PER_CHUNK-1;t>=0;t--)e.push(t);this._freelists.push(e)}_createView(e){return oS[0]=this._chunks[e],oS[1]=this._freelists[e].pop(),oS}}rS.CAPACITY_PER_CHUNK=256;const aS=new rS,cS=Symbol("ReserveContentsForAllSyncablePrefab");let lS=e("Node",(Ux=mc("cc.Node"),Gx=Zc(gn),Ux((Kx=Yx=class e extends zx{get _dirtyFlags(){return this._nativeDirtyFlag[0]}set _dirtyFlags(e){this._dirtyFlagsPri=e,this._nativeDirtyFlag[0]=e}_init(){const[e,t]=aS.alloc();this._hasChangedFlagsChunk=e,this._hasChangedFlagsOffset=t;const n=new Uint32Array(e.buffer,e.byteOffset+4*t,1);this._hasChangedFlags=n,this._nodeHandle=ea.alloc(),this._pos=new gn(ea.getTypedArray(this._nodeHandle,Qr.WORLD_POSITION)),this._rot=new Tn(ea.getTypedArray(this._nodeHandle,Qr.WORLD_ROTATION)),this._scale=new gn(ea.getTypedArray(this._nodeHandle,Qr.WORLD_SCALE)),this._lpos=new gn(ea.getTypedArray(this._nodeHandle,Qr.LOCAL_POSITION)),this._lrot=new Tn(ea.getTypedArray(this._nodeHandle,Qr.LOCAL_ROTATION)),this._lscale=new gn(ea.getTypedArray(this._nodeHandle,Qr.LOCAL_SCALE)),this._mat=new On(ea.getTypedArray(this._nodeHandle,Qr.WORLD_MATRIX)),this._nativeLayer=ea.getTypedArray(this._nodeHandle,Qr.LAYER),this._nativeDirtyFlag=ea.getTypedArray(this._nodeHandle,Qr.DIRTY_FLAG),this._scale.set(1,1,1),this._lscale.set(1,1,1),this._nativeLayer[0]=this._layer,this._nativeObj=new la,this._nativeObj.initWithData(ea.getBuffer(this._nodeHandle),n,sS)}constructor(e){super(e),this._uiProps=new Cx(this),this._static=!1,rc(this,"_lpos",kx,this),rc(this,"_lrot",jx,this),rc(this,"_lscale",Wx,this),rc(this,"_layer",qx,this),rc(this,"_euler",Xx,this),this._dirtyFlagsPri=Iv.NONE,this._eulerDirty=!1,this._nodeHandle=0,this._init()}static isNode(t){return t instanceof e&&(t.constructor===e||!(t instanceof u.Scene))}_onPreDestroy(){const e=this._onPreDestroyBase();return this._nodeHandle&&(ea.free(this._nodeHandle),this._nodeHandle=0),this._nativeObj=null,aS.free(this._hasChangedFlagsChunk,this._hasChangedFlagsOffset),e}get native(){return this._nativeObj}get position(){return this._lpos}set position(e){this.setPosition(e)}get worldPosition(){return this.updateWorldTransform(),this._pos}set worldPosition(e){this.setWorldPosition(e)}get rotation(){return this._lrot}set rotation(e){this.setRotation(e)}set eulerAngles(e){this.setRotationFromEuler(e.x,e.y,e.z)}get eulerAngles(){return this._eulerDirty&&(Tn.toEuler(this._euler,this._lrot),this._eulerDirty=!1),this._euler}get angle(){return this._euler.z}set angle(e){gn.set(this._euler,0,0,e),Tn.fromAngleZ(this._lrot,e),this._eulerDirty=!1,this.invalidateChildren(Iv.ROTATION),1&this._eventMask&&this.emit(Ex.TRANSFORM_CHANGED,Iv.ROTATION)}get worldRotation(){return this.updateWorldTransform(),this._rot}set worldRotation(e){this.setWorldRotation(e)}get scale(){return this._lscale}set scale(e){this.setScale(e)}get worldScale(){return this.updateWorldTransform(),this._scale}set worldScale(e){this.setWorldScale(e)}set matrix(e){On.toRTS(e,this._lrot,this._lpos,this._lscale),this.invalidateChildren(Iv.TRS),this._eulerDirty=!0,1&this._eventMask&&this.emit(Ex.TRANSFORM_CHANGED,Iv.TRS)}get worldMatrix(){return this.updateWorldTransform(),this._mat}get forward(){return gn.transformQuat(new gn,gn.FORWARD,this.worldRotation)}set forward(e){const t=e.length();gn.multiplyScalar($x,e,-1/t),Tn.fromViewUp(Qx,$x),this.setWorldRotation(Qx)}get up(){return gn.transformQuat(new gn,gn.UP,this.worldRotation)}get right(){return gn.transformQuat(new gn,gn.RIGHT,this.worldRotation)}set layer(e){this._layer=e,this._nativeLayer[0]=this._layer,this._uiProps&&this._uiProps.uiComp&&(this._uiProps.uiComp.setNodeDirty(),this._uiProps.uiComp.markForUpdateRenderData()),this.emit(Ex.LAYER_CHANGED,this._layer)}get layer(){return this._layer}get hasChangedFlags(){return this._hasChangedFlagsChunk[this._hasChangedFlagsOffset]}set hasChangedFlags(e){this._hasChangedFlagsChunk[this._hasChangedFlagsOffset]=e}[Qh](e,t){e.writeThis()}setParent(e,t=!1){t&&this.updateWorldTransform(),super.setParent(e,t),this._nativeObj.setParent(this.parent?this.parent.native:null)}_onSetParent(e,t){if(super._onSetParent(e,t),t){const e=this._parent;e?(e.updateWorldTransform(),qt(On.determinant(e._mat),0,jt)?(D(14200),this._dirtyFlags|=Iv.TRS,this.updateWorldTransform()):(On.multiply(nS,On.invert(nS,e._mat),this._mat),On.toRTS(nS,this._lrot,this._lpos,this._lscale))):(gn.copy(this._lpos,this._pos),Tn.copy(this._lrot,this._rot),gn.copy(this._lscale,this._scale)),this._eulerDirty=!0}this.invalidateChildren(Iv.TRS)}_onHierarchyChanged(e){this.eventProcessor.reattach(),super._onHierarchyChangedBase(e)}_onBatchCreated(e){var t;this._nativeLayer[0]=this._layer,this._nativeObj.setParent(null===(t=this.parent)||void 0===t?void 0:t.native),this.hasChangedFlags=Iv.TRS,this._dirtyFlags|=Iv.TRS;const n=this._children.length;for(let t=0;t<n;++t)this._children[t]._siblingIndex=t,this._children[t]._onBatchCreated(e)}_onBeforeSerialize(){this.eulerAngles}_onPostActivated(e){e?(this._eventProcessor.setEnabled(!0),this.invalidateChildren(Iv.TRS),this._uiProps&&this._uiProps.uiComp&&(this._uiProps.uiComp.setNodeDirty(),this._uiProps.uiComp.setTextureDirty(),this._uiProps.uiComp.markForUpdateRenderData())):this._eventProcessor.setEnabled(!1)}translate(e,t){const n=t||wv.LOCAL;if(n===wv.LOCAL)gn.transformQuat($x,e,this._lrot),this._lpos.x+=$x.x,this._lpos.y+=$x.y,this._lpos.z+=$x.z;else if(n===wv.WORLD)if(this._parent){Tn.invert(Qx,this._parent.worldRotation),gn.transformQuat($x,e,Qx);const t=this.worldScale;this._lpos.x+=$x.x/t.x,this._lpos.y+=$x.y/t.y,this._lpos.z+=$x.z/t.z}else this._lpos.x+=e.x,this._lpos.y+=e.y,this._lpos.z+=e.z;this.invalidateChildren(Iv.POSITION),1&this._eventMask&&this.emit(Ex.TRANSFORM_CHANGED,Iv.POSITION)}rotate(e,t){const n=t||wv.LOCAL;if(Tn.normalize(Qx,e),n===wv.LOCAL)Tn.multiply(this._lrot,this._lrot,Qx);else if(n===wv.WORLD){const e=this.worldRotation;Tn.multiply(Jx,Qx,e),Tn.invert(Qx,e),Tn.multiply(Jx,Qx,Jx),Tn.multiply(this._lrot,this._lrot,Jx)}this._eulerDirty=!0,this.invalidateChildren(Iv.ROTATION),1&this._eventMask&&this.emit(Ex.TRANSFORM_CHANGED,Iv.ROTATION)}lookAt(e,t){this.getWorldPosition($x),gn.subtract($x,$x,e),gn.normalize($x,$x),Tn.fromViewUp(Qx,$x,t),this.setWorldRotation(Qx)}_setDirtyNode(e,t){iS[e]=t,sS[e]=t.native}invalidateChildren(e){let t,n,i,s=0,o=0,r=0,a=0,c=0;const l=e|Iv.POSITION;for(iS[0]=this,sS[0]=this.native;s>=0;){if(t=iS[s--],c=t._hasChangedFlags[0],a=t._dirtyFlagsPri,t.isValid&&(a&c&e)!==e)for(a|=e,t._dirtyFlagsPri=a,t._nativeDirtyFlag[0]=a,t._hasChangedFlags[0]=c|e,i=t._children,r=i.length,o=0;o<r;o++)n=i[o],iS[++s]=n,sS[s]=n.native;e=l}}updateWorldTransform(){if(!this._dirtyFlags)return;let e,t=this,n=0;for(;t&&t._dirtyFlags;)this._setDirtyNode(n++,t),t=t._parent;let i=0;for(;n;)e=iS[--n],i|=e._dirtyFlags,t?(i&Iv.POSITION&&(gn.transformMat4(e._pos,e._lpos,t._mat),e._mat.m12=e._pos.x,e._mat.m13=e._pos.y,e._mat.m14=e._pos.z),i&Iv.RS&&(On.fromRTS(e._mat,e._lrot,e._lpos,e._lscale),On.multiply(e._mat,t._mat,e._mat),i&Iv.ROTATION&&Tn.multiply(e._rot,t._rot,e._lrot),Sn.fromQuat(eS,Tn.conjugate(Zx,e._rot)),Sn.multiplyMat4(eS,eS,e._mat),e._scale.x=eS.m00,e._scale.y=eS.m04,e._scale.z=eS.m08)):(i&Iv.POSITION&&(gn.copy(e._pos,e._lpos),e._mat.m12=e._pos.x,e._mat.m13=e._pos.y,e._mat.m14=e._pos.z),i&Iv.RS&&(i&Iv.ROTATION&&Tn.copy(e._rot,e._lrot),i&Iv.SCALE&&(gn.copy(e._scale,e._lscale),On.fromRTS(e._mat,e._rot,e._pos,e._scale)))),e._dirtyFlags=Iv.NONE,t=e}setPosition(e,t,n){void 0===t&&void 0===n?gn.copy(this._lpos,e):void 0===n?gn.set(this._lpos,e,t,this._lpos.z):gn.set(this._lpos,e,t,n),this.invalidateChildren(Iv.POSITION),1&this._eventMask&&this.emit(Ex.TRANSFORM_CHANGED,Iv.POSITION)}getPosition(e){return e?gn.set(e,this._lpos.x,this._lpos.y,this._lpos.z):gn.copy(new gn,this._lpos)}setRotation(e,t,n,i){void 0===t||void 0===n||void 0===i?Tn.copy(this._lrot,e):Tn.set(this._lrot,e,t,n,i),this._eulerDirty=!0,this.invalidateChildren(Iv.ROTATION),1&this._eventMask&&this.emit(Ex.TRANSFORM_CHANGED,Iv.ROTATION)}setRotationFromEuler(e,t,n){const i=void 0===n?this._euler.z:n;void 0===t?(gn.copy(this._euler,e),Tn.fromEuler(this._lrot,e.x,e.y,e.z)):(gn.set(this._euler,e,t,i),Tn.fromEuler(this._lrot,e,t,i)),this._eulerDirty=!1,this.invalidateChildren(Iv.ROTATION),1&this._eventMask&&this.emit(Ex.TRANSFORM_CHANGED,Iv.ROTATION)}getRotation(e){return e?Tn.set(e,this._lrot.x,this._lrot.y,this._lrot.z,this._lrot.w):Tn.copy(new Tn,this._lrot)}setScale(e,t,n){void 0===t&&void 0===n?gn.copy(this._lscale,e):void 0===n?gn.set(this._lscale,e,t,this._lscale.z):gn.set(this._lscale,e,t,n),this.invalidateChildren(Iv.SCALE),1&this._eventMask&&this.emit(Ex.TRANSFORM_CHANGED,Iv.SCALE)}getScale(e){return e?gn.set(e,this._lscale.x,this._lscale.y,this._lscale.z):gn.copy(new gn,this._lscale)}inverseTransformPoint(e,t){gn.copy(e,t);let n=this,i=0;for(;n._parent;)this._setDirtyNode(i++,n),n=n._parent;for(;i>=0;)gn.transformInverseRTS(e,e,n._lrot,n._lpos,n._lscale),n=iS[--i];return e}setWorldPosition(e,t,n){void 0===t||void 0===n?gn.copy(this._pos,e):gn.set(this._pos,e,t,n);const i=this._parent,s=this._lpos;i?(i.updateWorldTransform(),gn.transformMat4(s,this._pos,On.invert(nS,i._mat))):gn.copy(s,this._pos),this.invalidateChildren(Iv.POSITION),1&this._eventMask&&this.emit(Ex.TRANSFORM_CHANGED,Iv.POSITION)}getWorldPosition(e){return this.updateWorldTransform(),e?gn.copy(e,this._pos):gn.copy(new gn,this._pos)}setWorldRotation(e,t,n,i){void 0===t||void 0===n||void 0===i?Tn.copy(this._rot,e):Tn.set(this._rot,e,t,n,i),this._parent?(this._parent.updateWorldTransform(),Tn.multiply(this._lrot,Tn.conjugate(this._lrot,this._parent._rot),this._rot)):Tn.copy(this._lrot,this._rot),this._eulerDirty=!0,this.invalidateChildren(Iv.ROTATION),1&this._eventMask&&this.emit(Ex.TRANSFORM_CHANGED,Iv.ROTATION)}setWorldRotationFromEuler(e,t,n){Tn.fromEuler(this._rot,e,t,n),this._parent?(this._parent.updateWorldTransform(),Tn.multiply(this._lrot,Tn.conjugate(this._lrot,this._parent._rot),this._rot)):Tn.copy(this._lrot,this._rot),this._eulerDirty=!0,this.invalidateChildren(Iv.ROTATION),1&this._eventMask&&this.emit(Ex.TRANSFORM_CHANGED,Iv.ROTATION)}getWorldRotation(e){return this.updateWorldTransform(),e?Tn.copy(e,this._rot):Tn.copy(new Tn,this._rot)}setWorldScale(e,t,n){void 0===t||void 0===n?gn.copy(this._scale,e):gn.set(this._scale,e,t,n);const i=this._parent;i?(i.updateWorldTransform(),Sn.fromQuat(eS,Tn.conjugate(Zx,i._rot)),Sn.multiplyMat4(eS,eS,i._mat),tS.m00=this._scale.x,tS.m04=this._scale.y,tS.m08=this._scale.z,Sn.multiply(eS,tS,Sn.invert(eS,eS)),this._lscale.x=gn.set($x,eS.m00,eS.m01,eS.m02).length(),this._lscale.y=gn.set($x,eS.m03,eS.m04,eS.m05).length(),this._lscale.z=gn.set($x,eS.m06,eS.m07,eS.m08).length()):gn.copy(this._lscale,this._scale),this.invalidateChildren(Iv.SCALE),1&this._eventMask&&this.emit(Ex.TRANSFORM_CHANGED,Iv.SCALE)}getWorldScale(e){return this.updateWorldTransform(),e?gn.copy(e,this._scale):gn.copy(new gn,this._scale)}getWorldMatrix(e){this.updateWorldTransform();const t=e||new On;return On.copy(t,this._mat)}getWorldRS(e){this.updateWorldTransform();const t=e||new On;return On.copy(t,this._mat),t.m12=0,t.m13=0,t.m14=0,t}getWorldRT(e){this.updateWorldTransform();const t=e||new On;return On.fromRT(t,this._rot,this._pos)}setRTS(e,t,n){let i=0;e&&(i|=Iv.ROTATION,void 0!==e.w?(Tn.copy(this._lrot,e),this._eulerDirty=!0):(gn.copy(this._euler,e),Tn.fromEuler(this._lrot,e.x,e.y,e.z),this._eulerDirty=!1)),t&&(gn.copy(this._lpos,t),i|=Iv.POSITION),n&&(gn.copy(this._lscale,n),i|=Iv.SCALE),i&&(this.invalidateChildren(i),1&this._eventMask&&this.emit(Ex.TRANSFORM_CHANGED,i))}pauseSystemEvents(e){this._eventProcessor.setEnabled(!1,e)}resumeSystemEvents(e){this._eventProcessor.setEnabled(!0,e)}static resetHasChangedFlags(){aS.clear()}static clearNodeArray(){e.ClearFrame<e.ClearRound?e.ClearFrame++:(e.ClearFrame=0,iS.length=0,sS.length=0)}getPathInHierarchy(){let t=this.name,n=this.parent;for(;n&&n instanceof e;)t=`${n.name}/${t}`,n=n.parent;return t}},Yx.EventType=Ex,Yx.NodeSpace=wv,Yx.TransformDirtyBit=Iv,Yx.TransformBit=Iv,Yx.reserveContentsForAllSyncablePrefabTag=cS,Yx.ClearFrame=0,Yx.ClearRound=1e3,kx=ac((Hx=Kx).prototype,"_lpos",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn}}),jx=ac(Hx.prototype,"_lrot",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Tn}}),Wx=ac(Hx.prototype,"_lscale",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn(1,1,1)}}),qx=ac(Hx.prototype,"_layer",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Zd.Enum.DEFAULT}}),Xx=ac(Hx.prototype,"_euler",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn}}),ac(Hx.prototype,"eulerAngles",[Gx],Object.getOwnPropertyDescriptor(Hx.prototype,"eulerAngles"),Hx.prototype),ac(Hx.prototype,"angle",[Lc],Object.getOwnPropertyDescriptor(Hx.prototype,"angle"),Hx.prototype),ac(Hx.prototype,"layer",[Lc],Object.getOwnPropertyDescriptor(Hx.prototype,"layer"),Hx.prototype),Vx=Hx))||Vx));var hS,uS,_S,dS,pS,fS,mS,gS,vS,yS,xS,SS,CS,ES,TS,bS,AS,PS,wS,IS,RS,DS,OS,NS,MS,LS,BS,FS,zS,US,GS,VS,HS,kS,jS,WS,qS,XS,YS,KS,$S,QS,JS,ZS,eC,tC,nC,iC,sC,oC,rC,aC,cC,lC,hC,uC,_C,dC,pC,fC,mC,gC,vC,yC,xC;u.Node=lS;let SC=mc("cc.TargetInfo")((_S=ac((uS=class{constructor(){rc(this,"localID",_S,this)}}).prototype,"localID",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),hS=uS))||hS,CC=(dS=mc("cc.TargetOverrideInfo"),pS=Zc(rl),fS=Zc(SC),mS=Zc(lS),gS=Zc(SC),dS((xS=ac((yS=class{constructor(){rc(this,"source",xS,this),rc(this,"sourceInfo",SS,this),rc(this,"propertyPath",CS,this),rc(this,"target",ES,this),rc(this,"targetInfo",TS,this)}}).prototype,"source",[Tc,pS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),SS=ac(yS.prototype,"sourceInfo",[Tc,fS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),CS=ac(yS.prototype,"propertyPath",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),ES=ac(yS.prototype,"target",[Tc,mS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),TS=ac(yS.prototype,"targetInfo",[Tc,gS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),vS=yS))||vS),EC=mc("cc.CompPrefabInfo")((PS=ac((AS=class{constructor(){rc(this,"fileId",PS,this)}}).prototype,"fileId",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),bS=AS))||bS,TC=(wS=mc("CCPropertyOverrideInfo"),IS=Zc(SC),wS((OS=ac((DS=class{constructor(){rc(this,"targetInfo",OS,this),rc(this,"propertyPath",NS,this),rc(this,"value",MS,this)}isTarget(e,t){}}).prototype,"targetInfo",[Tc,IS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),NS=ac(DS.prototype,"propertyPath",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),MS=ac(DS.prototype,"value",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),RS=DS))||RS),bC=(LS=mc("cc.MountedChildrenInfo"),BS=Zc(SC),FS=Zc([lS]),LS((GS=ac((US=class{constructor(){rc(this,"targetInfo",GS,this),rc(this,"nodes",VS,this)}isTarget(e){}}).prototype,"targetInfo",[Tc,BS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),VS=ac(US.prototype,"nodes",[Tc,FS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),zS=US))||zS),AC=(HS=mc("cc.MountedComponentsInfo"),kS=Zc(SC),jS=Zc([Gh]),HS((XS=ac((qS=class{constructor(){rc(this,"targetInfo",XS,this),rc(this,"components",YS,this)}isTarget(e){}}).prototype,"targetInfo",[Tc,kS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),YS=ac(qS.prototype,"components",[Tc,jS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),WS=qS))||WS),PC=(KS=mc("cc.PrefabInstance"),$S=Zc(lS),QS=Zc([bC]),JS=Zc([AC]),ZS=Zc([TC]),eC=Zc([SC]),KS((iC=ac((nC=class{constructor(){rc(this,"fileId",iC,this),rc(this,"prefabRootNode",sC,this),rc(this,"mountedChildren",oC,this),rc(this,"mountedComponents",rC,this),rc(this,"propertyOverrides",aC,this),rc(this,"removedComponents",cC,this),this.targetMap={}}findPropertyOverride(e,t){}removePropertyOverride(e,t){}}).prototype,"fileId",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),sC=ac(nC.prototype,"prefabRootNode",[Tc,$S],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),oC=ac(nC.prototype,"mountedChildren",[Tc,QS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),rC=ac(nC.prototype,"mountedComponents",[Tc,JS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),aC=ac(nC.prototype,"propertyOverrides",[Tc,ZS],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),cC=ac(nC.prototype,"removedComponents",[Tc,eC],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),tC=nC))||tC),wC=(lC=mc("cc.PrefabInfo"),hC=Zc(lS),uC=Zc(PC),_C=Zc([CC]),lC((fC=ac((pC=class{constructor(){rc(this,"root",fC,this),rc(this,"asset",mC,this),rc(this,"fileId",gC,this),rc(this,"instance",vC,this),rc(this,"targetOverrides",yC,this),rc(this,"nestedPrefabInstanceRoots",xC,this)}}).prototype,"root",[Tc,hC],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),mC=ac(pC.prototype,"asset",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),gC=ac(pC.prototype,"fileId",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),vC=ac(pC.prototype,"instance",[Tc,uC],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),yC=ac(pC.prototype,"targetOverrides",[Tc,_C],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),xC=ac(pC.prototype,"nestedPrefabInstanceRoots",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),dC=pC))||dC);function IC(e){const t=e._prefab;if(!t)return;if(!t.instance)return;if(!t.asset)return N(3701,e.name),void(t.instance=void 0);const n=e._objFlags,i=e._parent,s=e._id,o=e._prefab;e[tl],u.game._isCloning=!0,t.asset._doInstantiate(e),u.game._isCloning=!1,e._objFlags=n,e._parent=i,e._id=s,e._prefab&&(e._prefab.instance=null==o?void 0:o.instance)}function RC(e,t,n){var i;if(!t)return;if(!e)return;let s=t;const o=null===(i=e._prefab)||void 0===i?void 0:i.instance;!n&&o&&(t[o.fileId]={},s=t[o.fileId]);const r=e._prefab;r&&(s[r.fileId]=e);const a=e.components;for(let e=0;e<a.length;e++){const t=a[e];t.__prefab&&(s[t.__prefab.fileId]=t)}for(let t=0;t<e.children.length;t++)RC(e.children[t],s,!1)}function DC(e,t){if(!e)return null;let n=null,i=t;for(let t=0;t<e.length;t++){if(!i)return null;i=i[e[t]]}return n=i,n}function OC(e,t,n){if(t)for(let e=0;e<t.length;e++){const i=t[e];if(i&&i.targetInfo){const e=DC(i.targetInfo.localID,n);if(!e)continue;let t=n;const s=i.targetInfo.localID;if(s.length>0)for(let e=0;e<s.length-1;e++)t=t[s[e]];if(i.nodes)for(let n=0;n<i.nodes.length;n++){const s=i.nodes[n];s&&!e._children.includes(s)&&(e._children.push(s),s._parent=e,RC(s,t,!1),s._siblingIndex=e._children.length-1,FC(s,!0))}}}}function NC(e,t,n){if(t)for(let e=0;e<t.length;e++){const i=t[e];if(i&&i.targetInfo){const e=DC(i.targetInfo.localID,n);if(!e)continue;if(i.components)for(let t=0;t<i.components.length;t++){const n=i.components[t];n&&(n.node=e,e._components.push(n))}}}}function MC(e,t,n){if(t)for(let e=0;e<t.length;e++){const i=t[e];if(i){const e=DC(i.localID,n);if(!e||!e.node)continue;const t=e.node.components.indexOf(e);t>=0&&e.node._components.splice(t,1)}}}function LC(e,t,n){if(t.length<=0)return;let i=null;for(let e=0;e<t.length;e++){const s=t[e];if(s&&s.targetInfo){if(i=DC(s.targetInfo.localID,n),!i)continue;let e=i;const t=s.propertyPath.slice();if(t.length>0){const n=t.pop();if(!n)continue;for(let n=0;n<t.length&&(e=e[t[n]],e);n++);if(!e)continue;if(Array.isArray(e))if("length"===n)e[n]=s.value;else{const t=Number.parseInt(n);Number.isInteger(t)&&t<e.length&&(e[n]=s.value)}else e[n]instanceof $e?e[n].set(s.value):e[n]=s.value}}}}function BC(e){var t;const n=null===(t=e._prefab)||void 0===t?void 0:t.targetOverrides;if(n)for(let e=0;e<n.length;e++){var i,s;const t=n[e];let a=t.source;const c=t.sourceInfo;if(c){var o,r;const e=null===(o=t.source)||void 0===o||null===(r=o._prefab)||void 0===r?void 0:r.instance;e&&e.targetMap&&(a=DC(c.localID,e.targetMap))}if(!a)continue;let l=null;const h=t.targetInfo;if(!h)continue;const u=null===(i=t.target)||void 0===i||null===(s=i._prefab)||void 0===s?void 0:s.instance;if(!u||!u.targetMap)continue;if(l=DC(h.localID,u.targetMap),!l)continue;const _=t.propertyPath.slice();let d=a;if(_.length>0){const e=_.pop();if(!e)return;for(let e=0;e<_.length&&(d=d[_[e]],d);e++);if(!d)continue;d[e]=l}}}function FC(e,t=!1){const n=e._prefab,i=null==n?void 0:n.instance;if(i){IC(e);const t={};i.targetMap=t,RC(e,t,!0),OC(0,i.mountedChildren,t),MC(0,i.removedComponents,t),NC(0,i.mountedComponents,t),LC(0,i.propertyOverrides,t)}t&&e&&e.children&&e.children.forEach((e=>{FC(e,!0)}))}function zC(e){const t=e._prefab;t&&t.nestedPrefabInstanceRoots&&t.nestedPrefabInstanceRoots.forEach((e=>{FC(e)}))}u._PrefabInfo=wC;var UC,GC,VC,HC,kC,jC,WC,qC=Object.freeze({__proto__:null,TargetInfo:SC,TargetOverrideInfo:CC,CompPrefabInfo:EC,PropertyOverrideInfo:TC,MountedChildrenInfo:bC,MountedComponentsInfo:AC,PrefabInstance:PC,PrefabInfo:wC,createNodeWithPrefab:IC,generateTargetMap:RC,getTarget:DC,applyMountedChildren:OC,applyMountedComponents:NC,applyRemovedComponents:MC,applyPropertyOverrides:LC,applyTargetOverrides:BC,expandPrefabInstanceNode:FC,expandNestedPrefabInstanceNode:zC});const XC=qe({AUTO:0,SINGLE_INSTANCE:1,MULTI_INSTANCE:2});let YC=e("Prefab",mc("cc.Prefab")((WC=jC=class e extends xh{constructor(){super(),rc(this,"data",VC,this),rc(this,"optimizationPolicy",HC,this),rc(this,"persistent",kC,this),this._createFunction=void 0,this._instantiatedTimes=void 0,this._createFunction=null,this._instantiatedTimes=0}createNode(e){const t=u.instantiate(this);t.name=this.name,e(null,t)}compileCreateFunction(){this._createFunction=function(e){const t=e instanceof u._BaseNode&&e;return new xx(e,t).result}(this.data)}_doInstantiate(e){return this.data._prefab||D(3700),this._createFunction||this.compileCreateFunction(),this._createFunction(e)}_instantiate(){let t,n=!1;return n=this.optimizationPolicy!==XC.SINGLE_INSTANCE&&(this.optimizationPolicy===XC.MULTI_INSTANCE||this._instantiatedTimes+1>=e.OptimizationPolicyThreshold),n?(t=this._doInstantiate(),this.data._instantiate(t)):t=this.data._instantiate(),++this._instantiatedTimes,t}initDefault(e){super.initDefault(e),this.data=new lS,this.data.name="(Missing Node)";const t=new u._PrefabInfo;t.asset=this,t.root=this.data,this.data._prefab=t}validate(){return!!this.data}onLoaded(){const e=this.data;zC(e),BC(e)}},jC.OptimizationPolicy=XC,jC.OptimizationPolicyThreshold=3,VC=ac((GC=WC).prototype,"data",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),HC=ac(GC.prototype,"optimizationPolicy",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return XC.AUTO}}),kC=ac(GC.prototype,"persistent",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),UC=GC))||UC);var KC,$C,QC,JC,ZC,eE;ke.value(YC,"_utils",qC),u.Prefab=YC,me(u,"cc._Prefab","Prefab"),e("PrefabLink",(KC=mc("cc.PrefabLink"),$C=Zc(YC),QC=Bc(),KC((eE=ac((ZC=class extends Gh{constructor(...e){super(...e),rc(this,"prefab",eE,this)}}).prototype,"prefab",[$C,Tc,QC],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),JC=ZC))||JC));const tE=new gn;function nE(e,t,n,i){i||(i=new gn),e.convertToUINode(t,n,i);const s=n.position;return i.add(s),i}function iE(e,t,n){return n||(n=new gn),e.worldToScreen(t,n),n.x/=u.view.getScaleX(),n.y/=u.view.getScaleY(),n}const sE=e("convertUtils",{WorldNode3DToLocalNodeUI:nE,WorldNode3DToWorldNodeUI:iE});var oE;u.pipelineUtils=sE,V(u.pipelineUtils,"cc.pipelineUtils",[{name:"WorldNode3DToLocalNodeUI",newName:"convertToUINode",targetName:"cc.Camera.prototype",customFunction(...e){const t=e[0],n=e[3]||tE;return t.convertToUINode(e[1],e[2],n),n.add(e[2].position),e[3]||n.clone()}}]);const rE=new Ss;rE.format=ti.RGBA8;const aE=new Cs;aE.format=ti.DEPTH_STENCIL;const cE=new bs([rE],aE),lE={width:1,height:1,renderPassInfo:cE};let hE=e("RenderTexture",mc("cc.RenderTexture")(oE=class extends sm{constructor(...e){super(...e),this._window=null}get window(){return this._window}initialize(e){this._name=e.name||"",this._width=e.width,this._height=e.height,this._initWindow(e)}reset(e){this.initialize(e)}destroy(){if(this._window){const e=u.director.root;null==e||e.destroyWindow(this._window),this._window=null}return super.destroy()}resize(e,t){this._width=Math.floor(Xt(e,1,2048)),this._height=Math.floor(Xt(t,1,2048)),this._window&&this._window.resize(this._width,this._height),this.emit("resize",this._window)}_serialize(e){return{}}_deserialize(e,t){const n=e;this._width=n.w,this._height=n.h,this._name=n.n,super._deserialize(n.base,t)}getGFXTexture(){return this._window&&this._window.framebuffer.colorTextures[0]}onLoaded(){this._initWindow()}_initWindow(e){const t=u.director.root;lE.title=this._name,lE.width=this._width,lE.height=this._height,lE.renderPassInfo=e&&e.passInfo?e.passInfo:cE,rE.barrier=t.device.getGeneralBarrier(new As(Ti.FRAGMENT_SHADER_READ_TEXTURE,Ti.FRAGMENT_SHADER_READ_TEXTURE)),this._window?(this._window.destroy(),this._window.initialize(t.device,lE)):this._window=t.createWindow(lE)}initDefault(e){super.initDefault(e),this._width=this._height=1,this._initWindow()}validate(){return this.width>=1&&this.width<=2048&&this.height>=1&&this.height<=2048}readPixels(e=0,t=0,n,i,s){n=n||this.width,i=i||this.height;const o=this.getGFXTexture();if(!o)return N(7606),null;const r=4*n*i;if(void 0===s)s=new Uint8Array(r);else if(s.length<r)return N(7607,r),null;const a=this._getGFXDevice(),c=[],l=[],h=new Yi;return h.texOffset.x=e,h.texOffset.y=t,h.texExtent.width=n,h.texExtent.height=i,l.push(h),c.push(s),null==a||a.copyTextureToBuffers(o,c,l),s}})||oE);var uE,_E;u.RenderTexture=hE,H(sm.prototype,"TextureBase.prototype",[{name:"hasPremultipliedAlpha"},{name:"setPremultiplyAlpha"},{name:"setFlipY"}]),V(hE.prototype,"RenderTexture.prototype",[{name:"getGFXWindow",customFunction(){return this._window}}]);let dE=e("BufferAsset",mc("cc.BufferAsset")((ac((_E=class extends xh{constructor(...e){super(...e),this._buffer=null}get _nativeAsset(){return this._buffer}set _nativeAsset(e){e instanceof ArrayBuffer?this._buffer=e:this._buffer=e.buffer}buffer(){return this._buffer}validate(){return!!this.buffer}}).prototype,"_nativeAsset",[el],Object.getOwnPropertyDescriptor(_E.prototype,"_nativeAsset"),_E.prototype),uE=_E))||uE);u.BufferAsset=dE;const pE={[ni.UNORM]:"Uint",[ni.SNORM]:"Int",[ni.UINT]:"Uint",[ni.INT]:"Int",[ni.UFLOAT]:"Float",[ni.FLOAT]:"Float",default:"Uint"};function fE(e){return`${pE[e.type]||pE.default}${e.size/e.count*8}`}function mE(e,t,n=ti.R32F,i=0,s=0){const o=Hs[n];s||(s=o.size);const r=`set${fE(o)}`,a=o.size/o.count,c=Math.floor(t.length/o.count),l=$h.isLittleEndian;for(let n=0;n<c;++n){const c=i+s*n;for(let i=0;i<o.count;++i){const s=c+a*i;e[r](s,t[o.count*n+i],l)}}}function gE(e,t=ti.R32F,n=0,i=e.byteLength-n,s=0,o=[]){const r=Hs[t];s||(s=r.size);const a=`get${fE(r)}`,c=r.size/r.count,l=Math.floor(i/s),h=$h.isLittleEndian;for(let t=0;t<l;++t){const i=n+s*t;for(let n=0;n<r.count;++n){const s=i+c*n;o[r.count*t+n]=e[a](s,h)}}return o}function vE(e,t,n=ti.R32F,i=0,s=e.byteLength-i,o=0,r){r||(r=new DataView(e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)));const a=Hs[n];o||(o=a.size);const c=`set${fE(a)}`,l=`get${fE(a)}`,h=a.size/a.count,u=Math.floor(s/o),_=$h.isLittleEndian;for(let n=0;n<u;++n){const s=i+o*n;for(let n=0;n<a.count;++n){const i=s+h*n,o=e[l](i,_);r[c](i,t(o,n,e),_)}}return r}class yE{_init(){}constructor(e,t,n,i=null,s=null,o=!0){this.mesh=void 0,this.subMeshIdx=void 0,this._flatBuffers=[],this._jointMappedBuffers=void 0,this._jointMappedBufferIndices=void 0,this._vertexIdChannel=void 0,this._geometricInfo=void 0,this._vertexBuffers=void 0,this._attributes=void 0,this._indexBuffer=null,this._indirectBuffer=null,this._primitiveMode=void 0,this._iaInfo=void 0,this._isOwnerOfIndexBuffer=!0,this._attributes=t,this._vertexBuffers=e,this._indexBuffer=i,this._indirectBuffer=s,this._primitiveMode=n,this._iaInfo=new xs(t,e,i,s),this._isOwnerOfIndexBuffer=o,this._init()}get attributes(){return this._attributes}get vertexBuffers(){return this._vertexBuffers}get indexBuffer(){return this._indexBuffer}get indirectBuffer(){return this._indirectBuffer}get primitiveMode(){return this._primitiveMode}get geometricInfo(){if(this._geometricInfo)return this._geometricInfo;if(void 0===this.mesh)return{positions:new Float32Array,indices:new Uint8Array,boundingBox:{min:gn.ZERO,max:gn.ZERO}};if(void 0===this.subMeshIdx)return{positions:new Float32Array,indices:new Uint8Array,boundingBox:{min:gn.ZERO,max:gn.ZERO}};const{mesh:e}=this,t=this.subMeshIdx,n=e.readAttribute(t,zi.ATTR_POSITION),i=e.readIndices(t),s=new gn,o=new gn,r=this.attributes.find((e=>e.name===zi.ATTR_POSITION));if(r){const e=Hs[r.format].count;2===e?(s.set(n[0],n[1],0),o.set(n[0],n[1],0)):(s.set(n[0],n[1],n[2]),o.set(n[0],n[1],n[2]));for(let t=0;t<n.length;t+=e)2===e?(s.x=n[t]>s.x?n[t]:s.x,s.y=n[t+1]>s.y?n[t+1]:s.y,o.x=n[t]<o.x?n[t]:o.x,o.y=n[t+1]<o.y?n[t+1]:o.y):(s.x=n[t]>s.x?n[t]:s.x,s.y=n[t+1]>s.y?n[t+1]:s.y,s.z=n[t+2]>s.z?n[t+2]:s.z,o.x=n[t]<o.x?n[t]:o.x,o.y=n[t+1]<o.y?n[t+1]:o.y,o.z=n[t+2]<o.z?n[t+2]:o.z)}return this._geometricInfo={positions:n,indices:i,boundingBox:{max:s,min:o}},this._geometricInfo}get flatBuffers(){return this._flatBuffers}genFlatBuffers(){if(this._flatBuffers.length||!this.mesh||void 0===this.subMeshIdx)return;const{mesh:e}=this;let t=0;const n=e.struct.primitives[this.subMeshIdx];n.indexView&&(t=n.indexView.count);for(let i=0;i<n.vertexBundelIndices.length;i++){const s=n.vertexBundelIndices[i],o=e.struct.vertexBundles[s],r=n.indexView?n.indexView.count:o.view.count,a=o.view.stride,c=a*r,l=new Uint8Array(e.data.buffer,o.view.offset,o.view.length),h=new Uint8Array(n.indexView?c:o.view.length);if(!n.indexView){h.set(e.data.subarray(o.view.offset,o.view.offset+o.view.length)),this._flatBuffers.push({stride:a,count:r,buffer:h});continue}const u=e.readIndices(this.subMeshIdx);for(let e=0;e<t;++e){const t=e*a,n=u[e]*a;for(let e=0;e<a;++e)h[t+e]=l[n+e]}this._flatBuffers.push({stride:a,count:r,buffer:h})}}get jointMappedBuffers(){if(this._jointMappedBuffers)return this._jointMappedBuffers;const e=this._jointMappedBuffers=[],t=this._jointMappedBufferIndices=[];if(!this.mesh||void 0===this.subMeshIdx)return this._jointMappedBuffers=this.vertexBuffers;const{struct:n}=this.mesh,i=n.primitives[this.subMeshIdx];if(!n.jointMaps||void 0===i.jointMapIndex||!n.jointMaps[i.jointMapIndex])return this._jointMappedBuffers=this.vertexBuffers;let s,o;const{device:r}=u.director.root;for(let a=0;a<i.vertexBundelIndices.length;a++){const c=n.vertexBundles[i.vertexBundelIndices[a]];o=0,s=ti.UNKNOWN;for(let e=0;e<c.attributes.length;e++){const t=c.attributes[e];if(t.name===zi.ATTR_JOINTS){s=t.format;break}o+=Hs[t.format].size}if(s){const l=new Uint8Array(this.mesh.data.buffer,c.view.offset,c.view.length),h=new DataView(l.slice().buffer),u=n.jointMaps[i.jointMapIndex];vE(h,(e=>u.indexOf(e)),s,o,c.view.length,c.view.stride,h);const _=r.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.DEVICE,c.view.length,c.view.stride));_.update(h.buffer),e.push(_),t.push(a)}else e.push(this.vertexBuffers[i.vertexBundelIndices[a]])}return this._vertexIdChannel&&e.push(this._allocVertexIdBuffer(r)),e}get iaInfo(){return this._iaInfo}destroy(){for(let e=0;e<this.vertexBuffers.length;e++)this.vertexBuffers[e].destroy();if(this.vertexBuffers.length=0,this._indexBuffer&&(this._isOwnerOfIndexBuffer&&this._indexBuffer.destroy(),this._indexBuffer=null),this._jointMappedBuffers&&this._jointMappedBufferIndices){for(let e=0;e<this._jointMappedBufferIndices.length;e++)this._jointMappedBuffers[this._jointMappedBufferIndices[e]].destroy();this._jointMappedBuffers=void 0,this._jointMappedBufferIndices=void 0}this._indirectBuffer&&(this._indirectBuffer.destroy(),this._indirectBuffer=null)}enableVertexIdChannel(e){if(this._vertexIdChannel)return;const t=this.vertexBuffers.length,n=this.attributes.length,i=this._allocVertexIdBuffer(e);this._vertexBuffers.push(i),this._attributes.push(new vs("a_vertexId",ti.R32F,!1,t)),this._iaInfo.attributes=this._attributes,this._iaInfo.vertexBuffers=this._vertexBuffers,this._vertexIdChannel={stream:t,index:n}}_allocVertexIdBuffer(e){const t=0===this.vertexBuffers.length||0===this.vertexBuffers[0].stride?0:this.vertexBuffers[0].size/this.vertexBuffers[0].stride,n=new Float32Array(t);for(let e=0;e<t;++e)n[e]=e+.5;const i=e.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.DEVICE,n.byteLength,n.BYTES_PER_ELEMENT));return i.update(n),i}}let xE,SE;e("RenderingSubMesh",yE),function(e){e.TOUCH_START="touch-start",e.TOUCH_MOVE="touch-move",e.TOUCH_END="touch-end",e.TOUCH_CANCEL="touch-cancel",e.MOUSE_DOWN="mouse-down",e.MOUSE_MOVE="mouse-move",e.MOUSE_UP="mouse-up",e.MOUSE_WHEEL="mouse-wheel",e.MOUSE_ENTER="mouse-enter",e.MOUSE_LEAVE="mouse-leave",e.KEY_DOWN="keydown",e.KEY_UP="keyup",e.DEVICEMOTION="devicemotion",e.TRANSFORM_CHANGED="transform-changed",e.SCENE_CHANGED_FOR_PERSISTS="scene-changed-for-persists",e.SIZE_CHANGED="size-changed",e.ANCHOR_CHANGED="anchor-changed",e.COLOR_CHANGED="color-changed",e.CHILD_ADDED="child-added",e.CHILD_REMOVED="child-removed",e.PARENT_CHANGED="parent-changed",e.NODE_DESTROYED="node-destroyed",e.LAYER_CHANGED="layer-changed",e.SIBLING_ORDER_CHANGED="sibling-order-changed"}(xE||(xE=e("SystemEventType",{}))),function(e){e.TOUCH_START="touch-start",e.TOUCH_MOVE="touch-move",e.TOUCH_END="touch-end",e.TOUCH_CANCEL="touch-cancel",e.MOUSE_DOWN="mouse-down",e.MOUSE_MOVE="mouse-move",e.MOUSE_UP="mouse-up",e.MOUSE_WHEEL="mouse-wheel",e.KEY_DOWN="keydown",e.KEY_PRESSING="key-pressing",e.KEY_UP="keyup",e.DEVICEMOTION="devicemotion"}(SE||(SE={})),u.SystemEventType=xE;const CE=new Array(16);let EE=null;const TE=new Bn,bE=[Ex.TOUCH_START,Ex.TOUCH_MOVE,Ex.TOUCH_END,Ex.TOUCH_CANCEL],AE=[Ex.MOUSE_DOWN,Ex.MOUSE_ENTER,Ex.MOUSE_MOVE,Ex.MOUSE_LEAVE,Ex.MOUSE_UP,Ex.MOUSE_WHEEL];let PE;!function(e){e[e.ADD_POINTER_EVENT_PROCESSOR=0]="ADD_POINTER_EVENT_PROCESSOR",e[e.REMOVE_POINTER_EVENT_PROCESSOR=1]="REMOVE_POINTER_EVENT_PROCESSOR",e[e.MARK_LIST_DIRTY=2]="MARK_LIST_DIRTY"}(PE||(PE={}));class wE{get isEnabled(){return this._isEnabled}get node(){return this._node}constructor(e){this.claimedTouchIdList=[],this.maskList=null,this.cachedCameraPriority=0,this.previousMouseIn=!1,this.bubblingTarget=null,this.capturingTarget=null,this.shouldHandleEventMouse=!1,this.shouldHandleEventTouch=!1,this._isEnabled=!1,this._node=void 0,this._node=e}setEnabled(e,t=!1){if(this._isEnabled===e)return;this._isEnabled=e;const n=this.node.children;if(e&&this._attachMask(),wE.callbacksInvoker.emit(PE.MARK_LIST_DIRTY),t&&n.length>0)for(let t=0;t<n.length;++t)n[t]._eventProcessor.setEnabled(e,!0)}reattach(){let e;this.node.walk((t=>{e||(e=this._searchComponentsInParent(wE._maskComp)),t.eventProcessor.maskList=e}))}destroy(){EE===this._node&&(EE=null),this.capturingTarget&&this.capturingTarget.clear(),this.bubblingTarget&&this.bubblingTarget.clear(),wE.callbacksInvoker.emit(PE.REMOVE_POINTER_EVENT_PROCESSOR,this)}on(e,t,n,i){let s;var o,r;return this._tryEmittingAddEvent(e),s=(i=!!i)?null!==(o=this.capturingTarget)&&void 0!==o?o:this.capturingTarget=this._newCallbacksInvoker():null!==(r=this.bubblingTarget)&&void 0!==r?r:this.bubblingTarget=this._newCallbacksInvoker(),s.on(e,t,n),t}once(e,t,n,i){let s;var o,r;return this._tryEmittingAddEvent(e),s=(i=!!i)?null!==(o=this.capturingTarget)&&void 0!==o?o:this.capturingTarget=this._newCallbacksInvoker():null!==(r=this.bubblingTarget)&&void 0!==r?r:this.bubblingTarget=this._newCallbacksInvoker(),s.on(e,t,n,!0),t}off(e,t,n,i){var s;let o;o=(i=!!i)?this.capturingTarget:this.bubblingTarget,null===(s=o)||void 0===s||s.off(e,t,n)}targetOff(e){var t,n;null===(t=this.capturingTarget)||void 0===t||t.removeAll(e),null===(n=this.bubblingTarget)||void 0===n||n.removeAll(e),this.shouldHandleEventTouch&&!this._hasTouchListeners()&&(this.shouldHandleEventTouch=!1),this.shouldHandleEventMouse&&!this._hasMouseListeners()&&(this.shouldHandleEventMouse=!1),this._hasPointerListeners()||wE.callbacksInvoker.emit(PE.REMOVE_POINTER_EVENT_PROCESSOR,this)}emit(e,t,n,i,s,o){var r;null===(r=this.bubblingTarget)||void 0===r||r.emit(e,t,n,i,s,o)}dispatchEvent(e){const t=this.node;let n,i=0;for(e.target=t,CE.length=0,this.getCapturingTargets(e.type,CE),e.eventPhase=1,i=CE.length-1;i>=0;--i)if(n=CE[i],n.eventProcessor.capturingTarget&&(e.currentTarget=n,n.eventProcessor.capturingTarget.emit(e.type,e,CE),e.propagationStopped))return void(CE.length=0);if(CE.length=0,e.eventPhase=2,e.currentTarget=t,this.capturingTarget&&this.capturingTarget.emit(e.type,e),!e.propagationImmediateStopped&&this.bubblingTarget&&this.bubblingTarget.emit(e.type,e),!e.propagationStopped&&e.bubbles)for(this.getBubblingTargets(e.type,CE),e.eventPhase=3,i=0;i<CE.length;++i)if(n=CE[i],n.eventProcessor.bubblingTarget&&(e.currentTarget=n,n.eventProcessor.bubblingTarget.emit(e.type,e),e.propagationStopped))return void(CE.length=0);CE.length=0}hasEventListener(e,t,n){let i=!1;return this.bubblingTarget&&(i=this.bubblingTarget.hasEventListener(e,t,n)),!i&&this.capturingTarget&&(i=this.capturingTarget.hasEventListener(e,t,n)),i}getCapturingTargets(e,t){let n=this._node.parent;for(;n;){var i;(null===(i=n.eventProcessor.capturingTarget)||void 0===i?void 0:i.hasEventListener(e))&&t.push(n),n=n.parent}}getBubblingTargets(e,t){let n=this._node.parent;for(;n;){var i;(null===(i=n.eventProcessor.bubblingTarget)||void 0===i?void 0:i.hasEventListener(e))&&t.push(n),n=n.parent}}_searchComponentsInParent(e){const t=this.node;if(e){let n=0,i=[];for(let s=t;s&&lS.isNode(s);s=s.parent,++n){const t=s.getComponent(e);if(t){const e={index:n,comp:t};i?i.push(e):i=[e]}}return i.length>0?i:null}return null}_attachMask(){this.maskList=this._searchComponentsInParent(wE._maskComp)}_isTouchEvent(e){return-1!==bE.indexOf(e)}_isMouseEvent(e){return-1!==AE.indexOf(e)}_hasTouchListeners(){for(let e=0;e<bE.length;++e){const t=bE[e];if(this.hasEventListener(t))return!0}return!1}_hasMouseListeners(){for(let e=0;e<AE.length;++e){const t=AE[e];if(this.hasEventListener(t))return!0}return!1}_hasPointerListeners(){return!!this._hasTouchListeners()||this._hasMouseListeners()}_tryEmittingAddEvent(e){const t=this._isTouchEvent(e),n=this._isMouseEvent(e);t?this.shouldHandleEventTouch=!0:n&&(this.shouldHandleEventMouse=!0),!t&&!n||this._hasPointerListeners()||wE.callbacksInvoker.emit(PE.ADD_POINTER_EVENT_PROCESSOR,this)}_newCallbacksInvoker(){const e=new Wl;return e._registerOffCallback((()=>{this.shouldHandleEventTouch&&!this._hasTouchListeners()&&(this.shouldHandleEventTouch=!1),this.shouldHandleEventMouse&&!this._hasMouseListeners()&&(this.shouldHandleEventMouse=!1),this._hasPointerListeners()||wE.callbacksInvoker.emit(PE.REMOVE_POINTER_EVENT_PROCESSOR,this)})),e}_handleEventMouse(e){switch(e.type){case SE.MOUSE_DOWN:return this._handleMouseDown(e);case SE.MOUSE_MOVE:return this._handleMouseMove(e);case SE.MOUSE_UP:return this._handleMouseUp(e);case SE.MOUSE_WHEEL:return this._handleMouseWheel(e);default:return!1}}_handleMouseDown(e){const t=this._node;return!(!t||!t._uiProps.uiTransformComp||(e.getLocation(TE),!t._uiProps.uiTransformComp.hitTest(TE)||(e.type=Ex.MOUSE_DOWN,e.bubbles=!0,t.dispatchEvent(e),e.propagationStopped=!0,0)))}_handleMouseMove(e){const t=this._node;return!(!t||!t._uiProps.uiTransformComp)&&(e.getLocation(TE),t._uiProps.uiTransformComp.hitTest(TE)?(this.previousMouseIn||(EE&&EE!==t&&(e.type=Ex.MOUSE_LEAVE,EE.dispatchEvent(e),EE.eventProcessor.previousMouseIn=!1),EE=t,e.type=Ex.MOUSE_ENTER,t.dispatchEvent(e),this.previousMouseIn=!0),e.type=Ex.MOUSE_MOVE,e.bubbles=!0,t.dispatchEvent(e),e.propagationStopped=!0,!0):(this.previousMouseIn&&(e.type=Ex.MOUSE_LEAVE,t.dispatchEvent(e),this.previousMouseIn=!1,EE=null),!1))}_handleMouseUp(e){const t=this._node;return!(!t||!t._uiProps.uiTransformComp||(e.getLocation(TE),!t._uiProps.uiTransformComp.hitTest(TE)||(e.type=Ex.MOUSE_UP,e.bubbles=!0,t.dispatchEvent(e),e.propagationStopped=!0,0)))}_handleMouseWheel(e){const t=this._node;return!(!t||!t._uiProps.uiTransformComp||(e.getLocation(TE),!t._uiProps.uiTransformComp.hitTest(TE)||(e.type=Ex.MOUSE_WHEEL,e.bubbles=!0,t.dispatchEvent(e),e.propagationStopped=!0,0)))}_handleEventTouch(e){switch(e.type){case SE.TOUCH_START:return this._handleTouchStart(e);case SE.TOUCH_MOVE:return this._handleTouchMove(e);case SE.TOUCH_END:return this._handleTouchEnd(e);case SE.TOUCH_CANCEL:return this._handleTouchCancel(e);default:return!1}}_handleTouchStart(e){const t=this.node;return!(!t||!t._uiProps.uiTransformComp||(e.getLocation(TE),!t._uiProps.uiTransformComp.hitTest(TE)||(e.type=Ex.TOUCH_START,e.bubbles=!0,t.dispatchEvent(e),0)))}_handleTouchMove(e){const t=this.node;return!(!t||!t._uiProps.uiTransformComp||(e.type=Ex.TOUCH_MOVE,e.bubbles=!0,t.dispatchEvent(e),0))}_handleTouchEnd(e){const t=this.node;t&&t._uiProps.uiTransformComp&&(e.getLocation(TE),t._uiProps.uiTransformComp.hitTest(TE)?e.type=Ex.TOUCH_END:e.type=Ex.TOUCH_CANCEL,e.bubbles=!0,t.dispatchEvent(e))}_handleTouchCancel(e){const t=this.node;t&&t._uiProps.uiTransformComp&&(e.type=Ex.TOUCH_CANCEL,e.bubbles=!0,t.dispatchEvent(e))}}var IE,RE,DE,OE,NE,ME,LE,BE,FE,zE,UE,GE,VE,HE,kE,jE,WE,qE,XE,YE,KE,$E,QE,JE,ZE,eT,tT,nT,iT,sT,oT,rT,aT,cT,lT,hT,uT,_T,dT,pT,fT,mT,gT,vT,yT,xT,ST,CT,ET,TT,bT,AT,PT,wT,IT,RT,DT,OT,NT,MT,LT,BT,FT,zT,UT,GT,VT,HT,kT,jT,WT,qT,XT,YT,KT,$T,QT,JT,ZT,eb,tb,nb,ib,sb,ob,rb,ab,cb,lb,hb,ub,_b,db,pb,fb,mb,gb,vb,yb,xb,Sb,Cb,Eb,Tb,bb,Ab,Pb,wb,Ib,Rb,Db,Ob,Nb,Mb,Lb,Bb,Fb,zb,Ub,Gb,Vb,Hb,kb,jb,Wb,qb,Xb,Yb,Kb,$b,Qb,Jb,Zb,eA,tA,nA,iA,sA,oA;wE._maskComp=null,wE.callbacksInvoker=new Wl,u.NodeEventProcessor=wE;const rA=new gn(0,1,0),aA=new gn,cA=new Gn,lA=new dn,hA=new Tn,uA=e=>{const t=1/Math.max(Math.max(Math.max(e.x,e.y),e.z),1e-4);t<1&&(e.x*=t,e.y*=t,e.z*=t)};let _A=e("AmbientInfo",(IE=mc("cc.AmbientInfo"),RE=Bc(),DE=Uc(),OE=Zc(vt),NE=Uc(),ME=Bc(),LE=Uc(),BE=bc("_skyColor"),FE=bc("_skyIllum"),zE=bc("_groundAlbedo"),IE((ac((GE=class{constructor(){rc(this,"_skyColorHDR",VE,this),rc(this,"_skyIllumHDR",HE,this),rc(this,"_groundAlbedoHDR",kE,this),rc(this,"_skyColorLDR",jE,this),rc(this,"_skyIllumLDR",WE,this),rc(this,"_groundAlbedoLDR",qE,this),this._resource=null}get skyColorHDR(){return this._skyColorHDR}get groundAlbedoHDR(){return this._groundAlbedoHDR}get skyIllumHDR(){return this._skyIllumHDR}get skyColorLDR(){return this._skyColorLDR}get groundAlbedoLDR(){return this._groundAlbedoLDR}get skyIllumLDR(){return this._skyIllumLDR}set skyLightingColor(e){cA.set(e.x,e.y,e.z,e.w),u.director.root.pipeline.pipelineSceneData.isHDR?this._skyColorHDR.set(cA):this._skyColorLDR.set(cA),this._resource&&this._resource.skyColor.set(cA)}get skyLightingColor(){const e=u.director.root.pipeline.pipelineSceneData.isHDR;return cA.set(e?this._skyColorHDR:this._skyColorLDR),uA(cA),lA.set(255*cA.x,255*cA.y,255*cA.z,255)}set skyColor(e){u.director.root.pipeline.pipelineSceneData.isHDR?this._skyColorHDR.set(e):this._skyColorLDR.set(e),this._resource&&this._resource.skyColor.set(e)}set skyIllum(e){u.director.root.pipeline.pipelineSceneData.isHDR?this._skyIllumHDR=e:this._skyIllumLDR=e,this._resource&&(this._resource.skyIllum=e)}get skyIllum(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._skyIllumHDR:this._skyIllumLDR}set groundLightingColor(e){cA.set(e.x,e.y,e.z,e.w),u.director.root.pipeline.pipelineSceneData.isHDR?this._groundAlbedoHDR.set(cA):this._groundAlbedoLDR.set(cA),this._resource&&this._resource.groundAlbedo.set(cA)}get groundLightingColor(){const e=u.director.root.pipeline.pipelineSceneData.isHDR;return cA.set(e?this._groundAlbedoHDR:this._groundAlbedoLDR),uA(cA),lA.set(255*cA.x,255*cA.y,255*cA.z,255)}set groundAlbedo(e){u.director.root.pipeline.pipelineSceneData.isHDR?this._groundAlbedoHDR.set(e):this._groundAlbedoLDR.set(e),this._resource&&this._resource.groundAlbedo.set(e)}activate(e){this._resource=e,this._resource.initialize(this)}}).prototype,"skyLightingColor",[RE,Lc,DE],Object.getOwnPropertyDescriptor(GE.prototype,"skyLightingColor"),GE.prototype),ac(GE.prototype,"skyIllum",[Lc,OE,NE],Object.getOwnPropertyDescriptor(GE.prototype,"skyIllum"),GE.prototype),ac(GE.prototype,"groundLightingColor",[ME,Lc,LE],Object.getOwnPropertyDescriptor(GE.prototype,"groundLightingColor"),GE.prototype),VE=ac(GE.prototype,"_skyColorHDR",[Tc,BE],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Gn(.2,.5,.8,1)}}),HE=ac(GE.prototype,"_skyIllumHDR",[Tc,FE],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return mv.SKY_ILLUM}}),kE=ac(GE.prototype,"_groundAlbedoHDR",[Tc,zE],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Gn(.2,.2,.2,1)}}),jE=ac(GE.prototype,"_skyColorLDR",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Gn(.2,.5,.8,1)}}),WE=ac(GE.prototype,"_skyIllumLDR",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return mv.SKY_ILLUM}}),qE=ac(GE.prototype,"_groundAlbedoLDR",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Gn(.2,.2,.2,1)}}),UE=GE))||UE));u.AmbientInfo=_A;let dA=e("SkyboxInfo",(XE=mc("cc.SkyboxInfo"),YE=Uc(),KE=Zc(Sv),$E=Uc(),QE=Uc(),JE=Zc(Nm),ZE=Uc(),eT=Bc(),tT=Zc(Nm),nT=Wc(),iT=Zc(Nm),sT=bc("_envmap"),oT=Zc(Nm),rT=Zc(Nm),aT=Zc(Nm),XE((ac((lT=class{constructor(){rc(this,"_envLightingType",hT,this),rc(this,"_envmapHDR",uT,this),rc(this,"_envmapLDR",_T,this),rc(this,"_diffuseMapHDR",dT,this),rc(this,"_diffuseMapLDR",pT,this),rc(this,"_enabled",fT,this),rc(this,"_useHDR",mT,this),this._resource=null}set applyDiffuseMap(e){this._resource&&(this._resource.useDiffuseMap=e)}get applyDiffuseMap(){return Sv.DIFFUSEMAP_WITH_REFLECTION===this._envLightingType}set enabled(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=this._enabled))}get enabled(){return this._enabled}set envLightingType(e){this.envmap||Sv.HEMISPHERE_DIFFUSE===e?(Sv.HEMISPHERE_DIFFUSE===e?(this.useIBL=!1,this.applyDiffuseMap=!1):Sv.AUTOGEN_HEMISPHERE_DIFFUSE_WITH_REFLECTION===e?(this.useIBL=!0,this.applyDiffuseMap=!1):Sv.DIFFUSEMAP_WITH_REFLECTION===e&&(this.useIBL=!0,this.applyDiffuseMap=!0),this._envLightingType=e):(this.useIBL=!1,this.applyDiffuseMap=!1,this._envLightingType=Sv.HEMISPHERE_DIFFUSE,D(15001))}get envLightingType(){return this._envLightingType}set useIBL(e){this._resource&&(this._resource.useIBL=e)}get useIBL(){return Sv.HEMISPHERE_DIFFUSE!==this._envLightingType}set useHDR(e){u.director.root.pipeline.pipelineSceneData.isHDR=e,this._useHDR=e,this._resource&&(this.envmap=this._resource.envmap,this.diffuseMap=this._resource.diffuseMap,this.envLightingType===Sv.DIFFUSEMAP_WITH_REFLECTION&&(null===this.diffuseMap?(this.envLightingType=Sv.AUTOGEN_HEMISPHERE_DIFFUSE_WITH_REFLECTION,D(15e3)):this.diffuseMap.isDefault&&D(15002))),this._resource&&(this._resource.useHDR=this._useHDR)}get useHDR(){return u.director.root.pipeline.pipelineSceneData.isHDR=this._useHDR,this._useHDR}set envmap(e){const t=u.director.root.pipeline.pipelineSceneData.isHDR;t?this._envmapHDR=e:this._envmapLDR=e,e||(t?this._diffuseMapHDR=null:this._diffuseMapLDR=null,this.applyDiffuseMap=!1,this.useIBL=!1,this.envLightingType=Sv.HEMISPHERE_DIFFUSE,D(15001)),this._resource&&(this._resource.setEnvMaps(this._envmapHDR,this._envmapLDR),this._resource.setDiffuseMaps(this._diffuseMapHDR,this._diffuseMapLDR),this._resource.useDiffuseMap=this.applyDiffuseMap,this._resource.envmap=e)}get envmap(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._envmapHDR:this._envmapLDR}set diffuseMap(e){u.director.root.pipeline.pipelineSceneData.isHDR?this._diffuseMapHDR=e:this._diffuseMapLDR=e,this._resource&&this._resource.setDiffuseMaps(this._diffuseMapHDR,this._diffuseMapLDR)}get diffuseMap(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._diffuseMapHDR:this._diffuseMapLDR}activate(e){this.envLightingType=this._envLightingType,this._resource=e,this._resource.initialize(this),this._resource.setEnvMaps(this._envmapHDR,this._envmapLDR),this._resource.setDiffuseMaps(this._diffuseMapHDR,this._diffuseMapLDR),this._resource.activate()}}).prototype,"enabled",[Lc,YE],Object.getOwnPropertyDescriptor(lT.prototype,"enabled"),lT.prototype),ac(lT.prototype,"envLightingType",[Lc,KE,$E],Object.getOwnPropertyDescriptor(lT.prototype,"envLightingType"),lT.prototype),ac(lT.prototype,"useHDR",[Lc,QE],Object.getOwnPropertyDescriptor(lT.prototype,"useHDR"),lT.prototype),ac(lT.prototype,"envmap",[Lc,JE,ZE],Object.getOwnPropertyDescriptor(lT.prototype,"envmap"),lT.prototype),ac(lT.prototype,"diffuseMap",[eT,Lc,Fc,tT,nT],Object.getOwnPropertyDescriptor(lT.prototype,"diffuseMap"),lT.prototype),hT=ac(lT.prototype,"_envLightingType",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Sv.HEMISPHERE_DIFFUSE}}),uT=ac(lT.prototype,"_envmapHDR",[Tc,iT,sT],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),_T=ac(lT.prototype,"_envmapLDR",[Tc,oT],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),dT=ac(lT.prototype,"_diffuseMapHDR",[Tc,rT],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),pT=ac(lT.prototype,"_diffuseMapLDR",[Tc,aT],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),fT=ac(lT.prototype,"_enabled",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),mT=ac(lT.prototype,"_useHDR",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),cT=lT))||cT));u.SkyboxInfo=dA;let pA=e("FogInfo",(gT=mc("cc.FogInfo"),vT=Uc(),yT=Wc(),xT=Uc(),ST=Wc(),CT=Uc(),ET=Zc(Tv),TT=Wc(),bT=Uc(),AT=Bc(),PT=Zc(vt),wT=Gc(),IT=kc(),RT=Uc(),DT=Bc(),OT=Zc(vt),NT=kc(),MT=Uc(),LT=Bc(),BT=Zc(vt),FT=kc(),zT=Uc(),UT=Bc(),GT=Zc(vt),VT=Vc(),HT=kc(),kT=Uc(),jT=Bc(),WT=Zc(vt),qT=kc(),XT=Uc(),YT=Bc(),KT=Zc(vt),$T=kc(),QT=Uc(),gT((ub=hb=class{constructor(){rc(this,"_type",eb,this),rc(this,"_fogColor",tb,this),rc(this,"_enabled",nb,this),rc(this,"_fogDensity",ib,this),rc(this,"_fogStart",sb,this),rc(this,"_fogEnd",ob,this),rc(this,"_fogAtten",rb,this),rc(this,"_fogTop",ab,this),rc(this,"_fogRange",cb,this),rc(this,"_accurate",lb,this),this._resource=null}set enabled(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=e,e&&(this._resource.type=this._type)))}get enabled(){return this._enabled}set accurate(e){this._accurate!==e&&(this._accurate=e,this._resource&&(this._resource.accurate=e,e&&(this._resource.type=this._type)))}get accurate(){return this._accurate}set fogColor(e){this._fogColor.set(e),this._resource&&(this._resource.fogColor=this._fogColor)}get fogColor(){return this._fogColor}get type(){return this._type}set type(e){this._type=e,this._resource&&(this._resource.type=e)}get fogDensity(){return this._fogDensity}set fogDensity(e){this._fogDensity=e,this._resource&&(this._resource.fogDensity=e)}get fogStart(){return this._fogStart}set fogStart(e){this._fogStart=e,this._resource&&(this._resource.fogStart=e)}get fogEnd(){return this._fogEnd}set fogEnd(e){this._fogEnd=e,this._resource&&(this._resource.fogEnd=e)}get fogAtten(){return this._fogAtten}set fogAtten(e){this._fogAtten=e,this._resource&&(this._resource.fogAtten=e)}get fogTop(){return this._fogTop}set fogTop(e){this._fogTop=e,this._resource&&(this._resource.fogTop=e)}get fogRange(){return this._fogRange}set fogRange(e){this._fogRange=e,this._resource&&(this._resource.fogRange=e)}activate(e){this._resource=e,this._resource.initialize(this),this._resource.activate()}},hb.FogType=Tv,ac((ZT=ub).prototype,"enabled",[Lc,vT,yT],Object.getOwnPropertyDescriptor(ZT.prototype,"enabled"),ZT.prototype),ac(ZT.prototype,"accurate",[Lc,xT,ST],Object.getOwnPropertyDescriptor(ZT.prototype,"accurate"),ZT.prototype),ac(ZT.prototype,"fogColor",[Lc,CT],Object.getOwnPropertyDescriptor(ZT.prototype,"fogColor"),ZT.prototype),ac(ZT.prototype,"type",[Lc,ET,TT,bT],Object.getOwnPropertyDescriptor(ZT.prototype,"type"),ZT.prototype),ac(ZT.prototype,"fogDensity",[AT,PT,wT,IT,jc,RT],Object.getOwnPropertyDescriptor(ZT.prototype,"fogDensity"),ZT.prototype),ac(ZT.prototype,"fogStart",[DT,OT,NT,MT],Object.getOwnPropertyDescriptor(ZT.prototype,"fogStart"),ZT.prototype),ac(ZT.prototype,"fogEnd",[LT,BT,FT,zT],Object.getOwnPropertyDescriptor(ZT.prototype,"fogEnd"),ZT.prototype),ac(ZT.prototype,"fogAtten",[UT,GT,VT,HT,kT],Object.getOwnPropertyDescriptor(ZT.prototype,"fogAtten"),ZT.prototype),ac(ZT.prototype,"fogTop",[jT,WT,qT,XT],Object.getOwnPropertyDescriptor(ZT.prototype,"fogTop"),ZT.prototype),ac(ZT.prototype,"fogRange",[YT,KT,$T,QT],Object.getOwnPropertyDescriptor(ZT.prototype,"fogRange"),ZT.prototype),eb=ac(ZT.prototype,"_type",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Tv.LINEAR}}),tb=ac(ZT.prototype,"_fogColor",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new dn("#C8C8C8")}}),nb=ac(ZT.prototype,"_enabled",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ib=ac(ZT.prototype,"_fogDensity",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.3}}),sb=ac(ZT.prototype,"_fogStart",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.5}}),ob=ac(ZT.prototype,"_fogEnd",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 300}}),rb=ac(ZT.prototype,"_fogAtten",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 5}}),ab=ac(ZT.prototype,"_fogTop",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1.5}}),cb=ac(ZT.prototype,"_fogRange",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1.2}}),lb=ac(ZT.prototype,"_accurate",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),JT=ZT))||JT)),fA=e("ShadowsInfo",(_b=mc("cc.ShadowsInfo"),db=Uc(),pb=Zc(xg),fb=Bc(),mb=Bc(),gb=Uc(),vb=Zc(vt),yb=Bc(),xb=Uc(),Sb=Zc(gt),Cb=Uc(),Eb=Bc(),Tb=Zc(yg),bb=Uc(),Ab=Bc(),_b((ac((wb=class{constructor(){rc(this,"_enabled",Ib,this),rc(this,"_type",Rb,this),rc(this,"_normal",Db,this),rc(this,"_distance",Ob,this),rc(this,"_shadowColor",Nb,this),rc(this,"_maxReceived",Mb,this),rc(this,"_size",Lb,this),this._resource=null}set enabled(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=e,e&&(this._resource.type=this._type)))}get enabled(){return this._enabled}set type(e){this._type=e,this._resource&&(this._resource.type=e)}get type(){return this._type}set shadowColor(e){this._shadowColor.set(e),this._resource&&(this._resource.shadowColor=e)}get shadowColor(){return this._shadowColor}set planeDirection(e){gn.copy(this._normal,e),this._resource&&(this._resource.normal=e)}get planeDirection(){return this._normal}set planeHeight(e){this._distance=e,this._resource&&(this._resource.distance=-e)}get planeHeight(){return this._distance}set maxReceived(e){this._maxReceived=e,this._resource&&(this._resource.maxReceived=e)}get maxReceived(){return this._maxReceived}set shadowMapSize(e){this._size.set(e,e),this._resource&&(this._resource.size.set(e,e),this._resource.shadowMapDirty=!0)}get shadowMapSize(){return this._size.x}get size(){return this._size}setPlaneFromNode(e){e.getWorldRotation(hA),this.planeDirection=gn.transformQuat(aA,rA,hA),e.getWorldPosition(aA),this.planeHeight=gn.dot(this._normal,aA)}activate(e){this._resource=e,this._resource.initialize(this),this._resource.activate()}}).prototype,"enabled",[Lc,db],Object.getOwnPropertyDescriptor(wb.prototype,"enabled"),wb.prototype),ac(wb.prototype,"type",[Lc,pb],Object.getOwnPropertyDescriptor(wb.prototype,"type"),wb.prototype),ac(wb.prototype,"shadowColor",[fb],Object.getOwnPropertyDescriptor(wb.prototype,"shadowColor"),wb.prototype),ac(wb.prototype,"planeDirection",[mb,gb],Object.getOwnPropertyDescriptor(wb.prototype,"planeDirection"),wb.prototype),ac(wb.prototype,"planeHeight",[Lc,vb,yb,xb],Object.getOwnPropertyDescriptor(wb.prototype,"planeHeight"),wb.prototype),ac(wb.prototype,"maxReceived",[Sb,Cb,Eb],Object.getOwnPropertyDescriptor(wb.prototype,"maxReceived"),wb.prototype),ac(wb.prototype,"shadowMapSize",[Tb,bb,Ab],Object.getOwnPropertyDescriptor(wb.prototype,"shadowMapSize"),wb.prototype),Ib=ac(wb.prototype,"_enabled",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Rb=ac(wb.prototype,"_type",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return xg.Planar}}),Db=ac(wb.prototype,"_normal",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn(0,1,0)}}),Ob=ac(wb.prototype,"_distance",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Nb=ac(wb.prototype,"_shadowColor",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new dn(0,0,0,76)}}),Mb=ac(wb.prototype,"_maxReceived",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 4}}),Lb=ac(wb.prototype,"_size",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Bn(512,512)}}),Pb=wb))||Pb));u.ShadowsInfo=fA;const mA=e("DEFAULT_WORLD_MIN_POS",new gn(-1024,-1024,-1024)),gA=e("DEFAULT_WORLD_MAX_POS",new gn(1024,1024,1024)),vA=e("DEFAULT_OCTREE_DEPTH",8);let yA=e("OctreeInfo",(Bb=mc("cc.OctreeInfo"),Fb=Uc(),zb=Uc(),Ub=zc(),Gb=Uc(),Vb=zc(),Hb=Gc(),kb=Zc(gt),jb=Uc(),Bb((ac((qb=class{constructor(){rc(this,"_enabled",Xb,this),rc(this,"_minPos",Yb,this),rc(this,"_maxPos",Kb,this),rc(this,"_depth",$b,this),this._resource=null}set enabled(e){this._enabled!==e&&(this._enabled=e,this._resource&&(this._resource.enabled=e))}get enabled(){return this._enabled}set minPos(e){this._minPos=e,this._resource&&(this._resource.minPos=e)}get minPos(){return this._minPos}set maxPos(e){this._maxPos=e,this._resource&&(this._resource.maxPos=e)}get maxPos(){return this._maxPos}set depth(e){this._depth=e,this._resource&&(this._resource.depth=e)}get depth(){return this._depth}activate(e){this._resource=e,this._resource.initialize(this)}}).prototype,"enabled",[Lc,Fb],Object.getOwnPropertyDescriptor(qb.prototype,"enabled"),qb.prototype),ac(qb.prototype,"minPos",[Lc,zb,Ub],Object.getOwnPropertyDescriptor(qb.prototype,"minPos"),qb.prototype),ac(qb.prototype,"maxPos",[Lc,Gb,Vb],Object.getOwnPropertyDescriptor(qb.prototype,"maxPos"),qb.prototype),ac(qb.prototype,"depth",[Lc,Hb,jc,kb,jb],Object.getOwnPropertyDescriptor(qb.prototype,"depth"),qb.prototype),Xb=ac(qb.prototype,"_enabled",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Yb=ac(qb.prototype,"_minPos",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn(mA)}}),Kb=ac(qb.prototype,"_maxPos",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn(gA)}}),$b=ac(qb.prototype,"_depth",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return vA}}),Wb=qb))||Wb)),xA=e("SceneGlobals",(Qb=mc("cc.SceneGlobals"),Jb=Zc(dA),Qb((tA=ac((eA=class{constructor(){rc(this,"ambient",tA,this),rc(this,"shadows",nA,this),rc(this,"_skybox",iA,this),rc(this,"fog",sA,this),rc(this,"octree",oA,this)}get skybox(){return this._skybox}set skybox(e){this._skybox=e}activate(){const e=u.director.root.pipeline.pipelineSceneData;this.skybox.activate(e.skybox),this.ambient.activate(e.ambient),this.shadows.activate(e.shadows),this.fog.activate(e.fog),this.octree.activate(e.octree)}}).prototype,"ambient",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new _A}}),nA=ac(eA.prototype,"shadows",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new fA}}),iA=ac(eA.prototype,"_skybox",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new dA}}),sA=ac(eA.prototype,"fog",[Lc,Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new pA}}),ac(eA.prototype,"skybox",[Lc,Jb],Object.getOwnPropertyDescriptor(eA.prototype,"skybox"),eA.prototype),oA=ac(eA.prototype,"octree",[Lc,Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new yA}}),Zb=eA))||Zb));u.SceneGlobals=xA;class SA{constructor(e,t){this.type=void 0,this.bubbles=void 0,this.target=null,this.currentTarget=null,this.eventPhase=0,this.propagationStopped=!1,this.propagationImmediateStopped=!1,this.type=e,this.bubbles=!!t}unuse(){this.type=SA.NO_TYPE,this.target=null,this.currentTarget=null,this.eventPhase=SA.NONE,this.propagationStopped=!1,this.propagationImmediateStopped=!1}reuse(e,t){this.type=e,this.bubbles=t||!1}isStopped(){return this.propagationStopped||this.propagationImmediateStopped}getCurrentTarget(){return this.currentTarget}getType(){return this.type}}e("Event",SA),SA.NO_TYPE="no_type",SA.TOUCH="touch",SA.MOUSE="mouse",SA.KEYBOARD="keyboard",SA.ACCELERATION="acceleration",SA.NONE=0,SA.CAPTURING_PHASE=1,SA.AT_TARGET=2,SA.BUBBLING_PHASE=3,u.Event=SA;class CA extends SA{constructor(e,t){super(xE.DEVICEMOTION,t),this.acc=void 0,this.acc=e}}e("EventAcceleration",CA),SA.EventAcceleration=CA;class EA extends SA{get isPressed(){return this._isPressed}constructor(e,t,n){"boolean"==typeof t&&(t=t?xE.KEY_DOWN:xE.KEY_UP),super(t,n),this.keyCode=void 0,this.rawEvent=void 0,this._isPressed=void 0,this._isPressed=t!==xE.KEY_UP,"number"==typeof e?this.keyCode=e:(this.keyCode=e.keyCode,this.rawEvent=e)}}e("EventKeyboard",EA),SA.EventKeyboard=EA;class TA extends SA{get eventType(){return this._eventType}constructor(e,t,n){super(e,t),this.movementX=0,this.movementY=0,this.preventSwallow=!1,this._eventType=void 0,this._button=TA.BUTTON_MISSING,this._x=0,this._y=0,this._prevX=0,this._prevY=0,this._scrollX=0,this._scrollY=0,this._eventType=e,n&&(this._prevX=n.x,this._prevY=n.y)}setScrollData(e,t){this._scrollX=e,this._scrollY=t}getScrollX(){return this._scrollX}getScrollY(){return this._scrollY}setLocation(e,t){this._x=e,this._y=t}getLocation(e){return e||(e=new Bn),Bn.set(e,this._x,this._y),e}getLocationInView(e){return e||(e=new Bn),Bn.set(e,this._x,u.view._designResolutionSize.height-this._y),e}getUILocation(e){return e||(e=new Bn),Bn.set(e,this._x,this._y),u.view._convertToUISpace(e),e}getPreviousLocation(e){return e||(e=new Bn),Bn.set(e,this._prevX,this._prevY),e}getUIPreviousLocation(e){return e||(e=new Bn),Bn.set(e,this._prevX,this._prevY),u.view._convertToUISpace(e),e}getDelta(e){return e||(e=new Bn),Bn.set(e,this._x-this._prevX,this._y-this._prevY),e}getDeltaX(){return this._x-this._prevX}getDeltaY(){return this._y-this._prevY}getUIDelta(e){return e||(e=new Bn),Bn.set(e,(this._x-this._prevX)/u.view.getScaleX(),(this._y-this._prevY)/u.view.getScaleY()),e}getUIDeltaX(){return(this._x-this._prevX)/u.view.getScaleX()}getUIDeltaY(){return(this._y-this._prevY)/u.view.getScaleY()}setButton(e){this._button=e}getButton(){return this._button}getLocationX(){return this._x}getLocationY(){return this._y}getUILocationX(){const e=u.view.getViewportRect();return(this._x-e.x)/u.view.getScaleX()}getUILocationY(){const e=u.view.getViewportRect();return(this._y-e.y)/u.view.getScaleY()}}e("EventMouse",TA),TA.BUTTON_MISSING=-1,TA.BUTTON_LEFT=0,TA.BUTTON_RIGHT=2,TA.BUTTON_MIDDLE=1,TA.BUTTON_4=3,TA.BUTTON_5=4,TA.BUTTON_6=5,TA.BUTTON_7=6,TA.BUTTON_8=7,SA.EventMouse=TA;const bA=new Bn;class AA extends SA{constructor(e,t,n,i=[]){super(n,t),this.touch=null,this.simulate=!1,this.preventSwallow=!1,this._eventCode=void 0,this._touches=void 0,this._allTouches=void 0,this._eventCode=n,this._touches=e||[],this._allTouches=i}getEventCode(){return this._eventCode}getTouches(){return this._touches}getAllTouches(){return this._allTouches}setLocation(e,t){this.touch&&this.touch.setTouchInfo(this.touch.getID(),e,t)}getLocation(e){return this.touch?this.touch.getLocation(e):new Bn}getUILocation(e){return this.touch?this.touch.getUILocation(e):new Bn}getLocationInView(e){return this.touch?this.touch.getLocationInView(e):new Bn}getPreviousLocation(e){return this.touch?this.touch.getPreviousLocation(e):new Bn}getStartLocation(e){return this.touch?this.touch.getStartLocation(e):new Bn}getUIStartLocation(e){return this.touch?this.touch.getUIStartLocation(e):new Bn}getID(){return this.touch?this.touch.getID():null}getDelta(e){return this.touch?this.touch.getDelta(e):new Bn}getUIDelta(e){return this.touch?this.touch.getUIDelta(e):new Bn}getDeltaX(){return this.touch?this.touch.getDelta(bA).x:0}getDeltaY(){return this.touch?this.touch.getDelta(bA).y:0}getLocationX(){return this.touch?this.touch.getLocationX():0}getLocationY(){return this.touch?this.touch.getLocationY():0}}e("EventTouch",AA),AA.MAX_TOUCHES=5,SA.EventTouch=AA;class PA{constructor(e=0,t=0,n=0,i=0){this.x=void 0,this.y=void 0,this.z=void 0,this.timestamp=void 0,this.x=e,this.y=t,this.z=n,this.timestamp=i}}let wA;e("Acceleration",PA),function(e){e[e.NONE=0]="NONE",e[e.MOBILE_BACK=6]="MOBILE_BACK",e[e.BACKSPACE=8]="BACKSPACE",e[e.TAB=9]="TAB",e[e.ENTER=13]="ENTER",e[e.SHIFT_LEFT=16]="SHIFT_LEFT",e[e.CTRL_LEFT=17]="CTRL_LEFT",e[e.ALT_LEFT=18]="ALT_LEFT",e[e.PAUSE=19]="PAUSE",e[e.CAPS_LOCK=20]="CAPS_LOCK",e[e.ESCAPE=27]="ESCAPE",e[e.SPACE=32]="SPACE",e[e.PAGE_UP=33]="PAGE_UP",e[e.PAGE_DOWN=34]="PAGE_DOWN",e[e.END=35]="END",e[e.HOME=36]="HOME",e[e.ARROW_LEFT=37]="ARROW_LEFT",e[e.ARROW_UP=38]="ARROW_UP",e[e.ARROW_RIGHT=39]="ARROW_RIGHT",e[e.ARROW_DOWN=40]="ARROW_DOWN",e[e.INSERT=45]="INSERT",e[e.DELETE=46]="DELETE",e[e.DIGIT_0=48]="DIGIT_0",e[e.DIGIT_1=49]="DIGIT_1",e[e.DIGIT_2=50]="DIGIT_2",e[e.DIGIT_3=51]="DIGIT_3",e[e.DIGIT_4=52]="DIGIT_4",e[e.DIGIT_5=53]="DIGIT_5",e[e.DIGIT_6=54]="DIGIT_6",e[e.DIGIT_7=55]="DIGIT_7",e[e.DIGIT_8=56]="DIGIT_8",e[e.DIGIT_9=57]="DIGIT_9",e[e.KEY_A=65]="KEY_A",e[e.KEY_B=66]="KEY_B",e[e.KEY_C=67]="KEY_C",e[e.KEY_D=68]="KEY_D",e[e.KEY_E=69]="KEY_E",e[e.KEY_F=70]="KEY_F",e[e.KEY_G=71]="KEY_G",e[e.KEY_H=72]="KEY_H",e[e.KEY_I=73]="KEY_I",e[e.KEY_J=74]="KEY_J",e[e.KEY_K=75]="KEY_K",e[e.KEY_L=76]="KEY_L",e[e.KEY_M=77]="KEY_M",e[e.KEY_N=78]="KEY_N",e[e.KEY_O=79]="KEY_O",e[e.KEY_P=80]="KEY_P",e[e.KEY_Q=81]="KEY_Q",e[e.KEY_R=82]="KEY_R",e[e.KEY_S=83]="KEY_S",e[e.KEY_T=84]="KEY_T",e[e.KEY_U=85]="KEY_U",e[e.KEY_V=86]="KEY_V",e[e.KEY_W=87]="KEY_W",e[e.KEY_X=88]="KEY_X",e[e.KEY_Y=89]="KEY_Y",e[e.KEY_Z=90]="KEY_Z",e[e.NUM_0=96]="NUM_0",e[e.NUM_1=97]="NUM_1",e[e.NUM_2=98]="NUM_2",e[e.NUM_3=99]="NUM_3",e[e.NUM_4=100]="NUM_4",e[e.NUM_5=101]="NUM_5",e[e.NUM_6=102]="NUM_6",e[e.NUM_7=103]="NUM_7",e[e.NUM_8=104]="NUM_8",e[e.NUM_9=105]="NUM_9",e[e.NUM_MULTIPLY=106]="NUM_MULTIPLY",e[e.NUM_PLUS=107]="NUM_PLUS",e[e.NUM_SUBTRACT=109]="NUM_SUBTRACT",e[e.NUM_DECIMAL=110]="NUM_DECIMAL",e[e.NUM_DIVIDE=111]="NUM_DIVIDE",e[e.F1=112]="F1",e[e.F2=113]="F2",e[e.F3=114]="F3",e[e.F4=115]="F4",e[e.F5=116]="F5",e[e.F6=117]="F6",e[e.F7=118]="F7",e[e.F8=119]="F8",e[e.F9=120]="F9",e[e.F10=121]="F10",e[e.F11=122]="F11",e[e.F12=123]="F12",e[e.NUM_LOCK=144]="NUM_LOCK",e[e.SCROLL_LOCK=145]="SCROLL_LOCK",e[e.SEMICOLON=186]="SEMICOLON",e[e.EQUAL=187]="EQUAL",e[e.COMMA=188]="COMMA",e[e.DASH=189]="DASH",e[e.PERIOD=190]="PERIOD",e[e.SLASH=191]="SLASH",e[e.BACK_QUOTE=192]="BACK_QUOTE",e[e.BRACKET_LEFT=219]="BRACKET_LEFT",e[e.BACKSLASH=220]="BACKSLASH",e[e.BRACKET_RIGHT=221]="BRACKET_RIGHT",e[e.QUOTE=222]="QUOTE",e[e.SHIFT_RIGHT=2e3]="SHIFT_RIGHT",e[e.CTRL_RIGHT=2001]="CTRL_RIGHT",e[e.ALT_RIGHT=2002]="ALT_RIGHT",e[e.NUM_ENTER=2003]="NUM_ENTER"}(wA||(wA=e("KeyCode",{})));const IA=new Bn;class RA{get lastModified(){return this._lastModified}constructor(e,t,n=0){this._point=new Bn,this._prevPoint=new Bn,this._lastModified=0,this._id=0,this._startPoint=new Bn,this._startPointCaptured=!1,this.setTouchInfo(n,e,t)}getLocation(e){return e||(e=new Bn),e.set(this._point.x,this._point.y),e}getLocationX(){return this._point.x}getLocationY(){return this._point.y}getUILocation(e){return e||(e=new Bn),e.set(this._point.x,this._point.y),u.view._convertToUISpace(e),e}getUILocationX(){const e=u.view.getViewportRect();return(this._point.x-e.x)/u.view.getScaleX()}getUILocationY(){const e=u.view.getViewportRect();return(this._point.y-e.y)/u.view.getScaleY()}getPreviousLocation(e){return e||(e=new Bn),e.set(this._prevPoint.x,this._prevPoint.y),e}getUIPreviousLocation(e){return e||(e=new Bn),e.set(this._prevPoint.x,this._prevPoint.y),u.view._convertToUISpace(e),e}getStartLocation(e){return e||(e=new Bn),e.set(this._startPoint.x,this._startPoint.y),e}getUIStartLocation(e){return e||(e=new Bn),e.set(this._startPoint.x,this._startPoint.y),u.view._convertToUISpace(e),e}getDelta(e){return e||(e=new Bn),e.set(this._point),e.subtract(this._prevPoint),e}getUIDelta(e){return e||(e=new Bn),IA.set(this._point),IA.subtract(this._prevPoint),e.set(u.view.getScaleX(),u.view.getScaleY()),Bn.divide(e,IA,e),e}getLocationInView(e){return e||(e=new Bn),e.set(this._point.x,u.view._designResolutionSize.height-this._point.y),e}getPreviousLocationInView(e){return e||(e=new Bn),e.set(this._prevPoint.x,u.view._designResolutionSize.height-this._prevPoint.y),e}getStartLocationInView(e){return e||(e=new Bn),e.set(this._startPoint.x,u.view._designResolutionSize.height-this._startPoint.y),e}getID(){return this._id}setTouchInfo(e=0,t,n){this._prevPoint=this._point,this._point=new Bn(t||0,n||0),this._id=e,this._startPointCaptured||(this._startPoint=new Bn(this._point),this._startPointCaptured=!0)}setPoint(e,t){"object"==typeof e?(this._point.x=e.x,this._point.y=e.y):(this._point.x=e||0,this._point.y=t||0),this._lastModified=u.game.frameStartTime}setPrevPoint(e,t){this._prevPoint="object"==typeof e?new Bn(e.x,e.y):new Bn(e||0,t||0),this._lastModified=u.game.frameStartTime}}e("Touch",RA),u.Touch=RA;class DA{constructor(){this._intervalInSeconds=.2,this._intervalId=void 0,this._isEnabled=!1,this._eventTarget=new Xl,this._didAccelerateFunc=void 0,this._didAccelerateFunc=this._didAccelerate.bind(this)}_didAccelerate(){const e=jsb.device.getDeviceMotionValue();let t=.1*e[3],n=.1*e[4];const i=.1*e[5],s=Yh.orientation,o=t;s===Wh.LANDSCAPE_RIGHT?(t=-n,n=o):s===Wh.LANDSCAPE_LEFT?(t=n,n=-o):s===Wh.PORTRAIT_UPSIDE_DOWN&&(t=-t,n=-n),nh.os!==Ql.ANDROID&&nh.os!==Ql.OHOS||(t=-t,n=-n);const r=performance.now(),a=new PA(t,n,i,r),c=new CA(a);this._eventTarget.emit(SE.DEVICEMOTION,c)}start(){this._intervalId&&clearInterval(this._intervalId),this._intervalId=setInterval(this._didAccelerateFunc,1e3*this._intervalInSeconds),jsb.device.setAccelerometerInterval(this._intervalInSeconds),jsb.device.setAccelerometerEnabled(!0),this._isEnabled=!0}stop(){this._intervalId&&(clearInterval(this._intervalId),this._intervalId=void 0),jsb.device.setAccelerometerEnabled(!1),this._isEnabled=!1}setInterval(e){this._intervalInSeconds=e/1e3,jsb.device.setAccelerometerInterval(this._intervalInSeconds),this._isEnabled&&(jsb.device.setAccelerometerEnabled(!1),jsb.device.setAccelerometerEnabled(!0))}on(e,t,n){this._eventTarget.on(e,t,n)}}const OA={12:wA.NUM_LOCK,10048:wA.NUM_0,10049:wA.NUM_1,10050:wA.NUM_2,10051:wA.NUM_3,10052:wA.NUM_4,10053:wA.NUM_5,10054:wA.NUM_6,10055:wA.NUM_7,10056:wA.NUM_8,10057:wA.NUM_9,20013:wA.NUM_ENTER,20016:wA.SHIFT_RIGHT,20017:wA.CTRL_RIGHT,20018:wA.ALT_RIGHT};function NA(e){return OA[e]||e}class MA{constructor(){this._eventTarget=new Xl,this._keyStateMap={},this._registerEvent()}_registerEvent(){jsb.onKeyDown=e=>{const t=NA(e.keyCode);if(this._keyStateMap[t]){const t=this._getInputEvent(e,SE.KEY_PRESSING);this._eventTarget.emit(SE.KEY_PRESSING,t)}else{const t=this._getInputEvent(e,SE.KEY_DOWN);this._eventTarget.emit(SE.KEY_DOWN,t)}this._keyStateMap[t]=!0},jsb.onKeyUp=e=>{const t=NA(e.keyCode),n=this._getInputEvent(e,SE.KEY_UP);this._keyStateMap[t]=!1,this._eventTarget.emit(SE.KEY_UP,n)}}_getInputEvent(e,t){const n=NA(e.keyCode);return new EA(n,t)}on(e,t,n){this._eventTarget.on(e,t,n)}}class LA{constructor(){this._eventTarget=new Xl,this._preMousePos=new Bn,this._isPressed=!1,this._registerEvent()}_getLocation(e){const t=Yh.windowSize,n=Yh.devicePixelRatio,i=e.x*n,s=t.height-e.y*n;return new Bn(i,s)}_registerEvent(){jsb.onMouseDown=this._createCallback(SE.MOUSE_DOWN),jsb.onMouseMove=this._createCallback(SE.MOUSE_MOVE),jsb.onMouseUp=this._createCallback(SE.MOUSE_UP),jsb.onMouseWheel=this._handleMouseWheel.bind(this)}_createCallback(e){return t=>{const n=this._getLocation(t);let i=t.button;switch(e){case SE.MOUSE_DOWN:this._isPressed=!0;break;case SE.MOUSE_UP:this._isPressed=!1;break;case SE.MOUSE_MOVE:this._isPressed||(i=TA.BUTTON_MISSING)}const s=new TA(e,!1,this._preMousePos);s.setLocation(n.x,n.y),s.setButton(i),s.movementX=n.x-this._preMousePos.x,s.movementY=this._preMousePos.y-n.y,this._preMousePos.set(n.x,n.y),this._eventTarget.emit(e,s)}}_handleMouseWheel(e){const t=SE.MOUSE_WHEEL,n=this._getLocation(e),i=e.button,s=new TA(t,!1,this._preMousePos);s.setLocation(n.x,n.y),s.setButton(i),s.movementX=n.x-this._preMousePos.x,s.movementY=this._preMousePos.y-n.y,s.setScrollData(120*e.wheelDeltaX,120*e.wheelDeltaY),this._preMousePos.set(n.x,n.y),this._eventTarget.emit(t,s)}on(e,t,n){this._eventTarget.on(e,t,n)}}const BA=new Bn,FA=new class{constructor(){this._touchMap=void 0,this._maxTouches=8,this._touchMap=new Map}_cloneTouch(e){const t=e.getID();e.getStartLocation(BA);const n=new RA(BA.x,BA.y,t);return e.getLocation(BA),n.setPoint(BA.x,BA.y),e.getPreviousLocation(BA),n.setPrevPoint(BA),n}_createTouch(e,t,n){if(this._touchMap.has(e))return void console.log("Cannot create the same touch object.");if(this._checkTouchMapSizeMoreThanMax(e))return void console.log("The touches is more than MAX_TOUCHES.");const i=new RA(t,n,e);return this._touchMap.set(e,i),this._updateTouch(i,t,n),this._cloneTouch(i)}releaseTouch(e){this._touchMap.has(e)&&this._touchMap.delete(e)}getTouch(e,t,n){let i=this._touchMap.get(e);return i?this._updateTouch(i,t,n):i=this._createTouch(e,t,n),i?this._cloneTouch(i):void 0}getAllTouches(){const e=[];return this._touchMap.forEach((t=>{if(t){const n=this._cloneTouch(t);e.push(n)}})),e}_updateTouch(e,t,n){e.getLocation(BA),e.setPrevPoint(BA),e.setPoint(t,n)}_checkTouchMapSizeMoreThanMax(e){if(this._touchMap.has(e))return!1;const t=Qe.ENABLE_MULTI_TOUCH?this._maxTouches:1;if(this._touchMap.size<t)return!1;const n=performance.now();return this._touchMap.forEach((e=>{n-e.lastModified>Qe.TOUCH_TIMEOUT&&(console.log(`The touches is more than MAX_TOUCHES, release touch id ${e.getID()}.`),this.releaseTouch(e.getID()))})),t>=this._touchMap.size}};class zA{constructor(){this._eventTarget=new Xl,this._registerEvent()}_registerEvent(){jsb.onTouchStart=this._createCallback(SE.TOUCH_START),jsb.onTouchMove=this._createCallback(SE.TOUCH_MOVE),jsb.onTouchEnd=this._createCallback(SE.TOUCH_END),jsb.onTouchCancel=this._createCallback(SE.TOUCH_CANCEL)}_createCallback(e){return t=>{const n=[],i=t.length,s=Yh.windowSize;for(let o=0;o<i;++o){const i=t[o],r=i.identifier;if(null===r)continue;const a=this._getLocation(i,s),c=FA.getTouch(r,a.x,a.y);c&&(e!==SE.TOUCH_END&&e!==SE.TOUCH_CANCEL||FA.releaseTouch(r),n.push(c))}if(n.length>0){const t=new AA(n,!1,e,Qe.ENABLE_MULTI_TOUCH?FA.getAllTouches():n);this._eventTarget.emit(e,t)}}}_getLocation(e,t){const n=Yh.devicePixelRatio,i=e.clientX*n,s=t.height-e.clientY*n;return new Bn(i,s)}on(e,t,n){this._eventTarget.on(e,t,n)}}let UA;!function(e){e[e.GLOBAL=0]="GLOBAL",e[e.UI=1]="UI"}(UA||(UA={}));class GA{constructor(e){this.priority=UA.GLOBAL,this._inputEventTarget=void 0,this._inputEventTarget=e}dispatchEvent(e){return this._inputEventTarget.emit(e.type,e),!0}}const VA={[SE.MOUSE_DOWN]:SE.TOUCH_START,[SE.MOUSE_MOVE]:SE.TOUCH_MOVE,[SE.MOUSE_UP]:SE.TOUCH_END};class HA{constructor(){this._dispatchImmediately=!1,this._eventTarget=new Xl,this._touchInput=new zA,this._mouseInput=new LA,this._keyboardInput=new MA,this._accelerometerInput=new DA,this._eventTouchList=[],this._eventMouseList=[],this._eventKeyboardList=[],this._eventAccelerationList=[],this._needSimulateTouchMoveEvent=!1,this._inputEventDispatcher=void 0,this._eventDispatcherList=[],this._registerEvent(),this._inputEventDispatcher=new GA(this._eventTarget),this._registerEventDispatcher(this._inputEventDispatcher)}on(e,t,n){return this._eventTarget.on(e,t,n),t}once(e,t,n){return this._eventTarget.once(e,t,n),t}off(e,t,n){this._eventTarget.off(e,t,n)}setAccelerometerEnabled(e){e?this._accelerometerInput.start():this._accelerometerInput.stop()}setAccelerometerInterval(e){this._accelerometerInput.setInterval(e)}_simulateEventTouch(e){const t=VA[e.type],n=FA.getTouch(0,e.getLocationX(),e.getLocationY());if(!n)return;const i=[n],s=new AA(i,!1,t,i);t===SE.TOUCH_END&&FA.releaseTouch(0),this._dispatchOrPushEventTouch(s,this._eventTouchList)}_registerEventDispatcher(e){this._eventDispatcherList.push(e),this._eventDispatcherList.sort(((e,t)=>t.priority-e.priority))}_emitEvent(e){const t=this._eventDispatcherList.length;for(let n=0;n<t&&this._eventDispatcherList[n].dispatchEvent(e);++n);}_registerEvent(){if($h.hasFeature($h.Feature.INPUT_TOUCH)){const e=this._eventTouchList;this._touchInput.on(SE.TOUCH_START,(t=>{this._dispatchOrPushEventTouch(t,e)})),this._touchInput.on(SE.TOUCH_MOVE,(t=>{this._dispatchOrPushEventTouch(t,e)})),this._touchInput.on(SE.TOUCH_END,(t=>{this._dispatchOrPushEventTouch(t,e)})),this._touchInput.on(SE.TOUCH_CANCEL,(t=>{this._dispatchOrPushEventTouch(t,e)}))}if($h.hasFeature($h.Feature.EVENT_MOUSE)){const e=this._eventMouseList;this._mouseInput.on(SE.MOUSE_DOWN,(t=>{this._needSimulateTouchMoveEvent=!0,this._simulateEventTouch(t),this._dispatchOrPushEvent(t,e)})),this._mouseInput.on(SE.MOUSE_MOVE,(t=>{this._needSimulateTouchMoveEvent&&this._simulateEventTouch(t),this._dispatchOrPushEvent(t,e)})),this._mouseInput.on(SE.MOUSE_UP,(t=>{this._needSimulateTouchMoveEvent=!1,this._simulateEventTouch(t),this._dispatchOrPushEvent(t,e)})),this._mouseInput.on(SE.MOUSE_WHEEL,(t=>{this._dispatchOrPushEvent(t,e)}))}if($h.hasFeature($h.Feature.EVENT_KEYBOARD)){const e=this._eventKeyboardList;this._keyboardInput.on(SE.KEY_DOWN,(t=>{this._dispatchOrPushEvent(t,e)})),this._keyboardInput.on(SE.KEY_PRESSING,(t=>{this._dispatchOrPushEvent(t,e)})),this._keyboardInput.on(SE.KEY_UP,(t=>{this._dispatchOrPushEvent(t,e)}))}if($h.hasFeature($h.Feature.EVENT_ACCELEROMETER)){const e=this._eventAccelerationList;this._accelerometerInput.on(SE.DEVICEMOTION,(t=>{this._dispatchOrPushEvent(t,e)}))}}_clearEvents(){this._eventMouseList.length=0,this._eventTouchList.length=0,this._eventKeyboardList.length=0,this._eventAccelerationList.length=0}_dispatchOrPushEvent(e,t){this._dispatchImmediately?this._emitEvent(e):t.push(e)}_dispatchOrPushEventTouch(e,t){if(this._dispatchImmediately){const t=e.getTouches(),n=t.length;for(let i=0;i<n;++i)e.touch=t[i],e.propagationStopped=e.propagationImmediateStopped=!1,this._emitEvent(e)}else t.push(e)}_frameDispatchEvents(){const e=this._eventMouseList;for(let t=0,n=e.length;t<n;++t){const n=e[t];this._emitEvent(n)}const t=this._eventTouchList;for(let e=0,n=t.length;e<n;++e){const n=t[e],i=n.getTouches(),s=i.length;for(let e=0;e<s;++e)n.touch=i[e],n.propagationStopped=n.propagationImmediateStopped=!1,this._emitEvent(n)}const n=this._eventKeyboardList;for(let e=0,t=n.length;e<t;++e){const t=n[e];this._emitEvent(t)}const i=this._eventAccelerationList;for(let e=0,t=i.length;e<t;++e){const t=i[e];this._emitEvent(t)}this._clearEvents()}}e("Input",HA),HA.EventType=SE;const kA=e("input",new HA);class jA extends Xl{constructor(){super(),kA.on(SE.MOUSE_DOWN,(e=>{this.emit(xE.MOUSE_DOWN,e)})),kA.on(SE.MOUSE_MOVE,(e=>{this.emit(xE.MOUSE_MOVE,e)})),kA.on(SE.MOUSE_UP,(e=>{this.emit(xE.MOUSE_UP,e)})),kA.on(SE.MOUSE_WHEEL,(e=>{this.emit(xE.MOUSE_WHEEL,e)})),kA.on(SE.TOUCH_START,(e=>{this.emit(xE.TOUCH_START,e.touch,e)})),kA.on(SE.TOUCH_MOVE,(e=>{this.emit(xE.TOUCH_MOVE,e.touch,e)})),kA.on(SE.TOUCH_END,(e=>{this.emit(xE.TOUCH_END,e.touch,e)})),kA.on(SE.TOUCH_CANCEL,(e=>{this.emit(xE.TOUCH_CANCEL,e.touch,e)})),kA.on(SE.KEY_DOWN,(e=>{this.emit(xE.KEY_DOWN,e)})),kA.on(SE.KEY_PRESSING,(e=>{this.emit(xE.KEY_DOWN,e)})),kA.on(SE.KEY_UP,(e=>{this.emit(xE.KEY_UP,e)})),kA.on(SE.DEVICEMOTION,(e=>{this.emit(xE.DEVICEMOTION,e)}))}setAccelerometerEnabled(e){kA.setAccelerometerEnabled(e)}setAccelerometerInterval(e){kA.setAccelerometerInterval(e)}on(e,t,n,i){return super.on(e,t,n,i),t}off(e,t,n){super.off(e,t,n)}}e("SystemEvent",jA),jA.EventType=xE,u.SystemEvent=jA;const WA=e("systemEvent",new jA);var qA;u.systemEvent=WA,V(xE,"Node.EventType",[{name:"POSITION_PART",newName:"TRANSFORM_CHANGED"},{name:"ROTATION_PART",newName:"TRANSFORM_CHANGED"},{name:"SCALE_PART",newName:"TRANSFORM_CHANGED"}]),V(SA,"Event",[{name:"ACCELERATION",newName:"DEVICEMOTION",target:jA.EventType,targetName:"SystemEvent.EventType"}]),k(SA,"Event",[{name:"TOUCH",suggest:"please use SystemEvent.EventType.TOUCH_START, SystemEvent.EventType.TOUCH_MOVE, SystemEvent.EventType.TOUCH_END and SystemEvent.EventType.TOUCH_CANCEL instead"},{name:"MOUSE",suggest:"please use SystemEvent.EventType.MOUSE_DOWN, SystemEvent.EventType.MOUSE_MOVE, SystemEvent.EventType.MOUSE_UP, SystemEvent.EventType.MOUSE_WHEEL, Node.EventType.MOUSE_ENTER and Node.EventType.MOUSE_LEAVE instead"},{name:"KEYBOARD",suggest:"please use SystemEvent.EventType.KEY_DOWN and SystemEvent.EventType.KEY_UP instead"}]),V(TA,"EventMouse",["DOWN","UP","MOVE"].map((e=>({name:e,newName:`MOUSE_${e}`,target:jA.EventType,targetName:"SystemEvent.EventType"})))),V(TA,"EventMouse",[{name:"SCROLL",newName:"MOUSE_WHEEL",target:jA.EventType,targetName:"SystemEvent.EventType"}]),k(TA.prototype,"EventMouse.prototype",[{name:"eventType",suggest:"please use EventMouse.prototype.type instead"}]),V(AA,"EventTouch",[{name:"BEGAN",newName:"TOUCH_START",target:jA.EventType,targetName:"SystemEvent.EventType"}]),V(AA,"EventTouch",[{name:"MOVED",newName:"TOUCH_MOVE",target:jA.EventType,targetName:"SystemEvent.EventType"}]),V(AA,"EventTouch",[{name:"ENDED",newName:"TOUCH_END",target:jA.EventType,targetName:"SystemEvent.EventType"}]),V(AA,"EventTouch",[{name:"CANCELLED",newName:"TOUCH_CANCEL",target:jA.EventType,targetName:"SystemEvent.EventType"}]),k(AA.prototype,"EventTouch.prototype",[{name:"getEventCode",suggest:"please use EventTouch.prototype.type instead"}]),V(AA.prototype,"EventTouch.prototype",[{name:"getUILocationInView",newName:"getLocationInView",target:AA,targetName:"EventTouch"}]),k(Qe.KEY,"macro.KEY",["back","menu","0","1","2","3","4","5","6","7","8","9","0","*","+","-","/",";","=",",",".","[","]","dpadLeft","dpadRight","dpadUp","dpadDown","dpadCenter"].map((e=>({name:e})))),k(Qe.KEY,"macro.KEY",[{name:"shift",suggest:"please use KeyCode.SHIFT_LEFT instead"}]),k(Qe.KEY,"macro.KEY",[{name:"ctrl",suggest:"please use KeyCode.CTRL_LEFT instead"}]),k(Qe.KEY,"macro.KEY",[{name:"alt",suggest:"please use KeyCode.ALT_LEFT instead"}]),k(Qe,"macro",[{name:"KEY",suggest:"please use KeyCode instead"}]),V(zx.prototype,"BaseNode",[{name:"childrenCount",newName:"children.length",customGetter(){return this.children.length}}]),V(lS.prototype,"Node",[{name:"width",targetName:"node.getComponent(UITransform)",customGetter(){return this._uiProps.uiTransformComp.width},customSetter(e){this._uiProps.uiTransformComp.width=e}},{name:"height",targetName:"node.getComponent(UITransform)",customGetter(){return this._uiProps.uiTransformComp.height},customSetter(e){this._uiProps.uiTransformComp.height=e}},{name:"anchorX",targetName:"node.getComponent(UITransform)",customGetter(){return this._uiProps.uiTransformComp.anchorX},customSetter(e){this._uiProps.uiTransformComp.anchorX=e}},{name:"anchorY",targetName:"node.getComponent(UITransform)",customGetter(){return this._uiProps.uiTransformComp.anchorY},customSetter(e){this._uiProps.uiTransformComp.anchorY=e}},{name:"getAnchorPoint",targetName:"node.getComponent(UITransform)",customFunction(e){return e||(e=new Bn),e.set(this._uiProps.uiTransformComp.anchorPoint),e}},{name:"setAnchorPoint",targetName:"node.getComponent(UITransform)",customFunction(e,t){this._uiProps.uiTransformComp.setAnchorPoint(e,t)}},{name:"getContentSize",targetName:"node.getComponent(UITransform)",customFunction(e){return e||(e=new kn),e.set(this._uiProps.uiTransformComp.contentSize),e}},{name:"setContentSize",targetName:"node.getComponent(UITransform)",customFunction(e,t){"number"==typeof e?this._uiProps.uiTransformComp.setContentSize(e,t):this._uiProps.uiTransformComp.setContentSize(e)}}]),H(xA.prototype,"SceneGlobals.prototype",[{name:"aspect"},{name:"selfShadow"},{name:"linear"},{name:"packing"},{name:"autoAdapt"},{name:"fixedArea"},{name:"pcf"},{name:"bias"},{name:"normalBias"},{name:"near"},{name:"far"},{name:"shadowDistance"},{name:"invisibleOcclusionRange"},{name:"orthoSize"},{name:"saturation"}]),V(xA.prototype,"SceneGlobals.prototype",[{name:"distance",newName:"planeHeight"},{name:"normal",newName:"planeDirection"}]),H(lS.prototype,"Node.prototype",[{name:"addLayer"},{name:"removeLayer"}]),V(Cx.prototype,"NodeUIProperties",[{name:"opacityDirty",newName:"colorDirty"}]),H(Zd,"Layers",[{name:"All"},{name:"RaycastMask"},{name:"check"}]),V(Zd,"Layers",[{name:"Default",newName:"DEFAULT",target:Zd.Enum,targetName:"Layers.Enum"},{name:"Always",newName:"ALWAYS",target:Zd.Enum,targetName:"Layers.Enum"},{name:"IgnoreRaycast",newName:"IGNORE_RAYCAST",target:Zd.Enum,targetName:"Layers.Enum"},{name:"Gizmos",newName:"GIZMOS",target:Zd.Enum,targetName:"Layers.Enum"},{name:"Editor",newName:"EDITOR",target:Zd.Enum,targetName:"Layers.Enum"},{name:"UI",newName:"UI_3D",target:Zd.Enum,targetName:"Layers.Enum"},{name:"UI2D",newName:"UI_2D",target:Zd.Enum,targetName:"Layers.Enum"},{name:"SceneGizmo",newName:"SCENE_GIZMO",target:Zd.Enum,targetName:"Layers.Enum"},{name:"makeInclusiveMask",newName:"makeMaskInclude",target:Zd,targetName:"Layers"},{name:"makeExclusiveMask",newName:"makeMaskExclude",target:Zd,targetName:"Layers"}]),H(Zd.Enum,"Layers.Enum",[{name:"ALWAYS"}]),H(Zd.BitMask,"Layers.BitMask",[{name:"ALWAYS"}]);const XA=rl.Flags.HideInHierarchy,YA=rl.Flags.DontSave;let KA=e("PrivateNode",mc("cc.PrivateNode")(qA=class extends lS{constructor(e){super(e),D(12003,this.name),this.hideFlags|=YA|XA}})||qA);var $A,QA,JA,ZA;V(xE,"SystemEventType",["MOUSE_ENTER","MOUSE_LEAVE","TRANSFORM_CHANGED","SCENE_CHANGED_FOR_PERSISTS","SIZE_CHANGED","ANCHOR_CHANGED","COLOR_CHANGED","CHILD_ADDED","CHILD_REMOVED","PARENT_CHANGED","NODE_DESTROYED","LAYER_CHANGED","SIBLING_ORDER_CHANGED"].map((e=>({name:e,target:lS.EventType,targetName:"Node.EventType"})))),V(lS.EventType,"Node.EventType",[{name:"DEVICEMOTION",target:jA.EventType,targetName:"SystemEvent.EventType"},{name:"KEY_DOWN",target:jA.EventType,targetName:"SystemEvent.EventType"},{name:"KEY_UP",target:jA.EventType,targetName:"SystemEvent.EventType"}]),u.PrivateNode=KA;let eP=e("Scene",mc("cc.Scene")((ac((QA=class extends zx{get renderScene(){return this._renderScene}get globals(){return this._globals}_updateScene(){this._scene=this}get native(){return this._nativeObj}_init(){this._nativeObj=new ha}constructor(e){super(e),rc(this,"autoReleaseAssets",JA,this),rc(this,"_globals",ZA,this),this.dependAssets=null,this._renderScene=null,this._inited=void 0,this._prefabSyncedInLiveReload=!1,this._pos=gn.ZERO,this._rot=Tn.IDENTITY,this._scale=gn.ONE,this._mat=On.IDENTITY,this._dirtyFlags=0,this._lpos=gn.ZERO,this._lrot=Tn.IDENTITY,this._lscale=gn.ONE,this._activeInHierarchy=!1,u.director&&u.director.root&&(this._renderScene=u.director.root.createScene({})),this._inited=!u.game||!u.game._isCloning,this._init()}destroy(){const e=rl.prototype.destroy.call(this);if(e){const e=this._children;for(let t=0;t<e.length;++t)e[t].active=!1}return this._renderScene&&u.director.root.destroyScene(this._renderScene),this._active=!1,this._activeInHierarchy=!1,e}addComponent(){throw new Error(F(3822))}_onHierarchyChanged(){}_onBatchCreated(e){super._onBatchCreated(e);const t=this._children.length;for(let n=0;n<t;++n)this.children[n]._siblingIndex=n,this._children[n]._onBatchCreated(e)}getPosition(e){return gn.copy(e||new gn,gn.ZERO)}getRotation(e){return Tn.copy(e||new Tn,Tn.IDENTITY)}getScale(e){return gn.copy(e||new gn,gn.ONE)}getWorldPosition(e){return gn.copy(e||new gn,gn.ZERO)}getWorldRotation(e){return Tn.copy(e||new Tn,Tn.IDENTITY)}getWorldScale(e){return gn.copy(e||new gn,gn.ONE)}getWorldMatrix(e){return On.copy(e||new On,On.IDENTITY)}getWorldRS(e){return On.copy(e||new On,On.IDENTITY)}getWorldRT(e){return On.copy(e||new On,On.IDENTITY)}get position(){return gn.ZERO}get worldPosition(){return gn.ZERO}get rotation(){return Tn.IDENTITY}get worldRotation(){return Tn.IDENTITY}get scale(){return gn.ONE}get worldScale(){return gn.ONE}get eulerAngles(){return gn.ZERO}get worldMatrix(){return On.IDENTITY}updateWorldTransform(){}_instantiate(){}_load(){this._inited||(zC(this),BC(this),this._onBatchCreated(false),this._inited=!0),this.walk(zx._setScene)}_activate(e){e=!1!==e,u.director._nodeActivator.activateNode(this,e),this._globals.activate(),this._renderScene&&this._renderScene.activate()}}).prototype,"globals",[Lc],Object.getOwnPropertyDescriptor(QA.prototype,"globals"),QA.prototype),JA=ac(QA.prototype,"autoReleaseAssets",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ZA=ac(QA.prototype,"_globals",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new xA}}),$A=QA))||$A);function tP(e,t){if(!t){const e=u.director.getScene();if(!e)return null;t=e}return t.getChildByPath(e)}u.Scene=eP,u.find=tP;const nP=He.fastRemoveAt,iP=rl.Flags.IsStartCalled,sP=rl.Flags.IsOnEnableCalled;function oP(e,t){const n=t.constructor._executionOrder,i=t._id;let s=0;for(let t=e.length-1,o=t>>>1;s<=t;o=s+t>>>1){const r=e[o],a=r.constructor._executionOrder;if(a>n)t=o-1;else if(a<n)s=o+1;else{const e=r._id;if(e>i)t=o-1;else{if(!(e<i))return o;s=o+1}}}return~s}function rP(e,t){const n=e.array;let i=e.i+1;for(;i<n.length;){const s=n[i];s.node._activeInHierarchy?++i:(e.removeAt(i),t&&(s._objFlags&=~t))}}rl.Flags.IsEditorOnEnableCalled;class aP{constructor(e){this._zero=void 0,this._neg=void 0,this._pos=void 0,this._invoke=void 0;const t=$;this._zero=new t([]),this._neg=new t([]),this._pos=new t([]),this._invoke=e}}function cP(e,t){return e.constructor._executionOrder-t.constructor._executionOrder}aP.stableRemoveInactive=rP;class lP extends aP{add(e){const t=e.constructor._executionOrder;(0===t?this._zero:t<0?this._neg:this._pos).array.push(e)}remove(e){const t=e.constructor._executionOrder;(0===t?this._zero:t<0?this._neg:this._pos).fastRemove(e)}cancelInactive(e){rP(this._zero,e),rP(this._neg,e),rP(this._pos,e)}invoke(){const e=this._neg;e.array.length>0&&(e.array.sort(cP),this._invoke(e),e.array.length=0),this._invoke(this._zero),this._zero.array.length=0;const t=this._pos;t.array.length>0&&(t.array.sort(cP),this._invoke(t),t.array.length=0)}}class hP extends aP{add(e){const t=e.constructor._executionOrder;if(0===t)this._zero.array.push(e);else{const n=t<0?this._neg.array:this._pos.array,i=oP(n,e);i<0&&n.splice(~i,0,e)}}remove(e){const t=e.constructor._executionOrder;if(0===t)this._zero.fastRemove(e);else{const n=t<0?this._neg:this._pos,i=oP(n.array,e);i>=0&&n.removeAt(i)}}invoke(e){this._neg.array.length>0&&this._invoke(this._neg,e),this._invoke(this._zero,e),this._pos.array.length>0&&this._invoke(this._pos,e)}}function uP(e,t,n){const i=`var a=it.array;for(it.i=0;it.i<a.length;++it.i){var c=a[it.i];${e}}`,s=t?Function("it","dt",i):Function("it",i);return function(e,t,n){return(i,s)=>{try{t(i,s)}catch(t){u._throw(t);const o=i.array;for(n&&(o[i.i]._objFlags|=n),++i.i;i.i<o.length;++i.i)try{e(o[i.i],s)}catch(e){u._throw(e),n&&(o[i.i]._objFlags|=n)}}}}(Function("c","dt",e),s,n)}const _P=uP(`c.start();c._objFlags|=${iP}`,!1,iP),dP=uP("c.update(dt)",!0),pP=uP("c.lateUpdate(dt)",!0),fP=e=>{const t=u.director._compScheduler,n=e.array;for(e.i=0;e.i<n.length;++e.i){const i=n[e.i];i._enabled&&(i.onEnable(),!i.node._activeInHierarchy||t._onEnabled(i))}};class mP{constructor(){this._deferredComps=[],this.unscheduleAll()}unscheduleAll(){this.startInvoker=new lP(_P),this.updateInvoker=new hP(dP),this.lateUpdateInvoker=new hP(pP),this._updating=!1}_onEnabled(e){u.director.getScheduler().resumeTarget(e),e._objFlags|=sP,this._updating?this._deferredComps.push(e):this._scheduleImmediate(e)}_onDisabled(e){u.director.getScheduler().pauseTarget(e),e._objFlags&=~sP;const t=this._deferredComps.indexOf(e);t>=0?nP(this._deferredComps,t):(!e.start||e._objFlags&iP||this.startInvoker.remove(e),e.update&&this.updateInvoker.remove(e),e.lateUpdate&&this.lateUpdateInvoker.remove(e))}enableComp(e,t){if(!(e._objFlags&sP)){if(e.onEnable){if(t)return void t.add(e);if(e.onEnable(),!e.node._activeInHierarchy)return}this._onEnabled(e)}}disableComp(e){e._objFlags&sP&&(e.onDisable&&e.onDisable(),this._onDisabled(e))}startPhase(){this._updating=!0,this.startInvoker.invoke(),this._startForNewComps()}updatePhase(e){this.updateInvoker.invoke(e)}lateUpdatePhase(e){this.lateUpdateInvoker.invoke(e),this._updating=!1,this._startForNewComps()}_startForNewComps(){this._deferredComps.length>0&&(this._deferredSchedule(),this.startInvoker.invoke())}_scheduleImmediate(e){"function"!=typeof e.start||e._objFlags&iP||this.startInvoker.add(e),"function"==typeof e.update&&this.updateInvoker.add(e),"function"==typeof e.lateUpdate&&this.lateUpdateInvoker.add(e)}_deferredSchedule(){const e=this._deferredComps;for(let t=0,n=e.length;t<n;t++)this._scheduleImmediate(e[t]);e.length=0}}const gP=rl.Flags.IsPreloadStarted,vP=rl.Flags.IsOnLoadStarted,yP=rl.Flags.IsOnLoadCalled,xP=rl.Flags.Deactivating;class SP extends aP{add(e){this._zero.array.push(e)}remove(e){this._zero.fastRemove(e)}cancelInactive(e){aP.stableRemoveInactive(this._zero,e)}invoke(){this._invoke(this._zero),this._zero.array.length=0}}const CP=uP("c.__preload();"),EP=uP(`c.onLoad();c._objFlags|=${yP}`,!1,yP),TP=new Ve(4);function bP(e,t,n){N(3817,e.name,n),console.log("Corrupted component value:",t),t?e._removeComponent(t):He.removeAt(e._components,n)}TP.get=function(){const e=this._get()||{preload:new SP(CP),onLoad:new lP(EP),onEnable:new lP(fP)};e.preload._zero.i=-1;let t=e.onLoad;return t._zero.i=-1,t._neg.i=-1,t._pos.i=-1,t=e.onEnable,t._zero.i=-1,t._neg.i=-1,t._pos.i=-1,e};class AP{constructor(){this.resetComp=void 0,this.reset()}reset(){this._activatingStack=[]}activateNode(e,t){if(t){const t=TP.get();this._activatingStack.push(t),this._activateNodeRecursively(e,t.preload,t.onLoad,t.onEnable),t.preload.invoke(),t.onLoad.invoke(),t.onEnable.invoke(),this._activatingStack.pop(),TP.put(t)}else{this._deactivateNodeRecursively(e);const t=this._activatingStack;for(const e of t)e.preload.cancelInactive(gP),e.onLoad.cancelInactive(vP),e.onEnable.cancelInactive()}e.emit(Ex.ACTIVE_IN_HIERARCHY_CHANGED,e)}activateComp(e,t,n,i){if(cl(e,!0)&&(e._objFlags&gP||(e._objFlags|=gP,e.__preload&&(t?t.add(e):e.__preload())),e._objFlags&vP||(e._objFlags|=vP,e.onLoad?n?n.add(e):(e.onLoad(),e._objFlags|=yP):e._objFlags|=yP),e._enabled)){if(!e.node._activeInHierarchy)return;u.director._compScheduler.enableComp(e,i)}}destroyComp(e){u.director._compScheduler.disableComp(e),e.onDestroy&&e._objFlags&yP&&e.onDestroy()}_activateNodeRecursively(e,t,n,i){if(e._objFlags&xP)return void N(3816,e.name);e._activeInHierarchy=!0;let s=e._components.length;for(let o=0;o<s;++o){const r=e._components[o];r instanceof u.Component?this.activateComp(r,t,n,i):(bP(e,r,o),--o,--s)}for(let s=0,o=e._children.length;s<o;++s){const o=e._children[s];o._active&&this._activateNodeRecursively(o,t,n,i)}e._onPostActivated(!0)}_deactivateNodeRecursively(e){e._objFlags|=xP,e._activeInHierarchy=!1;const t=e._components.length;for(let n=0;n<t;++n){const t=e._components[n];if(t._enabled&&(u.director._compScheduler.disableComp(t),e._activeInHierarchy))return void(e._objFlags&=~xP)}for(let t=0,n=e._children.length;t<n;++t){const n=e._children[t];if(n._activeInHierarchy&&(this._deactivateNodeRecursively(n),e._activeInHierarchy))return void(e._objFlags&=~xP)}e._onPostActivated(!1),e._objFlags&=~xP}}var PP,wP,IP;e("NodeActivator",AP);let RP=e("SceneAsset",mc("cc.SceneAsset")((IP=ac((wP=class extends xh{constructor(...e){super(...e),rc(this,"scene",IP,this)}initDefault(e){super.initDefault(e),this.scene=new eP("New Scene")}validate(){return!!this.scene}}).prototype,"scene",[Lc,Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),PP=wP))||PP);var DP,OP,NP;u.SceneAsset=RP;let MP=e("TextAsset",mc("cc.TextAsset")((NP=ac((OP=class extends xh{constructor(...e){super(...e),rc(this,"text",NP,this)}toString(){return this.text}}).prototype,"text",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),DP=OP))||DP);var LP,BP,FP;u.TextAsset=MP;let zP,UP=e("JsonAsset",mc("cc.JsonAsset")((FP=ac((BP=class extends xh{constructor(...e){super(...e),rc(this,"json",FP,this)}}).prototype,"json",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),LP=BP))||LP);u.JsonAsset=UP;class GP{_init(){this._nativeObj=new Ra,this._nativeObj.fog=this.fog.native,this._nativeObj.ambient=this.ambient.native,this._nativeObj.skybox=this.skybox.native,this._nativeObj.shadow=this.shadows.native,this._nativeObj.octree=this.octree.native}get native(){return this._nativeObj}get isHDR(){return this._isHDR}set isHDR(e){this._isHDR=e,this._nativeObj.isHDR=e}get shadingScale(){return this._shadingScale}set shadingScale(e){this._shadingScale!==e&&(this._shadingScale=e,this._nativeObj.shadingScale=e,this._pipeline.emit(jy.ATTACHMENT_SCALE_CAHNGED,e))}constructor(){this.fog=new Av,this.ambient=new mv,this.skybox=new Cv,this.shadows=new Eg,this.octree=new Pv,this.validPunctualLights=[],this.renderObjects=[],this.castShadowObjects=[],this.dirShadowObjects=[],this.shadowFrameBufferMap=new Map,this._geometryRendererMaterials=[],this._geometryRendererPasses=[],this._geometryRendererShaders=[],this._occlusionQueryVertexBuffer=null,this._occlusionQueryIndicesBuffer=null,this._occlusionQueryInputAssembler=null,this._occlusionQueryMaterial=null,this._occlusionQueryShader=null,this._isHDR=!0,this._shadingScale=1,this._init(),this.shadingScale=1}activate(e,t){return this._device=e,this._pipeline=t,this.initGeometryRendererMaterials(),this.initOcclusionQuery(),!0}initGeometryRendererMaterials(){let e=0;for(let t=0;t<6;t++){this._geometryRendererMaterials[t]=new lg,this._geometryRendererMaterials[t]._uuid=`geometry-renderer-material-${t}`,this._geometryRendererMaterials[t].initialize({effectName:"geometry-renderer",technique:t});for(let n=0;n<this._geometryRendererMaterials[t].passes.length;++n)this._geometryRendererPasses[e]=this._geometryRendererMaterials[t].passes[n],this._geometryRendererShaders[e]=this._geometryRendererMaterials[t].passes[n].getShaderVariant(),e++}{const e=[],t=[];for(let n=0;n<this._geometryRendererPasses.length;++n)e.push(this._geometryRendererPasses[n].native),t.push(this._geometryRendererShaders[n]);this._nativeObj.geometryRendererPasses=e,this._nativeObj.geometryRendererShaders=t}}get geometryRendererPasses(){return this._geometryRendererPasses}get geometryRendererShaders(){return this._geometryRendererShaders}initOcclusionQuery(){if(this._occlusionQueryInputAssembler||(this._occlusionQueryInputAssembler=this._createOcclusionQueryIA(),this._nativeObj.occlusionQueryInputAssembler=this._occlusionQueryInputAssembler),!this._occlusionQueryMaterial){const e=new lg;e._uuid="default-occlusion-query-material",e.initialize({effectName:"occlusion-query"}),this._occlusionQueryMaterial=e,this._occlusionQueryShader=e.passes[0].getShaderVariant(),this._nativeObj.occlusionQueryPass=this._occlusionQueryMaterial.passes[0].native,this._nativeObj.occlusionQueryShader=this._occlusionQueryShader}}getOcclusionQueryPass(){return this._occlusionQueryMaterial.passes[0]}onGlobalPipelineStateChanged(){}destroy(){var e,t,n;this.ambient.destroy(),this.skybox.destroy(),this.fog.destroy(),this.shadows.destroy(),this.octree.destroy(),this.validPunctualLights.length=0,null===(e=this._occlusionQueryInputAssembler)||void 0===e||e.destroy(),this._occlusionQueryInputAssembler=null,null===(t=this._occlusionQueryVertexBuffer)||void 0===t||t.destroy(),this._occlusionQueryVertexBuffer=null,null===(n=this._occlusionQueryIndicesBuffer)||void 0===n||n.destroy(),this._occlusionQueryIndicesBuffer=null,this._nativeObj=null}_createOcclusionQueryIA(){const e=this._device,t=new Float32Array([-1,-1,-1,1,-1,-1,-1,1,-1,1,1,-1,-1,-1,1,1,-1,1,-1,1,1,1,1,1]),n=3*Float32Array.BYTES_PER_ELEMENT,i=8*n;this._occlusionQueryVertexBuffer=e.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.DEVICE,i,n)),this._occlusionQueryVertexBuffer.update(t);const s=new Uint16Array([0,2,1,1,2,3,4,5,6,5,7,6,1,3,7,1,7,5,0,4,6,0,6,2,0,1,5,0,5,4,2,6,7,2,7,3]),o=Uint16Array.BYTES_PER_ELEMENT,r=36*o;this._occlusionQueryIndicesBuffer=e.createBuffer(new es(si.INDEX|si.TRANSFER_DST,ai.DEVICE,r,o)),this._occlusionQueryIndicesBuffer.update(s);const a=[new vs("a_position",ti.RGB32F)],c=new xs(a,[this._occlusionQueryVertexBuffer],this._occlusionQueryIndicesBuffer);return e.createInputAssembler(c)}}!function(e){e[e.NONE=0]="NONE",e[e.FXAA=1]="FXAA"}(zP||(zP={}));class VP extends GP{constructor(...e){super(...e),this._antiAliasing=zP.NONE}set antiAliasing(e){if(this._antiAliasing=e,this._postprocessMaterial){const t=this._postprocessMaterial.passes[0].defines;Object.assign(t,{ANTIALIAS_TYPE:e});const n=new lg;n.initialize({effectAsset:this._postprocessMaterial.effectAsset,defines:t});for(let e=0;e<n.passes.length;++e)n.passes[e].tryCompile();this._postprocessMaterial=n}}get antiAliasing(){return this._antiAliasing}get bloomMaterial(){return this._bloomMaterial}set bloomMaterial(e){this._bloomMaterial!==e&&e&&(this._bloomMaterial=e,this.updatePipelinePassInfo())}get postprocessMaterial(){return this._postprocessMaterial}set postprocessMaterial(e){this._postprocessMaterial!==e&&e&&(this._postprocessMaterial=e,this.updatePipelinePassInfo())}onGlobalPipelineStateChanged(){this.updatePipelinePassInfo()}updateBloomPass(){if(!this._bloomMaterial)return;const e=this._bloomMaterial.passes[0];e.beginChangeStatesSilently(),e.tryCompile(),e.endChangeStatesSilently();const t=[],n=[];for(let e=0;e<6;++e){const i=this._bloomMaterial.passes[1+e];i.beginChangeStatesSilently(),i.tryCompile(),i.endChangeStatesSilently();const s=this._bloomMaterial.passes[7+e];s.beginChangeStatesSilently(),s.tryCompile(),s.endChangeStatesSilently(),t.push(i.native),n.push(s.native)}const i=this._bloomMaterial.passes[13];i.beginChangeStatesSilently(),i.tryCompile(),i.endChangeStatesSilently(),this._nativeObj.bloomPrefilterPassShader=e.getShaderVariant(),this._nativeObj.bloomPrefilterPass=e.native,this._nativeObj.bloomDownsamplePassShader=this._bloomMaterial.passes[1].getShaderVariant(),this._nativeObj.bloomDownsamplePass=t,this._nativeObj.bloomUpsamplePassShader=this._bloomMaterial.passes[7].getShaderVariant(),this._nativeObj.bloomUpsamplePass=n,this._nativeObj.bloomCombinePassShader=i.getShaderVariant(),this._nativeObj.bloomCombinePass=i.native}updatePostProcessPass(){if(!this.postprocessMaterial)return;const e=this.postprocessMaterial.passes[0];e.beginChangeStatesSilently(),e.tryCompile(),e.endChangeStatesSilently(),this._nativeObj.pipelinePostPassShader=e.getShaderVariant(),this._nativeObj.pipelinePostPass=e.native}initPipelinePassInfo(){const e=new lg;e._uuid="builtin-deferred-material",e.initialize({effectName:"deferred-lighting"});for(let t=0;t<e.passes.length;++t)e.passes[t].tryCompile();this._deferredLightingMaterial=e;const t=new lg;t._uuid="builtin-bloom-material",t.initialize({effectName:"bloom"});for(let e=0;e<t.passes.length;++e)t.passes[e].tryCompile();this._bloomMaterial=t;const n=new lg;n._uuid="builtin-post-process-material",Qe.ENABLE_ANTIALIAS_FXAA&&(this._antiAliasing=zP.FXAA),n.initialize({effectName:"post-process",defines:{ANTIALIAS_TYPE:this._antiAliasing}});for(let e=0;e<n.passes.length;++e)n.passes[e].tryCompile();this._postprocessMaterial=n,this.updatePipelinePassInfo()}get deferredLightingMaterial(){return this._deferredLightingMaterial}set deferredLightingMaterial(e){this._deferredLightingMaterial!==e&&e&&(this._deferredLightingMaterial=e,this.updatePipelinePassInfo())}updatePipelinePassInfo(){this.updateBloomPass(),this.updatePostProcessPass(),this.updateDeferredPassInfo()}activate(e,t){return super.activate(e,t),this.initPipelinePassInfo(),!0}updateDeferredPassInfo(){this.updateDeferredLightPass()}updateDeferredLightPass(){if(!this._deferredLightingMaterial)return;this.shadows.enabled&&(this._pipeline.macros.CC_RECEIVE_SHADOW=1);const e=this._deferredLightingMaterial.passes[0];e.beginChangeStatesSilently(),e.tryCompile(),e.endChangeStatesSilently(),this._nativeObj.deferredLightPassShader=e.getShaderVariant(),this._nativeObj.deferredLightPass=e.native}}nr.getPhaseID=zm;const HP=e("RenderPipeline",nr.RenderPipeline),kP=(e("RenderFlow",nr.RenderFlow),e("RenderStage",nr.RenderStage),e("InstancedBuffer",nr.InstancedBuffer),e("PipelineStateManager",nr.PipelineStateManager));nr.InstancedBuffer.get;let jP=nr.PipelineStateManager.getOrCreatePipelineState;function WP(){const e=new qP;return e.init(),e}nr.PipelineStateManager.getOrCreatePipelineState=function(e,t,n,i,s){return jP.call(e,t.native,n,i,s)};class qP extends nr.ForwardPipeline{constructor(){super(),this.pipelineSceneData=new GP,this.geometryRenderer=new fy,this._tag=0,this._flows=[],this.renderTextures=[],this.materials=[]}on(e,t,n,i){}once(e,t,n){}off(e,t,n){}emit(e,t,n,i,s,o){}targetOff(e){}removeAll(e){}hasEventListener(e,t,n){return!1}init(){this.setPipelineSharedSceneData(this.pipelineSceneData.native),this.setGeometryRenderer(this.geometryRenderer.native);for(let e=0;e<this._flows.length;e++)this._flows[e].init(this);const e=new nr.RenderPipelineInfo(this._tag,this._flows);this.initialize(e)}activate(e){return this.geometryRenderer.activate(u.director.root.device,this),super.activate(e)&&this.pipelineSceneData.activate(u.director.root.device,this)}render(e){this.geometryRenderer.flush();let t=[];for(let n=0,i=e.length;n<i;++n)t.push(e[n].native);super.render(t)}set profiler(e){this.setProfiler(e&&e.native)}destroy(){this.pipelineSceneData.destroy(),this.geometryRenderer.destroy(),super.destroy()}}e("ForwardPipeline",qP),Te(qP.prototype,xh.prototype);const XP=qP.prototype.onLoaded;qP.prototype.onLoaded=function(){XP&&XP.call(this),this.init()};class YP extends nr.ForwardFlow{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this._stages=[]}init(e){for(let t=0;t<this._stages.length;t++)this._stages[t].init(e);const t=new nr.RenderFlowInfo(this._name,this._priority,this._tag,this._stages);this.initialize(t)}}e("ForwardFlow",YP);class KP extends nr.ShadowFlow{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this._stages=[]}init(e){for(let t=0;t<this._stages.length;t++)this._stages[t].init(e);const t=new nr.RenderFlowInfo(this._name,this._priority,this._tag,this._stages);this.initialize(t)}}e("ShadowFlow",KP);class $P extends nr.ForwardStage{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this.renderQueues=[]}init(e){const t=[];for(let e=0;e<this.renderQueues.length;e++)t.push(this.renderQueues[e].init());const n=new nr.RenderStageInfo(this._name,this._priority,this._tag,t);this.initialize(n)}}e("ForwardStage",$P);class QP extends nr.ShadowStage{constructor(){super(),this._name=0,this._priority=0,this._tag=0}init(e){const t=new nr.RenderStageInfo(this._name,this._priority,this._tag,[]);this.initialize(t)}}e("ShadowStage",QP);class JP{constructor(){this.isTransparent=!1,this.sortMode=0,this.stages=[],this.isTransparent=!1,this.sortMode=0,this.stages=[]}init(){return new nr.RenderQueueDesc(this.isTransparent,this.sortMode,this.stages)}}e("RenderQueueDesc",JP);class ZP extends nr.DeferredPipeline{constructor(){super(),this.pipelineSceneData=new VP,this.geometryRenderer=new fy,this._tag=0,this._flows=[],this.renderTextures=[],this.materials=[]}on(e,t,n,i){}once(e,t,n){}off(e,t,n){}emit(e,t,n,i,s,o){}targetOff(e){}removeAll(e){}hasEventListener(e,t,n){return!1}init(){this.setPipelineSharedSceneData(this.pipelineSceneData.native),this.setGeometryRenderer(this.geometryRenderer.native);for(let e=0;e<this._flows.length;e++)this._flows[e].init(this);let e=new nr.RenderPipelineInfo(this._tag,this._flows);this.initialize(e)}activate(e){return this.geometryRenderer.activate(u.director.root.device,this),super.activate(e)&&this.pipelineSceneData.activate(u.director.root.device,this)}render(e){this.geometryRenderer.flush();let t=[];for(let n=0,i=e.length;n<i;++n)t.push(e[n].native);super.render(t)}set profiler(e){this.setProfiler(e&&e.native)}destroy(){this.fog.destroy(),this.ambient.destroy(),this.skybox.destroy(),this.shadows.destroy(),this.pipelineSceneData.destroy(),this.geometryRenderer.destroy(),super.destroy()}}e("DeferredPipeline",ZP),Te(ZP.prototype,xh.prototype);const ew=ZP.prototype.onLoaded;ZP.prototype.onLoaded=function(){ew&&ew.call(this),this.init()};class tw extends nr.MainFlow{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this._stages=[]}init(e){for(let t=0;t<this._stages.length;t++)this._stages[t].init(e);let t=new nr.RenderFlowInfo(this._name,this._priority,this._tag,this._stages);this.initialize(t)}}e("MainFlow",tw);class nw extends nr.GbufferStage{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this.renderQueues=[]}init(e){const t=[];for(let e=0;e<this.renderQueues.length;e++)t.push(this.renderQueues[e].init());let n=new nr.RenderStageInfo(this._name,this._priority,this._tag,t);this.initialize(n)}}e("GbufferStage",nw);class iw extends nr.LightingStage{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this.renderQueues=[],this._deferredMaterial=null}init(e){const t=[];for(let e=0;e<this.renderQueues.length;e++)t.push(this.renderQueues[e].init());e.pipelineSceneData.deferredLightingMaterial=this._deferredMaterial;let n=new nr.RenderStageInfo(this._name,this._priority,this._tag,t);this.initialize(n)}}e("LightingStage",iw);class sw extends nr.BloomStage{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this.renderQueues=[],this._bloomMaterial=null}init(e){const t=[];for(let e=0;e<this.renderQueues.length;e++)t.push(this.renderQueues[e].init());e.pipelineSceneData.bloomMaterial=this._bloomMaterial;let n=new nr.RenderStageInfo(this._name,this._priority,this._tag,t);this.initialize(n)}}e("BloomStage",sw);class ow extends nr.PostProcessStage{constructor(){super(),this._name=0,this._priority=0,this._tag=0,this.renderQueues=[],this._postProcessMaterial=null}init(e){const t=[];for(let e=0;e<this.renderQueues.length;e++)t.push(this.renderQueues[e].init());e.pipelineSceneData.postprocessMaterial=this._postProcessMaterial;let n=new nr.RenderStageInfo(this._name,this._priority,this._tag,t);this.initialize(n)}}e("PostProcessStage",ow),Le("DeferredPipeline",ZP),Le("MainFlow",tw),Le("GbufferStage",nw),Le("LightingStage",iw),Le("BloomStage",sw),Le("PostProcessStage",ow),Le("ForwardPipeline",qP),Le("ForwardFlow",YP),Le("ShadowFlow",KP),Le("ForwardStage",$P),Le("ShadowStage",QP),Le("RenderQueueDesc",JP);const rw=new Bn;class aw{set splashFinish(e){this._splashFinish=e,this._tryToStart()}set loadFinish(e){this._loadFinish=e,this._tryToStart()}pauseRendering(){this.isPause=!0}resumeRendering(){this.isPause=!1}main(e){if(null!=e){if(window._CCSettings&&window._CCSettings.splashScreen){const e=this.settings=window._CCSettings.splashScreen;e.totalTime=null!=this.settings.totalTime?this.settings.totalTime:3e3,e.base64src=this.settings.base64src||"",e.effect=this.settings.effect||"FADE-INOUT",e.clearColor=this.settings.clearColor||new $i(.88,.88,.88,1),e.displayRatio=null!=this.settings.displayRatio?this.settings.displayRatio:.4,e.displayWatermark=null==this.settings.displayWatermark||this.settings.displayWatermark}else this.settings={totalTime:3e3,base64src:"",effect:"FADE-INOUT",clearColor:new $i(.88,.88,.88,1),displayRatio:.4,displayWatermark:!0};if(""===this.settings.base64src||this.settings.totalTime<=0)this.callBack&&this.callBack(),this.callBack=null,this.settings=null,this._directCall=!0;else{u.view.resizeWithBrowserSize(!0);const t=window._CCSettings.designResolution;t?u.view.setDesignResolutionSize(t.width,t.height,t.policy):u.view.setDesignResolutionSize(960,640,4),this.device=e.device,this.swapchain=e.mainWindow.swapchain,this.framebuffer=e.mainWindow.framebuffer,u.game.once(u.Game.EVENT_GAME_INITED,(()=>{u.director._lateUpdate=performance.now()}),u.director),this.callBack=null,this.cancelAnimate=!1,this.startTime=-1,this.preInit(),this.logoImage=new Image,this.logoImage.onload=this.init.bind(this),this.logoImage.src=this.settings.base64src}}else C("RENDER ROOT IS NULL.")}setOnFinish(e){if(this._directCall&&e)return aw._ins=void 0,void e();this.callBack=e}_tryToStart(){this._splashFinish&&this._loadFinish&&this.callBack&&(this.callBack(),this.hide(),u.game.resume())}preInit(){const e=this.settings.clearColor;this.clearColors=[new $i(e.x,e.y,e.z,e.w)];const{device:t,swapchain:n}=this;this.renderArea=new Hi(0,0,n.width,n.height),this.cmdBuff=t.commandBuffer;const i=new Float32Array([.5,.5,1,0,-.5,.5,0,0,.5,-.5,1,1,-.5,-.5,0,1]),s=4*Float32Array.BYTES_PER_ELEMENT,o=4*s;this.vertexBuffers=t.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.DEVICE,o,s)),this.vertexBuffers.update(i);const r=new Uint16Array([0,1,2,1,3,2]),a=Uint16Array.BYTES_PER_ELEMENT,c=6*a;this.indicesBuffers=t.createBuffer(new es(si.INDEX|si.TRANSFER_DST,ai.DEVICE,c,a)),this.indicesBuffers.update(r);const l=[new vs("a_position",ti.RG32F),new vs("a_texCoord",ti.RG32F)],h=new xs(l,[this.vertexBuffers],this.indicesBuffers);this.quadAssmebler=t.createInputAssembler(h),this.projection=new On,On.ortho(this.projection,-1,1,-1,1,-1,1,t.capabilities.clipSpaceMinZ,t.capabilities.clipSpaceSignY,n.surfaceTransform)}init(){this.initLogo(),this.settings.displayWatermark&&this.initWarterMark();const e=t=>{if(this.cancelAnimate)return;const n=this.settings,{device:i,swapchain:s}=this;On.ortho(this.projection,-1,1,-1,1,-1,1,i.capabilities.clipSpaceMinZ,i.capabilities.clipSpaceSignY,s.surfaceTransform);const o=s.width,r=s.height,a=o<r?o:r;this.startTime<0&&(this.startTime=t);const c=t-this.startTime;let l=Zu(Yt(c/n.totalTime));"NONE"===n.effect&&(l=1);const h=this.logoTexture.width,u=this.logoTexture.height,_=a*n.displayRatio;let d=_*h/u,p=_;if(s.surfaceTransform!==Zn.ROTATE_90&&s.surfaceTransform!==Zn.ROTATE_270||(d=_*o/r,p=_*u/h*r/o),this.logoMat.setProperty("resolution",rw.set(o,r),0),this.logoMat.setProperty("scale",rw.set(d,p),0),this.logoMat.setProperty("translate",rw.set(.5*o,.5*r),0),this.logoMat.setProperty("percent",l),this.logoMat.setProperty("u_projection",this.projection),this.logoMat.passes[0].update(),n.displayWatermark&&this.watermarkMat){const e=.5*a,t=this.watermarkTexture.width;let n=e,i=e*this.watermarkTexture.height/t;s.surfaceTransform!==Zn.ROTATE_90&&s.surfaceTransform!==Zn.ROTATE_270||(n=.5*e,i=e*o/r*.5),this.watermarkMat.setProperty("resolution",rw.set(o,r),0),this.watermarkMat.setProperty("scale",rw.set(n,i),0),this.watermarkMat.setProperty("translate",rw.set(.5*o,.1*r),0),this.watermarkMat.setProperty("percent",l),this.watermarkMat.setProperty("u_projection",this.projection),this.watermarkMat.passes[0].update()}this.isPause||(this.frame(),c>n.totalTime&&(this.splashFinish=!0)),requestAnimationFrame(e)};u.game.pause(),this.handle=requestAnimationFrame(e)}hide(){cancelAnimationFrame(this.handle),this.cancelAnimate=!0,setTimeout(this.destroy.bind(this))}initLogo(){const e=this.device;this.logoMat=new lg,this.logoMat.initialize({effectName:"splash-screen"});const t=new cs;t.addressU=fi.CLAMP,t.addressV=fi.CLAMP,t.addressW=fi.CLAMP,this.sampler=e.getSampler(t),this.logoTexture=e.createTexture(new rs(ci.TEX2D,li.SAMPLED|li.TRANSFER_DST,ti.RGBA8,this.logoImage.width,this.logoImage.height));const n=this.logoMat.passes[0],i=n.getBinding("mainTexture");n.bindTexture(i,this.logoTexture),this.shader=n.getShaderVariant();const s=n.descriptorSet;s.bindSampler(i,this.sampler),s.update();const o=new Yi;o.texExtent.width=this.logoImage.width,o.texExtent.height=this.logoImage.height,o.texExtent.depth=1,e.copyTexImagesToTexture([this.logoImage],this.logoTexture,[o])}initWarterMark(){const e=document.createElement("canvas");e.width=330,e.height=30,e.style.width=`${e.width}`,e.style.height=`${e.height}`;const t=e.getContext("2d");t.font="18px Arial",t.textBaseline="top",t.textAlign="left",t.fillStyle="`#424242`";const n="Powered by Cocos Creator",i=t.measureText(n);t.fillText(n,(330-i.width)/2,6);const s=new Yi;s.texExtent.width=e.width,s.texExtent.height=e.height,s.texExtent.depth=1,this.watermarkTexture=this.device.createTexture(new rs(ci.TEX2D,li.SAMPLED|li.TRANSFER_DST,ti.RGBA8,e.width,e.height)),this.device.copyTexImagesToTexture([e],this.watermarkTexture,[s]),this.watermarkMat=new lg,this.watermarkMat.initialize({effectName:"splash-screen"});const o=this.watermarkMat.passes[0],r=o.getBinding("mainTexture");o.bindTexture(r,this.watermarkTexture),o.descriptorSet.update()}frame(){const{device:e,swapchain:t}=this;e.acquire([t]);const n=this.cmdBuff,i=this.framebuffer,s=this.renderArea;s.width=t.width,s.height=t.height,n.begin(),n.beginRenderPass(i.renderPass,i,s,this.clearColors,1,0);const o=this.logoMat.passes[0],r=kP.getOrCreatePipelineState(e,o,this.shader,i.renderPass,this.quadAssmebler);if(n.bindPipelineState(r),n.bindDescriptorSet(up.MATERIAL,o.descriptorSet),n.bindInputAssembler(this.quadAssmebler),n.draw(this.quadAssmebler),this.settings.displayWatermark&&this.watermarkMat){const t=this.watermarkMat.passes[0],s=kP.getOrCreatePipelineState(e,t,this.shader,i.renderPass,this.quadAssmebler);n.bindPipelineState(s),n.bindDescriptorSet(up.MATERIAL,t.descriptorSet),n.bindInputAssembler(this.quadAssmebler),n.draw(this.quadAssmebler)}n.endRenderPass(),n.end(),e.flushCommands([n]),e.queue.submit([n]),e.present()}destroy(){this.callBack=null,this.device=null,this.swapchain=null,this.clearColors=null,this.logoImage.destroy&&this.logoImage.destroy(),this.logoImage=null,this.framebuffer=null,this.renderArea=null,this.cmdBuff=null,this.shader=null,this.logoMat.destroy(),this.logoMat=null,this.logoTexture.destroy(),this.logoTexture=null,this.quadAssmebler.destroy(),this.quadAssmebler=null,this.vertexBuffers.destroy(),this.vertexBuffers=null,this.indicesBuffers.destroy(),this.indicesBuffers=null,this.sampler=null,this.watermarkTexture&&(this.watermarkMat.destroy(),this.watermarkMat=null,this.watermarkTexture.destroy(),this.watermarkTexture=null),this.settings=null,aw._ins=void 0}static get instance(){return aw._ins||(aw._ins=new aw),aw._ins}constructor(){this.handle=0,this.callBack=null,this.cancelAnimate=!1,this.startTime=-1,this.isPause=!1,this._splashFinish=!1,this._loadFinish=!1,this._directCall=!1}}aw._ins=void 0,u.internal.SplashScreen=aw;class cw{constructor(){this._id="",this._priority=0,this._executeInEditMode=!1}set priority(e){this._priority=e}get priority(){return this._priority}set id(e){this._id=e}get id(){return this._id}static sortByPriority(e,t){return e._priority<t._priority?1:e._priority>t.priority?-1:0}init(){}update(e){}postUpdate(e){}}e("System",cw),cw.Priority=qe({LOW:0,MEDIUM:100,HIGH:200,SCHEDULER:1<<31>>>0});const lw=new ie("Scheduler");class hw{constructor(e,t,n,i){this.target=void 0,this.priority=void 0,this.paused=void 0,this.markedForDeletion=void 0,this.target=e,this.priority=t,this.paused=n,this.markedForDeletion=i}}hw.get=(e,t,n,i)=>{let s=hw._listEntries.pop();return s?(s.target=e,s.priority=t,s.paused=n,s.markedForDeletion=i):s=new hw(e,t,n,i),s},hw.put=e=>{hw._listEntries.length<20&&(e.target=null,hw._listEntries.push(e))},hw._listEntries=[];class uw{constructor(e,t,n,i){this.list=void 0,this.entry=void 0,this.target=void 0,this.callback=void 0,this.list=e,this.entry=t,this.target=n,this.callback=i}}uw.get=(e,t,n,i)=>{let s=uw._hashUpdateEntries.pop();return s?(s.list=e,s.entry=t,s.target=n,s.callback=i):s=new uw(e,t,n,i),s},uw.put=e=>{uw._hashUpdateEntries.length<20&&(e.list=e.entry=e.target=e.callback=null,uw._hashUpdateEntries.push(e))},uw._hashUpdateEntries=[];class _w{constructor(e,t,n,i,s,o){this.timers=void 0,this.target=void 0,this.timerIndex=void 0,this.currentTimer=void 0,this.currentTimerSalvaged=void 0,this.paused=void 0,this.timers=e,this.target=t,this.timerIndex=n,this.currentTimer=i,this.currentTimerSalvaged=s,this.paused=o}}_w.get=(e,t,n,i,s,o)=>{let r=_w._hashTimerEntries.pop();return r?(r.timers=e,r.target=t,r.timerIndex=n,r.currentTimer=i,r.currentTimerSalvaged=s,r.paused=o):r=new _w(e,t,n,i,s,o),r},_w.put=e=>{_w._hashTimerEntries.length<20&&(e.timers=e.target=e.currentTimer=null,_w._hashTimerEntries.push(e))},_w._hashTimerEntries=[];class dw{constructor(){this._lock=void 0,this._scheduler=void 0,this._elapsed=void 0,this._runForever=void 0,this._useDelay=void 0,this._timesExecuted=void 0,this._repeat=void 0,this._delay=void 0,this._interval=void 0,this._target=void 0,this._callback=void 0,this._lock=!1,this._scheduler=null,this._elapsed=-1,this._runForever=!1,this._useDelay=!1,this._timesExecuted=0,this._repeat=0,this._delay=0,this._interval=0,this._target=null,this._callback=null}initWithCallback(e,t,n,i,s,o){return this._lock=!1,this._scheduler=e,this._target=n,this._callback=t,this._elapsed=-1,this._interval=i,this._delay=o,this._useDelay=this._delay>0,this._repeat=s,this._runForever=this._repeat===u.macro.REPEAT_FOREVER,!0}getInterval(){return this._interval}setInterval(e){this._interval=e}update(e){-1===this._elapsed?(this._elapsed=0,this._timesExecuted=0):(this._elapsed+=e,this._runForever&&!this._useDelay?this._elapsed>=this._interval&&(this.trigger(),this._elapsed=0):(this._useDelay?this._elapsed>=this._delay&&(this.trigger(),this._elapsed-=this._delay,this._timesExecuted+=1,this._useDelay=!1):this._elapsed>=this._interval&&(this.trigger(),this._elapsed=0,this._timesExecuted+=1),this._callback&&!this._runForever&&this._timesExecuted>this._repeat&&this.cancel()))}getCallback(){return this._callback}trigger(){this._target&&this._callback&&(this._lock=!0,this._callback.call(this._target,this._elapsed),this._lock=!1)}cancel(){this._scheduler.unschedule(this._callback,this._target)}}dw._timers=[],dw.get=()=>dw._timers.pop()||new dw,dw.put=e=>{dw._timers.length<20&&!e._lock&&(e._scheduler=e._target=e._callback=null,dw._timers.push(e))};class pw extends cw{static enableForTarget(e){let t=!1;(e.uuid||e.id)&&(t=!0),t||(e.__instanceId?D(1513):e.id=lw.getNewId())}constructor(){super(),this._timeScale=void 0,this._updatesNegList=void 0,this._updates0List=void 0,this._updatesPosList=void 0,this._hashForUpdates=void 0,this._hashForTimers=void 0,this._currentTarget=void 0,this._currentTargetSalvaged=void 0,this._updateHashLocked=void 0,this._arrayForTimers=void 0,this._timeScale=1,this._updatesNegList=[],this._updates0List=[],this._updatesPosList=[],this._hashForUpdates=pe(!0),this._hashForTimers=pe(!0),this._currentTarget=null,this._currentTargetSalvaged=!1,this._updateHashLocked=!1,this._arrayForTimers=[]}setTimeScale(e){this._timeScale=e}getTimeScale(){return this._timeScale}update(e){let t,n,i,s,o;for(this._updateHashLocked=!0,1!==this._timeScale&&(e*=this._timeScale),t=0,n=this._updatesNegList,i=n.length;t<i;t++)s=n[t],s.paused||s.markedForDeletion||s.target.update(e);for(t=0,n=this._updates0List,i=n.length;t<i;t++)s=n[t],s.paused||s.markedForDeletion||s.target.update(e);for(t=0,n=this._updatesPosList,i=n.length;t<i;t++)s=n[t],s.paused||s.markedForDeletion||s.target.update(e);const r=this._arrayForTimers;for(t=0;t<r.length;t++){if(o=r[t],this._currentTarget=o,this._currentTargetSalvaged=!1,!o.paused)for(o.timerIndex=0;o.timerIndex<o.timers.length;++o.timerIndex)o.currentTimer=o.timers[o.timerIndex],o.currentTimerSalvaged=!1,o.currentTimer.update(e),o.currentTimer=null;this._currentTargetSalvaged&&0===this._currentTarget.timers.length&&(this._removeHashElement(this._currentTarget),--t)}for(t=0,n=this._updatesNegList;t<n.length;)s=n[t],s.markedForDeletion?this._removeUpdateFromHash(s):t++;for(t=0,n=this._updates0List;t<n.length;)s=n[t],s.markedForDeletion?this._removeUpdateFromHash(s):t++;for(t=0,n=this._updatesPosList;t<n.length;)s=n[t],s.markedForDeletion?this._removeUpdateFromHash(s):t++;this._updateHashLocked=!1,this._currentTarget=null}schedule(e,t,n,i,s,o){if("function"!=typeof e){const n=e;e=t,t=n}3!==arguments.length&&4!==arguments.length&&5!==arguments.length||(o=!!i,i=u.macro.REPEAT_FOREVER,s=0),L(t,1502);const r=t.uuid||t.id;if(!r)return void N(1510);let a,c,l=this._hashForTimers[r];if(l?l.paused!==o&&D(1511):(l=_w.get(null,t,0,null,null,o),this._arrayForTimers.push(l),this._hashForTimers[r]=l),null==l.timers)l.timers=[];else for(c=0;c<l.timers.length;++c)if(a=l.timers[c],a&&e===a._callback)return I(1507,a.getInterval(),n),void(a._interval=n);a=dw.get(),a.initWithCallback(this,e,t,n,i,s),l.timers.push(a),this._currentTarget===l&&this._currentTargetSalvaged&&(this._currentTargetSalvaged=!1)}scheduleUpdate(e,t,n){const i=e.uuid||e.id;if(!i)return void N(1510);const s=this._hashForUpdates[i];if(s&&s.entry){if(s.entry.priority===t)return s.entry.markedForDeletion=!1,void(s.entry.paused=n);if(this._updateHashLocked)return I(1506),s.entry.markedForDeletion=!1,void(s.entry.paused=n);this.unscheduleUpdate(e)}const o=hw.get(e,t,n,!1);let r;0===t?(r=this._updates0List,this._appendIn(r,o)):(r=t<0?this._updatesNegList:this._updatesPosList,this._priorityIn(r,o,t)),this._hashForUpdates[i]=uw.get(r,o,e,null)}unschedule(e,t){if(!t||!e)return;const n=t.uuid||t.id;if(!n)return void N(1510);const i=this._hashForTimers[n];if(i){const t=i.timers;for(let n=0,s=t.length;n<s;n++){const s=t[n];if(e===s._callback)return s!==i.currentTimer||i.currentTimerSalvaged||(i.currentTimerSalvaged=!0),t.splice(n,1),dw.put(s),i.timerIndex>=n&&i.timerIndex--,void(0===t.length&&(this._currentTarget===i?this._currentTargetSalvaged=!0:this._removeHashElement(i)))}}}unscheduleUpdate(e){if(!e)return;const t=e.uuid||e.id;if(!t)return void N(1510);const n=this._hashForUpdates[t];n&&(this._updateHashLocked?n.entry.markedForDeletion=!0:this._removeUpdateFromHash(n.entry))}unscheduleAllForTarget(e){if(!e)return;const t=e.uuid||e.id;if(!t)return void N(1510);const n=this._hashForTimers[t];if(n){const e=n.timers;e.indexOf(n.currentTimer)>-1&&!n.currentTimerSalvaged&&(n.currentTimerSalvaged=!0);for(let t=0,n=e.length;t<n;t++)dw.put(e[t]);e.length=0,this._currentTarget===n?this._currentTargetSalvaged=!0:this._removeHashElement(n)}this.unscheduleUpdate(e)}unscheduleAll(){this.unscheduleAllWithMinPriority(cw.Priority.SCHEDULER)}unscheduleAllWithMinPriority(e){let t,n;const i=this._arrayForTimers;for(t=i.length-1;t>=0;t--)n=i[t],this.unscheduleAllForTarget(n.target);let s,o=0;if(e<0)for(t=0;t<this._updatesNegList.length;)o=this._updatesNegList.length,s=this._updatesNegList[t],s&&s.priority>=e&&this.unscheduleUpdate(s.target),o===this._updatesNegList.length&&t++;if(e<=0)for(t=0;t<this._updates0List.length;)o=this._updates0List.length,s=this._updates0List[t],s&&this.unscheduleUpdate(s.target),o===this._updates0List.length&&t++;for(t=0;t<this._updatesPosList.length;)o=this._updatesPosList.length,s=this._updatesPosList[t],s&&s.priority>=e&&this.unscheduleUpdate(s.target),o===this._updatesPosList.length&&t++}isScheduled(e,t){L(e,1508),L(t,1509);const n=t.uuid||t.id;if(!n)return N(1510),!1;const i=this._hashForTimers[n];if(!i)return!1;if(null==i.timers)return!1;{const t=i.timers;for(let n=0;n<t.length;++n)if(e===t[n]._callback)return!0;return!1}}pauseAllTargets(){return this.pauseAllTargetsWithMinPriority(cw.Priority.SCHEDULER)}pauseAllTargetsWithMinPriority(e){const t=[];let n;const i=this._arrayForTimers;let s,o,r;for(s=0,o=i.length;s<o;s++)n=i[s],n&&(n.paused=!0,t.push(n.target));if(e<0)for(s=0;s<this._updatesNegList.length;s++)r=this._updatesNegList[s],r&&r.priority>=e&&(r.paused=!0,t.push(r.target));if(e<=0)for(s=0;s<this._updates0List.length;s++)r=this._updates0List[s],r&&(r.paused=!0,t.push(r.target));for(s=0;s<this._updatesPosList.length;s++)r=this._updatesPosList[s],r&&r.priority>=e&&(r.paused=!0,t.push(r.target));return t}resumeTargets(e){if(e)for(let t=0;t<e.length;t++)this.resumeTarget(e[t])}pauseTarget(e){L(e,1503);const t=e.uuid||e.id;if(!t)return void N(1510);const n=this._hashForTimers[t];n&&(n.paused=!0);const i=this._hashForUpdates[t];i&&(i.entry.paused=!0)}resumeTarget(e){L(e,1504);const t=e.uuid||e.id;if(!t)return void N(1510);const n=this._hashForTimers[t];n&&(n.paused=!1);const i=this._hashForUpdates[t];i&&(i.entry.paused=!1)}isTargetPaused(e){L(e,1505);const t=e.uuid||e.id;if(!t)return N(1510),!1;const n=this._hashForTimers[t];if(n)return n.paused;const i=this._hashForUpdates[t];return!!i&&i.entry.paused}_removeHashElement(e){const t=e.target.uuid||e.target.id;delete this._hashForTimers[t];const n=this._arrayForTimers;for(let t=0,i=n.length;t<i;t++)if(n[t]===e){n.splice(t,1);break}_w.put(e)}_removeUpdateFromHash(e){const t=e.target.uuid||e.target.id,n=this._hashForUpdates[t];if(n){const e=n.list,i=n.entry;for(let t=0,n=e.length;t<n;t++)if(e[t]===i){e.splice(t,1);break}delete this._hashForUpdates[t],hw.put(i),uw.put(n)}}_priorityIn(e,t,n){for(let i=0;i<e.length;i++)if(n<e[i].priority)return void e.splice(i,0,t);e.push(t)}_appendIn(e,t){e.push(t)}}e("Scheduler",pw),pw.ID="scheduler",u.Scheduler=pw;const fw={[Wh.PORTRAIT]:Zn.IDENTITY,[Wh.LANDSCAPE_RIGHT]:Zn.ROTATE_90,[Wh.PORTRAIT_UPSIDE_DOWN]:Zn.ROTATE_180,[Wh.LANDSCAPE_LEFT]:Zn.ROTATE_270};class mw{get width(){return this._width}get height(){return this._height}get swapchain(){return this._swapchain}get framebuffer(){return this._framebuffer}get cameras(){return this._cameras}static registerCreateFunc(e){e._createWindowFun=e=>new mw(e)}get native(){return this._nativeObj}constructor(e){this._title="",this._width=1,this._height=1,this._swapchain=null,this._renderPass=null,this._colorTextures=[],this._depthStencilTexture=null,this._cameras=[],this._hasOnScreenAttachments=!1,this._hasOffScreenAttachments=!1,this._framebuffer=null}initialize(e,t){if(this._init(),void 0!==t.title&&(this._title=t.title),void 0!==t.swapchain&&(this._swapchain=t.swapchain),this._width=t.width,this._height=t.height,this._renderPass=e.createRenderPass(t.renderPassInfo),t.swapchain)this._setSwapchain(t.swapchain),this._colorTextures.push(t.swapchain.colorTexture),this._depthStencilTexture=t.swapchain.depthStencilTexture;else{for(let n=0;n<t.renderPassInfo.colorAttachments.length;n++)this._colorTextures.push(e.createTexture(new rs(ci.TEX2D,li.COLOR_ATTACHMENT|li.SAMPLED|li.TRANSFER_SRC,t.renderPassInfo.colorAttachments[n].format,this._width,this._height)));t.renderPassInfo.depthStencilAttachment.format!==ti.UNKNOWN&&(this._depthStencilTexture=e.createTexture(new rs(ci.TEX2D,li.DEPTH_STENCIL_ATTACHMENT|li.SAMPLED,t.renderPassInfo.depthStencilAttachment.format,this._width,this._height)))}return this._setFrameBuffer(e.createFramebuffer(new ws(this._renderPass,this._colorTextures,this._depthStencilTexture))),!0}destroy(){this.clearCameras(),this._framebuffer&&(this._framebuffer.destroy(),this._framebuffer=null),this._depthStencilTexture&&(this._depthStencilTexture.destroy(),this._depthStencilTexture=null);for(let e=0;e<this._colorTextures.length;e++){const t=this._colorTextures[e];t&&t.destroy()}this._colorTextures.length=0,this._destroy()}resize(e,t){if(this._swapchain)this._swapchain.resize(e,t,fw[Yh.orientation]),this._width=this._swapchain.width,this._height=this._swapchain.height;else{for(let n=0;n<this._colorTextures.length;n++)this._colorTextures[n].resize(e,t);this._depthStencilTexture&&this._depthStencilTexture.resize(e,t),this._width=e,this._height=t}this.framebuffer&&(this.framebuffer.destroy(),this.framebuffer.initialize(new ws(this._renderPass,this._colorTextures,this._depthStencilTexture)));for(const n of this._cameras)n.resize(e,t)}extractRenderCameras(e){for(let t=0;t<this._cameras.length;t++){const n=this._cameras[t];n.enabled&&(n.update(),e.push(n))}}attachCamera(e){for(let t=0;t<this._cameras.length;t++)if(this._cameras[t]===e)return;this._cameras.push(e),this.sortCameras()}detachCamera(e){for(let t=0;t<this._cameras.length;++t)if(this._cameras[t]===e)return void this._cameras.splice(t,1)}clearCameras(){this._cameras.length=0}sortCameras(){this._cameras.sort(((e,t)=>e.priority-t.priority))}_init(){this._nativeObj=new Ta}_destroy(){this._nativeObj=null}_setSwapchain(e){this._swapchain=e,this._nativeObj.swapchain=e}_setFrameBuffer(e){this._framebuffer=e,this._nativeObj.frameBuffer=e}}class gw{get device(){return this._device}get mainWindow(){return this._mainWindow}set curWindow(e){this._curWindow=e}get curWindow(){return this._curWindow}set tempWindow(e){this._tempWindow=e}get tempWindow(){return this._tempWindow}get windows(){return this._windows}get pipeline(){return this._pipeline}get batcher2D(){return this._batcher}get scenes(){return this._scenes}get cumulativeTime(){return this._cumulativeTime}get frameTime(){return this._frameTime}get frameCount(){return this._frameCount}get fps(){return this._fps}set fixedFPS(e){e>0?(this._fixedFPS=e,this._fixedFPSFrameTime=1e3/e):this._fixedFPSFrameTime=0}get fixedFPS(){return this._fixedFPS}get dataPoolManager(){return this._dataPoolMgr}get useDeferredPipeline(){return this._useDeferredPipeline}constructor(e){this._createSceneFun=null,this._createWindowFun=null,this._device=void 0,this._windows=[],this._mainWindow=null,this._curWindow=null,this._tempWindow=null,this._pipeline=null,this._batcher=null,this._dataPoolMgr=void 0,this._scenes=[],this._modelPools=new Map,this._cameraPool=null,this._lightPools=new Map,this._fpsTime=0,this._frameCount=0,this._fps=0,this._fixedFPS=0,this._useDeferredPipeline=!1,this._fixedFPSFrameTime=0,this._cumulativeTime=0,this._frameTime=0,this._device=e,this._dataPoolMgr=u.internal.DataPoolManager&&new u.internal.DataPoolManager(e),Wv.registerCreateFunc(this),mw.registerCreateFunc(this),this._cameraPool=new Bl((()=>new vg(this._device)),4,(e=>e.destroy()))}initialize(e){this._init();const t=u.game._swapchain,n=new Ss;n.format=t.colorTexture.format;const i=new Cs;i.format=t.depthStencilTexture.format,i.depthStoreOp=Ei.DISCARD,i.stencilStoreOp=Ei.DISCARD;const s=new bs([n],i);return this._mainWindow=this.createWindow({title:"rootMainWindow",width:t.width,height:t.height,renderPassInfo:s,swapchain:t}),this._curWindow=this._mainWindow,Promise.resolve(Fm.initBuiltinRes(this._device))}destroy(){this.destroyScenes(),this._pipeline&&(this._pipeline.destroy(),this._pipeline=null),this._batcher&&(this._batcher.destroy(),this._batcher=null),this._curWindow=null,this._mainWindow=null,this.dataPoolManager.clear(),this._destroy()}resize(e,t){for(const n of this._windows)n.swapchain&&n.resize(e,t)}setRenderPipeline(e){e instanceof ZP&&(this._useDeferredPipeline=!0);let t=!1;if(e||(e=WP(),t=!0),this._pipeline=e,this._useDeferredPipeline&&this.device.hasFeature(ei.COMPUTE_SHADER)||(this._pipeline.clusterEnabled=!1),this._pipeline.bloomEnabled=!1,!this._pipeline.activate(this._mainWindow.swapchain))return t&&this._pipeline.destroy(),this._pipeline=null,!1;const n=u.director.getScene();return n&&n.globals.activate(),this.onGlobalPipelineStateChanged(),!(!this._batcher&&u.internal.Batcher2D&&(this._batcher=new u.internal.Batcher2D(this),!this._batcher.initialize())&&(this.destroy(),1))}onGlobalPipelineStateChanged(){for(let e=0;e<this._scenes.length;e++)this._scenes[e].onGlobalPipelineStateChanged();this._pipeline.pipelineSceneData.onGlobalPipelineStateChanged()}activeWindow(e){this._curWindow=e}resetCumulativeTime(){this._setCumulativeTime(0)}frameMove(e){this._setFrameTime(e),++this._frameCount,this._setCumulativeTime(e),this._fpsTime+=e,this._fpsTime>1&&(this._fps=this._frameCount,this._frameCount=0,this._fpsTime=0);for(let e=0;e<this._scenes.length;++e)this._scenes[e].removeBatches();const t=this._windows,n=[];for(let e=0;e<t.length;e++)t[e].extractRenderCameras(n);if(this._pipeline&&n.length>0){this._device.acquire([u.game._swapchain]);const e=this._scenes,t=u.director.getTotalFrames();this._batcher&&(this._batcher.update(),this._batcher.uploadBuffers());for(let n=0;n<e.length;n++)e[n].update(t);u.director.emit(u.Director.EVENT_BEFORE_COMMIT),n.sort(((e,t)=>e.priority-t.priority)),this._pipeline.render(n),this._device.present()}this._batcher&&this._batcher.reset()}createWindow(e){const t=this._createWindowFun(this);return t.initialize(this.device,e),this._windows.push(t),t}destroyWindow(e){for(let t=0;t<this._windows.length;++t)if(this._windows[t]===e)return e.destroy(),void this._windows.splice(t,1)}destroyWindows(){for(const e of this._windows)e.destroy();this._windows.length=0}createScene(e){const t=this._createSceneFun(this);return t.initialize(e),this._scenes.push(t),t}destroyScene(e){for(let t=0;t<this._scenes.length;++t)if(this._scenes[t]===e)return e.destroy(),void this._scenes.splice(t,1)}destroyScenes(){for(const e of this._scenes)e.destroy();this._scenes.length=0}createModel(e){let t=this._modelPools.get(e);t||(this._modelPools.set(e,new Bl((()=>new e),10,(e=>e.destroy()))),t=this._modelPools.get(e));const n=t.alloc();return n.initialize(),n}destroyModel(e){const t=this._modelPools.get(e.constructor);t?(t.free(e),e.scene&&e.scene.removeModel(e)):D(1300,e.constructor.name),e.destroy()}createCamera(){return this._cameraPool.alloc()}createLight(e){let t=this._lightPools.get(e);t||(this._lightPools.set(e,new Bl((()=>new e),4,(e=>e.destroy()))),t=this._lightPools.get(e));const n=t.alloc();return n.initialize(),n}destroyLight(e){const t=this._lightPools.get(e.constructor);if(t&&(t.free(e),e.scene))switch(e.type){case Rv.SPHERE:e.scene.removeSphereLight(e);break;case Rv.SPOT:e.scene.removeSpotLight(e)}e.destroy()}_init(){this._naitveObj=new Ia}_destroy(){this._naitveObj=null}_setCumulativeTime(e){this._cumulativeTime+=e,this._naitveObj.cumulativeTime=this._cumulativeTime}_setFrameTime(e){this._frameTime=e,this._naitveObj.frameTime=e}}e("Root",gw),u.Root=gw;class vw extends Xl{constructor(...e){super(...e),this.frame=null,this.container=null,this.canvas=null,this.renderType=-1,this.eventTargetOn=super.on,this.eventTargetOnce=super.once,this.config={},this.onStart=null,this.frameTime=1e3/60,this.collisionMatrix=[],this.groupList=[],this._persistRootNodes={},this._gfxDevice=null,this._swapchain=null,this._configLoaded=!1,this._isCloning=!1,this._inited=!1,this._engineInited=!1,this._rendererInitialized=!1,this._paused=!0,this._frameRate=60,this._intervalId=0,this._initTime=0,this._startTime=0,this._deltaTime=0,this._onEngineInitedCallback=[]}get inited(){return this._inited}get frameRate(){return this._frameRate}set frameRate(e){"number"!=typeof e&&(e=parseInt(e,10),Number.isNaN(e)&&(e=60)),this._frameRate=e,this.frameTime=1e3/e,this._setAnimFrame()}get deltaTime(){return this._deltaTime}get totalTime(){return performance.now()-this._initTime}get frameStartTime(){return this._startTime}setFrameRate(e){this.frameRate=e}getFrameRate(){return this.frameRate}step(){u.director.tick(this.frameTime/1e3)}pause(){this._paused||(this._paused=!0,this._intervalId&&(window.cAF(this._intervalId),this._intervalId=0))}resume(){this._paused&&(kA._clearEvents(),this._intervalId&&(window.cAF(this._intervalId),this._intervalId=0),this._paused=!1,this._updateCallback(),this._intervalId=window.rAF(this._frameCB))}isPaused(){return this._paused}restart(){return new Promise((e=>u.director.once(u.Director.EVENT_END_FRAME,(()=>e())))).then((()=>{for(const e in this._persistRootNodes)this.removePersistRootNode(this._persistRootNodes[e]);return u.director.getScene().destroy(),u.Object._deferredDestroy(),u.director.reset(),u.profiler.reset(),this.pause(),this._setRenderPipelineNShowSplash().then((()=>{this.resume(),this._safeEmit(vw.EVENT_RESTART)}))}))}end(){nh.close()}on(e,t,n,i){return(this._engineInited&&e===vw.EVENT_ENGINE_INITED||this._inited&&e===vw.EVENT_GAME_INITED||this._rendererInitialized&&e===vw.EVENT_RENDERER_INITED)&&t.call(n),this.eventTargetOn(e,t,n,i)}once(e,t,n){return this._engineInited&&e===vw.EVENT_ENGINE_INITED?t.call(n):this.eventTargetOnce(e,t,n)}init(e){if(this._initConfig(e),this.config.assetOptions&&u.assetManager.init(this.config.assetOptions),this.config.layers){const e=this.config.layers;for(let t=0;t<e.length;t++){const n=e[t],i=s(n.value);Zd.addLayer(n.name,i)}}return this._initEngine().then((()=>(this._initEvents(),u.director.root&&u.director.root.dataPoolManager&&u.director.root.dataPoolManager.jointTexturePool.registerCustomTextureLayouts(e.customJointTextureLayouts),this._engineInited)))}run(e,t){let n;return"function"!=typeof e&&e?(n=this.init(e),this.onStart=null!=t?t:null):this.onStart=null!=e?e:null,Yn.init(),Promise.resolve(n).then((()=>this._setRenderPipelineNShowSplash())).then((()=>{Kh._init({configOrientation:"auto",exactFitScreen:!0})}))}addPersistRootNode(e){if(!u.Node.isNode(e)||!e.uuid)return void D(3800);const t=e.uuid;if(!this._persistRootNodes[t]){const n=u.director._scene;if(u.isValid(n))if(e.parent){if(!(e.parent instanceof u.Scene))return void D(3801);if(e.parent!==n)return void D(3802);e._originalSceneId=n.uuid}else e.parent=n;this._persistRootNodes[t]=e,e._persistNode=!0,u.assetManager._releaseManager._addPersistNodeRef(e)}}removePersistRootNode(e){const t=e.uuid||"";e===this._persistRootNodes[t]&&(delete this._persistRootNodes[t],e._persistNode=!1,e._originalSceneId="",u.assetManager._releaseManager._removePersistNodeRef(e))}isPersistRootNode(e){return!!e._persistNode}onEngineInitedAsync(e){this._onEngineInitedCallback.push(e)}_initEngine(){this._initDevice();const e=u.director;return Promise.resolve(e._init()).then((()=>{u.view.init(),x(`Cocos Creator v${_}`),this.emit(vw.EVENT_ENGINE_INITED),this._engineInited=!0,u.internal.dynamicAtlasManager&&(u.internal.dynamicAtlasManager.enabled=!Qe.CLEANUP_IMAGE_CACHE)})).then((()=>{const e=this._onEngineInitedCallback.map((e=>e())).filter(Boolean);return this._onEngineInitedCallback.length=0,Promise.all(e)}))}_setAnimFrame(){const e=this._frameRate;jsb.setPreferredFramesPerSecond(e),window.rAF=window.requestAnimationFrame,window.cAF=window.cancelAnimationFrame}_stTime(e){const t=performance.now(),n=Math.max(0,t-this._startTime),i=Math.max(0,this.frameTime-n);return window.setTimeout(e,i)}_ctTime(e){window.clearTimeout(e)}_calculateDT(e){return e||(e=performance.now()),this._deltaTime=e>this._startTime?(e-this._startTime)/1e3:0,this._deltaTime>vw.DEBUG_DT_THRESHOLD&&(this._deltaTime=this.frameTime/1e3),this._startTime=e,this._deltaTime}_updateCallback(){const e=u.director;let t;t=t=>{e.tick(this._calculateDT(t)),this._intervalId=window.rAF(this._frameCB)},this._frameCB=t}_runMainLoop(){if(!this._inited)return;const e=this.config,t=u.director;U(!!e.showFPS),t.startAnimation(),this.resume()}_initConfig(e){"number"!=typeof e.debugMode&&(e.debugMode=B.NONE),e.exposeClassName=!!e.exposeClassName,"number"!=typeof e.frameRate&&(e.frameRate=60);const t=e.renderMode;("number"!=typeof t||t>3||t<0)&&(e.renderMode=0),e.showFPS=!!e.showFPS,b(e.debugMode),this.config=e,this._configLoaded=!0,this.frameRate=e.frameRate}_determineRenderType(){const e=this.config,t=parseInt(e.renderMode,10);this.renderType=vw.RENDER_TYPE_CANVAS;let n=!1;if(1===t?(this.renderType=vw.RENDER_TYPE_CANVAS,n=!0):0===t||2===t?(this.renderType=vw.RENDER_TYPE_WEBGL,n=!0):3===t&&(this.renderType=vw.RENDER_TYPE_HEADLESS,n=!0),!n)throw new Error(F(3820,t))}_initDevice(){if(this._rendererInitialized)return;const e=this.config.adapter;if(e&&(this.canvas=e.canvas,this.frame=e.frame,this.container=e.container),this._determineRenderType(),this.renderType===vw.RENDER_TYPE_WEBGL){const e=new Zi(_p);if(window.gfx)this._gfxDevice=gfx.DeviceManager.create(e);else{let t=!!window.WebGL2RenderingContext;const n=window.navigator.userAgent.toLowerCase();(-1!==n.indexOf("safari")&&-1===n.indexOf("chrome")||$h.browserType===Yl.UC)&&(t=!1);const i=[];t&&u.WebGL2Device&&i.push(u.WebGL2Device),u.WebGLDevice&&i.push(u.WebGLDevice),u.EmptyDevice&&i.push(u.EmptyDevice),lo.canvas=this.canvas;for(let t=0;t<i.length&&(this._gfxDevice=new i[t],!this._gfxDevice.initialize(e));t++);}}else this.renderType===vw.RENDER_TYPE_HEADLESS&&u.EmptyDevice&&(this._gfxDevice=new u.EmptyDevice,this._gfxDevice.initialize(new Zi(_p)));if(!this._gfxDevice)return C("can not support canvas rendering in 3D"),void(this.renderType=vw.RENDER_TYPE_CANVAS);const t=new Ji(this.canvas),n=Kh.windowSize;t.width=n.width,t.height=n.height,this._swapchain=this._gfxDevice.createSwapchain(t),this.canvas.oncontextmenu=()=>!1}_initEvents(){nh.on("show",this._onShow,this),nh.on("hide",this._onHide,this)}_onHide(){this.emit(vw.EVENT_HIDE),this.pause()}_onShow(){this.emit(vw.EVENT_SHOW),this.resume()}_setRenderPipelineNShowSplash(){return Promise.resolve(this._setupRenderPipeline()).then((()=>Promise.resolve(this._showSplashScreen()).then((()=>{this._inited=!0,this._initTime=performance.now(),this._runMainLoop(),this._safeEmit(vw.EVENT_GAME_INITED),this.onStart&&this.onStart()}))))}_setupRenderPipeline(){const{renderPipeline:e}=this.config;return e?new Promise(((t,n)=>{u.assetManager.loadAny(e,((e,i)=>!e&&i instanceof HP?t(i):n(e)))})).then((e=>{this._setRenderPipeline(e)})).catch((t=>{S(t),S(`Failed load render pipeline: ${e}, engine failed to initialize, will fallback to default pipeline`),this._setRenderPipeline()})):this._setRenderPipeline()}_showSplashScreen(){if(u.internal.SplashScreen){const e=u.internal.SplashScreen.instance;return e.main(u.director.root),new Promise((t=>{e.setOnFinish((()=>t())),e.loadFinish=!0}))}return null}_setRenderPipeline(e){u.director.root.setRenderPipeline(e)||this._setRenderPipeline(),this._rendererInitialized=!0,this._safeEmit(vw.EVENT_RENDERER_INITED)}_safeEmit(e){this.emit(e)}}e("Game",vw),vw.EVENT_HIDE="game_on_hide",vw.EVENT_SHOW="game_on_show",vw.EVENT_LOW_MEMORY="game_on_low_memory",vw.EVENT_GAME_INITED="game_inited",vw.EVENT_ENGINE_INITED="engine_inited",vw.EVENT_RENDERER_INITED="renderer_inited",vw.EVENT_RESTART="game_on_restart",vw.RENDER_TYPE_CANVAS=0,vw.RENDER_TYPE_WEBGL=1,vw.RENDER_TYPE_OPENGL=2,vw.RENDER_TYPE_HEADLESS=3,vw.DEBUG_DT_THRESHOLD=1,u.Game=vw;const yw=e("game",u.game=new vw);class xw extends Xl{constructor(){super(),this._compScheduler=void 0,this._nodeActivator=void 0,this._invalid=void 0,this._paused=void 0,this._root=void 0,this._loadingScene=void 0,this._scene=void 0,this._totalFrames=void 0,this._scheduler=void 0,this._systems=void 0,this._invalid=!1,this._paused=!1,this._root=null,this._loadingScene="",this._scene=null,this._totalFrames=0,this._scheduler=new pw,this._compScheduler=new mP,this._nodeActivator=new AP,this._systems=[],yw.once(vw.EVENT_RENDERER_INITED,this._initOnRendererInitialized,this)}calculateDeltaTime(e){}end(){this.once(xw.EVENT_END_FRAME,(()=>{this.purgeDirector()}))}pause(){this._paused||(this._paused=!0)}purgeDirector(){this._scheduler.unscheduleAll(),this._compScheduler.unscheduleAll(),this._nodeActivator.reset(),u.isValid(this._scene)&&this._scene.destroy(),this._scene=null,this.stopAnimation(),u.assetManager.releaseAll()}reset(){this.purgeDirector(),this.emit(xw.EVENT_RESET),this.startAnimation()}runSceneImmediate(e,t,n){e instanceof RP&&(e=e.scene),L(e instanceof eP,1216),e._load();const i=Object.keys(yw._persistRootNodes).map((e=>yw._persistRootNodes[e]));for(let t=0;t<i.length;t++){const n=i[t];n.emit(u.Node.SCENE_CHANGED_FOR_PERSISTS,e.renderScene);const s=e.uuid===n._originalSceneId&&e.getChildByUuid(n.uuid);if(s){const t=s.getSiblingIndex();s._destroyImmediate(),e.insertChild(n,t)}else n.parent=e}const s=this._scene;u.isValid(s)&&s.destroy(),u.assetManager._releaseManager._autoRelease(s,e,yw._persistRootNodes),this._scene=null,rl._deferredDestroy(),t&&t(),this.emit(u.Director.EVENT_BEFORE_SCENE_LAUNCH,e),this._scene=e,e._activate(),this._root&&this._root.resetCumulativeTime(),this.startAnimation(),n&&n(null,e),this.emit(u.Director.EVENT_AFTER_SCENE_LAUNCH,e)}runScene(e,t,n){e instanceof RP&&(e=e.scene),L(e,1205),L(e instanceof eP,1216),e._load(),this.once(u.Director.EVENT_END_FRAME,(()=>{this.runSceneImmediate(e,t,n)}))}loadScene(e,t,n){if(this._loadingScene)return D(1208,e,this._loadingScene),!1;const i=u.assetManager.bundles.find((t=>!!t.getSceneInfo(e)));return i?(this.emit(u.Director.EVENT_BEFORE_SCENE_LOADING,e),this._loadingScene=e,console.time(`LoadScene ${e}`),i.loadScene(e,((i,s)=>{console.timeEnd(`LoadScene ${e}`),this._loadingScene="",i?(C(i),t&&t(i)):this.runSceneImmediate(s,n,t)})),!0):(N(1209,e),!1)}preloadScene(e,t,n){const i=u.assetManager.bundles.find((t=>!!t.getSceneInfo(e)));if(i)i.preloadScene(e,null,t,n);else{const t=`Can not preload the scene "${e}" because it is not in the build settings.`;n&&n(new Error(t)),C(`preloadScene: ${t}`)}}resume(){this._paused&&(this._paused=!1)}get root(){return this._root}getScene(){return this._scene}getDeltaTime(){return yw.deltaTime}getTotalTime(){return yw.totalTime}getCurrentTime(){return yw.frameStartTime}getTotalFrames(){return this._totalFrames}isPaused(){return this._paused}getScheduler(){return this._scheduler}setScheduler(e){this._scheduler!==e&&(this.unregisterSystem(this._scheduler),this._scheduler=e,this.registerSystem(pw.ID,e,200))}registerSystem(e,t,n){t.id=e,t.priority=n,t.init(),this._systems.push(t),this._systems.sort(cw.sortByPriority)}unregisterSystem(e){He.fastRemove(this._systems,e),this._systems.sort(cw.sortByPriority)}getSystem(e){return this._systems.find((t=>t.id===e))}getAnimationManager(){return this.getSystem(u.AnimationManager.ID)}startAnimation(){this._invalid=!1}stopAnimation(){this._invalid=!0}mainLoop(e){let t;t=yw._calculateDT(e),this.tick(t)}tick(e){if(!this._invalid){if(this.emit(xw.EVENT_BEGIN_FRAME),kA._frameDispatchEvents(),!this._paused){this.emit(xw.EVENT_BEFORE_UPDATE),this._compScheduler.startPhase(),this._compScheduler.updatePhase(e);for(let t=0;t<this._systems.length;++t)this._systems[t].update(e);this._compScheduler.lateUpdatePhase(e),this.emit(xw.EVENT_AFTER_UPDATE),rl._deferredDestroy();for(let t=0;t<this._systems.length;++t)this._systems[t].postUpdate(e)}this.emit(xw.EVENT_BEFORE_DRAW),this._root.frameMove(e),this.emit(xw.EVENT_AFTER_DRAW),lS.resetHasChangedFlags(),lS.clearNodeArray(),Ml.update(e),this.emit(xw.EVENT_END_FRAME),this._totalFrames++}}_initOnRendererInitialized(){this._totalFrames=0,this._paused=!1,this.registerSystem(pw.ID,this._scheduler,200),this.emit(xw.EVENT_INIT)}_init(){return this._root=new gw(yw._gfxDevice),this._root.initialize({}).catch((e=>(N(1217),Promise.reject(e))))}}e("Director",xw),xw.EVENT_INIT="director_init",xw.EVENT_RESET="director_reset",xw.EVENT_BEFORE_SCENE_LOADING="director_before_scene_loading",xw.EVENT_BEFORE_SCENE_LAUNCH="director_before_scene_launch",xw.EVENT_AFTER_SCENE_LAUNCH="director_after_scene_launch",xw.EVENT_BEFORE_UPDATE="director_before_update",xw.EVENT_AFTER_UPDATE="director_after_update",xw.EVENT_BEFORE_DRAW="director_before_draw",xw.EVENT_AFTER_DRAW="director_after_draw",xw.EVENT_BEFORE_COMMIT="director_before_commit",xw.EVENT_BEFORE_PHYSICS="director_before_physics",xw.EVENT_AFTER_PHYSICS="director_after_physics",xw.EVENT_BEGIN_FRAME="director_begin_frame",xw.EVENT_END_FRAME="director_end_frame",xw.instance=void 0,u.Director=xw;const Sw=e("director",xw.instance=u.director=new xw),Cw={};V(Cw,"vmath",[{name:"vec2",newName:"Vec2",target:Xn,targetName:"math"},{name:"vec3",newName:"Vec3",target:Xn,targetName:"math"},{name:"vec4",newName:"Vec4",target:Xn,targetName:"math"},{name:"quat",newName:"Quat",target:Xn,targetName:"math"},{name:"mat3",newName:"Mat3",target:Xn,targetName:"math"},{name:"mat4",newName:"Mat4",target:Xn,targetName:"math"},{name:"color4",newName:"Color",target:Xn,targetName:"math"},{name:"rect",newName:"Rect",target:Xn,targetName:"math"},{name:"approx",newName:"approx",target:Xn,targetName:"math"},{name:"EPSILON",newName:"EPSILON",target:Xn,targetName:"math"},{name:"equals",newName:"equals",target:Xn,targetName:"math"},{name:"clamp",newName:"clamp",target:Xn,targetName:"math"},{name:"clamp01",newName:"clamp01",target:Xn,targetName:"math"},{name:"lerp",newName:"lerp",target:Xn,targetName:"math"},{name:"toRadian",newName:"toRadian",target:Xn,targetName:"math"},{name:"toDegree",newName:"toDegree",target:Xn,targetName:"math"},{name:"random",newName:"random",target:Xn,targetName:"math"},{name:"randomRange",newName:"randomRange",target:Xn,targetName:"math"},{name:"randomRangeInt",newName:"randomRangeInt",target:Xn,targetName:"math"},{name:"pseudoRandom",newName:"pseudoRandom",target:Xn,targetName:"math"},{name:"pseudoRandomRangeInt",newName:"pseudoRandomRangeInt",target:Xn,targetName:"math"},{name:"nextPow2",newName:"nextPow2",target:Xn,targetName:"math"},{name:"repeat",newName:"repeat",target:Xn,targetName:"math"},{name:"pingPong",newName:"pingPong",target:Xn,targetName:"math"},{name:"inverseLerp",newName:"inverseLerp",target:Xn,targetName:"math"}]),u.vmath=Cw,V(pw.prototype,"Scheduler.prototype",[{name:"enableForTarget",newName:"enableForTarget",target:pw,targetName:"Scheduler"}]),V(pw,"Scheduler",[{name:"PRIORITY_SYSTEM",newName:"System.Priority.SCHEDULER",customGetter:()=>cw.Priority.SCHEDULER}]),H(pw,"Scheduler",[{name:"PRIORITY_NON_SYSTEM",suggest:"Use enum` System.Priority` instead"}]),V(cv.prototype,"SubModel.prototype",[{name:"subMeshData",newName:"subMesh"}]),H(cv.prototype,"SubModel.prototype",[{name:"getSubModel",suggest:"Use `subModels[i]` instead"},{name:"subModelNum",suggest:"Use `subModels.length` instead"}]),V(gw.prototype,"Root.prototype",[{name:"ui",newName:"batcher2D"}]),k(yw,"game",[{name:"collisionMatrix"},{name:"groupList"}]),k(xw.prototype,"director",[{name:"calculateDeltaTime"},{name:"getDeltaTime",suggest:"Use game.deltaTime instead"},{name:"getTotalTime",suggest:"Use game.totalTime instead"},{name:"getCurrentTime",suggest:"Use game.frameStartTime instead"}]),H(xw.prototype,"director",[{name:"setAnimationInterval",suggest:"please use game.frameRate instead"},{name:"getAnimationInterval",suggest:"please use game.frameRate instead"},{name:"getRunningScene",suggest:"please use getScene instead"},{name:"setDepthTest",suggest:"please use camera API instead"},{name:"setClearColor",suggest:"please use camera API instead"},{name:"getWinSize",suggest:"please use view.getVisibleSize instead"},{name:"getWinSizeInPixels"},{name:"purgeCachedData",suggest:"please use assetManager.releaseAll instead"},{name:"convertToGL"},{name:"convertToUI"}]);const Ew={topLeft:u.v2(0,0),topRight:u.v2(0,0),top:u.v2(0,0),bottomLeft:u.v2(0,0),bottomRight:u.v2(0,0),bottom:u.v2(0,0),center:u.v2(0,0),left:u.v2(0,0),right:u.v2(0,0),width:0,height:0,init(e){const t=this.width=e.width,n=this.height=e.height,i=e.x,s=e.y,o=s+n,r=i+t;this.topLeft.x=i,this.topLeft.y=o,this.topRight.x=r,this.topRight.y=o,this.top.x=i+t/2,this.top.y=o,this.bottomLeft.x=i,this.bottomLeft.y=s,this.bottomRight.x=r,this.bottomRight.y=s,this.bottom.x=i+t/2,this.bottom.y=s,this.center.x=i+t/2,this.center.y=s+n/2,this.left.x=i,this.left.y=s+n/2,this.right.x=r,this.right.y=s+n/2}};u.visibleRect=Ew;const Tw=new kn,bw={[Qe.ORIENTATION_AUTO]:Wh.AUTO,[Qe.ORIENTATION_LANDSCAPE]:Wh.LANDSCAPE,[Qe.ORIENTATION_PORTRAIT]:Wh.PORTRAIT};class Aw extends Xl{constructor(){super(),this._designResolutionSize=void 0,this._scaleX=void 0,this._scaleY=void 0,this._viewportRect=void 0,this._visibleRect=void 0,this._autoFullScreen=void 0,this._retinaEnabled=void 0,this._resizeCallback=void 0,this._resolutionPolicy=void 0,this._rpExactFit=void 0,this._rpShowAll=void 0,this._rpNoBorder=void 0,this._rpFixedHeight=void 0,this._rpFixedWidth=void 0;const e=Pw,t=ww;this._designResolutionSize=new kn(0,0),this._scaleX=1,this._scaleY=1,this._viewportRect=new Wn(0,0,0,0),this._visibleRect=new Wn(0,0,0,0),this._autoFullScreen=!1,this._retinaEnabled=!1,this._resizeCallback=null,this._rpExactFit=new Iw(e.EQUAL_TO_FRAME,t.EXACT_FIT),this._rpShowAll=new Iw(e.EQUAL_TO_FRAME,t.SHOW_ALL),this._rpNoBorder=new Iw(e.EQUAL_TO_FRAME,t.NO_BORDER),this._rpFixedHeight=new Iw(e.EQUAL_TO_FRAME,t.FIXED_HEIGHT),this._rpFixedWidth=new Iw(e.EQUAL_TO_FRAME,t.FIXED_WIDTH),this._resolutionPolicy=this._rpShowAll}init(){const e=Kh.windowSize,t=e.width,n=e.height;this._designResolutionSize.width=t,this._designResolutionSize.height=n,this._viewportRect.width=t,this._viewportRect.height=n,this._visibleRect.width=t,this._visibleRect.height=n,Tw.width=this._visibleRect.width,Tw.height=this._visibleRect.height,Ew&&Ew.init(this._visibleRect),Yh.on("window-resize",this._updateAdaptResult,this),Yh.on("orientation-change",this._updateAdaptResult,this),Yh.on("fullscreen-change",this._updateAdaptResult,this)}resizeWithBrowserSize(e){Yh.handleResizeEvent=e}setResizeCallback(e){"function"!=typeof e&&null!=e||(this._resizeCallback=e)}setOrientation(e){Yh.orientation=bw[e]}adjustViewportMeta(e){}enableRetina(e){this._retinaEnabled=!!e}isRetinaEnabled(){return this._retinaEnabled}enableAutoFullScreen(e){e!==this._autoFullScreen&&(this._autoFullScreen=e,e&&Kh.requestFullScreen().catch((()=>{})))}isAutoFullScreenEnabled(){return this._autoFullScreen}setCanvasSize(e,t){Yh.resolutionScale=1;const n=Yh.devicePixelRatio,i=new kn(e*n,t*n);Kh.windowSize=i}getCanvasSize(){return Kh.windowSize}getFrameSize(){const e=Yh.devicePixelRatio,t=Kh.windowSize;return t.width/=e,t.height/=e,t}setFrameSize(e,t){const n=Yh.devicePixelRatio;Kh.windowSize=new kn(e*n,t*n)}getVisibleSize(){return new kn(this._visibleRect.width,this._visibleRect.height)}getVisibleSizeInPixel(){return new kn(this._visibleRect.width*this._scaleX,this._visibleRect.height*this._scaleY)}getVisibleOrigin(){return new Bn(this._visibleRect.x,this._visibleRect.y)}getVisibleOriginInPixel(){return new Bn(this._visibleRect.x*this._scaleX,this._visibleRect.y*this._scaleY)}getResolutionPolicy(){return this._resolutionPolicy}_updateResolutionPolicy(e){if(e instanceof Iw)this._resolutionPolicy=e;else{const t=Iw;e===t.EXACT_FIT&&(this._resolutionPolicy=this._rpExactFit),e===t.SHOW_ALL&&(this._resolutionPolicy=this._rpShowAll),e===t.NO_BORDER&&(this._resolutionPolicy=this._rpNoBorder),e===t.FIXED_HEIGHT&&(this._resolutionPolicy=this._rpFixedHeight),e===t.FIXED_WIDTH&&(this._resolutionPolicy=this._rpFixedWidth)}}setResolutionPolicy(e){this._updateResolutionPolicy(e);const t=Rw.getDesignResolutionSize();Rw.setDesignResolutionSize(t.width,t.height,e)}setDesignResolutionSize(e,t,n){if(!(e>0&&t>0))return void N(2200);this._updateResolutionPolicy(n);const i=this._resolutionPolicy;i&&i.preApply(this),this._designResolutionSize.width=e,this._designResolutionSize.height=t;const s=i.apply(this,this._designResolutionSize);if(s.scale&&2===s.scale.length&&(this._scaleX=s.scale[0],this._scaleY=s.scale[1]),s.viewport){const e=this._viewportRect,t=this._visibleRect,n=s.viewport;e.x=n.x,e.y=n.y,e.width=n.width,e.height=n.height,t.x=0,t.y=0,t.width=n.width/this._scaleX,t.height=n.height/this._scaleY}i.postApply(this),Tw.width=this._visibleRect.width,Tw.height=this._visibleRect.height,Ew&&Ew.init(this._visibleRect),this.emit("design-resolution-changed")}getDesignResolutionSize(){return new kn(this._designResolutionSize.width,this._designResolutionSize.height)}setRealPixelResolution(e,t,n){this.setDesignResolutionSize(e,t,n)}getViewportRect(){return this._viewportRect}getScaleX(){return this._scaleX}getScaleY(){return this._scaleY}getDevicePixelRatio(){return Yh.devicePixelRatio}convertToLocationInView(e,t,n,i=new Bn){const s=Yh.devicePixelRatio*(e-n.left),o=Yh.devicePixelRatio*(n.top+n.height-t);return Yh.isFrameRotated?(i.x=Kh.windowSize.width-o,i.y=s):(i.x=s,i.y=o),i}_convertToUISpace(e){const t=this._viewportRect;e.x=(e.x-t.x)/this._scaleX,e.y=(e.y-t.y)/this._scaleY}_updateAdaptResult(){var e;u.director.root.resize(Kh.windowSize.width,Kh.windowSize.height);const t=this._designResolutionSize.width,n=this._designResolutionSize.height;t>0&&this.setDesignResolutionSize(t,n,this._resolutionPolicy),this.emit("canvas-resize"),null===(e=this._resizeCallback)||void 0===e||e.call(this)}}e("View",Aw),Aw.instance=void 0;class Pw{constructor(){this.name="ContainerStrategy"}preApply(e){}apply(e,t){}postApply(e){}_setupCanvas(){const e=yw.canvas;if(e){const t=Kh.windowSize;e.width=t.width,e.height=t.height}}}Pw.EQUAL_TO_FRAME=void 0,Pw.PROPORTION_TO_FRAME=void 0;class ww{constructor(){this.name="ContentStrategy",this._result=void 0,this._result={scale:[1,1],viewport:null}}preApply(e){}apply(e,t){return{scale:[1,1]}}postApply(e){}_buildResult(e,t,n,i,s,o){Math.abs(e-n)<2&&(n=e),Math.abs(t-i)<2&&(i=t);const r=new Wn(Math.round((e-n)/2),Math.round((t-i)/2),n,i);return this._result.scale=[s,o],this._result.viewport=r,this._result}}ww.EXACT_FIT=void 0,ww.SHOW_ALL=void 0,ww.NO_BORDER=void 0,ww.FIXED_HEIGHT=void 0,ww.FIXED_WIDTH=void 0,Pw.EQUAL_TO_FRAME=new class extends Pw{constructor(...e){super(...e),this.name="EqualToFrame"}apply(e,t){Yh.isProportionalToFrame=!1,this._setupCanvas()}},Pw.PROPORTION_TO_FRAME=new class extends Pw{constructor(...e){super(...e),this.name="ProportionalToFrame"}apply(e,t){Yh.isProportionalToFrame=!0,this._setupCanvas()}},ww.EXACT_FIT=new class extends ww{constructor(...e){super(...e),this.name="ExactFit"}apply(e,t){const n=Kh.windowSize,i=n.width,s=n.height,o=i/t.width,r=s/t.height;return this._buildResult(i,s,i,s,o,r)}},ww.SHOW_ALL=new class extends ww{constructor(...e){super(...e),this.name="ShowAll"}apply(e,t){const n=Kh.windowSize,i=n.width,s=n.height,o=t.width,r=t.height,a=i/o,c=s/r;let l,h,u=0;return a<c?(u=a,l=i,h=r*u):(u=c,l=o*u,h=s),this._buildResult(i,s,l,h,u,u)}},ww.NO_BORDER=new class extends ww{constructor(...e){super(...e),this.name="NoBorder"}apply(e,t){const n=Kh.windowSize,i=n.width,s=n.height,o=t.width,r=t.height,a=i/o,c=s/r;let l,h,u;return a<c?(l=c,h=o*l,u=s):(l=a,h=i,u=r*l),this._buildResult(i,s,h,u,l,l)}},ww.FIXED_HEIGHT=new class extends ww{constructor(...e){super(...e),this.name="FixedHeight"}apply(e,t){const n=Kh.windowSize,i=n.width,s=n.height,o=s/t.height,r=i,a=s;return this._buildResult(i,s,r,a,o,o)}},ww.FIXED_WIDTH=new class extends ww{constructor(...e){super(...e),this.name="FixedWidth"}apply(e,t){const n=Kh.windowSize,i=n.width,s=n.height,o=i/t.width,r=i,a=s;return this._buildResult(i,s,r,a,o,o)}};class Iw{constructor(e,t){this.name="ResolutionPolicy",this._containerStrategy=void 0,this._contentStrategy=void 0,this._containerStrategy=null,this._contentStrategy=null,this.setContainerStrategy(e),this.setContentStrategy(t)}get canvasSize(){return Kh.windowSize}preApply(e){this._contentStrategy.preApply(e)}apply(e,t){return this._containerStrategy.apply(e,t),this._contentStrategy.apply(e,t)}postApply(e){this._contentStrategy.postApply(e)}setContainerStrategy(e){e instanceof Pw&&(this._containerStrategy=e)}setContentStrategy(e){e instanceof ww&&(this._contentStrategy=e)}}e("ResolutionPolicy",Iw),Iw.EXACT_FIT=0,Iw.NO_BORDER=1,Iw.SHOW_ALL=2,Iw.FIXED_HEIGHT=3,Iw.FIXED_WIDTH=4,Iw.UNKNOWN=5,Iw.ContainerStrategy=Pw,Iw.ContentStrategy=ww,u.ResolutionPolicy=Iw;const Rw=e("view",Aw.instance=u.view=new Aw);u.winSize=Tw,H(Aw.prototype,"View.prototype",[{name:"isAntiAliasEnabled",suggest:"The API of Texture2d have been largely modified, no alternative"},{name:"enableAntiAlias",suggest:"The API of Texture2d have been largely modified, no alternative"}]),k(Aw.prototype,"View.prototype",[{name:"adjustViewportMeta"},{name:"enableAutoFullScreen",suggest:"use screen.requestFullScreen() instead."},{name:"isAutoFullScreenEnabled"},{name:"setCanvasSize",suggest:"setting size in CSS pixels is not recommended, please use screen.windowSize instead."},{name:"getCanvasSize",suggest:"please use screen.windowSize instead."},{name:"getFrameSize",suggest:"getting size in CSS pixels is not recommended, please use screen.windowSize instead."},{name:"setFrameSize",suggest:"setting size in CSS pixels is not recommended, please use screen.windowSize instead."},{name:"getDevicePixelRatio",suggest:"use screen.devicePixelRatio instead."},{name:"convertToLocationInView"},{name:"enableRetina"},{name:"isRetinaEnabled"}]),k(u,"cc",[{name:"winSize",suggest:"please use view.getVisibleSize() instead."}]),k($h,"sys",[{name:"capabilities",suggest:"please use sys.hasFeature() method instead."}]),V($h,"sys",["UNKNOWN","ENGLISH","CHINESE","FRENCH","ITALIAN","GERMAN","SPANISH","DUTCH","RUSSIAN","KOREAN","JAPANESE","HUNGARIAN","PORTUGUESE","ARABIC","NORWEGIAN","POLISH","TURKISH","UKRAINIAN","ROMANIAN","BULGARIAN"].map((e=>({name:`LANGUAGE_${e}`,newName:e,target:$h.Language,targetName:"sys.Language"})))),V($h,"sys",["UNKNOWN","IOS","ANDROID","WINDOWS","LINUX","OSX"].map((e=>({name:`OS_${e}`,newName:e,target:$h.OS,targetName:"sys.OS"})))),V($h,"sys",["UNKNOWN","WECHAT","ANDROID","IE","EDGE","QQ","MOBILE_QQ","UC","UCBS","BAIDU_APP","BAIDU","MAXTHON","OPERA","OUPENG","MIUI","FIREFOX","SAFARI","CHROME","LIEBAO","QZONE","SOUGOU","HUAWEI"].map((e=>({name:`BROWSER_TYPE_${e}`,newName:e,target:$h.BrowserType,targetName:"sys.BrowserType"})))),V($h,"sys",[{name:"BROWSER_TYPE_360",newName:"BROWSER_360",target:$h.BrowserType,targetName:"sys.BrowserType"}]),V($h,"sys",["UNKNOWN","EDITOR_PAGE","EDITOR_CORE","MOBILE_BROWSER","DESKTOP_BROWSER","WIN32","MACOS","IOS","ANDROID","OHOS","WECHAT_GAME","BAIDU_MINI_GAME","XIAOMI_QUICK_GAME","ALIPAY_MINI_GAME","BYTEDANCE_MINI_GAME","OPPO_MINI_GAME","VIVO_MINI_GAME","HUAWEI_QUICK_GAME","COCOSPLAY","LINKSURE_MINI_GAME","QTT_MINI_GAME"].map((e=>({name:e,target:$h.Platform,targetName:"sys.Platform"})))),V($h,"sys",[{name:"IPHONE",newName:"IOS",target:$h.Platform,targetName:"sys.Platform"},{name:"IPAD",newName:"IOS",target:$h.Platform,targetName:"sys.Platform"}]),H($h,"sys",["LINUX","BLACKBERRY","NACL","EMSCRIPTEN","TIZEN","WINRT","WP8","QQ_PLAY","FB_PLAYABLE_ADS"].map((e=>({name:e})))),V($h,"sys",[{name:"windowPixelResolution",target:Kh,targetName:"screen",newName:"windowSize"}]),k(Kh,"screen",[{name:"autoFullScreen",suggest:"please use screen.requestFullScreen() instead."},{name:"disableAutoFullScreen"}]);class Dw{constructor(){this.name="",this.base="",this.importBase="",this.nativeBase="",this.deps=null,this.assetInfos=new ll,this.scenes=new ll,this.paths=new ll}init(e){(e=>{let t=e.uuids;const n=e.paths,i=e.types,s=e.deps,o=e.paths=Object.create(null);if(!1===e.debug){for(let e=0,n=t.length;e<n;e++)t[e]=Al(t[e]);for(const e in n){const t=n[e],s=t[1];t[1]=i[s]}}else{const e=Object.create(null);for(let n=0,i=t.length;n<i;n++){const i=t[n];t[n]=e[i]=Al(i)}t=e}for(const e in n){const i=n[e];o[t[e]]=i}const r=e.scenes;for(const e in r){const n=r[e];r[e]=t[n]}const a=e.packs;for(const e in a){const n=a[e];for(let e=0;e<n.length;++e)n[e]=t[n[e]]}const c=e.versions;if(c)for(const e in c){const n=c[e];for(let e=0;e<n.length;e+=2){const i=n[e];n[e]=t[i]||i}}const l=e.redirect;if(l)for(let e=0;e<l.length;e+=2)l[e]=t[l[e]],l[e+1]=s[l[e+1]];if(e.extensionMap)for(const n in e.extensionMap)Object.prototype.hasOwnProperty.call(e.extensionMap,n)&&e.extensionMap[n].forEach(((i,s)=>{e.extensionMap[n][s]=t[i]||i}))})(e),this.importBase=e.importBase||"",this.nativeBase=e.nativeBase||"",this.base=e.base||"",this.name=e.name||"",this.deps=e.deps||[],this._initUuid(e.uuids),this._initPath(e.paths),this._initScene(e.scenes),this._initPackage(e.packs),this._initVersion(e.versions),this._initRedirect(e.redirect);for(const t in e.extensionMap)Object.prototype.hasOwnProperty.call(e.extensionMap,t)&&e.extensionMap[t].forEach((e=>{const n=this.assetInfos.get(e);n&&(n.extension=t)}))}getInfoWithPath(e,t){if(!e)return null;e=Dl(e);const n=this.paths.get(e);if(n){if(!t)return n[0];for(let e=0,i=n.length;e<i;e++){const i=n[e];if(ke.isChildClassOf(i.ctor,t))return i}}return null}getDirWithPath(e,t,n){"/"===(e=Dl(e))[e.length-1]&&(e=e.slice(0,-1));const i=n||[];return this.paths.forEach(((n,s)=>{if(s.startsWith(e)&&((e,t)=>!(e.length>t.length)||47===e.charCodeAt(t.length))(s,e)||!e)for(let e=0,s=n.length;e<s;e++){const s=n[e];t&&!ke.isChildClassOf(s.ctor,t)||i.push(s)}})),i}getAssetInfo(e){return this.assetInfos.get(e)||null}getSceneInfo(e){return e.endsWith(".scene")||(e+=".scene"),"/"===e[0]||e.startsWith("db://")||(e=`/${e}`),this.scenes.find(((t,n)=>n.endsWith(e)))}destroy(){this.paths.destroy(),this.scenes.destroy(),this.assetInfos.destroy()}_initUuid(e){if(e){this.assetInfos.clear();for(let t=0,n=e.length;t<n;t++){const n=e[t];this.assetInfos.add(n,{uuid:n})}}}_initPath(e){if(!e)return;const t=this.paths;t.clear();for(const n in e){const i=e[n],s=i[0],o=i[1],r=3===i.length,a=this.assetInfos.get(n);a.path=s,a.ctor=ke._getClassById(o),t.has(s)?r?t.get(s).push(a):t.get(s).unshift(a):t.add(s,[a])}}_initScene(e){if(!e)return;const t=this.scenes;t.clear();const n=this.assetInfos;for(const i in e){const s=e[i],o=n.get(s);o.url=i,t.add(i,o)}}_initPackage(e){if(!e)return;const t=this.assetInfos;for(const n in e){const i=e[n],s={uuid:n,packedUuids:i,ext:".json"};t.add(n,s);for(let e=0,n=i.length;e<n;e++){const o=i[e],r=t.get(o),a=r.packs;a?1===n?a.unshift(s):a.push(s):r.packs=[s]}}}_initVersion(e){if(!e)return;const t=this.assetInfos;let n=e.import;if(n)for(let e=0,i=n.length;e<i;e+=2){const i=n[e];t.get(i).ver=n[e+1]}if(n=e.native,n)for(let e=0,i=n.length;e<i;e+=2){const i=n[e];t.get(i).nativeVer=n[e+1]}}_initRedirect(e){if(!e)return;const t=this.assetInfos;for(let n=0,i=e.length;n<i;n+=2){const i=e[n];t.get(i).redirect=e[n+1]}}}function Ow(e,t){e._uuid&&t.push(e._uuid)}function Nw(e,t){const n=Object.getOwnPropertyNames(e);for(let i=0;i<n.length;i++){const s=n[i];if("node"===s||"__eventTargets"===s)continue;const o=e[s];if("object"==typeof o&&o)if(Array.isArray(o))for(let e=0;e<o.length;e++){const n=o[e];n instanceof xh&&Ow(n,t)}else if(o.constructor&&o.constructor!==Object)o instanceof xh&&Ow(o,t);else{const e=Object.getOwnPropertyNames(o);for(let n=0;n<e.length;n++){const i=o[e[n]];i instanceof xh&&Ow(i,t)}}}}function Mw(e,t){for(let n=0;n<e._components.length;n++)Nw(e._components[n],t);for(let n=0;n<e._children.length;n++)Mw(e._children[n],t)}function Lw(e,t,n,i){n.push(e._uuid);const s=mm.getDeps(e._uuid);for(let e=0,o=s.length;e<o;e++){const o=ul.get(s[e]);if(!o)continue;const r=o._uuid;r in t?t[r]+=i:t[r]=o.refCount+i,n.includes(r)||Lw(o,t,n,i)}}const Bw=[];var Fw=new class{constructor(){this._persistNodeDeps=new ll,this._toDelete=new ll,this._eventListener=!1}init(){this._persistNodeDeps.clear(),this._toDelete.clear()}_addPersistNodeRef(e){const t=[];Mw(e,t);for(let e=0,n=t.length;e<n;e++){const n=ul.get(t[e]);n&&n.addRef()}this._persistNodeDeps.add(e.uuid,t)}_removePersistNodeRef(e){if(!this._persistNodeDeps.has(e.uuid))return;const t=this._persistNodeDeps.get(e.uuid);for(let e=0,n=t.length;e<n;e++){const n=ul.get(t[e]);n&&n.decRef()}this._persistNodeDeps.remove(e.uuid)}_autoRelease(e,t,n){if(e){const n=mm.getDeps(e.uuid);for(let t=0,i=n.length;t<i;t++){const i=ul.get(n[t]);i&&i.decRef(e.autoReleaseAssets)}const i=mm._depends.get(e.uuid);if(i&&i.persistDeps){const t=i.persistDeps;for(let n=0,i=t.length;n<i;n++){const i=ul.get(t[n]);i&&i.decRef(e.autoReleaseAssets)}}e.uuid!==t.uuid&&mm.remove(e.uuid)}const i=mm._depends.get(t.uuid);i&&(i.persistDeps=[]);for(const e in n){const t=n[e],s=this._persistNodeDeps.get(t.uuid);for(const e of s){const t=ul.get(e);t&&t.addRef()}i&&i.persistDeps.push(...s)}}tryRelease(e,t=!1){e instanceof xh&&(t?this._free(e,t):(this._toDelete.add(e._uuid,e),this._eventListener||(this._eventListener=!0,ot(this._freeAssets.bind(this)))))}_freeAssets(){this._eventListener=!1,this._toDelete.forEach((e=>{this._free(e)})),this._toDelete.clear()}_free(e,t=!1){const n=e._uuid;if(this._toDelete.remove(n),!cl(e,!0))return;if(!t&&e.refCount>0&&function(e){const t=Object.create(null);if(t[e._uuid]=e.refCount,Lw(e,t,Bw,-1),Bw.length=0,0!==t[e._uuid])return t[e._uuid];for(const e in t)0!==t[e]&&Lw(ul.get(e),t,Bw,1);return Bw.length=0,t[e._uuid]}(e)>0)return;ul.remove(n);const i=mm.getDeps(n);for(let e=0,t=i.length;e<t;e++){const t=ul.get(i[e]);t&&(t.decRef(!1),this._free(t,!1))}e.destroy(),mm.remove(n)}};let zw=null;function Uw(e,t){for(let n=0,i=e.input.length;n<i;n++){const i=e.input[n];t&&!i.isNative&&i.content instanceof xh&&i.content.decRef(!1),i.recycle()}e.input=null}function Gw(e,t){return t?/\?/.test(e)?`${e}&_t=${Date.now()}`:`${e}?_t=${Date.now()}`:e}function Vw(e,t,n,i,s=0){e(s,((o,r)=>{s++,!o||s>t?i&&i(o,r):setTimeout((()=>{Vw(e,t,n,i,s)}),n)}))}function Hw(e,t,n,i,s){try{const o=mm.parse(e,t);for(let e=0,t=o.deps.length;e<t;e++){const t=o.deps[e];t in n||(n[t]=!0,i.push({uuid:t,bundle:s&&s.name}))}o.nativeDep&&(s&&(o.nativeDep.bundle=s.name),i.push({...o.nativeDep}))}catch(e){C(e.message,e.stack)}}function kw(e,t,n){t&&(n=void 0!==n?n:u.assetManager.cacheAsset,Rl(t)||!n||t.isDefault||ul.add(e,t))}function jw(e,t,n){let i=0;const s=[],o=e.length;0===o&&n&&n(s);const r=e=>{e&&s.push(e),i++,i===o&&n&&n(s)};for(let n=0;n<o;n++)t(e[n],r)}function Ww(e,t,n){let i=e,s=t,o=n;if(void 0===n){const n="function"==typeof e;t?(o=t,n||(s=null)):void 0===t&&n&&(o=e,i=null,s=null),void 0!==t&&n&&(s=e,i=null)}return{options:i||Object.create(null),onProgress:s,onComplete:o}}function qw(e,t,n){let i=e,s=t,o=n;if(void 0===n){const n=ke.isChildClassOf(e,xh);t?(o=t,n&&(s=null)):void 0!==t||n||(o=e,s=null,i=null),void 0===t||n||(s=e,i=null)}return{type:i,onProgress:s||zw,onComplete:o}}function Xw(e,t,n,i={}){if(!n[t]||i[t])return!1;i[t]=!0;let s=!1;const o=mm.getDeps(t);if(o)for(let t=0,r=o.length;t<r;t++){const r=o[t];if(r===e||Xw(e,r,n,i)){s=!0;break}}return s}function Yw(e){return(t,n)=>{if(!e)return;const i=[];Array.isArray(n)?n.forEach((e=>e instanceof xh&&i.push(e.addRef()))):n instanceof xh&&i.push(n.addRef()),ot((()=>{i.forEach((e=>e.decRef(!1))),e(t,n)}))}}class Kw{constructor(){this._config=new Dw}get config(){return this._config}get name(){return this._config.name}get deps(){return this._config.deps}get base(){return this._config.base}getInfoWithPath(e,t){return this._config.getInfoWithPath(e,t)}getDirWithPath(e,t,n){return this._config.getDirWithPath(e,t,n)}getAssetInfo(e){return this._config.getAssetInfo(e)}getSceneInfo(e){return this._config.getSceneInfo(e)}init(e){this._config.init(e),pl.add(e.name,this)}load(e,t,n,i){const{type:s,onProgress:o,onComplete:r}=qw(t,n,i),a={__requestType__:vl.PATH,type:s,bundle:this.name,__outputAsArray__:Array.isArray(e)};u.assetManager.loadAny(e,a,o,r)}preload(e,t,n,i){const{type:s,onProgress:o,onComplete:r}=qw(t,n,i);u.assetManager.preloadAny(e,{__requestType__:vl.PATH,type:s,bundle:this.name},o,r)}loadDir(e,t,n,i){const{type:s,onProgress:o,onComplete:r}=qw(t,n,i);u.assetManager.loadAny(e,{__requestType__:vl.DIR,type:s,bundle:this.name,__outputAsArray__:!0},o,r)}preloadDir(e,t,n,i){const{type:s,onProgress:o,onComplete:r}=qw(t,n,i);u.assetManager.preloadAny(e,{__requestType__:vl.DIR,type:s,bundle:this.name},o,r)}loadScene(e,t,n,i){const{options:s,onProgress:o,onComplete:r}=Ww(t,n,i);s.preset=s.preset||"scene",s.bundle=this.name,u.assetManager.loadAny({scene:e},s,o,((e,t)=>{if(e)C(e.message,e.stack);else if(t instanceof RP&&t.scene){const e=t.scene;e._id=t._uuid,e.name=t.name}else e=new Error(`The asset ${t._uuid} is not a scene`);r&&r(e,t)}))}preloadScene(e,t,n,i){const{options:s,onProgress:o,onComplete:r}=Ww(t,n,i);s.bundle=this.name,u.assetManager.preloadAny({scene:e},s,o,(t=>{t&&N(1210,e,t.message),r&&r(t)}))}get(e,t){const n=this.getInfoWithPath(e,t);return n&&ul.get(n.uuid)||null}release(e,t){const n=this.get(e,t);n&&Fw.tryRelease(n,!0)}releaseUnusedAssets(){ul.forEach((e=>{const t=this.getAssetInfo(e._uuid);t&&!t.redirect&&Fw.tryRelease(e)}))}releaseAll(){ul.forEach((e=>{const t=this.getAssetInfo(e._uuid);t&&!t.redirect&&Fw.tryRelease(e,!0)}))}_destroy(){this._config.destroy()}}const $w=e("resources",new Kw);function Qw(e,t,n){const i=new Image;function s(){i.removeEventListener("load",s),i.removeEventListener("error",o),n&&n(null,i)}function o(){i.removeEventListener("load",s),i.removeEventListener("error",o),n&&n(new Error(F(4930,e)))}return"file:"!==window.location.protocol&&(i.crossOrigin="anonymous"),i.addEventListener("load",s),i.addEventListener("error",o),i.src=e,i}function Jw(e,t,n,i){const s=new XMLHttpRequest,o=`download failed: ${e}, status: `;if(s.open("GET",e,!0),void 0!==t.xhrResponseType&&(s.responseType=t.xhrResponseType),void 0!==t.xhrWithCredentials&&(s.withCredentials=t.xhrWithCredentials),void 0!==t.xhrMimeType&&s.overrideMimeType&&s.overrideMimeType(t.xhrMimeType),void 0!==t.xhrTimeout&&(s.timeout=t.xhrTimeout),t.xhrHeader)for(const e in t.xhrHeader)s.setRequestHeader(e,t.xhrHeader[e]);return s.onload=()=>{200===s.status||0===s.status?i&&i(null,s.response):i&&i(new Error(`${o}${s.status}(no response)`))},n&&(s.onprogress=e=>{e.lengthComputable&&n(e.loaded,e.total)}),s.onerror=()=>{i&&i(new Error(`${o}${s.status}(error)`))},s.ontimeout=()=>{i&&i(new Error(`${o}${s.status}(time out)`))},s.onabort=()=>{i&&i(new Error(`${o}${s.status}(abort)`))},s.send(null),s}u.resources=$w;const Zw={};function eI(e,t,n){if(Zw[e])return n&&n(null),null;const i=document.createElement("script");function s(){i.parentNode.removeChild(i),i.removeEventListener("load",s,!1),i.removeEventListener("error",o,!1),Zw[e]=!0,n&&n(null)}function o(){i.parentNode.removeChild(i),i.removeEventListener("load",s,!1),i.removeEventListener("error",o,!1),n&&n(new Error(F(4928,e)))}return"file:"!==window.location.protocol&&(i.crossOrigin="anonymous"),i.async=t.scriptAsyncLoading||!1,i.src=e,i.addEventListener("load",s,!1),i.addEventListener("error",o,!1),document.body.appendChild(i),i}const tI=/^(?:\w+:\/\/|\.+\/).+/,nI=(e,t,n)=>{($h.hasFeature($h.Feature.IMAGE_BITMAP)&&u.assetManager.allowImageBitmap?iI:Qw)(e,t,n)},iI=(e,t,n)=>{t.xhrResponseType="blob",Jw(e,t,t.onFileProgress,n)},sI=(e,t,n)=>{t.xhrResponseType="json",Jw(e,t,t.onFileProgress,n)},oI=(e,t,n)=>{t.xhrResponseType="arraybuffer",Jw(e,t,t.onFileProgress,n)},rI=(e,t,n)=>{sI(e,t,((t,i)=>{if(t)return void n(t);const s=eu(i);Promise.all(s.chunks.map((n=>new Promise(((i,s)=>{oI(`${ch(e)}${n}`,{},((e,n)=>{t?s(t):i(new Uint8Array(n))}))}))))).then((e=>{const t=new Zh(s.document,e);n(null,t)})).catch((e=>{n(e)}))}))},aI=(e,t,n)=>{oI(e,t,((e,t)=>{if(e)n(e);else try{const e=tu(new Uint8Array(t));n(null,e)}catch(e){n(e)}}))},cI=(e,t,n)=>{t.xhrResponseType="text",Jw(e,t,t.onFileProgress,n)},lI=(e,t,n)=>{const i=lh(e);let s=e;tI.test(s)||(s=-1!==hI.remoteBundles.indexOf(i)?`${hI.remoteServerAddress}remote/${i}`:`assets/${i}`);const o=t.version||hI.bundleVers[i];let r=0,a=null,c=null;sI(`${s}/config.${o?`${o}.`:""}json`,t,((e,t)=>{c=e,a=t,a&&(a.base=`${s}/`),2==++r&&n(c,a)})),eI(`${s}/index.${o?`${o}.`:""}js`,t,(e=>{c=e,2==++r&&n(e,a)}))},hI=new class{constructor(){this.maxConcurrency=6,this.maxRequestsPerFrame=6,this.maxRetryCount=3,this.appendTimeStamp=!1,this.limited=!0,this.retryInterval=2e3,this.bundleVers=null,this.remoteBundles=[],this.downloadDomImage=Qw,this.downloadDomAudio=null,this.downloadFile=Jw,this.downloadScript=eI,this._downloaders={".png":nI,".jpg":nI,".bmp":nI,".jpeg":nI,".gif":nI,".ico":nI,".tiff":nI,".webp":nI,".image":nI,".pvr":oI,".pkm":oI,".astc":oI,".txt":cI,".xml":cI,".vsh":cI,".fsh":cI,".atlas":cI,".tmx":cI,".tsx":cI,".json":sI,".ExportJson":sI,".plist":cI,".ccon":rI,".cconb":aI,".fnt":cI,".binary":oI,".bin":oI,".dbbin":oI,".skel":oI,".js":eI,bundle:lI,default:cI},this._downloading=new ll,this._queue=[],this._queueDirty=!1,this._totalNum=0,this._totalNumThisPeriod=0,this._lastDate=-1,this._checkNextPeriod=!1,this._remoteServerAddress="",this._maxInterval=1/30}get remoteServerAddress(){return this._remoteServerAddress}init(e="",t={},n=[]){this._downloading.clear(),this._queue.length=0,this._remoteServerAddress=e,this.bundleVers=t,this.remoteBundles=n}register(e,t){"object"==typeof e?be(this._downloaders,e):this._downloaders[e]=t}download(e,t,n,i,s){const o=_l.get(e);if(o)return void s(null,o);const r=this._downloading.get(e);if(r){r.push(s);const t=this._queue.find((t=>t.id===e));if(!t)return;const n=i.priority||0;return void(t.priority<n&&(t.priority=n,this._queueDirty=!0))}const a=void 0!==i.maxRetryCount?i.maxRetryCount:this.maxRetryCount,c=void 0!==i.maxConcurrency?i.maxConcurrency:this.maxConcurrency,l=void 0!==i.maxRequestsPerFrame?i.maxRequestsPerFrame:this.maxRequestsPerFrame,h=this._downloaders[n]||this._downloaders.default;Vw(((n,o)=>{if(0===n&&this._downloading.add(e,[s]),!this.limited)return void h(Gw(t,this.appendTimeStamp),i,o);this._updateTime();const r=(e,t)=>{this._totalNum--,this._handleQueueInNextFrame(c,l),o(e,t)};this._totalNum<c&&this._totalNumThisPeriod<l?(h(Gw(t,this.appendTimeStamp),i,r),this._totalNum++,this._totalNumThisPeriod++):(this._queue.push({id:e,priority:i.priority||0,url:t,options:i,done:r,handler:h}),this._queueDirty=!0,this._totalNum<c&&this._handleQueueInNextFrame(c,l))}),a,this.retryInterval,((t,n)=>{t||_l.add(e,n);const i=this._downloading.remove(e);for(let e=0,s=i.length;e<s;e++)i[e](t,n)}))}loadSubpackage(e,t){u.assetManager.loadBundle(e,null,t)}_updateTime(){const e=performance.now(),t=u.game.deltaTime,n=t>this._maxInterval?this._maxInterval:t;e-this._lastDate>1e3*n&&(this._totalNumThisPeriod=0,this._lastDate=e)}_handleQueue(e,t){for(this._checkNextPeriod=!1,this._updateTime();this._queue.length>0&&this._totalNum<e&&this._totalNumThisPeriod<t;){this._queueDirty&&(this._queue.sort(((e,t)=>e.priority-t.priority)),this._queueDirty=!1);const e=this._queue.pop();if(!e)break;this._totalNum++,this._totalNumThisPeriod++,e.handler(Gw(e.url,this.appendTimeStamp),e.options,e.done)}this._handleQueueInNextFrame(e,t)}_handleQueueInNextFrame(e,t){!this._checkNextPeriod&&this._queue.length>0&&(ot(this._handleQueue.bind(this),e,t),this._checkNextPeriod=!0)}};function uI(e,t,n,i){let s=null,o=null;try{s=new hm,s._nativeUrl=e,s._nativeAsset=t}catch(e){o=e}i(o,s)}function _I(e,t,n,i){const s=new UP;s.json=t,i(null,s)}function dI(e,t,n,i){const s=new MP;s.text=t,i(null,s)}function pI(e,t,n,i){const s=new dE;s._nativeUrl=e,s._nativeAsset=t,i(null,s)}function fI(e,t,n,i){const s=new xh;s._nativeUrl=e,s._nativeAsset=t,i(null,s)}function mI(e,n,i,s){let o=pl.get(n.name);o||(o=n.name===xl.RESOURCES?$w:new Kw,n.base=n.base||`${e}/`,o.init(n)),t.import(`virtual:///prerequisite-imports/${o.name}`).then((()=>{s(null,o)})).catch(s)}var gI=new class{constructor(){this._creating=new ll,this._producers={".png":uI,".jpg":uI,".bmp":uI,".jpeg":uI,".gif":uI,".ico":uI,".tiff":uI,".webp":uI,".image":uI,".pvr":uI,".pkm":uI,".txt":dI,".xml":dI,".vsh":dI,".fsh":dI,".atlas":dI,".tmx":dI,".tsx":dI,".fnt":dI,".json":_I,".ExportJson":_I,".binary":pI,".bin":pI,".dbbin":pI,".skel":pI,bundle:mI,default:fI}}register(e,t){"object"==typeof e?ke.mixin(this._producers,e):this._producers[e]=t}create(e,t,n,i,s){const o=this._producers[n]||this._producers.default,r=ul.get(e);if(!i.reloadAsset&&r)return void s(null,r);const a=this._creating.get(e);a?a.push(s):(this._creating.add(e,[s]),o(e,t,i,((t,n)=>{!t&&n instanceof xh&&(n._uuid=e,kw(e,n,i.cacheAsset));const s=this._creating.remove(e);for(let e=0,i=s.length;e<i;e++)s[e](t,n)})))}},vI=new class{constructor(){this._loading=new ll,this._unpackers={".json":this.unpackJson}}unpackJson(e,t,n,i){let s=ke.createMap(!0),o=null;if(Array.isArray(t)){(t=function(e){if(e[0]<1)throw new Error(F(5304,e[0]));Su(e,!0,void 0,Eu.reportMissingClass),Cu(e);const t=new Tu(e[0]),n=e[1],i=e[2],s=e[3],o=e[4],r=e[5];for(let e=0;e<r.length;++e)r[e].unshift(t,n,i,s,o);return r}(t)).length!==e.length&&N(4915);for(let n=0;n<e.length;n++)s[`${e[n]}@import`]=t[n]}else{const n=ke._getClassId(bm),i=ke._getClassId(hm);if(t.type===n&&t.data){const i=t.data;i.length!==e.length&&N(4915);for(let t=0;t<e.length;t++)s[`${e[t]}@import`]=bu(n,{base:i[t][0],mipmaps:i[t][1]})}else if(t.type===i&&t.data){const n=t.data;n.length!==e.length&&N(4915);for(let t=0;t<e.length;t++)s[`${e[t]}@import`]=n[t]}else o=new Error("unmatched type pack!"),s=null}i(o,s)}init(){this._loading.clear()}register(e,t){"object"==typeof e?ke.mixin(this._unpackers,e):this._unpackers[e]=t}unpack(e,t,n,i,s){t?(0,this._unpackers[n])(e,t,i,s):s(new Error("package data is wrong!"))}load(e,t,n){if(e.isNative||!e.info||!e.info.packs)return void hI.download(e.id,e.url,e.ext,e.options,n);if(_l.has(e.id))return void n(null,_l.get(e.id));const i=e.info.packs;let s=i.find((e=>this._loading.has(e.uuid)));if(s)return void this._loading.get(s.uuid).push({onComplete:n,id:e.id});s=i[0],this._loading.add(s.uuid,[{onComplete:n,id:e.id}]);const o=Ol(s.uuid,{ext:s.ext,bundle:e.config.name});hI.download(s.uuid,o,s.ext,e.options,((t,n)=>{_l.remove(s.uuid),t&&C(t.message,t.stack),this.unpack(s.packedUuids,n,s.ext,e.options,((e,n)=>{if(!e)for(const e in n)_l.add(e,n[e]);const i=this._loading.remove(s.uuid);for(let s=0,o=i.length;s<o;s++){const o=i[s];if(t||e){o.onComplete(t||e);continue}const r=n[o.id];r?o.onComplete(null,r):o.onComplete(new Error("can not retrieve data from package"))}}))}))}};function yI(e,t){let n=!1;e.progress||(e.progress={finish:0,total:e.input.length,canInvoke:!0},n=!0);const{options:i,progress:s}=e,o=[],r=s.total,a=i.__exclude__=i.__exclude__||Object.create(null);e.output=[],jw(e.input,((i,c)=>{if(!i.isNative&&ul.has(i.uuid)){const t=ul.get(i.uuid);return i.content=t.addRef(),e.output.push(i),s.canInvoke&&e.dispatch("progress",++s.finish,s.total,i),void c()}vI.load(i,e.options,((l,h)=>{l?e.isFinish||(!u.assetManager.force||n?(C(l.message,l.stack),s.canInvoke=!1,t(l)):(e.output.push(i),s.canInvoke&&e.dispatch("progress",++s.finish,s.total,i))):e.isFinish||(i.file=h,e.output.push(i),i.isNative||(a[i.uuid]=!0,Hw(i.uuid,h,a,o,i.config),s.total=r+o.length),s.canInvoke&&e.dispatch("progress",++s.finish,s.total,i)),c()}))}),(()=>{if(e.isFinish)return Uw(e,!0),void e.dispatch("error");if(o.length>0){const r=Sl.create({input:o,progress:s,options:i,onProgress:e.onProgress,onError:Sl.prototype.recycle,onComplete:i=>{i||(e.output.push(...r.output),r.recycle()),n&&xI(e),t(i)}});ml.async(r)}else n&&xI(e),t()}))}function xI(e){const t=e.output;for(let e=0,n=t.length;e<n;e++)t[e].content&&t[e].content.decRef(!1)}const SI=new class extends class{constructor(){this._parser=null,window.DOMParser&&(this._parser=new DOMParser)}parse(e){return this._parseXML(e)}_parseXML(e){if(this._parser)return this._parser.parseFromString(e,"text/xml");throw new Error("Dom parser is not supported in this platform!")}}{parse(e){const t=this._parseXML(e).documentElement;if("plist"!==t.tagName)return D(5100),{};let n=null;for(let e=0,i=t.childNodes.length;e<i&&(n=t.childNodes[e],1!==n.nodeType);e++);return this._parseNode(n)}_parseNode(e){let t=null;const n=e.tagName;if("dict"===n)t=this._parseDict(e);else if("array"===n)t=this._parseArray(e);else if("string"===n)if(1===e.childNodes.length)t=e.firstChild.nodeValue;else{t="";for(let n=0;n<e.childNodes.length;n++)t+=e.childNodes[n].nodeValue}else"false"===n?t=!1:"true"===n?t=!0:"real"===n?t=parseFloat(e.firstChild.nodeValue):"integer"===n&&(t=parseInt(e.firstChild.nodeValue,10));return t}_parseArray(e){const t=[];for(let n=0,i=e.childNodes.length;n<i;n++){const i=e.childNodes[n];1===i.nodeType&&t.push(this._parseNode(i))}return t}_parseDict(e){const t={};let n="";for(let i=0,s=e.childNodes.length;i<s;i++){const s=e.childNodes[i];1===s.nodeType&&("key"===s.tagName?n=s.firstChild.nodeValue:t[n]=this._parseNode(s))}return t}};function CI(e,t){return e[t]<<8|e[t+1]}var EI=new class{constructor(){this._parsing=new ll,this._parsers={".png":this.parseImage,".jpg":this.parseImage,".bmp":this.parseImage,".jpeg":this.parseImage,".gif":this.parseImage,".ico":this.parseImage,".tiff":this.parseImage,".webp":this.parseImage,".image":this.parseImage,".pvr":this.parsePVRTex,".pkm":this.parsePKMTex,".astc":this.parseASTCTex,".plist":this.parsePlist,import:this.parseImport,".ccon":this.parseImport,".cconb":this.parseImport}}parseImage(e,t,n){e instanceof HTMLImageElement?n(null,e):createImageBitmap(e,{premultiplyAlpha:"none"}).then((e=>{n(null,e)}),(e=>{n(e,null)}))}parsePVRTex(e,t,n){let i=null,s=null;try{const t=e instanceof ArrayBuffer?e:e.buffer,n=new Int32Array(t,0,13);if(55727696===n[0]){const e=n[7],i=n[6],o=n[12]+52;s={_data:new Uint8Array(t,o),_compressed:!0,width:e,height:i,format:0}}else{if(559044176!==n[11])throw new Error("Invalid magic number in PVR header");{const e=n[0],i=n[1],o=n[2];s={_data:new Uint8Array(t,e),_compressed:!0,width:o,height:i,format:0}}}}catch(e){i=e}n(i,s)}parsePKMTex(e,t,n){let i=null,s=null;try{const t=e instanceof ArrayBuffer?e:e.buffer,n=new Uint8Array(t),i=CI(n,6);if(0!==i&&1!==i&&3!==i)throw new Error("Invalid magic number in ETC header");const o=CI(n,12),r=CI(n,14);CI(n,8),CI(n,10),s={_data:new Uint8Array(t,16),_compressed:!0,width:o,height:r,format:0}}catch(e){i=e}n(i,s)}parseASTCTex(e,t,n){let i=null,s=null;try{const t=e instanceof ArrayBuffer?e:e.buffer,n=new Uint8Array(t);if(1554098963!==n[0]+(n[1]<<8)+(n[2]<<16)+(n[3]<<24))throw new Error("Invalid magic number in ASTC header");const i=n[4],o=n[5],r=n[6];if((i<3||i>6||o<3||o>6||r<3||r>6)&&(i<4||7===i||9===i||11===i||i>12||o<4||7===o||9===o||11===o||o>12||1!==r))throw new Error("Invalid block number in ASTC header");const a=function(e,t){return 4===e?Vf.RGBA_ASTC_4x4:5===e?4===t?Vf.RGBA_ASTC_5x4:Vf.RGBA_ASTC_5x5:6===e?5===t?Vf.RGBA_ASTC_6x5:Vf.RGBA_ASTC_6x6:8===e?5===t?Vf.RGBA_ASTC_8x5:6===t?Vf.RGBA_ASTC_8x6:Vf.RGBA_ASTC_8x8:10===e?5===t?Vf.RGBA_ASTC_10x5:6===t?Vf.RGBA_ASTC_10x6:8===t?Vf.RGBA_ASTC_10x8:Vf.RGBA_ASTC_10x10:10===t?Vf.RGBA_ASTC_12x10:Vf.RGBA_ASTC_12x12}(i,o),c=n[7]+(n[8]<<8)+(n[9]<<16),l=n[10]+(n[11]<<8)+(n[12]<<16);n[13],n[14],n[15],s={_data:new Uint8Array(t,16),_compressed:!0,width:c,height:l,format:a}}catch(e){i=e}n(i,s)}parsePlist(e,t,n){let i=null;const s=SI.parse(e);s||(i=new Error("parse failed")),n(i,s)}parseImport(e,t,n){if(!e)return void n(new Error(`The json file of asset ${t.__uuid__} is empty or missing`));let i=null,s=null;try{i=pm(e,t)}catch(e){s=e}n(s,i)}init(){this._parsing.clear()}register(e,t){"object"==typeof e?be(this._parsers,e):this._parsers[e]=t}parse(e,t,n,i,s){const o=dl.get(e);if(o)return void s(null,o);const r=this._parsing.get(e);if(r)return void r.push(s);const a=this._parsers[n];a?(this._parsing.add(e,[s]),a(t,i,((t,n)=>{t?_l.remove(e):Rl(n)||dl.add(e,n);const i=this._parsing.remove(e);for(let e=0,s=i.length;e<s;e++)i[e](t,n)}))):s(null,t)}};function TI(e,t){let n=!1;e.progress||(e.progress={finish:0,total:e.input.length,canInvoke:!0},n=!0);const{options:i,progress:s}=e;i.__exclude__=i.__exclude__||Object.create(null),e.output=[],jw(e.input,((o,r)=>{const a=Sl.create({input:o,onProgress:e.onProgress,options:i,progress:s,onComplete:(i,c)=>{i&&!e.isFinish&&(!u.assetManager.force||n?(C(i.message,i.stack),s.canInvoke=!1,t(i)):s.canInvoke&&e.dispatch("progress",++s.finish,s.total,o)),e.output.push(c),a.recycle(),r(null)}});bI.async(a)}),(()=>{if(i.__exclude__=null,e.isFinish)return Uw(e,!0),void e.dispatch("error");!function(e){const t=e.source;if(e.options.__outputAsArray__||1!==t.length){const n=e.output=[];for(let e=0,i=t.length;e<i;e++)n.push(t[e].content)}else e.output=t[0].content}(e),Uw(e,!0),t()}))}const bI=new hl("loadOneAsset",[function(e,t){const n=e.output=e.input,{options:i,isNative:s,uuid:o,file:r}=n,{reloadAsset:a}=i;r||!a&&!s&&ul.has(o)?t():vI.load(n,e.options,((e,i)=>{n.file=i,t(e)}))},function(e,t){const n=e.output=e.input,i=e.progress,s=e.options.__exclude__,{id:o,file:r,options:a}=n;if(n.isNative)EI.parse(o,r,n.ext,a,((s,r)=>{s?t(s):(n.content=r,i.canInvoke&&e.dispatch("progress",++i.finish,i.total,n),_l.remove(o),dl.remove(o),t())}));else{const{uuid:c}=n;if(c in s){const{finish:o,content:r,err:a,callbacks:l}=s[c];i.canInvoke&&e.dispatch("progress",++i.finish,i.total,n),o||Xw(c,c,s)?(r&&r.addRef(),n.content=r,t(a)):l.push({done:t,item:n})}else if(!a.reloadAsset&&ul.has(c)){const s=ul.get(c);n.content=s.addRef(),i.canInvoke&&e.dispatch("progress",++i.finish,i.total,n),t()}else a.__uuid__=c,EI.parse(o,r,"import",a,((n,i)=>{n?t(n):function(e,t,n){const{input:i,progress:s}=e,{uuid:o,id:r,options:a,config:c}=i,{cacheAsset:l}=a,h=[];t.addRef&&t.addRef(),Hw(o,t,Object.create(null),h,c),s.canInvoke&&e.dispatch("progress",++s.finish,s.total+=h.length,i);const u=e.options.__exclude__[o]={content:t,finish:!1,callbacks:[{done:n,item:i}]},_=Sl.create({input:h,options:e.options,onProgress:e.onProgress,onError:Sl.prototype.recycle,progress:s,onComplete:e=>{if(t.decRef&&t.decRef(!1),u.finish=!0,u.err=e,!e){const e=Array.isArray(_.output)?_.output:[_.output],n=Object.create(null);for(const t of e)t&&(n[t instanceof xh?`${t._uuid}@import`:`${o}@native`]=t);!function(e,t,n){let i=!1;const s=um.get(t);if(s){for(let e=0,t=s.length;e<t;e++){const t=s[e],o=n[`${t.uuid}@import`];if(o)t.owner[t.prop]=o.addRef();else{if(C(`The asset ${t.uuid} is missing!`),t.type&&t.type!==xh){const e=new t.type;e.initDefault(t.uuid),t.owner[t.prop]=e}i=!0}}um.delete(t)}_m.has(t)&&(n[`${e}@native`]?t._nativeAsset=n[`${e}@native`]:(i=!0,console.error(`the native asset of ${e} is missing!`)),_m.delete(t))}(o,t,n);try{"function"!=typeof t.onLoaded||dm.has(t)||_m.has(t)||(t.onLoaded(),dm.add(t))}catch(e){C(`The asset ${o} is invalid for some reason, detail message: ${e.message}, stack: ${e.stack}`)}_l.remove(r),dl.remove(r),kw(o,t,l),_.recycle()}const n=u.callbacks;for(let i=0,s=n.length;i<s;i++){const s=n[i];t.addRef&&t.addRef(),s.item.content=t,s.done(e)}n.length=0}});fl.async(_)}(e,i,t)}))}}]);function AI(e,t){const n=e.options,i=Object.create(null),s=Object.create(null);for(const e in n)switch(e){case vl.PATH:case vl.UUID:case vl.DIR:case vl.SCENE:case vl.URL:break;case"__requestType__":case"__isNative__":case"ext":case"type":case"__nativeName__":case"audioLoadMode":case"bundle":i[e]=n[e];break;case"__exclude__":case"__outputAsArray__":s[e]=n[e];break;default:i[e]=n[e],s[e]=n[e]}e.options=s;const o=Sl.create({input:e.input,options:i});let r=null;try{e.output=e.source=gl.sync(o)}catch(e){r=e;for(let e=0,t=o.output.length;e<t;e++)o.output[e].recycle()}o.recycle(),t(r)}class PI{constructor(){this.uuid="",this.url="",this.ext=".json",this.content=null,this.file=null,this.info=null,this.config=null,this.isNative=!1,this.options=Object.create(null),this._id=""}get id(){return this._id||(this._id=`${this.uuid}@${this.isNative?"native":"import"}`),this._id}static create(){let e;return e=0!==PI._deadPool.length?PI._deadPool.pop():new PI,e}recycle(){PI._deadPool.length!==PI.MAX_DEAD_NUM&&(this._id="",this.uuid="",this.url="",this.ext=".json",this.content=null,this.file=null,this.info=null,this.config=null,this.isNative=!1,this.options=Object.create(null),PI._deadPool.push(this))}}PI.MAX_DEAD_NUM=500,PI._deadPool=[];const wI=[];function II(e){var t;const n=e.options,i=Array.isArray(e.input)?e.input:[e.input];e.output=[];for(let o=0;o<i.length;o++){let r=i[o],a=PI.create(),c=null,l=null;if("string"==typeof r&&(r=Object.create(null),r[n.__requestType__||vl.UUID]=i[o]),"object"==typeof r){Te(r,n),r.preset&&Te(r,yl[r.preset]);for(const e in r){switch(e){case vl.UUID:{var s;const e=a.uuid=Al(r.uuid);if(!r.bundle){const t=pl.find((t=>!!t.getAssetInfo(e)));r.bundle=t&&t.name}if(pl.has(r.bundle)){if(c=pl.get(r.bundle).config,l=c.getAssetInfo(e),l&&l.redirect){if(!pl.has(l.redirect))throw new Error(`Please load bundle ${l.redirect} first`);c=pl.get(l.redirect).config,l=c.getAssetInfo(e)}a.config=c,a.info=l}a.ext=r.ext||(null===(s=l)||void 0===s?void 0:s.extension)||".json";break}case"__requestType__":case"ext":case"bundle":case"preset":case"type":break;case vl.DIR:if(pl.has(r.bundle)){pl.get(r.bundle).config.getDirWithPath(r.dir,r.type,wI);for(const e of wI)i.push({uuid:e.uuid,__isNative__:!1,ext:e.extension||".json",bundle:r.bundle});wI.length=0}a.recycle(),a=null;break;case vl.PATH:if(pl.has(r.bundle)){if(c=pl.get(r.bundle).config,l=c.getInfoWithPath(r.path,r.type),l&&l.redirect){if(!pl.has(l.redirect))throw new Error(`you need to load bundle ${l.redirect} first`);c=pl.get(l.redirect).config,l=c.getAssetInfo(l.uuid)}if(!l)throw a.recycle(),new Error(`Bundle ${r.bundle} doesn't contain ${r.path}`);a.config=c,a.uuid=l.uuid,a.info=l}a.ext=r.ext||(null===(t=l)||void 0===t?void 0:t.extension)||".json";break;case vl.SCENE:if(!r.bundle){const e=pl.find((e=>!!e.getSceneInfo(r.scene)));r.bundle=e&&e.name}if(pl.has(r.bundle)){if(c=pl.get(r.bundle).config,l=c.getSceneInfo(r.scene),l&&l.redirect){if(!pl.has(l.redirect))throw new Error(`you need to load bundle ${l.redirect} first`);c=pl.get(l.redirect).config,l=c.getAssetInfo(l.uuid)}if(!l)throw a.recycle(),new Error(`Bundle ${c.name} doesn't contain scene ${r.scene}`);a.config=c,a.uuid=l.uuid,a.info=l}break;case"__isNative__":a.isNative=r.__isNative__;break;case vl.URL:a.url=r.url,a.uuid=r.uuid||r.url,a.ext=r.ext||ah(r.url),a.isNative=void 0===r.__isNative__||r.__isNative__;break;default:a.options[e]=r[e]}if(!a)break}}if(a&&(e.output.push(a),!a.uuid&&!a.url))throw new Error(`Can not parse this input:${JSON.stringify(r)}`)}return null}function RI(e){const t=e.output=e.input;for(let e=0;e<t.length;e++){const n=t[e];if(n.url)continue;let i="",s="";const o=n.config;s=n.isNative?o&&o.nativeBase?o.base+o.nativeBase:u.assetManager.generalNativeBase:o&&o.importBase?o.base+o.importBase:u.assetManager.generalImportBase;const r=n.uuid;let a="";n.info&&(a=n.isNative?n.info.nativeVer?`.${n.info.nativeVer}`:"":n.info.ver?`.${n.info.ver}`:""),i=".ttf"===n.ext?`${s}/${r.slice(0,2)}/${r}${a}/${n.options.__nativeName__}`:`${s}/${r.slice(0,2)}/${r}${a}${n.ext}`,n.url=i}return null}class DI{constructor(){this.pipeline=fl.append(AI).append(TI),this.fetchPipeline=ml.append(AI).append(yI),this.transformPipeline=gl.append(II).append(RI),this.bundles=pl,this.assets=ul,this.generalImportBase="",this.generalNativeBase="",this.dependUtil=mm,this.force=!1,this.allowImageBitmap=!$h.isMobile,this.utils=Nl,this.downloader=hI,this.parser=EI,this.packManager=vI,this.cacheAsset=!0,this.cacheManager=null,this.presets=yl,this.factory=gI,this.preprocessPipe=AI,this.fetchPipe=yI,this.loadPipe=TI,this.references=null,this._releaseManager=Fw,this._files=_l,this._parsed=dl,this._parsePipeline=null}get main(){return pl.get(xl.MAIN)||null}get resources(){return pl.get(xl.RESOURCES)||null}init(e={}){this._files.clear(),this._parsed.clear(),this._releaseManager.init(),this.assets.clear(),this.bundles.clear(),this.packManager.init(),this.downloader.init(e.server,e.bundleVers,e.remoteBundles),this.parser.init(),this.dependUtil.init();let t=e.importBase||"";t&&t.endsWith("/")&&(t=t.substr(0,t.length-1));let n=e.nativeBase||"";n&&n.endsWith("/")&&(n=n.substr(0,n.length-1)),this.generalImportBase=t,this.generalNativeBase=n}getBundle(e){return pl.get(e)||null}removeBundle(e){e._destroy(),pl.remove(e.name)}loadAny(e,t,n,i){const{options:s,onProgress:o,onComplete:r}=Ww(t,n,i);s.preset=s.preset||"default",e=Array.isArray(e)?e.slice():e;const a=Sl.create({input:e,onProgress:o,onComplete:Yw(r),options:s});fl.async(a)}preloadAny(e,t,n,i){const{options:s,onProgress:o,onComplete:r}=Ww(t,n,i);s.preset=s.preset||"preload",e=Array.isArray(e)?e.slice():e;const a=Sl.create({input:e,onProgress:o,onComplete:Yw(r),options:s});ml.async(a)}loadRemote(e,t,n){const{options:i,onComplete:s}=Ww(t,void 0,n);i.reloadAsset||!this.assets.has(e)?(i.__isNative__=!0,i.preset=i.preset||"remote",this.loadAny({url:e},i,null,((t,n)=>{t?(C(t.message,t.stack),s&&s(t,n)):gI.create(e,n,i.ext||ah(e),i,((e,t)=>{s&&s(e,t)}))}))):Yw(s)(null,this.assets.get(e))}loadBundle(e,t,n){const{options:i,onComplete:s}=Ww(t,void 0,n),o=lh(e);this.bundles.has(o)?Yw(s)(null,this.getBundle(o)):(i.preset=i.preset||"bundle",i.ext="bundle",i.__isNative__=!0,this.loadAny({url:e},i,null,((t,n)=>{t?(C(t.message,t.stack),s&&s(t,n)):gI.create(e,n,"bundle",i,((e,t)=>{s&&s(e,t)}))})))}releaseAsset(e){Fw.tryRelease(e,!0)}releaseUnusedAssets(){ul.forEach((e=>{Fw.tryRelease(e)}))}releaseAll(){ul.forEach((e=>{Fw.tryRelease(e,!0)}))}loadWithJson(e,t,n,i){throw new Error("Only valid in Editor")}}e("AssetManager",DI),DI.Pipeline=hl,DI.Task=Sl,DI.Cache=ll,DI.RequestItem=PI,DI.Bundle=Kw,DI.BuiltinBundleName=xl;var OI=e("assetManager",u.assetManager=new DI);u.AssetManager=DI;const NI=[".png",".jpg",".bmp",".jpeg",".gif",".ico",".tiff",".webp",".image",".pvr",".pkm",".astc"],MI=[".mp3",".ogg",".wav",".m4a"];function LI(){return!0}const BI={transformURL(e){const t=wl(e);if(!t)return e;const n=pl.find((e=>!!e.getAssetInfo(t)));if(!n)return e;let i="";const s=n.getAssetInfo(t);if(i=e.startsWith(n.base+n.config.nativeBase)?s.nativeVer||"":s.ver||"",!i||-1!==e.indexOf(i))return e;let o=!1;if(".ttf"===ah(e)&&(o=!0),o){const t=hh(e),n=lh(e);e=`${t}.${i}/${n}`}else e=e.replace(/.*[/\\][0-9a-fA-F]{2}[/\\]([0-9a-fA-F-@]{8,})/,(e=>`${e}.${i}`));return e}};class FI{constructor(){this._autoReleaseSetting=Object.create(null),this._parseLoadResArgs=qw}set onProgress(e){zw=e}get _cache(){if(ul instanceof ll)return ul._map;{const e={};return ul.forEach(((t,n)=>{e[n]=t})),e}}load(e,t,n){void 0===n&&void 0!==t&&(n=t,t=null);const i=Array.isArray(e)?e:[e];for(let e=0;e<i.length;e++){const t=i[e];"string"==typeof t?i[e]={url:t,__isNative__:!0}:(t.type&&(t.ext=`.${t.type}`,t.type=void 0),t.url&&(t.__isNative__=!0))}const s=[],o=[];OI.loadAny(i,null,((e,n,i)=>{i.content&&(NI.includes(i.ext)?s.push(i.content):MI.includes(i.ext)&&o.push(i.content)),t&&t(e,n,i)}),((e,t)=>{let r=null;if(!e){t=Array.isArray(t)?t:[t];for(let e=0;e<t.length;e++){const n=t[e];if(!(n instanceof xh)){let r=n;const a=i[e].url;s.includes(r)?gI.create(a,n,".png",{},((n,i)=>{r=t[e]=i})):o.includes(r)&&gI.create(a,n,".mp3",{},((n,i)=>{r=t[e]=i})),ul.add(a,r)}}if(t.length>1){const e=Object.create(null);t.forEach((t=>{e[t._uuid]=t})),r={isCompleted:LI,_map:e}}else r=t[0]}n&&n(e,r)}))}getXMLHttpRequest(){return new XMLHttpRequest}getItem(e){return OI.assets.has(e)?{content:OI.assets.get(e)}:null}loadRes(e,t,n,i){const{type:s,onProgress:o,onComplete:r}=this._parseLoadResArgs(t,n,i),a=ah(e);a&&!$w.getInfoWithPath(e,s)&&(e=e.slice(0,-a.length)),$w.load(e,s,o,r)}loadResArray(e,t,n,i){const{type:s,onProgress:o,onComplete:r}=this._parseLoadResArgs(t,n,i);e.forEach(((t,n)=>{const i=ah(t);i&&!$w.getInfoWithPath(t,s)&&(e[n]=t.slice(0,-i.length))})),$w.load(e,s,o,r)}loadResDir(e,t,n,i){const{type:s,onProgress:o,onComplete:r}=this._parseLoadResArgs(t,n,i);$w.loadDir(e,s,o,((t,n)=>{let i=[];t||(i=$w.getDirWithPath(e,s).map((e=>e.path))),r&&r(t,n,i)}))}getRes(e,t){return ul.has(e)?ul.get(e):$w.get(e,t)}getResCount(){return ul.count}getDependsRecursively(e){if(!e)return[];const t="string"==typeof e?e:e._uuid;return mm.getDepsRecursively(t).concat([t])}get md5Pipe(){return BI}get downloader(){return hI}get loader(){return OI.parser}addDownloadHandlers(e){const t=Object.create(null);for(const n in e){const i=e[n];t[`.${n}`]=(e,t,n)=>{i({url:e},n)}}hI.register(t)}addLoadHandlers(e){const t=Object.create(null);for(const n in e){const i=e[n];t[`.${n}`]=(e,t,n)=>{i({content:e},n)}}EI.register(t)}release(e){if(Array.isArray(e))for(let t=0;t<e.length;t++){let n=e[t];"string"==typeof n&&(n=ul.get(n)),OI.releaseAsset(n)}else e&&("string"==typeof e&&(e=ul.get(e)),OI.releaseAsset(e))}releaseAsset(e){OI.releaseAsset(e)}releaseRes(e,t){$w.release(e,t)}releaseAll(){OI.releaseAll(),ul.clear()}removeItem(e){return!!ul.remove(e)}setAutoRelease(e,t){"object"==typeof e&&(e=e._uuid),this._autoReleaseSetting[e]=!!t}setAutoReleaseRecursively(e,t){"object"==typeof e&&(e=e._uuid),t=!!t,this._autoReleaseSetting[e]=t;const n=mm.getDepsRecursively(e);for(let e=0;e<n.length;e++)this._autoReleaseSetting[n[e]]=t}isAutoRelease(e){return"object"==typeof e&&(e=e._uuid),!!this._autoReleaseSetting[e]}}e("CCLoader",FI);const zI=e("loader",new FI),UI=e("AssetLibrary",{init(e){e.importBase=e.libraryPath,e.nativeBase=e.rawAssetsBase,OI.init(e),e.rawAssets&&$w.init({base:"",deps:[],scenes:{},redirect:[],debug:!0,packs:{},types:[],versions:{import:[],native:[]},name:xl.RESOURCES,importBase:e.importBase,nativeBase:e.nativeBase,paths:e.rawAssets.assets,uuids:Object.keys(e.rawAssets.assets),extensionMap:{}})},loadAsset(e,t,n){OI.loadAny(e,t)}}),GI=e("url",{});V(GI,"url",[{name:"normalize",target:OI.utils,targetName:"assetManager.utils",newName:"normalize"},{name:"raw",targetName:"Asset.prototype",newName:"nativeUrl",customFunction:e=>e.startsWith("resources/")?Ol({path:uh(e.substr(10)),bundle:xl.RESOURCES,__isNative__:!0,ext:ah(e)}):""}]),H(UI,"AssetLibrary",[{name:"getLibUrlNoExt",suggest:"AssetLibrary.getLibUrlNoExt was removed, if you want to transform url, please use assetManager.utils.getUrlWithUuid instead"},{name:"queryAssetInfo",suggest:"AssetLibrary.queryAssetInfo was removed"}]),H(zI,"loader",[{name:"releaseResDir",suggest:"loader.releaseResDir was removed, please use assetManager.releaseAsset instead"},{name:"flowInDeps",suggest:"loader.flowInDeps was removed"},{name:"assetLoader",suggest:"loader.assetLoader was removed, assetLoader and md5Pipe were merged into assetManager.transformPipeline"}]),V(u,"cc",[{name:"loader",newName:"assetManager",logTimes:1,customGetter:()=>zI},{name:"AssetLibrary",newName:"assetManager",logTimes:1,customGetter:()=>UI},{name:"Pipeline",target:DI,targetName:"AssetManager",newName:"Pipeline",logTimes:1},{name:"url",targetName:"assetManager",newName:"utils",logTimes:1,customGetter:()=>GI}]),H(u,"cc",[{name:"LoadingItems",suggest:F(1400,"LoadingItems","AssetManager.Task")}]),V(Qe,"macro",[{name:"DOWNLOAD_MAX_CONCURRENT",target:hI,targetName:"assetManager.downloader",newName:"maxConcurrency"}]),V(Sw,"director",[{name:"_getSceneUuid",targetName:"assetManager.main",newName:"getSceneInfo",customFunction:e=>{var t;return OI.main?null===(t=OI.main.getSceneInfo(e))||void 0===t?void 0:t.uuid:""}}]),V(yw,"game",[{name:"_sceneInfos",targetName:"assetManager.main",newName:"getSceneInfo",customGetter:()=>{const e=[];return OI.main&&OI.main.config.scenes.forEach((t=>{e.push(t)})),e}}]);const VI=Fw._autoRelease;var HI,kI,jI,WI,qI,XI,YI,KI,$I,QI,JI,ZI,eR;Fw._autoRelease=function(e,t,n){VI.call(Fw,e,t,n);const i=zI._autoReleaseSetting,s=Object.keys(i);for(let e=0;e<s.length;e++){const t=s[e];if(!0===i[t]){const e=ul.get(t);e&&Fw.tryRelease(e)}}};let tR=e("EventHandler",(HI=mc("cc.ClickEvent"),kI=Zc(u.Node),jI=Uc(),WI=Uc(),qI=Uc(),XI=Uc(),HI(($I=ac((KI=class e{constructor(){rc(this,"target",$I,this),rc(this,"component",QI,this),rc(this,"_componentId",JI,this),rc(this,"handler",ZI,this),rc(this,"customEventData",eR,this)}get _componentName(){return this._genCompIdIfNeeded(),this._compId2Name(this._componentId)}set _componentName(e){this._componentId=this._compName2Id(e)}static emitEvents(t,...n){for(let i=0,s=t.length;i<s;i++){const s=t[i];s instanceof e&&s.emit(n)}}emit(e){const t=this.target;if(!u.isValid(t))return;this._genCompIdIfNeeded();const n=u.js._getClassById(this._componentId),i=t.getComponent(n);if(!u.isValid(i))return;const s=i[this.handler];"function"==typeof s&&(null!=this.customEventData&&""!==this.customEventData&&(e=e.slice()).push(this.customEventData),s.apply(i,e))}_compName2Id(e){const t=u.js.getClassByName(e);return u.js._getClassId(t)}_compId2Name(e){const t=u.js._getClassById(e);return u.js.getClassName(t)}_genCompIdIfNeeded(){this._componentId||(this._componentName=this.component,this.component="")}}).prototype,"target",[Tc,kI,Tc,jI],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),QI=ac(KI.prototype,"component",[Tc,Lc,WI],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),JI=ac(KI.prototype,"_componentId",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),ZI=ac(KI.prototype,"handler",[Tc,Lc,qI],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),eR=ac(KI.prototype,"customEventData",[Tc,Lc,XI],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),YI=KI))||YI));var nR,iR,sR,oR,rR,aR,cR,lR,hR,uR,_R,dR,pR,fR,mR,gR,vR,yR,xR,SR,CR,ER,TR,bR,AR,PR,wR,IR,RR,DR,OR,NR,MR,LR,BR,FR,zR,UR,GR,VR,HR,kR,jR,WR,qR,XR,YR,KR,$R,QR,JR,ZR,eD,tD,nD,iD,sD,oD,rD,aD,cD,lD,hD,uD,_D,dD,pD,fD,mD,gD;u.Component.EventHandler=tR;const vD=new gn,yD=qe(og),xD=qe(sg),SD=qe(rg),CD=qe(cg),ED=qe(ag),TD=qe({SKYBOX:mg|Fi.DEPTH_STENCIL,SOLID_COLOR:Fi.ALL,DEPTH_ONLY:Fi.DEPTH_STENCIL,DONT_CLEAR:Fi.NONE});let bD=(nR=mc("cc.Camera"),iR=Mc(),sR=Rc(),oR=Wc(),rR=Uc(),aR=Zc(Zd.BitMask),cR=Wc(),lR=Uc(),hR=Zc(TD),uR=Wc(),_R=Uc(),dR=Wc(),pR=Uc(),fR=Wc(),mR=Uc(),gR=Wc(),vR=Uc(),yR=Zc(yD),xR=Wc(),SR=Uc(),CR=Zc(xD),ER=Wc(),TR=Bc(),bR=Uc(),AR=Wc(),PR=Bc(),wR=Uc(),IR=Wc(),RR=Bc(),DR=Uc(),OR=Wc(),NR=Uc(),MR=Wc(),LR=Uc(),BR=Zc(SD),FR=Wc(),zR=Uc(),UR=Zc(CD),GR=Wc(),VR=Uc(),HR=Zc(ED),kR=Wc(),jR=Uc(),WR=Wc(),qR=Uc(),XR=Zc(hE),YR=Wc(),KR=Uc(),AD=nR($R=iR($R=sR($R=Ic((gD=mD=class e extends Gh{constructor(...e){super(...e),rc(this,"_projection",JR,this),rc(this,"_priority",ZR,this),rc(this,"_fov",eD,this),rc(this,"_fovAxis",tD,this),rc(this,"_orthoHeight",nD,this),rc(this,"_near",iD,this),rc(this,"_far",sD,this),rc(this,"_color",oD,this),rc(this,"_depth",rD,this),rc(this,"_stencil",aD,this),rc(this,"_clearFlags",cD,this),rc(this,"_rect",lD,this),rc(this,"_aperture",hD,this),rc(this,"_shutter",uD,this),rc(this,"_iso",_D,this),rc(this,"_screenScale",dD,this),rc(this,"_visibility",pD,this),rc(this,"_targetTexture",fD,this),this._camera=null,this._inEditorMode=!1,this._flows=void 0}get camera(){return this._camera}get priority(){return this._priority}set priority(e){this._priority=e,this._camera&&(this._camera.priority=e)}get visibility(){return this._visibility}set visibility(e){this._visibility=e,this._camera&&(this._camera.visibility=e)}get clearFlags(){return this._clearFlags}set clearFlags(e){this._clearFlags=e,this._camera&&(this._camera.clearFlag=e)}get clearColor(){return this._color}set clearColor(e){this._color.set(e),this._camera&&(this._camera.clearColor=this._color)}get clearDepth(){return this._depth}set clearDepth(e){this._depth=e,this._camera&&(this._camera.clearDepth=e)}get clearStencil(){return this._stencil}set clearStencil(e){this._stencil=e,this._camera&&(this._camera.clearStencil=e)}get projection(){return this._projection}set projection(e){this._projection=e,this._camera&&(this._camera.projectionType=e)}get fovAxis(){return this._fovAxis}set fovAxis(e){e!==this._fovAxis&&(this._fovAxis=e,this._camera&&(this._camera.fovAxis=e,e===sg.VERTICAL?this.fov=this._fov*this._camera.aspect:this.fov=this._fov/this._camera.aspect))}get fov(){return this._fov}set fov(e){this._fov=e,this._camera&&(this._camera.fov=$t(e))}get orthoHeight(){return this._orthoHeight}set orthoHeight(e){this._orthoHeight=e,this._camera&&(this._camera.orthoHeight=e)}get near(){return this._near}set near(e){this._near=e,this._camera&&(this._camera.nearClip=e)}get far(){return this._far}set far(e){this._far=e,this._camera&&(this._camera.farClip=e)}get aperture(){return this._aperture}set aperture(e){this._aperture=e,this._camera&&(this._camera.aperture=e)}get shutter(){return this._shutter}set shutter(e){this._shutter=e,this._camera&&(this._camera.shutter=e)}get iso(){return this._iso}set iso(e){this._iso=e,this._camera&&(this._camera.iso=e)}get rect(){return this._rect}set rect(e){this._rect=e,this._camera&&this._camera.setViewportInOrientedSpace(e)}get targetTexture(){return this._targetTexture}set targetTexture(t){if(this._targetTexture===t)return;const n=this._targetTexture;this._targetTexture=t,this._checkTargetTextureEvent(n),this._updateTargetTexture(),!t&&this._camera&&(this._camera.changeTargetWindow(null),this._camera.isWindowSize=!0),this.node.emit(e.TARGET_TEXTURE_CHANGE,this)}get screenScale(){return this._screenScale}set screenScale(e){this._screenScale=e,this._camera&&(this._camera.screenScale=e)}get inEditorMode(){return this._inEditorMode}set inEditorMode(e){this._inEditorMode=e,this._camera&&this._camera.changeTargetWindow(e?u.director.root&&u.director.root.mainWindow:u.director.root&&u.director.root.tempWindow)}onLoad(){this._createCamera()}onEnable(){this.node.hasChangedFlags|=Iv.POSITION,this._camera&&this._attachToScene()}onDisable(){this._camera&&this._detachFromScene()}onDestroy(){this._camera&&(this._camera.destroy(),this._camera=null),this._targetTexture&&this._targetTexture.off("resize")}screenPointToRay(e,t,n){return n||(n=Yo.create()),this._camera&&this._camera.screenPointToRay(n,e,t),n}worldToScreen(e,t){return t||(t=new gn),this._camera&&this._camera.worldToScreen(t,e),t}screenToWorld(e,t){return t||(t=this.node.getWorldPosition()),this._camera&&this._camera.screenToWorld(t,e),t}convertToUINode(e,t,n){if(n||(n=new gn),!this._camera)return n;this.worldToScreen(e,vD);const i=t.getComponent("cc.UITransform"),s=Rw.getVisibleSize(),o=vD.x-.5*this._camera.width,r=vD.y-.5*this._camera.height;return vD.x=o/u.view.getScaleX()+.5*s.width,vD.y=r/u.view.getScaleY()+.5*s.height,i&&i.convertToNodeSpaceAR(vD,n),n}_createCamera(){this._camera||(this._camera=u.director.root.createCamera(),this._camera.initialize({name:this.node.name,node:this.node,projection:this._projection,window:this._inEditorMode?u.director.root&&u.director.root.mainWindow:u.director.root&&u.director.root.tempWindow,priority:this._priority}),this._camera.setViewportInOrientedSpace(this._rect),this._camera.fovAxis=this._fovAxis,this._camera.fov=$t(this._fov),this._camera.orthoHeight=this._orthoHeight,this._camera.nearClip=this._near,this._camera.farClip=this._far,this._camera.clearColor=this._color,this._camera.clearDepth=this._depth,this._camera.clearStencil=this._stencil,this._camera.clearFlag=this._clearFlags,this._camera.visibility=this._visibility,this._camera.aperture=this._aperture,this._camera.shutter=this._shutter,this._camera.iso=this._iso),this._updateTargetTexture()}_attachToScene(){this.node.scene&&this._camera&&(this._camera&&this._camera.scene&&this._camera.scene.removeCamera(this._camera),this._getRenderScene().addCamera(this._camera))}_detachFromScene(){this._camera&&this._camera.scene&&this._camera.scene.removeCamera(this._camera)}_checkTargetTextureEvent(e){e&&e.off("resize"),this._targetTexture&&this._targetTexture.on("resize",(e=>{this._camera&&this._camera.setFixedSize(e.width,e.height)}),this)}_updateTargetTexture(){if(this._camera&&this._targetTexture){const e=this._targetTexture.window;this._camera.changeTargetWindow(e),this._camera.setFixedSize(e.width,e.height)}}},mD.ProjectionType=yD,mD.FOVAxis=xD,mD.ClearFlag=TD,mD.Aperture=SD,mD.Shutter=CD,mD.ISO=ED,mD.TARGET_TEXTURE_CHANGE="tex-change",JR=ac((QR=gD).prototype,"_projection",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return yD.PERSPECTIVE}}),ZR=ac(QR.prototype,"_priority",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),eD=ac(QR.prototype,"_fov",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 45}}),tD=ac(QR.prototype,"_fovAxis",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return xD.VERTICAL}}),nD=ac(QR.prototype,"_orthoHeight",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 10}}),iD=ac(QR.prototype,"_near",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),sD=ac(QR.prototype,"_far",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1e3}}),oD=ac(QR.prototype,"_color",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new dn("#333333")}}),rD=ac(QR.prototype,"_depth",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),aD=ac(QR.prototype,"_stencil",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),cD=ac(QR.prototype,"_clearFlags",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return TD.SOLID_COLOR}}),lD=ac(QR.prototype,"_rect",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Wn(0,0,1,1)}}),hD=ac(QR.prototype,"_aperture",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return SD.F16_0}}),uD=ac(QR.prototype,"_shutter",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return CD.D125}}),_D=ac(QR.prototype,"_iso",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ED.ISO100}}),dD=ac(QR.prototype,"_screenScale",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),pD=ac(QR.prototype,"_visibility",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return cf}}),fD=ac(QR.prototype,"_targetTexture",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(QR.prototype,"priority",[oR,rR],Object.getOwnPropertyDescriptor(QR.prototype,"priority"),QR.prototype),ac(QR.prototype,"visibility",[aR,cR,lR],Object.getOwnPropertyDescriptor(QR.prototype,"visibility"),QR.prototype),ac(QR.prototype,"clearFlags",[hR,uR,_R],Object.getOwnPropertyDescriptor(QR.prototype,"clearFlags"),QR.prototype),ac(QR.prototype,"clearColor",[dR,pR],Object.getOwnPropertyDescriptor(QR.prototype,"clearColor"),QR.prototype),ac(QR.prototype,"clearDepth",[fR,mR],Object.getOwnPropertyDescriptor(QR.prototype,"clearDepth"),QR.prototype),ac(QR.prototype,"clearStencil",[gR,vR],Object.getOwnPropertyDescriptor(QR.prototype,"clearStencil"),QR.prototype),ac(QR.prototype,"projection",[yR,xR,SR],Object.getOwnPropertyDescriptor(QR.prototype,"projection"),QR.prototype),ac(QR.prototype,"fovAxis",[CR,ER,TR,bR],Object.getOwnPropertyDescriptor(QR.prototype,"fovAxis"),QR.prototype),ac(QR.prototype,"fov",[AR,PR,wR],Object.getOwnPropertyDescriptor(QR.prototype,"fov"),QR.prototype),ac(QR.prototype,"orthoHeight",[IR,RR,DR],Object.getOwnPropertyDescriptor(QR.prototype,"orthoHeight"),QR.prototype),ac(QR.prototype,"near",[OR,NR],Object.getOwnPropertyDescriptor(QR.prototype,"near"),QR.prototype),ac(QR.prototype,"far",[MR,LR],Object.getOwnPropertyDescriptor(QR.prototype,"far"),QR.prototype),ac(QR.prototype,"aperture",[BR,FR,zR],Object.getOwnPropertyDescriptor(QR.prototype,"aperture"),QR.prototype),ac(QR.prototype,"shutter",[UR,GR,VR],Object.getOwnPropertyDescriptor(QR.prototype,"shutter"),QR.prototype),ac(QR.prototype,"iso",[HR,kR,jR],Object.getOwnPropertyDescriptor(QR.prototype,"iso"),QR.prototype),ac(QR.prototype,"rect",[WR,qR],Object.getOwnPropertyDescriptor(QR.prototype,"rect"),QR.prototype),ac(QR.prototype,"targetTexture",[XR,YR,KR],Object.getOwnPropertyDescriptor(QR.prototype,"targetTexture"),QR.prototype),$R=QR))||$R)||$R)||$R)||$R,e({Camera:AD,CameraComponent:AD}),AD);var AD,PD,wD,ID,RD,DD,OD,ND,MD,LD;u.Camera=bD;const BD={parent:null,owner:null,subModelIdx:0};let FD=e("RenderableComponent",(PD=mc("cc.RenderableComponent"),wD=Zc(lg),ID=Wc(),RD=zc(),DD=Zc([lg]),PD((ac((ND=class extends Gh{constructor(...e){super(...e),rc(this,"_visFlags",MD,this),rc(this,"_materials",LD,this),this._materialInstances=[],this._models=[]}get visibility(){return this._visFlags}set visibility(e){this._visFlags=e,this._onVisibilityChange(e)}get sharedMaterial(){return this.getMaterial(0)}get sharedMaterials(){return this._materials}set sharedMaterials(e){for(let t=0;t<e.length;t++)e[t]!==this._materials[t]&&this.setMaterial(e[t],t);if(e.length<this._materials.length){for(let t=e.length;t<this._materials.length;t++)this.setMaterial(null,t);this._materials.splice(e.length)}}get material(){return this.getMaterialInstance(0)}set material(e){(1!==this._materials.length||this._materialInstances[0]||this._materials[0]!==e)&&this.setMaterialInstance(e,0)}get materials(){for(let e=0;e<this._materials.length;e++)this._materialInstances[e]=this.getMaterialInstance(e);return this._materialInstances}set materials(e){const t=e.length,n=this._materials.length;for(let e=t;e<n;e++)this.setMaterialInstance(null,e);this._materials.length=t,this._materialInstances.length=t;for(let n=0;n<t;n++)this._materialInstances[n]!=e[n]&&this.setMaterialInstance(e[n],n)}getMaterial(e){return e<0||e>=this._materials.length?null:this._materials[e]}setMaterial(e,t){e&&e instanceof vv&&console.error("Can't set a material instance to a sharedMaterial slot"),this._materials[t]=e;const n=this._materialInstances[t];n&&(n.destroy(),this._materialInstances[t]=null),this._onMaterialModified(t,this._materials[t])}getMaterialInstance(e){if(!this._materials[e])return null;if(!this._materialInstances[e]){BD.parent=this._materials[e],BD.owner=this,BD.subModelIdx=e;const t=new vv(BD);BD.parent=null,BD.owner=null,BD.subModelIdx=0,this.setMaterialInstance(t,e)}return this._materialInstances[e]}setMaterialInstance(e,t){if("number"==typeof e){D(12007);const n=e;e=t,t=n}const n=this._materialInstances[t];e&&e.parent?e!==n&&(this._materialInstances[t]=e,this._onMaterialModified(t,e)):(e!==this._materials[t]||n)&&this.setMaterial(e,t)}getRenderMaterial(e){return this._materialInstances[e]||this._materials[e]}_collectModels(){return this._models}_attachToScene(){}_detachFromScene(){}_onMaterialModified(e,t){}_onRebuildPSO(e,t){}_clearMaterials(){}_onVisibilityChange(e){}}).prototype,"sharedMaterials",[wD,ID,RD],Object.getOwnPropertyDescriptor(ND.prototype,"sharedMaterials"),ND.prototype),MD=ac(ND.prototype,"_visFlags",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Zd.Enum.NONE}}),LD=ac(ND.prototype,"_materials",[DD],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),OD=ND))||OD));u.RenderableComponent=FD,V(bD,"Camera",[{name:"CameraClearFlag",newName:"ClearFlag"}]),V(bD.prototype,"Camera.prototype",[{name:"color",newName:"clearColor"},{name:"depth",newName:"clearDepth"},{name:"stencil",newName:"clearStencil"}]),u.CameraComponent=bD,ke.setClassAlias(bD,"cc.CameraComponent"),u.math=Xn,u.geometry=Qd;const zD=new gn,UD=new On;function GD(e,t,n,i){const s=n.chunk,o=n.data,r=s.vb,a=n.vertexCount;e.getWorldMatrix(UD);let c=0;for(let e=0;e<a;e++){const t=o[e];gn.set(zD,t.x,t.y,0),gn.transformMat4(zD,zD,UD),r[c++]=zD.x,r[c++]=zD.y,r[c++]=zD.z,dn.toArray(r,i,c+2),c+=6}const l=s.bufferId,h=s.vertexOffset,u=s.vertexAccessor.getMeshBuffer(s.bufferId),_=s.vertexAccessor.getIndexBuffer(l);let d=u.indexOffset;for(let e=0,t=a/4;e<t;e++){const t=h+4*e;_[d++]=t,_[d++]=t+1,_[d++]=t+2,_[d++]=t+1,_[d++]=t+3,_[d++]=t+2}u.indexOffset+=n.indexCount,u.setDirty()}const VD={};class HD{constructor(e,t){this._texture=void 0,this._width=void 0,this._height=void 0,this._x=void 0,this._y=void 0,this._nexty=void 0,this._innerTextureInfos={},this._innerSpriteFrames=void 0,this._count=void 0;const n=new kD;n.initWithSize(e,t),this._texture=n,this._width=e,this._height=t,this._x=2,this._y=2,this._nexty=2,this._innerTextureInfos={},this._innerSpriteFrames=[],this._count=0}insertSpriteFrame(e){const t=e.rect,n=e.texture,i=this._innerTextureInfos[n.getId()];let s=t.x,o=t.y;if(i)s+=i.x,o+=i.y;else{const e=n.width,t=n.height;if(this._x+e+2>this._width&&(this._x=2,this._y=this._nexty),this._y+t+2>this._nexty&&(this._nexty=this._y+t+2),this._nexty>this._height)return null;u.internal.dynamicAtlasManager.textureBleeding&&((e<=8||t<=8)&&(this._texture.drawTextureAt(n.image,this._x-1,this._y-1),this._texture.drawTextureAt(n.image,this._x-1,this._y+1),this._texture.drawTextureAt(n.image,this._x+1,this._y-1),this._texture.drawTextureAt(n.image,this._x+1,this._y+1)),this._texture.drawTextureAt(n.image,this._x-1,this._y),this._texture.drawTextureAt(n.image,this._x+1,this._y),this._texture.drawTextureAt(n.image,this._x,this._y-1),this._texture.drawTextureAt(n.image,this._x,this._y+1)),this._texture.drawTextureAt(n.image,this._x,this._y),this._innerTextureInfos[n.getId()]={x:this._x,y:this._y,texture:n},this._count++,s+=this._x,o+=this._y,this._x+=e+2}const r={x:s,y:o,texture:this._texture};return this._innerSpriteFrames.push(e),r}deleteInnerTexture(e){e&&this._innerTextureInfos[e.getId()]&&(delete this._innerTextureInfos[e.getId()],this._count--)}isEmpty(){return this._count<=0}reset(){this._x=2,this._y=2,this._nexty=2;const e=this._innerSpriteFrames;for(let t=0,n=e.length;t<n;t++){const n=e[t];n.isValid&&n._resetDynamicAtlasFrame()}this._innerSpriteFrames.length=0,this._innerTextureInfos={}}destroy(){this.reset(),this._texture.destroy()}}class kD extends bm{initWithSize(e,t,n=Vf.RGBA8888){this.reset({width:e,height:t,format:n})}drawTextureAt(e,t,n){const i=this.getGFXTexture();if(!e||!i)return;const s=this._getGFXDevice();if(!s)return void console.warn("Unable to get device");const o=new Yi;o.texOffset.x=t,o.texOffset.y=n,o.texExtent.width=e.width,o.texExtent.height=e.height,s.copyTexImagesToTexture([e.data],i,[o])}}class jD{constructor(){this._atlases=[],this._atlasIndex=-1,this._maxAtlasCount=5,this._textureSize=2048,this._maxFrameSize=512,this._textureBleeding=!0,this._enabled=!1}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(e?(this.reset(),u.director.on(u.Director.EVENT_BEFORE_SCENE_LAUNCH,this.beforeSceneLoad,this)):(this.reset(),u.director.off(u.Director.EVENT_BEFORE_SCENE_LAUNCH,this.beforeSceneLoad,this)),this._enabled=e)}get maxAtlasCount(){return this._maxAtlasCount}set maxAtlasCount(e){this._maxAtlasCount=e}get atlasCount(){return this._atlases.length}get textureBleeding(){return this._textureBleeding}set textureBleeding(e){this._textureBleeding=e}get textureSize(){return this._textureSize}set textureSize(e){this._textureSize=e}get maxFrameSize(){return this._maxFrameSize}set maxFrameSize(e){this._maxFrameSize=e}newAtlas(){let e=this._atlases[++this._atlasIndex];return e||(e=new HD(this._textureSize,this._textureSize),this._atlases.push(e)),e}beforeSceneLoad(){this.reset()}insertSpriteFrame(e){if(!this._enabled||this._atlasIndex===this._maxAtlasCount||!e||e._original)return null;if(!e.packable)return null;const t=e.texture.getSamplerInfo();if(t.minFilter!==kf.LINEAR||t.magFilter!==kf.LINEAR||t.mipFilter!==kf.NONE)return null;let n=this._atlases[this._atlasIndex];n||(n=this.newAtlas());const i=n.insertSpriteFrame(e);return i||this._atlasIndex===this._maxAtlasCount?i:(n=this.newAtlas(),n.insertSpriteFrame(e))}reset(){for(let e=0,t=this._atlases.length;e<t;e++)this._atlases[e].destroy();this._atlases.length=0,this._atlasIndex=-1}deleteAtlasSpriteFrame(e){if(!e._original)return;let t;for(let n=this._atlases.length-1;n>=0;n--)t=this._atlases[n],ke.array.fastRemove(t._innerSpriteFrames,e);const n=e._original._texture;this.deleteAtlasTexture(n)}deleteAtlasTexture(e){if(e)for(let t=this._atlases.length-1;t>=0;t--)this._atlases[t].deleteInnerTexture(e),this._atlases[t].isEmpty()&&(this._atlases[t].destroy(),this._atlases.splice(t,1),this._atlasIndex--)}packToDynamicAtlas(e,t){if(t&&!t._original&&t.packable&&t.texture&&t.texture.width>0&&t.texture.height>0){const e=this.insertSpriteFrame(t);e&&t._setDynamicAtlasFrame(e)}}}jD.instance=void 0;const WD=e("dynamicAtlasManager",jD.instance=new jD);var qD,XD,YD;u.internal.dynamicAtlasManager=WD;const KD=[{u:0,v:0},{u:0,v:0},{u:0,v:0},{u:0,v:0}];let $D=e("SpriteFrame",mc("cc.SpriteFrame")((YD=XD=class e extends xh{static createWithImage(t){const n=t instanceof hm?t:new hm(t),i=new bm;i.image=n;const s=new e;return s.texture=i,s}get insetTop(){return this._capInsets[1]}set insetTop(e){this._capInsets[1]!==e&&(this._capInsets[1]=e,this._texture&&this._calculateSlicedUV())}get insetBottom(){return this._capInsets[3]}set insetBottom(e){this._capInsets[3]!==e&&(this._capInsets[3]=e,this._texture&&this._calculateSlicedUV())}get insetLeft(){return this._capInsets[0]}set insetLeft(e){this._capInsets[0]!==e&&(this._capInsets[0]=e,this._texture&&this._calculateSlicedUV())}get insetRight(){return this._capInsets[2]}set insetRight(e){this._capInsets[2]!==e&&(this._capInsets[2]=e,this._texture&&this._calculateSlicedUV())}get rect(){return this._rect}set rect(e){this._rect.equals(e)||(this._rect.set(e),this._texture&&this._calculateUV())}get originalSize(){return this._originalSize}set originalSize(e){this._originalSize.equals(e)||(this._originalSize.set(e),this._texture&&this._calculateUV())}get offset(){return this._offset}set offset(e){this._offset.set(e)}get rotated(){return this._rotated}set rotated(e){this._rotated!==e&&(this._rotated=e,this._texture&&this._calculateUV())}get texture(){return this._texture}set texture(e){e?e!==this._texture&&this.reset({texture:e},!0):D(3122,this.name)}get atlasUuid(){return this._atlasUuid}set atlasUuid(e){this._atlasUuid=e}get width(){return this._texture.width}get height(){return this._texture.height}set _textureSource(e){window.Build?this._texture=e:e&&(this._refreshTexture(e),this._calculateUV())}get flipUVX(){return this._isFlipUVX}set flipUVX(e){this._isFlipUVX=e,this._calculateUV()}get flipUVY(){return this._isFlipUVY}set flipUVY(e){this._isFlipUVY=e,this._calculateUV()}get packable(){return this._packable}set packable(e){this._packable=e}get original(){return this._original}constructor(){super(),this.vertices=null,this.uv=[],this.unbiasUV=[],this.uvSliced=[],this._rect=new Wn,this._offset=new Bn,this._originalSize=new kn,this._rotated=!1,this._capInsets=[0,0,0,0],this._atlasUuid="",this._texture=void 0,this._isFlipUVY=!1,this._isFlipUVX=!1,this._original=null,this._packable=!0}textureLoaded(){return!!this.texture}isRotated(){return this._rotated}setRotated(e){this.rotated=e}getRect(e){return e?(e.set(this._rect),e):this._rect.clone()}setRect(e){this.rect=e}getOriginalSize(e){return e?(e.set(this._originalSize),e):this._originalSize.clone()}setOriginalSize(e){this.originalSize=e}getOffset(e){return e?(e.set(this._offset),e):this._offset.clone()}setOffset(e){this.offset=e}getGFXTexture(){return this._texture.getGFXTexture()}getGFXSampler(){return this._texture.getGFXSampler()}getHash(){return this._texture.getHash()}getSamplerInfo(){return this._texture.getSamplerInfo()}reset(e,t=!1){let n=!1;t&&(this._originalSize.set(0,0),this._rect.set(0,0,0,0),this._offset.set(0,0),this._capInsets=[0,0,0,0],this._rotated=!1,n=!0),e&&(e.texture&&(this._rect.x=this._rect.y=0,this._rect.width=e.texture.width,this._rect.height=e.texture.height,this._refreshTexture(e.texture),this.checkRect(this._texture)),e.originalSize&&this._originalSize.set(e.originalSize),e.rect&&this._rect.set(e.rect),e.offset&&this._offset.set(e.offset),void 0!==e.borderTop&&(this._capInsets[1]=e.borderTop),void 0!==e.borderBottom&&(this._capInsets[3]=e.borderBottom),void 0!==e.borderLeft&&(this._capInsets[0]=e.borderLeft),void 0!==e.borderRight&&(this._capInsets[2]=e.borderRight),void 0!==e.isRotate&&(this._rotated=!!e.isRotate),void 0!==e.isFlipUv&&(this._isFlipUVY=!!e.isFlipUv),n=!0),n&&this.texture&&this._calculateUV()}checkRect(e){const t=this._rect;let n=t.x,i=t.y;return this._rotated?(n+=t.height,i+=t.width):(n+=t.width,i+=t.height),n>e.width?(N(3300,`${this.name}/${e.name}`,n,e.width),!1):!(i>e.height&&(N(3301,`${this.name}/${e.name}`,i,e.height),1))}destroy(){return this._packable&&WD&&WD.deleteAtlasSpriteFrame(this),super.destroy()}_calculateSlicedUV(){const t=this._rect,n=this.texture,i=n.width,s=n.height,o=this._capInsets[0],r=this._capInsets[2],a=t.width-o-r,c=this._capInsets[1],l=this._capInsets[3],h=t.height-c-l,u=this.uvSliced;if(u.length=0,this._rotated){KD[0].u=t.x/i,KD[1].u=(t.x+l)/i,KD[2].u=(t.x+l+h)/i,KD[3].u=(t.x+t.height)/i,KD[3].v=t.y/s,KD[2].v=(t.y+o)/s,KD[1].v=(t.y+o+a)/s,KD[0].v=(t.y+t.width)/s;for(let e=0;e<4;++e){const t=KD[e];for(let e=0;e<4;++e){const n=KD[3-e];u.push({u:t.u,v:n.v})}}}else{KD[0].u=t.x/i,KD[1].u=(t.x+o)/i,KD[2].u=(t.x+o+a)/i,KD[3].u=(t.x+t.width)/i,KD[3].v=t.y/s,KD[2].v=(t.y+c)/s,KD[1].v=(t.y+c+h)/s,KD[0].v=(t.y+t.height)/s;for(let e=0;e<4;++e){const t=KD[e];for(let e=0;e<4;++e){const n=KD[e];u.push({u:n.u,v:t.v})}}}this.emit(e.EVENT_UV_UPDATED,this)}_calculateUV(){const e=this._rect,t=this.uv,n=this.unbiasUV,i=this.texture,s=i.width,o=i.height;if(this._rotated){const i=0===s?0:e.x/s,r=0===s?1:(e.x+e.height)/s,a=0===o?0:e.y/o,c=0===o?1:(e.y+e.width)/o;this._isFlipUVX&&this._isFlipUVY?(t[0]=r,t[1]=c,t[2]=r,t[3]=a,t[4]=i,t[5]=c,t[6]=i,t[7]=a):this._isFlipUVX?(t[0]=r,t[1]=a,t[2]=r,t[3]=c,t[4]=i,t[5]=a,t[6]=i,t[7]=c):this._isFlipUVY?(t[0]=i,t[1]=c,t[2]=i,t[3]=a,t[4]=r,t[5]=c,t[6]=r,t[7]=a):(t[0]=i,t[1]=a,t[2]=i,t[3]=c,t[4]=r,t[5]=a,t[6]=r,t[7]=c);const l=0===s?0:e.x/s,h=0===s?1:(e.x+e.height)/s,u=0===o?0:e.y/o,_=0===o?1:(e.y+e.width)/o;this._isFlipUVX&&this._isFlipUVY?(n[0]=h,n[1]=_,n[2]=h,n[3]=u,n[4]=l,n[5]=_,n[6]=l,n[7]=u):this._isFlipUVX?(n[0]=h,n[1]=u,n[2]=h,n[3]=_,n[4]=l,n[5]=u,n[6]=l,n[7]=_):this._isFlipUVY?(n[0]=l,n[1]=_,n[2]=l,n[3]=u,n[4]=h,n[5]=_,n[6]=h,n[7]=u):(n[0]=l,n[1]=u,n[2]=l,n[3]=_,n[4]=h,n[5]=u,n[6]=h,n[7]=_)}else{const i=0===s?0:e.x/s,r=0===s?1:(e.x+e.width)/s,a=0===o?1:(e.y+e.height)/o,c=0===o?0:e.y/o;this._isFlipUVX&&this._isFlipUVY?(t[0]=r,t[1]=c,t[2]=i,t[3]=c,t[4]=r,t[5]=a,t[6]=i,t[7]=a):this._isFlipUVX?(t[0]=r,t[1]=a,t[2]=i,t[3]=a,t[4]=r,t[5]=c,t[6]=i,t[7]=c):this._isFlipUVY?(t[0]=i,t[1]=c,t[2]=r,t[3]=c,t[4]=i,t[5]=a,t[6]=r,t[7]=a):(t[0]=i,t[1]=a,t[2]=r,t[3]=a,t[4]=i,t[5]=c,t[6]=r,t[7]=c);const l=0===s?0:e.x/s,h=0===s?1:(e.x+e.width)/s,u=0===o?1:(e.y+e.height)/o,_=0===o?0:e.y/o;this._isFlipUVX&&this._isFlipUVY?(n[0]=h,n[1]=_,n[2]=l,n[3]=_,n[4]=h,n[5]=u,n[6]=l,n[7]=u):this._isFlipUVX?(n[0]=h,n[1]=u,n[2]=l,n[3]=u,n[4]=h,n[5]=_,n[6]=l,n[7]=_):this._isFlipUVY?(n[0]=l,n[1]=_,n[2]=h,n[3]=_,n[4]=l,n[5]=u,n[6]=h,n[7]=u):(n[0]=l,n[1]=u,n[2]=h,n[3]=u,n[4]=l,n[5]=_,n[6]=h,n[7]=_)}const r=this.vertices;if(r){r.nu.length=0,r.nv.length=0;for(let e=0;e<r.u.length;e++)r.nu[e]=r.u[e]/s,r.nv[e]=r.v[e]/o}this._calculateSlicedUV()}_setDynamicAtlasFrame(e){e&&(this._original={_texture:this._texture,_x:this._rect.x,_y:this._rect.y},this._texture=e.texture,this._rect.x=e.x,this._rect.y=e.y,this._calculateUV())}_resetDynamicAtlasFrame(){this._original&&(this._rect.x=this._original._x,this._rect.y=this._original._y,this._texture=this._original._texture,this._original=null,this._calculateUV())}_checkPackable(){const e=WD;if(!e)return;const t=this._texture;if(!(t instanceof bm)||t.isCompressed)return void(this._packable=!1);const n=this.width,i=this.height;!t.image||n>e.maxFrameSize||i>e.maxFrameSize?this._packable=!1:t.image&&t.image instanceof HTMLCanvasElement&&(this._packable=!0)}_serialize(e){return null}_deserialize(e,t){const n=e,i=n.rect;i&&(this._rect=new Wn(i.x,i.y,i.width,i.height));const s=n.offset;n.offset&&(this._offset=new Bn(s.x,s.y));const o=n.originalSize;n.originalSize&&(this._originalSize=new kn(o.width,o.height)),this._rotated=!!n.rotated,this._name=n.name,this._packable=!!n.packable;const r=n.capInsets;r&&(this._capInsets[0]=r[0],this._capInsets[1]=r[1],this._capInsets[2]=r[2],this._capInsets[3]=r[3]),this.vertices=n.vertices,this.vertices&&(this.vertices.nu=[],this.vertices.nv=[])}clone(){var t,n,i,s;const o=new e,r=this.vertices;return o.vertices=r?{x:r.x,y:r.y,triangles:r.triangles,nu:null===(t=r.nu)||void 0===t?void 0:t.slice(0),u:null===(n=r.u)||void 0===n?void 0:n.slice(0),nv:null===(i=r.nv)||void 0===i?void 0:i.slice(0),v:null===(s=r.v)||void 0===s?void 0:s.slice(0)}:null,o.uv.splice(0,o.uv.length,...this.uv),o.unbiasUV.splice(0,o.unbiasUV.length,...this.unbiasUV),o.uvSliced.splice(0,o.uvSliced.length,...this.uvSliced),o._rect.set(this._rect),o._offset.set(this._offset),o._originalSize.set(this._originalSize),o._rotated=this._rotated,o._capInsets.splice(0,o._capInsets.length,...this._capInsets),o._atlasUuid=this._atlasUuid,o._texture=this._texture,o._isFlipUVX=this._isFlipUVX,o._isFlipUVY=this._isFlipUVY,o}_refreshTexture(e){this._texture=e;const t=this._texture,n={};let i=!1;0!==this._rect.width&&0!==this._rect.height&&this.checkRect(t)||(n.rect=new Wn(0,0,t.width,t.height),i=!0),(0===this._originalSize.width||0===this._originalSize.height||i)&&(n.originalSize=new kn(t.width,t.height),i=!0),i&&(this.reset(n),this.onLoaded()),this._checkPackable()}initDefault(e){super.initDefault(e);const t=new bm;t.initDefault(),this._refreshTexture(t),this._calculateUV()}validate(){return this._texture&&this._rect&&0!==this._rect.width&&0!==this._rect.height}},XD.EVENT_UV_UPDATED="uv_updated",qD=YD))||qD);var QD,JD,ZD;u.SpriteFrame=$D;let eO=e("SpriteAtlas",mc("cc.SpriteAtlas")((ZD=ac((JD=class extends xh{constructor(...e){super(...e),rc(this,"spriteFrames",ZD,this)}getTexture(){const e=Object.keys(this.spriteFrames);if(e.length>0){const t=this.spriteFrames[e[0]];return t&&t.texture}return null}getSpriteFrame(e){const t=this.spriteFrames[e];return t?(t.name||(t.name=e),t):null}getSpriteFrames(){const e=[],t=this.spriteFrames;for(const n of Object.keys(t))e.push(t[n]);return e}_serialize(e){}_deserialize(e,t){const n=e;this._name=n.name;const i=n.spriteFrames;this.spriteFrames=pe();for(let e=0;e<i.length;e+=2)t.result.push(this.spriteFrames,i[e],i[e+1],Ge($D))}}).prototype,"spriteFrames",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return pe()}}),QD=JD))||QD);var tO;u.SpriteAtlas=eO;let nO=e("Font",mc("cc.Font")(tO=class extends xh{})||tO);var iO,sO,oO;u.Font=nO;let rO=e("TTFFont",mc("cc.TTFFont")((oO=ac((sO=class extends nO{constructor(...e){super(...e),rc(this,"_fontFamily",oO,this)}get _nativeAsset(){return this._fontFamily}set _nativeAsset(e){this._fontFamily=e||"Arial"}get _nativeDep(){return{uuid:this._uuid,__nativeName__:this._native,ext:ah(this._native),__isNative__:!0}}initDefault(e){this._fontFamily="Arial",super.initDefault(e)}}).prototype,"_fontFamily",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(sO.prototype,"_nativeAsset",[el,Jc],Object.getOwnPropertyDescriptor(sO.prototype,"_nativeAsset"),sO.prototype),ac(sO.prototype,"_nativeDep",[el],Object.getOwnPropertyDescriptor(sO.prototype,"_nativeDep"),sO.prototype),iO=sO))||iO);var aO,cO,lO,hO,uO,_O,dO,pO;u.TTFFont=rO;class fO{constructor(){this.u=0,this.v=0,this.w=0,this.h=0,this.offsetX=0,this.offsetY=0,this.textureID=0,this.valid=!1,this.xAdvance=0}}class mO{constructor(e){this.letterDefinitions={},this.texture=e}addLetterDefinitions(e,t){this.letterDefinitions[e]=t}cloneLetterDefinition(){const e={};for(const t of Object.keys(this.letterDefinitions)){const n=new fO;be(n,this.letterDefinitions[t]),e[t]=n}return e}getTexture(){return this.texture}getLetter(e){return this.letterDefinitions[e]}getLetterDefinitionForChar(e,t){const n=e.charCodeAt(0);let i;return i=this.letterDefinitions.hasOwnProperty(n)?this.letterDefinitions[n]:null,i}clear(){this.letterDefinitions={}}}let gO=e("BitmapFont",(aO=mc("cc.BitmapFont"),cO=Zc($D),aO((uO=ac((hO=class extends nO{constructor(...e){super(...e),rc(this,"fntDataStr",uO,this),rc(this,"spriteFrame",_O,this),rc(this,"fontSize",dO,this),rc(this,"fntConfig",pO,this)}onLoaded(){const e=this.spriteFrame;!this.fontDefDictionary&&e&&(this.fontDefDictionary=new mO(e.texture));const t=this.fntConfig;if(!t)return void S("The fnt config is not exists!");const n=t.fontDefDictionary;for(const e in n){const t=new fO,i=n[e].rect;t.offsetX=n[e].xOffset,t.offsetY=n[e].yOffset,t.w=i.width,t.h=i.height,t.u=i.x,t.v=i.y,t.textureID=0,t.valid=!0,t.xAdvance=n[e].xAdvance,this.fontDefDictionary.addLetterDefinitions(e,t)}}}).prototype,"fntDataStr",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),_O=ac(hO.prototype,"spriteFrame",[cO],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),dO=ac(hO.prototype,"fontSize",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return-1}}),pO=ac(hO.prototype,"fntConfig",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),lO=hO))||lO));var vO;u.BitmapFont=gO;let yO=e("LabelAtlas",mc("cc.LabelAtlas")(vO=class extends gO{})||vO);u.LabelAtlas=yO;const xO=e("BASELINE_RATIO",.26),SO=e("MIDDLE_RATIO",(xO+1)/2-xO);const CO=new Ve(2);CO.get=function(){return this._get()||{key:"",value:0,prev:null,next:null}};const EO=new class{constructor(e){this.count=0,this.limit=0,this.datas={},this.limit=e}moveToHead(e){e.next=this.head,e.prev=null,this.head&&(this.head.prev=e),this.head=e,this.tail||(this.tail=e),this.count++,this.datas[e.key]=e}put(e,t){const n=CO.get();if(n.key=e,n.value=t,this.count>=this.limit){const e=this.tail;delete this.datas[e.key],this.count--,this.tail=e.prev,this.tail.next=null,e.prev=null,e.next=null,CO.put(e)}this.moveToHead(n)}remove(e){e.prev?e.prev.next=e.next:this.head=e.next,e.next?e.next.prev=e.prev:this.tail=e.prev,delete this.datas[e.key],this.count--}get(e){const t=this.datas[e];return t?(this.remove(t),this.moveToHead(t),t.value):null}clear(){this.count=0,this.datas={},this.head=null,this.tail=null}has(e){return!!this.datas[e]}delete(e){const t=this.datas[e];this.remove(t)}}(100),TO=/([a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûа-яА-ЯЁё]+|\S)/,bO=/^[!,.:;'}\]%\?>、‘“》？。，！]/,AO=/([a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁёáàảạãăắằẳẵặâấầẩẫậéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵđÁÀẢẠÃĂẮẰẲẴẶÂẤẦẨẪẬÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴĐ]+|\S)$/,PO=/[a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁёáàảạãăắằẳẵặâấầẩẫậéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵđÁÀẢẠÃĂẮẰẲẴẶÂẤẦẨẪẬÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴĐ]+$/,wO=/^[a-zA-Z0-9ÄÖÜäöüßéèçàùêâîôûаíìÍÌïÁÀáàÉÈÒÓòóŐőÙÚŰúűñÑæÆœŒÃÂãÔõěščřžýáíéóúůťďňĚŠČŘŽÁÍÉÓÚŤżźśóńłęćąŻŹŚÓŃŁĘĆĄ-яА-ЯЁёáàảạãăắằẳẵặâấầẩẫậéèẻẽẹêếềểễệiíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵđÁÀẢẠÃĂẮẰẲẴẶÂẤẦẨẪẬÉÈẺẼẸÊẾỀỂỄỆIÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴĐ]/;function IO(e){return/^[\u4E00-\u9FFF\u3400-\u4DFF]+$/.test(e)||/[\u3000-\u303F]|[\u3040-\u309F]|[\u30A0-\u30FF]|[\uFF00-\uFFEF]|[\u4E00-\u9FAF]|[\u2605-\u2606]|[\u2190-\u2195]|\u203B/g.test(e)||/^[\u1100-\u11FF]|[\u3130-\u318F]|[\uA960-\uA97F]|[\uAC00-\uD7AF]|[\uD7B0-\uD7FF]+$/.test(e)}function RO(e){const t=e.charCodeAt(0);return t>=9&&t<=13||32===t||133===t||160===t||5760===t||t>=8192&&t<=8202||8232===t||8233===t||8239===t||8287===t||12288===t}function DO(e,t,n){const i=`${n||e.font}🎮${t}`,s=EO.get(i);if(null!==s)return s;const o=e.measureText(t),r=o&&o.width||0;return EO.put(i,r),r}function OO(e,t,n){let i=t,s=n;const o=e[t];if(o>="\udc00"&&o<="\udfff"&&i--,void 0!==n)if(n-1!==t){const t=e[n-1];t>="\ud800"&&t<="\udbff"&&s--}else o>="\ud800"&&o<="\udbff"&&s++;return e.substring(i,s)}function NO(e){return wO.exec(e)}function MO(e){return PO.exec(e)}function LO(e,t,n,i){const s=[];if(0===e.length||n<0)return s.push(""),s;let o=e;for(;t>n&&o.length>1;){let e=o.length*(n/t)|0,r=OO(o,e),a=t-i(r),c=r,l=0,h=0;const u=100;for(;a>n&&h++<u;)e*=n/a,e|=0,r=OO(o,e),a=t-i(r);for(h=0;r&&a<=n&&h++<u;){const n=TO.exec(r);l=n?n[0].length:1,c=r,e+=l,r=OO(o,e),a=t-i(r)}e-=l,0===e?(e=1,c=OO(o,1)):1===e&&o[0]>="\ud800"&&o[0]<="\udbff"&&(e=2,c=OO(o,2));let _,d=OO(o,0,e);bO.test(c||r)&&(_=AO.exec(d),e-=_?_[0].length:0,0===e&&(e=1),c=OO(o,e),d=OO(o,0,e)),wO.test(c)&&(_=PO.exec(d),_&&d!==_[0]&&(e-=_[0].length,c=OO(o,e),d=OO(o,0,e))),0===s.length?s.push(d):(d=d.trim(),d.length>0&&s.push(d)),o=c||r,t=i(o)}return 0===s.length?s.push(o):(o=o.trim(),o.length>0&&s.push(o)),s}let BO;class FO{constructor(){this.pool=[]}static getInstance(){return BO||(BO=new FO),BO}get(){let e=this.pool.pop();if(!e){const t=document.createElement("canvas"),n=t.getContext("2d");e={canvas:t,context:n}}return e}put(e){this.pool.length>=Qe.MAX_LABEL_CANVAS_POOL_SIZE||this.pool.push(e)}}e("CanvasPool",FO);const zO=dn.WHITE.clone();class UO{constructor(){this.u=0,this.v=0,this.w=0,this.h=0,this.texture=null,this.offsetX=0,this.offsetY=0,this.valid=!1,this.xAdvance=0}}const GO=`rgba(255, 255, 255, ${(1/255).toFixed(3)})`;class VO{constructor(e,t){this.image=null,this.labelInfo=void 0,this.char=void 0,this.data=null,this.canvas=null,this.context=null,this.width=0,this.height=0,this.offsetY=0,this.hash=void 0,this.char=e,this.labelInfo=t,this.hash=e.charCodeAt(0)+t.hash}updateRenderData(){this._updateProperties(),this._updateTexture()}destroy(){this.image=null}_updateProperties(){if(this.data=FO.getInstance().get(),this.canvas=this.data.canvas,this.context=this.data.context,this.context){this.context.font=this.labelInfo.fontDesc;const e=DO(this.context,this.char,this.labelInfo.fontDesc),t=2*this.labelInfo.margin+2;this.width=parseFloat(e.toFixed(2))+t,this.height=(1+xO)*this.labelInfo.fontSize+t,this.offsetY=-this.labelInfo.fontSize*xO/2}this.canvas.width!==this.width&&(this.canvas.width=this.width),this.canvas.height!==this.height&&(this.canvas.height=this.height),this.image||(this.image=new hm),this.image.reset(this.canvas)}_updateTexture(){if(!this.context||!this.canvas)return;const e=this.context,t=this.labelInfo,n=this.canvas.width,i=this.canvas.height;e.textAlign="center",e.textBaseline="alphabetic",e.clearRect(0,0,n,i),e.fillStyle=GO,e.fillRect(0,0,n,i),e.font=t.fontDesc;const s=t.fontSize,o=n/2,r=i/2+s*SO+0*s,a=t.color;if(e.lineJoin="round",e.fillStyle=`rgba(${a.r}, ${a.g}, ${a.b}, 1)`,t.isOutlined){const n=t.out||zO;e.strokeStyle=`rgba(${n.r}, ${n.g}, ${n.b}, ${n.a/255})`,e.lineWidth=2*t.margin,e.strokeText(this.char,o,r)}e.fillText(this.char,o,r)}}class HO extends bm{initWithSize(e,t,n=Vf.RGBA8888){this.reset({width:e,height:t,format:n})}drawTextureAt(e,t,n){const i=this.getGFXTexture();if(!e||!i)return;const s=this._getGFXDevice();if(!s)return void console.warn("Unable to get device");const o=new Yi;o.texOffset.x=t,o.texOffset.y=n,o.texExtent.width=e.width,o.texExtent.height=e.height,s.copyTexImagesToTexture([e.data],i,[o])}}class kO{get width(){return this._width}get height(){return this._height}constructor(e,t){this._x=0,this._y=0,this._nextY=0,this._width=0,this._height=0,this._halfBleed=0,this._dirty=!1;const n=new HO;n.initWithSize(e,t),this.fontDefDictionary=new mO(n),this._halfBleed=1,this._width=e,this._height=t,Sw.on(xw.EVENT_BEFORE_SCENE_LAUNCH,this.beforeSceneLoad,this)}insertLetterTexture(e){const t=e.image,n=Sw.root.device;if(!t||!this.fontDefDictionary||!n)return null;const i=t.width,s=t.height;if(this._x+i+0>this._width&&(this._x=0,this._y=this._nextY),this._y+s>this._nextY&&(this._nextY=this._y+s+0),this._nextY>this._height)return D(12100),null;this.fontDefDictionary.texture.drawTextureAt(t,this._x,this._y),this._dirty=!0;const o=new UO;return o.u=this._x+this._halfBleed,o.v=this._y+this._halfBleed,o.texture=this.fontDefDictionary.texture,o.valid=!0,o.w=e.width-2,o.h=e.height-2,o.xAdvance=o.w,o.offsetY=e.offsetY,this._x+=i+0,this.fontDefDictionary.addLetterDefinitions(e.hash,o),o}update(){this._dirty&&(this._dirty=!1)}reset(){this._x=0,this._y=0,this._nextY=0,this.fontDefDictionary.clear()}destroy(){this.reset(),this.fontDefDictionary&&(this.fontDefDictionary.texture.destroy(),this.fontDefDictionary.texture=null)}getTexture(){return this.fontDefDictionary.getTexture()}beforeSceneLoad(){this.clearAllCache()}clearAllCache(){this.destroy();const e=new HO;e.initWithSize(this._width,this._height),this.fontDefDictionary.texture=e}getLetter(e){return this.fontDefDictionary.letterDefinitions[e]}getLetterDefinitionForChar(e,t){const n=e.charCodeAt(0)+t.hash;let i=this.fontDefDictionary.letterDefinitions[n];if(!i){const n=new VO(e,t);n.updateRenderData(),i=this.insertLetterTexture(n),n.destroy()}return i}}const jO={fontAtlas:null,fontSize:0,lineHeight:0,hAlign:0,vAlign:0,hash:"",fontFamily:"",fontDesc:"Arial",color:dn.WHITE.clone(),isOutlined:!1,out:dn.WHITE.clone(),margin:0},WO=[new vs(zi.ATTR_POSITION,ti.RGB32F)],qO=[new vs(zi.ATTR_POSITION,ti.RGB32F),new vs(zi.ATTR_COLOR,ti.RGBA32F)],XO=[new vs(zi.ATTR_POSITION,ti.RGB32F),new vs(zi.ATTR_TEX_COORD,ti.RG32F),new vs(zi.ATTR_COLOR,ti.RGBA32F)],YO=[new vs(zi.ATTR_POSITION,ti.RGB32F),new vs(zi.ATTR_TEX_COORD,ti.RG32F),new vs(zi.ATTR_COLOR,ti.RGBA32F),new vs(zi.ATTR_COLOR2,ti.RGBA32F)];function KO(e){let t=0;for(let n=0;n<e.length;n++){const i=e[n];t+=Hs[i.format].count}return t}function $O(e){let t=0;for(let n=0;n<e.length;n++){const i=e[n];t+=Hs[i.format].size}return t}u.internal.vfmtPosUvColor=XO,u.internal.vfmtPosUvTwoColor=YO,e("UIVertexFormat",Object.freeze({__proto__:null,vfmt:WO,vfmtPosColor:qO,vfmtPosUvColor:XO,vfmtPosUvTwoColor:YO,getComponentPerVertex:KO,getAttributeStride:$O}));const QO=$O(XO)>>2,JO=new Bl((()=>({x:0,y:0,z:0,u:0,v:0,color:dn.WHITE.clone()})),128);let ZO=null;class eN{get vertexCount(){return this._vc}get indexCount(){return this._ic}get stride(){return this._floatStride<<2}get floatStride(){return this._floatStride}get vertexFormat(){return this._vertexFormat}constructor(e=XO){this.material=null,this.chunk=null,this.dataHash=0,this.isMeshBuffer=!1,this._vc=0,this._ic=0,this._floatStride=0,this._vertexFormat=XO,this._floatStride=e===XO?QO:$O(e)>>2,this._vertexFormat=e}isValid(){return this._ic>0&&this.chunk.vertexAccessor}}e("BaseRenderData",eN);class tN extends eN{static add(e=XO,t){ZO||(ZO=new Fl((()=>new tN),32));const n=ZO.add();return n._floatStride=e===XO?QO:$O(e)>>2,n._vertexFormat=e,t||(t=Sw.root.batcher2D.switchBufferAccessor(n._vertexFormat)),n._accessor=t,n}static remove(e){const t=ZO.data.indexOf(e);-1!==t&&(e.clear(),e._accessor=null,ZO.removeAt(t))}get dataLength(){return this._data.length}set dataLength(e){const t=this._data;if(t.length!==e){const n=t.length;let i=0;for(i=e;i<n;i++)JO.free(t[i]);for(i=n;i<e;i++)t[i]=JO.alloc();t.length=e}}get data(){return this._data}constructor(e=XO,t){super(e),this.indices=null,this.vertDirty=!0,this.frame=void 0,this.layer=0,this.blendHash=-1,this.textureHash=0,this.nodeDirty=!0,this.passDirty=!0,this.textureDirty=!0,this.hashDirty=!0,this._data=[],this._pivotX=0,this._pivotY=0,this._width=0,this._height=0,this._accessor=null,t||(t=Sw.root.batcher2D.switchBufferAccessor(this._vertexFormat)),this._accessor=t}resize(e,t){e===this._vc&&t===this._ic&&this.chunk||(this._vc=e,this._ic=t,this.chunk&&(this._accessor.recycleChunk(this.chunk),this.chunk=null),this.chunk=this._accessor.allocateChunk(e,t),this.updateHash())}resizeAndCopy(e,t){if(e===this._vc&&t===this._ic&&this.chunk)return;this._vc=e,this._ic=t;const n=this.chunk;this.chunk=this._accessor.allocateChunk(e,t),n&&(this.chunk.vb.set(n.vb),this._accessor.recycleChunk(n)),this.updateHash()}getMeshBuffer(){return this.chunk&&this._accessor?this._accessor.getMeshBuffer(this.chunk.bufferId):null}updateNode(e){this.layer=e.node.layer,this.nodeDirty=!1,this.hashDirty=!0}updatePass(e){this.material=e.getRenderMaterial(0),this.blendHash=e.blendHash,this.passDirty=!1,this.hashDirty=!0}updateTexture(e){this.frame=e,this.textureHash=e.getHash(),this.textureDirty=!1,this.hashDirty=!0}updateHash(){const e=`${this.chunk?this.chunk.bufferId:-1}${this.layer} ${this.blendHash} ${this.textureHash}`;this.dataHash=fo(e,666),this.hashDirty=!1}updateRenderData(e,t){if(this.passDirty&&(this.material=e.getRenderMaterial(0),this.blendHash=e.blendHash,this.passDirty=!1,this.hashDirty=!0),this.nodeDirty){const t=e.node.scene?e._getRenderScene():null;this.layer=e.node.layer,null!==t&&(this.nodeDirty=!1),this.hashDirty=!0}this.textureDirty&&(this.frame=t,this.textureHash=t.getHash(),this.textureDirty=!1,this.hashDirty=!0),this.hashDirty&&this.updateHash()}updateSizeNPivot(e,t,n,i){e===this._width&&t===this._height&&n===this._pivotX&&i===this._pivotY||(this._width=e,this._height=t,this._pivotX=n,this._pivotY=i,this.vertDirty=!0)}clear(){this.resize(0,0),this._data.length=0,this._pivotX=0,this._pivotY=0,this._width=0,this._height=0,this.indices=null,this.vertDirty=!0,this.material=null,this.nodeDirty=!0,this.passDirty=!0,this.textureDirty=!0,this.hashDirty=!0,this.layer=0,this.blendHash=-1,this.frame=null,this.textureHash=0,this.dataHash=0}}e("RenderData",tN);class nN extends eN{static add(e=XO){const t=iN.add();return t._floatStride=e===XO?QO:$O(e)>>2,t._vertexFormat=e,t}static remove(e){const t=iN.data.indexOf(e);-1!==t&&(iN.data[t].clear(),iN.removeAt(t))}set formatByte(e){}get formatByte(){return this.stride}get floatStride(){return this._floatStride}get vDataOffset(){return this._byteLength>>>2}constructor(e=XO){super(e),this.isMeshBuffer=!0,this.vData=void 0,this.iData=void 0,this.vertexStart=0,this.vertexRange=0,this.indexStart=0,this.indexRange=0,this.lastFilledIndex=0,this.lastFilledVertex=0,this._byteLength=0,this._vertexBuffers=[],this._indexBuffer=null,this._iaPool=null,this._iaInfo=null,this.vData=new Float32Array(256*this.stride),this.iData=new Uint16Array(1536)}request(e,t){const n=this._byteLength+e*this.stride;return!!this.reserve(e,t)&&(this._vc+=e,this._ic+=t,this._byteLength=n,this.vertexRange=this._vc,this.indexRange=this._ic,!0)}reserve(e,t){const n=this._byteLength+e*this.stride,i=this.indexCount+t;if(e+this.vertexCount>65535)return!1;let s=this.vData.byteLength,o=this.iData.length,r=this.vData.length,a=this.iData.length;if(n>s||i>o){for(;s<n||o<i;)r*=2,a*=2,s=4*r,o=a;this._reallocBuffer(r,a)}return!0}resize(e,t){const n=e*this.stride;e>=0&&t>=0&&n<=this.vData.byteLength&&this.iData.length,this._vc=e,this._ic=t,this._byteLength=n,this.updateRange(0,e,0,t)}updateRange(e,t,n,i){t>=0&&i>=0&&t<=this._vc&&this._ic,this.vertexStart=e,this.indexStart=n,this.vertexRange=t,this.indexRange=i}requestIA(e){this._initIAInfo(e);const t=this._iaPool.add();return t.firstIndex=this.indexStart,t.indexCount=this.indexRange,t}uploadBuffers(){if(0===this._byteLength||!this._vertexBuffers[0]||!this._indexBuffer)return;const e=this._ic,t=new Float32Array(this.vData.buffer,0,this._byteLength>>2),n=new Uint16Array(this.iData.buffer,0,e),i=this._vertexBuffers[0];this._byteLength>i.size&&i.resize(this._byteLength),i.update(t);const s=e<<1;s>this._indexBuffer.size&&this._indexBuffer.resize(s),this._indexBuffer.update(n)}freeIAPool(){this._iaPool&&this._iaPool.reset()}reset(){this._vc=0,this._ic=0,this._byteLength=0,this.vertexStart=0,this.vertexRange=0,this.indexStart=0,this.indexRange=0,this.lastFilledIndex=0,this.lastFilledVertex=0,this.material=null,this.freeIAPool()}clear(){this.reset(),this._iaPool&&this._iaPool.destroy(),this._vertexBuffers[0]&&(this._vertexBuffers[0].destroy(),this._vertexBuffers=[]),this._iaInfo=null,this.vData=new Float32Array(256*this.stride),this.iData=new Uint16Array(1536)}_initIAInfo(e){if(!this._iaInfo){const t=this.stride,n=this._vertexBuffers;n.length||n.push(e.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.DEVICE,t,t)));const i=Uint16Array.BYTES_PER_ELEMENT;this._indexBuffer||(this._indexBuffer=e.createBuffer(new es(si.INDEX|si.TRANSFER_DST,ai.DEVICE,i,i))),this._iaInfo=new xs(this._vertexFormat,n,this._indexBuffer),this._iaPool=new Fl((()=>e.createInputAssembler(this._iaInfo)),1,(e=>{e.destroy()}))}}_reallocBuffer(e,t){const n=this.vData;this.vData=new Float32Array(e),n&&this.vData.set(n,0);const i=this.iData;this.iData=new Uint16Array(t),i&&this.iData.set(i,0)}}e("MeshRenderData",nN);const iN=new Fl((()=>new nN),32);var sN,oN,rN,aN,cN,lN,hN,uN,_N,dN,pN,fN,mN,gN;const vN=new Bn,yN=new Bn,xN=new gn,SN=new On,CN=new On,EN=new On,TN=new On(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),bN=new Wn;let AN,PN=function(t){return e({UITransform:t,UITransformComponent:t}),t}((sN=mc("cc.UITransform"),oN=Mc(),rN=vc(110),aN=Rc(),cN=Wc(),lN=Uc(),hN=Wc(),uN=Uc(),sN(_N=oN(_N=rN(_N=aN(_N=yc(_N=Ic((gN=mN=class e extends Gh{constructor(...e){super(...e),this._priority=0,rc(this,"_contentSize",pN,this),rc(this,"_anchorPoint",fN,this)}get contentSize(){return this._contentSize}set contentSize(e){this._contentSize.equals(e)||(this._contentSize.set(e),this.node.emit(Ex.SIZE_CHANGED),this._markRenderDataDirty())}get width(){return this._contentSize.width}set width(e){this._contentSize.width!==e&&(this._contentSize.width=e,this.node.emit(Ex.SIZE_CHANGED),this._markRenderDataDirty())}get height(){return this._contentSize.height}set height(e){this.contentSize.height!==e&&(this._contentSize.height=e,this.node.emit(Ex.SIZE_CHANGED),this._markRenderDataDirty())}get anchorPoint(){return this._anchorPoint}set anchorPoint(e){this._anchorPoint.equals(e)||(this._anchorPoint.set(e),this.node.emit(Ex.ANCHOR_CHANGED,this._anchorPoint),this._markRenderDataDirty())}get anchorX(){return this._anchorPoint.x}set anchorX(e){this._anchorPoint.x!==e&&(this._anchorPoint.x=e,this.node.emit(Ex.ANCHOR_CHANGED,this._anchorPoint),this._markRenderDataDirty())}get anchorY(){return this._anchorPoint.y}set anchorY(e){this._anchorPoint.y!==e&&(this._anchorPoint.y=e,this.node.emit(Ex.ANCHOR_CHANGED,this._anchorPoint),this._markRenderDataDirty())}get priority(){return this._priority}set priority(t){this._priority!==t&&(this.node.getComponent("cc.RenderRoot2D")?D(6706):(this._priority=t,this.node.parent&&e.insertChangeMap(this.node.parent)))}get visibility(){const e=Sw.root.batcher2D.getFirstRenderCamera(this.node);return e?e.visibility:0}get cameraPriority(){const e=Sw.root.batcher2D.getFirstRenderCamera(this.node);return e?e.priority:0}__preload(){this.node._uiProps.uiTransformComp=this}onLoad(){this.node.parent&&e.insertChangeMap(this.node.parent)}onEnable(){this.node.on(Ex.PARENT_CHANGED,this._parentChanged,this),this._markRenderDataDirty()}onDisable(){this.node.off(Ex.PARENT_CHANGED,this._parentChanged,this)}onDestroy(){this.node._uiProps.uiTransformComp=null}setContentSize(e,t){const n=this._contentSize;if(void 0===t){if(qt((e=e).width,n.width,jt)&&qt(e.height,n.height,jt))return;n.width=e.width,n.height=e.height}else{if(qt(e=e,n.width,jt)&&qt(t,n.height,jt))return;n.width=e,n.height=t}this.node.emit(Ex.SIZE_CHANGED),this._markRenderDataDirty()}setAnchorPoint(e,t){const n=this._anchorPoint;if(void 0===t){if((e=e).x===n.x&&e.y===n.y)return;n.x=e.x,n.y=e.y}else{if(e===n.x&&t===n.y)return;n.x=e,n.y=t}this.node.emit(Ex.ANCHOR_CHANGED,this._anchorPoint),this._markRenderDataDirty()}isHit(e){const t=this._contentSize.width,n=this._contentSize.height,i=vN,s=yN,o=this._getRenderScene().cameras;for(let r=0;r<o.length;r++){const a=o[r];if(!(a.visibility&this.node.layer))continue;a.node.getWorldRT(SN);const c=SN.m12,l=SN.m13,h=Ew.center;if(SN.m12=h.x-(SN.m00*c+SN.m04*l),SN.m13=h.y-(SN.m01*c+SN.m05*l),On.invert(SN,SN),Bn.transformMat4(i,e,SN),this.node.getWorldMatrix(EN),On.invert(SN,EN),On.strictEquals(SN,TN))continue;Bn.transformMat4(s,i,SN),s.x+=this._anchorPoint.x*t,s.y+=this._anchorPoint.y*n;let u=!1;if(s.x>=0&&s.y>=0&&s.x<=t&&s.y<=n&&(u=this._maskTest(i)),u)return!0}return!1}hitTest(e){const t=this._contentSize.width,n=this._contentSize.height,i=xN,s=vN,o=yN,r=this._getRenderScene().cameras;for(let a=0;a<r.length;a++){const c=r[a];if(!(c.visibility&this.node.layer))continue;if(gn.set(i,e.x,e.y,0),c.screenToWorld(i,i),Bn.set(s,i.x,i.y),this.node.getWorldMatrix(EN),On.invert(SN,EN),On.strictEquals(SN,TN))continue;Bn.transformMat4(o,s,SN),o.x+=this._anchorPoint.x*t,o.y+=this._anchorPoint.y*n;let l=!1;if(o.x>=0&&o.y>=0&&o.x<=t&&o.y<=n&&(l=this._maskTest(s)),l)return!0}return!1}_maskTest(e){var t,n;const i=null===(t=this.node)||void 0===t||null===(n=t.eventProcessor)||void 0===n?void 0:n.maskList;if(i){let t=this.node;const n=i.length;for(let s=0,o=0;t&&o<n;++s,t=t.parent){const n=i[o];if(s===n.index){if(t!==n.comp.node){i.length=o;break}{const t=n.comp;if(t&&t._enabled&&!t.isHit(e))return!1;o++}}else if(s>n.index){i.length=o;break}}}return!0}convertToNodeSpaceAR(e,t){return this.node.getWorldMatrix(EN),On.invert(SN,EN),t||(t=new gn),gn.transformMat4(t,e,SN)}convertToWorldSpaceAR(e,t){return this.node.getWorldMatrix(EN),t||(t=new gn),gn.transformMat4(t,e,EN)}getBoundingBox(){On.fromRTS(CN,this.node.getRotation(),this.node.getPosition(),this.node.getScale());const e=this._contentSize.width,t=this._contentSize.height,n=new Wn(-this._anchorPoint.x*e,-this._anchorPoint.y*t,e,t);return n.transformMat4(CN),n}getBoundingBoxToWorld(){return this.node.parent?(this.node.parent.getWorldMatrix(EN),this.getBoundingBoxTo(EN)):this.getBoundingBox()}getBoundingBoxTo(t){On.fromRTS(CN,this.node.getRotation(),this.node.getPosition(),this.node.getScale());const n=this._contentSize.width,i=this._contentSize.height,s=new Wn(-this._anchorPoint.x*n,-this._anchorPoint.y*i,n,i);if(On.multiply(EN,t,CN),s.transformMat4(EN),!this.node.children)return s;const o=this.node.children;for(const n of o)if(n&&n.active){const i=n.getComponent(e);if(i){const e=i.getBoundingBoxTo(t);e&&Wn.union(s,s,e)}}return s}getComputeAABB(e){const t=this._contentSize.width,n=this._contentSize.height;bN.set(-this._anchorPoint.x*t,-this._anchorPoint.y*n,t,n),bN.transformMat4(this.node.worldMatrix);const i=bN.x+.5*bN.width,s=bN.y+.5*bN.height,o=this.node.worldPosition.z,r=bN.width/2,a=bN.height/2;return null!=e?(Ua.set(e,i,s,o,r,a,.001),e):new Ua(i,s,o,r,a,.001)}_parentChanged(t){this.node.getComponent("cc.RenderRoot2D")||this.node.parent&&e.insertChangeMap(this.node.parent)}_markRenderDataDirty(){const e=this.node._uiProps.uiComp;e&&(e.markForUpdateRenderData(),e.renderData&&(e.renderData.vertDirty=!0))}static insertChangeMap(t){const n=t.uuid;e.priorityChangeNodeMap.has(n)||e.priorityChangeNodeMap.set(n,t)}static _sortChildrenSibling(e){const t=e.children;t&&t.sort(((e,t)=>{const n=e._uiProps.uiTransformComp,i=t._uiProps.uiTransformComp,s=(n?n._priority:0)-(i?i._priority:0);return 0===s?e.getSiblingIndex()-t.getSiblingIndex():s}))}static _sortSiblings(){e.priorityChangeNodeMap.forEach((t=>{e._sortChildrenSibling(t),t._updateSiblingIndex(),t.emit("childrenSiblingOrderChanged")})),e.priorityChangeNodeMap.clear()}static _cleanChangeMap(){e.priorityChangeNodeMap.clear()}},mN.EventType=Ex,mN.priorityChangeNodeMap=new Map,ac((dN=gN).prototype,"contentSize",[cN,lN],Object.getOwnPropertyDescriptor(dN.prototype,"contentSize"),dN.prototype),ac(dN.prototype,"anchorPoint",[hN,uN],Object.getOwnPropertyDescriptor(dN.prototype,"anchorPoint"),dN.prototype),pN=ac(dN.prototype,"_contentSize",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new kn(100,100)}}),fN=ac(dN.prototype,"_anchorPoint",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Bn(.5,.5)}}),_N=dN))||_N)||_N)||_N)||_N)||_N)||_N));Sw.on(xw.EVENT_AFTER_UPDATE,PN._sortSiblings),Sw.on(xw.EVENT_BEFORE_SCENE_LAUNCH,PN._cleanChangeMap),function(e){e[e.DISABLED=0]="DISABLED",e[e.CLEAR=1]="CLEAR",e[e.ENTER_LEVEL=2]="ENTER_LEVEL",e[e.ENABLED=3]="ENABLED",e[e.EXIT_LEVEL=4]="EXIT_LEVEL",e[e.CLEAR_INVERTED=5]="CLEAR_INVERTED",e[e.ENTER_LEVEL_INVERTED=6]="ENTER_LEVEL_INVERTED"}(AN||(AN={}));class wN{constructor(){this.stage=AN.DISABLED,this._maskStack=[],this._stencilPattern={stencilTest:!0,func:mi.ALWAYS,stencilMask:65535,writeMask:65535,failOp:gi.KEEP,zFailOp:gi.KEEP,passOp:gi.KEEP,ref:1},this.stencilStateMap=new Map,this.stencilStateMapWithDepth=new Map}get pattern(){return this._stencilPattern}pushMask(e){this._maskStack.push(e)}clear(e){e.stencilStage=e.inverted?AN.CLEAR_INVERTED:AN.CLEAR}enterLevel(e){e.graphics.stencilStage=e.inverted?AN.ENTER_LEVEL_INVERTED:AN.ENTER_LEVEL}enableMask(){this.stage=AN.ENABLED}exitMask(){0!==this._maskStack.length&&(this._maskStack.pop(),0===this._maskStack.length?this.stage=AN.DISABLED:this.stage=AN.ENABLED)}getWriteMask(){return 1<<this._maskStack.length-1}getExitWriteMask(){return 1<<this._maskStack.length}getStencilRef(){let e=0;for(let t=0;t<this._maskStack.length;++t)e+=1<<t;return e}reset(){this._maskStack.length=0,this.stage=AN.DISABLED}destroy(){this.stencilStateMap.forEach((e=>{e.destroy()})),this.stencilStateMap.clear()}getStencilStage(e,t){let n=0,i=!1,s=!1,o=mi.LESS,r=this.stencilStateMap;if(t&&t.passes[0]){const a=t.passes[0].depthStencilState;let c=0,l=0;a.depthTest&&(c=1),a.depthWrite&&(l=1),n=c|l<<1|a.depthFunc<<2|e<<6|this._maskStack.length<<9,i=a.depthTest,s=a.depthWrite,o=a.depthFunc,r=this.stencilStateMapWithDepth}else n=e<<16|this._maskStack.length;if(r&&r.has(n))return r.get(n);this.setStateFromStage(e);const a=new Do(i,s,o,this._stencilPattern.stencilTest,this._stencilPattern.func,this._stencilPattern.stencilMask,this._stencilPattern.writeMask,this._stencilPattern.failOp,this._stencilPattern.zFailOp,this._stencilPattern.passOp,this._stencilPattern.ref,this._stencilPattern.stencilTest,this._stencilPattern.func,this._stencilPattern.stencilMask,this._stencilPattern.writeMask,this._stencilPattern.failOp,this._stencilPattern.zFailOp,this._stencilPattern.passOp,this._stencilPattern.ref);return r.set(n,a),a}getStencilHash(e){return e<<8|this._maskStack.length}setStateFromStage(e){const t=this._stencilPattern;e===AN.DISABLED?(t.stencilTest=!1,t.func=mi.ALWAYS,t.failOp=gi.KEEP,t.stencilMask=t.writeMask=65535,t.ref=1):(t.stencilTest=!0,e===AN.ENABLED?(t.func=mi.EQUAL,t.failOp=gi.KEEP,t.stencilMask=t.ref=this.getStencilRef(),t.writeMask=this.getWriteMask()):e===AN.CLEAR?(t.func=mi.NEVER,t.failOp=gi.ZERO,t.writeMask=t.stencilMask=t.ref=this.getWriteMask()):e===AN.CLEAR_INVERTED||e===AN.ENTER_LEVEL?(t.func=mi.NEVER,t.failOp=gi.REPLACE,t.writeMask=t.stencilMask=t.ref=this.getWriteMask()):e===AN.ENTER_LEVEL_INVERTED&&(t.func=mi.NEVER,t.failOp=gi.ZERO,t.writeMask=t.stencilMask=t.ref=this.getWriteMask()))}}var IN,RN,DN,ON,NN,MN,LN,BN,FN,zN,UN,GN,VN,HN,kN,jN,WN,qN,XN;let YN;e("StencilManager",wN),wN.sharedManager=null,wN.sharedManager=new wN,Ke(vi),function(e){e[e.ADD_COLOR=0]="ADD_COLOR",e[e.ADD_COLOR_AND_TEXTURE=1]="ADD_COLOR_AND_TEXTURE",e[e.GRAYSCALE=2]="GRAYSCALE",e[e.USE_ALPHA_SEPARATED=3]="USE_ALPHA_SEPARATED",e[e.USE_ALPHA_SEPARATED_AND_GRAY=4]="USE_ALPHA_SEPARATED_AND_GRAY"}(YN||(YN=e("InstanceMaterialType",{})));let KN=function(t){return e({Renderable2D:t,RenderComponent:t,UIRenderable:t}),t}((IN=mc("cc.Renderable2D"),RN=gc(PN),DN=Bc(),ON=Zc(lg),NN=Zc(lg),MN=Wc(),LN=Uc(),BN=zc(),FN=Wc(),zN=Uc(),IN(UN=RN(UN=yc(UN=Ic((XN=qN=class e extends FD{constructor(...e){super(...e),rc(this,"_materials",VN,this),rc(this,"_customMaterial",HN,this),this.stencilStage=AN.DISABLED,rc(this,"_srcBlendFactor",kN,this),rc(this,"_dstBlendFactor",jN,this),rc(this,"_color",WN,this),this._assembler=null,this._postAssembler=null,this._renderData=null,this._renderDataFlag=!0,this._renderFlag=!0,this._delegateSrc=null,this._instanceMaterialType=-1,this._blendState=new Io,this._blendHash=0,this._useVertexOpacity=!1,this._lastParent=null}get sharedMaterials(){return this._materials}set sharedMaterials(e){for(let t=0;t<e.length;t++)e[t]!==this._materials[t]&&this.setMaterial(e[t],t);if(e.length<this._materials.length){for(let t=e.length;t<this._materials.length;t++)this.setMaterial(null,t);this._materials.splice(e.length)}}get customMaterial(){return this._customMaterial}set customMaterial(e){this._customMaterial=e,this.updateMaterial()}get color(){return this._color}set color(e){this._color.equals(e)||(this._color.set(e),this._updateColor())}get renderData(){return this._renderData}set delegateSrc(e){this._delegateSrc=e}get blendHash(){return this._blendHash}get useVertexOpacity(){return this._useVertexOpacity}updateBlendHash(){const e=this._blendState.targets[0].blendDst<<4;this._blendHash=e|this._blendState.targets[0].blendSrc}__preload(){this.node._uiProps.uiComp=this,this._flushAssembler&&this._flushAssembler()}onEnable(){this.node.on(Ex.ANCHOR_CHANGED,this._nodeStateChange,this),this.node.on(Ex.SIZE_CHANGED,this._nodeStateChange,this),this.node.on(Ex.PARENT_CHANGED,this._colorDirty,this),this.updateMaterial(),this._renderFlag=this._canRender(),this._colorDirty()}onRestore(){this.updateMaterial(),this.markForUpdateRenderData()}onDisable(){this.node.off(Ex.ANCHOR_CHANGED,this._nodeStateChange,this),this.node.off(Ex.SIZE_CHANGED,this._nodeStateChange,this),this.node.off(Ex.PARENT_CHANGED,this._colorDirty,this),this._renderFlag=!1}onDestroy(){if(this.node._uiProps.uiComp===this&&(this.node._uiProps.uiComp=null),this.destroyRenderData(),this._materialInstances)for(let e=0;e<this._materialInstances.length;e++){const t=this._materialInstances[e];t&&t.destroy()}this._blendState&&this._blendState.destroy()}markForUpdateRenderData(e=!0){if(this._renderFlag=this._canRender(),e){const t=this._renderData;t&&(t.vertDirty=!0),this._renderDataFlag=e}else this._renderDataFlag=e}requestRenderData(){const e=tN.add();return this._renderData=e,e}destroyRenderData(){this._renderData&&(tN.remove(this._renderData),this._renderData=null)}updateAssembler(e){this._renderDataFlag&&(this._assembler.updateRenderData(this,e),this._renderDataFlag=!1),this._renderFlag&&this._render(e)}postUpdateAssembler(e){this._postAssembler&&this._renderFlag&&this._postRender(e)}_render(e){}_postRender(e){}_canRender(){return this.isValid&&null!==this.getMaterial(0)&&this.enabled&&(this._delegateSrc?this._delegateSrc.activeInHierarchy:this.enabledInHierarchy)&&this._color.a>0}_postCanRender(){}updateMaterial(){if(this._customMaterial)return this.setMaterial(this._customMaterial,0),this._renderData&&(this._renderData.material=this._customMaterial,this.markForUpdateRenderData(),this._renderData.passDirty=!0),void(this._blendHash=-1);const e=this._updateBuiltinMaterial();this.setMaterial(e,0),this._renderData&&(this._renderData.material=e,this.markForUpdateRenderData()),this._updateBlendFunc()}_updateColor(){this.node._uiProps.colorDirty=!0,this._assembler&&(this._assembler.updateColor(this),this._renderFlag=this._canRender())}_updateBlendFunc(){let e=this._blendState.targets[0];e||(e=new wo,this._blendState.setTarget(0,e)),e.blendDst===this._dstBlendFactor&&e.blendSrc===this._srcBlendFactor||(e.blend=!0,e.blendDstAlpha=vi.ONE_MINUS_SRC_ALPHA,e.blendDst=this._dstBlendFactor,e.blendSrc=this._srcBlendFactor,this.renderData&&(this.renderData.passDirty=!0)),this.updateBlendHash()}getBlendState(){return this._blendState}_nodeStateChange(t){this._renderData&&this.markForUpdateRenderData();for(let t=0;t<this.node.children.length;++t){const n=this.node.children[t].getComponent(e);n&&n.markForUpdateRenderData()}}_colorDirty(){this.node._uiProps.colorDirty=!0}_onMaterialModified(e,t){this._renderData&&(this.markForUpdateRenderData(),this._renderData.passDirty=!0),super._onMaterialModified(e,t)}_updateBuiltinMaterial(){let e;switch(this._instanceMaterialType){case YN.ADD_COLOR:e=Fm.get("ui-base-material");break;case YN.GRAYSCALE:e=Fm.get("ui-sprite-gray-material");break;case YN.USE_ALPHA_SEPARATED:e=Fm.get("ui-sprite-alpha-sep-material");break;case YN.USE_ALPHA_SEPARATED_AND_GRAY:e=Fm.get("ui-sprite-gray-alpha-sep-material");break;default:e=Fm.get("ui-sprite-material")}return e}setNodeDirty(){this.renderData&&(this.renderData.nodeDirty=!0)}setTextureDirty(){this.renderData&&(this.renderData.textureDirty=!0)}},qN.BlendState=vi,qN.Assembler=null,qN.PostAssembler=null,VN=ac((GN=XN).prototype,"_materials",[el],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),ac(GN.prototype,"sharedMaterials",[el,DN],Object.getOwnPropertyDescriptor(GN.prototype,"sharedMaterials"),GN.prototype),HN=ac(GN.prototype,"_customMaterial",[ON],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(GN.prototype,"customMaterial",[NN,MN,LN,BN,Yc],Object.getOwnPropertyDescriptor(GN.prototype,"customMaterial"),GN.prototype),ac(GN.prototype,"color",[FN,zN],Object.getOwnPropertyDescriptor(GN.prototype,"color"),GN.prototype),kN=ac(GN.prototype,"_srcBlendFactor",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return vi.SRC_ALPHA}}),jN=ac(GN.prototype,"_dstBlendFactor",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return vi.ONE_MINUS_SRC_ALPHA}}),WN=ac(GN.prototype,"_color",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return dn.WHITE.clone()}}),UN=GN))||UN)||UN)||UN)||UN));var $N,QN,JN,ZN,eM,tM,nM,iM,sM,oM,rM,aM,cM,lM,hM,uM,_M,dM,pM,fM,mM,gM,vM,yM,xM,SM,CM,EM,TM,bM,AM,PM,wM,IM,RM,DM,OM,NM,MM,LM,BM,FM,zM,UM,GM,VM,HM,kM,jM,WM,qM,XM,YM,KM,$M,QM,JM,ZM,eL,tL,nL,iL,sL,oL,rL,aL;let cL,lL,hL,uL;u.internal.Renderable2D=KN,function(e){e[e.LEFT=0]="LEFT",e[e.CENTER=1]="CENTER",e[e.RIGHT=2]="RIGHT"}(cL||(cL=e("HorizontalTextAlignment",{}))),Ke(cL),function(e){e[e.TOP=0]="TOP",e[e.CENTER=1]="CENTER",e[e.BOTTOM=2]="BOTTOM"}(lL||(lL=e("VerticalTextAlignment",{}))),Ke(lL),function(e){e[e.NONE=0]="NONE",e[e.CLAMP=1]="CLAMP",e[e.SHRINK=2]="SHRINK",e[e.RESIZE_HEIGHT=3]="RESIZE_HEIGHT"}(hL||(hL=e("Overflow",{}))),Ke(hL),function(e){e[e.NONE=0]="NONE",e[e.BITMAP=1]="BITMAP",e[e.CHAR=2]="CHAR"}(uL||(uL=e("CacheMode",{}))),Ke(uL);let _L,dL,pL,fL=function(t){return e({Label:t,LabelComponent:t}),t}(($N=mc("cc.Label"),QN=Mc(),JN=vc(110),ZN=Rc(),eM=Wc(),tM=Uc(),nM=Zc(cL),iM=Wc(),sM=Uc(),oM=Zc(lL),rM=Wc(),aM=Uc(),cM=Wc(),lM=Uc(),hM=Wc(),uM=Bc(),_M=Uc(),dM=Wc(),pM=Uc(),fM=Bc(),mM=Wc(),gM=Uc(),vM=Zc(hL),yM=Wc(),xM=Uc(),SM=Wc(),CM=Uc(),EM=Zc(nO),TM=Wc(),bM=Bc(),AM=Uc(),PM=Wc(),wM=Uc(),IM=Zc(uL),RM=Wc(),DM=Uc(),OM=Wc(),NM=Uc(),MM=Wc(),LM=Uc(),BM=Wc(),FM=Uc(),zM=Bc(),UM=Wc(),GM=Uc(),$N(VM=QN(VM=JN(VM=ZN((aL=rL=class e extends KN{get string(){return this._string}set string(e){e=null==e?"":e.toString(),this._string!==e&&(this._string=e,this.updateRenderData())}get horizontalAlign(){return this._horizontalAlign}set horizontalAlign(e){this._horizontalAlign!==e&&(this._horizontalAlign=e,this.updateRenderData())}get verticalAlign(){return this._verticalAlign}set verticalAlign(e){this._verticalAlign!==e&&(this._verticalAlign=e,this.updateRenderData())}get actualFontSize(){return this._actualFontSize}set actualFontSize(e){this._actualFontSize=e}get fontSize(){return this._fontSize}set fontSize(e){this._fontSize!==e&&(this._fontSize=e,this.updateRenderData())}get fontFamily(){return this._fontFamily}set fontFamily(e){this._fontFamily!==e&&(this._fontFamily=e,this.updateRenderData())}get lineHeight(){return this._lineHeight}set lineHeight(e){this._lineHeight!==e&&(this._lineHeight=e,this.updateRenderData())}get spacingX(){return this._spacingX}set spacingX(e){this._spacingX!==e&&(this._spacingX=e,this.updateRenderData())}get overflow(){return this._overflow}set overflow(e){this._overflow!==e&&(this._overflow=e,this.updateRenderData())}get enableWrapText(){return this._enableWrapText}set enableWrapText(e){this._enableWrapText!==e&&(this._enableWrapText=e,this.updateRenderData())}get font(){return this._font}set font(e){this._font!==e&&(this._isSystemFontUsed=!e,this._font=e,this._renderData&&(this.destroyRenderData(),this._renderData=null),this._fontAtlas=null,this.updateRenderData(!0))}get useSystemFont(){return this._isSystemFontUsed}set useSystemFont(e){this._isSystemFontUsed!==e&&(this.destroyRenderData(),this._renderData=null,this._isSystemFontUsed=!!e,e&&(this.font=null),this._flushAssembler(),this.updateRenderData())}get cacheMode(){return this._cacheMode}set cacheMode(e){this._cacheMode!==e&&(this._cacheMode!==uL.BITMAP||this._font instanceof gO||!this._ttfSpriteFrame||this._ttfSpriteFrame._resetDynamicAtlasFrame(),this._cacheMode===uL.CHAR&&(this._ttfSpriteFrame=null),this._cacheMode=e,this.updateRenderData(!0))}get isBold(){return this._isBold}set isBold(e){this._isBold!==e&&(this._isBold=e,this.updateRenderData())}get isItalic(){return this._isItalic}set isItalic(e){this._isItalic!==e&&(this._isItalic=e,this.updateRenderData())}get isUnderline(){return this._isUnderline}set isUnderline(e){this._isUnderline!==e&&(this._isUnderline=e,this.updateRenderData())}get underlineHeight(){return this._underlineHeight}set underlineHeight(e){this._underlineHeight!==e&&(this._underlineHeight=e,this.updateRenderData())}get spriteFrame(){return this._texture}get ttfSpriteFrame(){return this._ttfSpriteFrame}get assemblerData(){return this._assemblerData}get fontAtlas(){return this._fontAtlas}set fontAtlas(e){this._fontAtlas=e}get _bmFontOriginalSize(){return this._font instanceof gO?this._font.fontSize:-1}constructor(){super(),rc(this,"_string",kM,this),rc(this,"_horizontalAlign",jM,this),rc(this,"_verticalAlign",WM,this),rc(this,"_actualFontSize",qM,this),rc(this,"_fontSize",XM,this),rc(this,"_fontFamily",YM,this),rc(this,"_lineHeight",KM,this),rc(this,"_overflow",$M,this),rc(this,"_enableWrapText",QM,this),rc(this,"_font",JM,this),rc(this,"_isSystemFontUsed",ZM,this),rc(this,"_spacingX",eL,this),rc(this,"_isItalic",tL,this),rc(this,"_isBold",nL,this),rc(this,"_isUnderline",iL,this),rc(this,"_underlineHeight",sL,this),rc(this,"_cacheMode",oL,this),this._N$file=null,this._texture=null,this._ttfSpriteFrame=null,this._userDefinedFont=null,this._assemblerData=null,this._fontAtlas=null,this._letterTexture=null,this._ttfSpriteFrame=null}onEnable(){super.onEnable(),this._font||this._isSystemFontUsed||(this.useSystemFont=!0),this._isSystemFontUsed&&!this._fontFamily&&(this.fontFamily="Arial"),this._applyFontTexture()}onDestroy(){if(this._assembler&&this._assembler.resetAssemblerData&&this._assembler.resetAssemblerData(this._assemblerData),this._assemblerData=null,this._ttfSpriteFrame){this._ttfSpriteFrame._resetDynamicAtlasFrame();const e=this._ttfSpriteFrame.texture;if(this._ttfSpriteFrame.destroy(),e){const t=e;t.image&&t.image.destroy(),e.destroy()}this._ttfSpriteFrame=null}this._letterTexture=null,super.onDestroy()}updateRenderData(e=!1){this.markForUpdateRenderData(),e&&(this._flushAssembler(),this.renderData&&(this.renderData.vertDirty=!0),this._applyFontTexture(),this._assembler&&this._assembler.updateRenderData(this))}_render(e){e.commitComp(this,this.renderData,this._texture,this._assembler,null)}_updateColor(){super._updateColor(),this.updateRenderData(!1)}_canRender(){if(!super._canRender()||!this._string)return!1;const e=this._font;if(e&&e instanceof gO){const t=e.spriteFrame;if(!t||!t.texture)return!1}return!0}_flushAssembler(){const t=e.Assembler.getAssembler(this);this._assembler!==t&&(this.destroyRenderData(),this._assembler=t),this._renderData||this._assembler&&this._assembler.createData&&(this._renderData=this._assembler.createData(this),this._renderData.material=this.material)}_applyFontTexture(){this.markForUpdateRenderData();const e=this._font;if(e instanceof gO){const t=e.spriteFrame;t&&t.texture&&(this._texture=t,this.renderData&&(this.renderData.textureDirty=!0),this.changeMaterialForDefine(),this._assembler&&this._assembler.updateRenderData(this))}else{if(this.cacheMode===uL.CHAR)this._letterTexture=this._assembler.getAssemblerData(),this._texture=this._letterTexture;else if(!this._ttfSpriteFrame){this._ttfSpriteFrame=new $D,this._assemblerData=this._assembler.getAssemblerData();const e=new hm(this._assemblerData.canvas),t=new bm;t.image=e,this._ttfSpriteFrame.texture=t}this.cacheMode!==uL.CHAR&&(this._texture=this._ttfSpriteFrame),this.changeMaterialForDefine()}}changeMaterialForDefine(){if(!this._texture)return;let e=!1;if(this.cacheMode!==uL.CHAR){const t=this._texture.texture;if(t instanceof sm){const n=t.getPixelFormat();e=n===Vf.RGBA_ETC1||n===Vf.RGB_A_PVRTC_4BPPV1||n===Vf.RGB_A_PVRTC_2BPPV1}}this._instanceMaterialType=e?YN.USE_ALPHA_SEPARATED:YN.ADD_COLOR_AND_TEXTURE,this.updateMaterial()}_updateBlendFunc(){super._updateBlendFunc()}},rL.HorizontalAlign=cL,rL.VerticalAlign=lL,rL.Overflow=hL,rL.CacheMode=uL,rL._canvasPool=FO.getInstance(),ac((HM=aL).prototype,"string",[eM,tM,Xc],Object.getOwnPropertyDescriptor(HM.prototype,"string"),HM.prototype),ac(HM.prototype,"horizontalAlign",[nM,iM,sM],Object.getOwnPropertyDescriptor(HM.prototype,"horizontalAlign"),HM.prototype),ac(HM.prototype,"verticalAlign",[oM,rM,aM],Object.getOwnPropertyDescriptor(HM.prototype,"verticalAlign"),HM.prototype),ac(HM.prototype,"fontSize",[cM,lM],Object.getOwnPropertyDescriptor(HM.prototype,"fontSize"),HM.prototype),ac(HM.prototype,"fontFamily",[hM,uM,_M],Object.getOwnPropertyDescriptor(HM.prototype,"fontFamily"),HM.prototype),ac(HM.prototype,"lineHeight",[dM,pM],Object.getOwnPropertyDescriptor(HM.prototype,"lineHeight"),HM.prototype),ac(HM.prototype,"spacingX",[fM,mM,gM],Object.getOwnPropertyDescriptor(HM.prototype,"spacingX"),HM.prototype),ac(HM.prototype,"overflow",[vM,yM,xM],Object.getOwnPropertyDescriptor(HM.prototype,"overflow"),HM.prototype),ac(HM.prototype,"enableWrapText",[SM,CM],Object.getOwnPropertyDescriptor(HM.prototype,"enableWrapText"),HM.prototype),ac(HM.prototype,"font",[EM,TM,bM,AM],Object.getOwnPropertyDescriptor(HM.prototype,"font"),HM.prototype),ac(HM.prototype,"useSystemFont",[PM,wM],Object.getOwnPropertyDescriptor(HM.prototype,"useSystemFont"),HM.prototype),ac(HM.prototype,"cacheMode",[IM,RM,DM],Object.getOwnPropertyDescriptor(HM.prototype,"cacheMode"),HM.prototype),ac(HM.prototype,"isBold",[OM,NM],Object.getOwnPropertyDescriptor(HM.prototype,"isBold"),HM.prototype),ac(HM.prototype,"isItalic",[MM,LM],Object.getOwnPropertyDescriptor(HM.prototype,"isItalic"),HM.prototype),ac(HM.prototype,"isUnderline",[BM,FM],Object.getOwnPropertyDescriptor(HM.prototype,"isUnderline"),HM.prototype),ac(HM.prototype,"underlineHeight",[zM,Lc,UM,GM],Object.getOwnPropertyDescriptor(HM.prototype,"underlineHeight"),HM.prototype),kM=ac(HM.prototype,"_string",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"label"}}),jM=ac(HM.prototype,"_horizontalAlign",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return cL.CENTER}}),WM=ac(HM.prototype,"_verticalAlign",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return lL.CENTER}}),qM=ac(HM.prototype,"_actualFontSize",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),XM=ac(HM.prototype,"_fontSize",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 40}}),YM=ac(HM.prototype,"_fontFamily",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"Arial"}}),KM=ac(HM.prototype,"_lineHeight",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 40}}),$M=ac(HM.prototype,"_overflow",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return hL.NONE}}),QM=ac(HM.prototype,"_enableWrapText",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),JM=ac(HM.prototype,"_font",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ZM=ac(HM.prototype,"_isSystemFontUsed",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),eL=ac(HM.prototype,"_spacingX",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),tL=ac(HM.prototype,"_isItalic",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),nL=ac(HM.prototype,"_isBold",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),iL=ac(HM.prototype,"_isUnderline",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),sL=ac(HM.prototype,"_underlineHeight",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 2}}),oL=ac(HM.prototype,"_cacheMode",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return uL.NONE}}),VM=HM))||VM)||VM)||VM)||VM));u.Label=fL,function(e){e[e.BUTT=0]="BUTT",e[e.ROUND=1]="ROUND",e[e.SQUARE=2]="SQUARE"}(_L||(_L={})),Ke(_L),function(e){e[e.BEVEL=0]="BEVEL",e[e.ROUND=1]="ROUND",e[e.MITER=2]="MITER"}(dL||(dL={})),Ke(dL),function(e){e[e.PT_CORNER=1]="PT_CORNER",e[e.PT_LEFT=2]="PT_LEFT",e[e.PT_BEVEL=4]="PT_BEVEL",e[e.PT_INNERBEVEL=8]="PT_INNERBEVEL"}(pL||(pL={})),Ke(pL);const mL=Math.PI,gL=Math.min,vL=Math.max,yL=Math.cos,xL=Math.sin,SL=Math.abs,CL=Math.sign,EL=.5522847493;function TL(e,t,n,i,s){e.moveTo(t-i,n),e.bezierCurveTo(t-i,n+s*EL,t-i*EL,n+s,t,n+s),e.bezierCurveTo(t+i*EL,n+s,t+i,n+s*EL,t+i,n),e.bezierCurveTo(t+i,n-s*EL,t+i*EL,n-s,t,n-s),e.bezierCurveTo(t-i*EL,n-s,t-i,n-s*EL,t-i,n),e.close()}function bL(e,t,n,i,s,o,r,a,c,l,h){let u=0,_=0,d=0,p=0,f=0,m=0,g=0,v=0,y=0,x=0,S=0,C=0,E=0,T=0,b=0,A=0;l>10||(u=.5*(t+i),_=.5*(n+s),d=.5*(i+o),p=.5*(s+r),f=.5*(o+a),m=.5*(r+c),g=.5*(u+d),v=.5*(_+p),E=a-t,T=c-n,b=SL((i-a)*T-(s-c)*E),A=SL((o-a)*T-(r-c)*E),(b+A)*(b+A)<e.tessTol*(E*E+T*T)?e.addPoint(a,c,0===h?h|pL.PT_BEVEL:h):(y=.5*(d+f),x=.5*(p+m),S=.5*(g+y),C=.5*(v+x),bL(e,t,n,u,_,g,v,S,C,l+1,0),bL(e,S,C,y,x,f,m,a,c,l+1,h)))}class AL extends Bn{constructor(e,t){super(e,t),this.dx=0,this.dy=0,this.dmx=0,this.dmy=0,this.flags=0,this.len=0,this.reset()}reset(){this.dx=0,this.dy=0,this.dmx=0,this.dmy=0,this.flags=0,this.len=0}}class PL{constructor(){this.closed=!1,this.bevel=0,this.complex=!0,this.points=[],this.reset()}reset(){this.closed=!1,this.bevel=0,this.complex=!0,this.points?this.points.length=0:this.points=[]}}class wL{constructor(){this.dataOffset=0,this.updatePathOffset=!1,this.pathLength=0,this.pathOffset=0,this.paths=[],this.tessTol=.25,this.distTol=.01,this.fillColor=dn.WHITE.clone(),this.lineCap=_L.BUTT,this.strokeColor=dn.BLACK.clone(),this.lineJoin=dL.MITER,this.lineWidth=0,this.pointsOffset=0,this._commandX=0,this._commandY=0,this._points=[],this._renderDataList=[],this._curPath=null}moveTo(e,t){this.updatePathOffset&&(this.pathOffset=this.pathLength,this.updatePathOffset=!1),this._addPath(),this.addPoint(e,t,pL.PT_CORNER),this._commandX=e,this._commandY=t}lineTo(e,t){this.addPoint(e,t,pL.PT_CORNER),this._commandX=e,this._commandY=t}bezierCurveTo(e,t,n,i,s,o){const r=this._curPath,a=r.points[r.points.length-1];a&&(a.x!==e||a.y!==t||n!==s||i!==o?(bL(this,a.x,a.y,e,t,n,i,s,o,0,pL.PT_CORNER),this._commandX=s,this._commandY=o):this.lineTo(s,o))}quadraticCurveTo(e,t,n,i){const s=this._commandX,o=this._commandY;this.bezierCurveTo(s+2/3*(e-s),o+2/3*(t-o),n+2/3*(e-n),i+2/3*(t-i),n,i)}arc(e,t,n,i,s,o){!function(e,t,n,i,s,o,r){let a=0,c=0,l=0,h=0,u=0,_=0,d=0,p=0,f=0,m=0,g=0,v=0,y=0,x=0,S=0,C=0;if(c=o-s,r=r||!1)if(SL(c)>=2*mL)c=2*mL;else for(;c<0;)c+=2*mL;else if(SL(c)>=2*mL)c=2*-mL;else for(;c>0;)c-=2*mL;for(C=0|vL(1,gL(SL(c)/(.5*mL)+.5,5)),l=c/C/2,h=SL(4/3*(1-yL(l))/xL(l)),r||(h=-h),S=0;S<=C;S++)a=s+c*(S/C),u=yL(a),_=xL(a),d=t+u*i,p=n+_*i,f=-_*i*h,m=u*i*h,0===S?e.moveTo(d,p):e.bezierCurveTo(g+y,v+x,d-f,p-m,d,p),g=d,v=p,y=f,x=m}(this,e,t,n,i,s,o)}ellipse(e,t,n,i){TL(this,e,t,n,i),this._curPath.complex=!1}circle(e,t,n){TL(this,e,t,n,n),this._curPath.complex=!1}rect(e,t,n,i){this.moveTo(e,t),this.lineTo(e+n,t),this.lineTo(e+n,t+i),this.lineTo(e,t+i),this.close(),this._curPath.complex=!1}roundRect(e,t,n,i,s){!function(e,t,n,i,s,o){if(o<.1)e.rect(t,n,i,s);else{const r=gL(o,.5*SL(i))*CL(i),a=gL(o,.5*SL(s))*CL(s);e.moveTo(t,n+a),e.lineTo(t,n+s-a),e.bezierCurveTo(t,n+s-a*(1-EL),t+r*(1-EL),n+s,t+r,n+s),e.lineTo(t+i-r,n+s),e.bezierCurveTo(t+i-r*(1-EL),n+s,t+i,n+s-a*(1-EL),t+i,n+s-a),e.lineTo(t+i,n+a),e.bezierCurveTo(t+i,n+a*(1-EL),t+i-r*(1-EL),n,t+i-r,n),e.lineTo(t+r,n),e.bezierCurveTo(t+r*(1-EL),n,t,n+a*(1-EL),t,n+a),e.close()}}(this,e,t,n,i,s),this._curPath.complex=!1}clear(){this.pathLength=0,this.pathOffset=0,this.pointsOffset=0,this.dataOffset=0,this._curPath=null,this.paths.length=0,this._points.length=0;const e=this._renderDataList;for(let t=0,n=e.length;t<n;t++){const n=e[t];n&&nN.remove(n)}this._renderDataList.length=0}close(){this._curPath.closed=!0}requestRenderData(){const e=nN.add();return this._renderDataList.push(e),e}getRenderDataList(){return 0===this._renderDataList.length&&this.requestRenderData(),this._renderDataList}addPoint(e,t,n){const i=this._curPath;if(!i)return;const s=this._points,o=i.points;let r=s[this.pointsOffset++];r?(r.x=e,r.y=t):(r=new AL(e,t),s.push(r)),r.flags=n,o.push(r)}_addPath(){const e=this.pathLength;let t=this.paths[e];return t?t.reset():(t=new PL,this.paths.push(t)),this.pathLength++,this._curPath=t,t}}var IL,RL,DL,OL,NL,ML,LL,BL,FL,zL,UL,GL,VL,HL,kL,jL,WL,qL,XL,YL,KL,$L,QL;const JL=qO.concat([new vs("a_dist",ti.R32F)]),ZL=KO(JL),eB=$O(JL);let tB=function(t){return e({Graphics:t,GraphicsComponent:t}),t}((IL=mc("cc.Graphics"),RL=Mc(),DL=vc(110),OL=Rc(),NL=Uc(),ML=Zc(dL),LL=Uc(),BL=Zc(_L),FL=Uc(),zL=Uc(),UL=Uc(),GL=Uc(),VL=Bc(),IL(HL=RL(HL=DL(HL=OL((QL=$L=class e extends KN{get lineWidth(){return this._lineWidth}set lineWidth(e){this._lineWidth=e,this.impl&&(this.impl.lineWidth=e)}get lineJoin(){return this._lineJoin}set lineJoin(e){this._lineJoin=e,this.impl&&(this.impl.lineJoin=e)}get lineCap(){return this._lineCap}set lineCap(e){this._lineCap=e,this.impl&&(this.impl.lineCap=e)}get strokeColor(){return this._strokeColor}set strokeColor(e){this.impl&&(this._strokeColor.set(e),this.impl.strokeColor=this._strokeColor)}get fillColor(){return this._fillColor}set fillColor(e){this.impl&&(this._fillColor.set(e),this.impl.fillColor=this._fillColor)}get miterLimit(){return this._miterLimit}set miterLimit(e){this._miterLimit=e}get color(){return this._color}set color(e){this._color!==e&&this._color.set(e)}get srcBlendFactor(){return this._srcBlendFactor}set srcBlendFactor(e){}get dstBlendFactor(){return this._dstBlendFactor}set dstBlendFactor(e){}constructor(){super(),this.impl=null,this.model=null,rc(this,"_lineWidth",jL,this),rc(this,"_strokeColor",WL,this),rc(this,"_lineJoin",qL,this),rc(this,"_lineCap",XL,this),rc(this,"_fillColor",YL,this),rc(this,"_miterLimit",KL,this),this._isDrawing=!1,this._isNeedUploadData=!0,this._graphicsUseSubMeshes=[],this._instanceMaterialType=YN.ADD_COLOR,this.impl=new wL}onRestore(){this.impl||this._flushAssembler()}onLoad(){this.model=Sw.root.createModel(fv),this.model.node=this.model.transform=this.node,this._flushAssembler()}onEnable(){super.onEnable(),this._updateMtlForGraphics()}onDisable(){super.onDisable()}onDestroy(){this._sceneGetter=null,this.model&&(Sw.root.destroyModel(this.model),this.model=null);const e=this._graphicsUseSubMeshes.length;if(e>0){for(let t=0;t<e;++t)this._graphicsUseSubMeshes[t].destroy();this._graphicsUseSubMeshes.length=0}this.impl&&(this._isDrawing=!1,this.impl.clear(),this.impl=null),super.onDestroy()}moveTo(e,t){this.impl&&this.impl.moveTo(e,t)}lineTo(e,t){this.impl&&this.impl.lineTo(e,t)}bezierCurveTo(e,t,n,i,s,o){this.impl&&this.impl.bezierCurveTo(e,t,n,i,s,o)}quadraticCurveTo(e,t,n,i){this.impl&&this.impl.quadraticCurveTo(e,t,n,i)}arc(e,t,n,i,s,o){this.impl&&this.impl.arc(e,t,n,i,s,o)}ellipse(e,t,n,i){this.impl&&this.impl.ellipse(e,t,n,i)}circle(e,t,n){this.impl&&this.impl.circle(e,t,n)}rect(e,t,n,i){this.impl&&this.impl.rect(e,t,n,i)}roundRect(e,t,n,i,s){this.impl&&this.impl.roundRect(e,t,n,i,s)}fillRect(e,t,n,i){this.rect(e,t,n,i),this.fill()}clear(){if(this.impl){if(this.impl.clear(),this._isDrawing=!1,this.model)for(let e=0;e<this.model.subModels.length;e++)this.model.subModels[e].inputAssembler.indexCount=0;this.markForUpdateRenderData()}}close(){this.impl&&this.impl.close()}stroke(){this._assembler||this._flushAssembler(),this._isDrawing=!0,this._isNeedUploadData=!0,this._assembler.stroke(this)}fill(){this._assembler||this._flushAssembler(),this._isDrawing=!0,this._isNeedUploadData=!0,this._assembler.fill(this)}_updateMtlForGraphics(){let e;this._customMaterial?e=this.getMaterialInstance(0):(e=Fm.get("ui-graphics-material"),this.setMaterial(e,0),e=this.getMaterialInstance(0),e.recompileShaders({USE_LOCAL:!0}))}activeSubModel(e){if(this.model){if(this.model.subModels.length<=e){const t=u.director.root.device,n=t.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.DEVICE,65535*eB,eB)),i=t.createBuffer(new es(si.INDEX|si.TRANSFER_DST,ai.DEVICE,131070*Uint16Array.BYTES_PER_ELEMENT,Uint16Array.BYTES_PER_ELEMENT)),s=new yE([n],JL,Pi.TRIANGLE_LIST,i);s.subMeshIdx=0,this.model.initSubModel(e,s,this.getMaterialInstance(0)),this._graphicsUseSubMeshes.push(s)}}else D(4500,this.node.name)}_uploadData(){const e=this.impl;if(!e)return;const t=e&&e.getRenderDataList();if(t.length<=0||!this.model)return;const n=this.model.subModels;for(let e=0;e<t.length;e++){const i=t[e],s=n[e].inputAssembler;if(i.lastFilledVertex===i.vertexStart)continue;const o=new Float32Array(i.vData.buffer,0,i.vertexStart*ZL);s.vertexBuffers[0].update(o),s.vertexCount=i.vertexStart;const r=new Uint16Array(i.iData.buffer,0,i.indexStart);s.indexBuffer.update(r),s.indexCount=i.indexStart,i.lastFilledVertex=i.vertexStart,i.lastFilledIndex=i.indexStart}this._isNeedUploadData=!1}_render(e){if(this._isNeedUploadData){if(this.impl){const e=this.impl.getRenderDataList(),t=this.model.subModels.length;if(e.length>t)for(let n=t;n<e.length;n++)this.activeSubModel(n)}this._uploadData()}e.commitModel(this,this.model,this.getMaterialInstance(0))}_flushAssembler(){const t=e.Assembler.getAssembler(this);this._assembler!==t&&(this._assembler=t)}_canRender(){return!!super._canRender()&&!!this.model&&this._isDrawing}},$L.LineJoin=dL,$L.LineCap=_L,ac((kL=QL).prototype,"lineWidth",[Lc,NL],Object.getOwnPropertyDescriptor(kL.prototype,"lineWidth"),kL.prototype),ac(kL.prototype,"lineJoin",[ML,LL],Object.getOwnPropertyDescriptor(kL.prototype,"lineJoin"),kL.prototype),ac(kL.prototype,"lineCap",[BL,FL],Object.getOwnPropertyDescriptor(kL.prototype,"lineCap"),kL.prototype),ac(kL.prototype,"strokeColor",[zL],Object.getOwnPropertyDescriptor(kL.prototype,"strokeColor"),kL.prototype),ac(kL.prototype,"fillColor",[UL],Object.getOwnPropertyDescriptor(kL.prototype,"fillColor"),kL.prototype),ac(kL.prototype,"miterLimit",[GL],Object.getOwnPropertyDescriptor(kL.prototype,"miterLimit"),kL.prototype),ac(kL.prototype,"color",[el,VL],Object.getOwnPropertyDescriptor(kL.prototype,"color"),kL.prototype),jL=ac(kL.prototype,"_lineWidth",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),WL=ac(kL.prototype,"_strokeColor",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return dn.BLACK.clone()}}),qL=ac(kL.prototype,"_lineJoin",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return dL.MITER}}),XL=ac(kL.prototype,"_lineCap",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return _L.BUTT}}),YL=ac(kL.prototype,"_fillColor",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return dn.WHITE.clone()}}),KL=ac(kL.prototype,"_miterLimit",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 10}}),HL=kL))||HL)||HL)||HL)||HL));var nB,iB,sB,oB,rB,aB,cB,lB,hB,uB,_B,dB,pB,fB,mB,gB,vB,yB,xB,SB,CB,EB,TB,bB;u.Graphics=tB;const AB=new On,PB=new Bn,wB=new On,IB=[];let RB;!function(e){e[e.RECT=0]="RECT",e[e.ELLIPSE=1]="ELLIPSE",e[e.GRAPHICS_STENCIL=2]="GRAPHICS_STENCIL",e[e.IMAGE_STENCIL=3]="IMAGE_STENCIL"}(RB||(RB={})),Ke(RB);let DB=function(t){return e({Mask:t,MaskComponent:t}),t}((nB=mc("cc.Mask"),iB=Mc(),sB=vc(110),oB=Rc(),rB=Zc(RB),aB=Uc(),cB=Wc(),lB=Uc(),hB=Bc(),uB=Zc($D),_B=Bc(),dB=Bc(),pB=Gc(),fB=Bc(),mB=Bc(),nB(gB=iB(gB=sB(gB=oB((bB=TB=class e extends KN{get type(){return this._type}set type(e){this._type!==e&&(this._type=e,this.markForUpdateRenderData(!1),this._updateMaterial(),this._type!==RB.IMAGE_STENCIL?(this._spriteFrame=null,this._updateGraphics(),this._renderData&&(this.destroyRenderData(),this._renderData=null)):(this._useRenderData(),this._graphics&&this._graphics.clear()))}get inverted(){return this._inverted}set inverted(e){this._inverted=e,this.stencilStage=AN.DISABLED,this._graphics&&(this._graphics.stencilStage=AN.DISABLED)}get segments(){return this._segments}set segments(e){this._segments!==e&&(this._segments=Xt(e,3,1e4),this._updateGraphics())}get spriteFrame(){return this._spriteFrame}set spriteFrame(e){if(this._spriteFrame===e)return;const t=this._spriteFrame;this._spriteFrame=e,this._type===RB.IMAGE_STENCIL&&!t&&e&&this.markForUpdateRenderData()}get alphaThreshold(){return this._alphaThreshold}set alphaThreshold(e){this._alphaThreshold!==e&&(this._alphaThreshold=e,this.type===RB.IMAGE_STENCIL&&this._graphics)&&this._graphics.getMaterialInstance(0).setProperty("alphaThreshold",this._alphaThreshold)}get graphics(){return this._graphics}get dstBlendFactor(){return this._dstBlendFactor}set dstBlendFactor(e){this._dstBlendFactor!==e&&(this._dstBlendFactor=e,this._updateBlendFunc())}get srcBlendFactor(){return this._srcBlendFactor}set srcBlendFactor(e){this._srcBlendFactor!==e&&(this._srcBlendFactor=e,this._updateBlendFunc())}get color(){return this._color}set color(e){this._color!==e&&(this._color.set(e),this.markForUpdateRenderData())}get customMaterial(){return this._customMaterial}set customMaterial(e){}constructor(){super(),this._clearStencilMtl=null,this._clearModel=null,rc(this,"_type",yB,this),rc(this,"_inverted",xB,this),rc(this,"_segments",SB,this),rc(this,"_spriteFrame",CB,this),rc(this,"_alphaThreshold",EB,this),this._graphics=null,this._clearModelMesh=null,this._instanceMaterialType=YN.ADD_COLOR}onLoad(){this._createClearModel(),this._createGraphics(),this._graphics&&this._graphics.onLoad()}onEnable(){super.onEnable(),this._updateGraphics(),this._enableGraphics()}onRestore(){this._createGraphics(),super.updateMaterial(),this._updateGraphics(),this._renderFlag=this._canRender()}onDisable(){super.onDisable(),this._disableGraphics()}onDestroy(){this._clearModel&&this._clearModelMesh&&(Sw.root.destroyModel(this._clearModel),this._clearModelMesh.destroy()),this._clearStencilMtl&&this._clearStencilMtl.destroy(),this._removeGraphics(),super.onDestroy()}isHit(e){const t=this.node._uiProps.uiTransformComp,n=t.contentSize,i=n.width,s=n.height,o=PB;this.node.getWorldMatrix(AB),On.invert(wB,AB),Bn.transformMat4(o,e,wB);const r=t.anchorPoint;o.x+=r.x*i,o.y+=r.y*s;let a=!1;if(this.type===RB.RECT||this.type===RB.GRAPHICS_STENCIL||this.type===RB.IMAGE_STENCIL)a=o.x>=0&&o.y>=0&&o.x<=i&&o.y<=s;else if(this.type===RB.ELLIPSE){const e=i/2,t=s/2,n=o.x-.5*i,r=o.y-.5*s;a=n*n/(e*e)+r*r/(t*t)<1}return this._inverted&&(a=!a),a}_render(e){e.commitComp(this,this.renderData,null,this._assembler,null)}_postRender(e){this._postAssembler&&e.commitComp(this,null,null,this._postAssembler,null)}_nodeStateChange(e){super._nodeStateChange(e),this._updateGraphics()}_canRender(){return!!super._canRender()&&null!==this._graphics&&(this._type!==RB.IMAGE_STENCIL||null!==this._spriteFrame)}_flushAssembler(){const t=e.Assembler.getAssembler(this),n=e.PostAssembler.getAssembler(this);this._assembler!==t&&(this.destroyRenderData(),this._assembler=t),this._postAssembler!==n&&(this._postAssembler=n),this._useRenderData()}_createGraphics(){if(!this._graphics){const e=this._graphics=new tB;e._objFlags|=rl.Flags.IsOnLoadCalled,e.node=this.node,e.node.getWorldMatrix(),e.lineWidth=0;const t=dn.WHITE.clone();t.a=0,e.fillColor=t}this._updateMaterial()}_updateGraphics(){if(!this._graphics||this._type!==RB.RECT&&this._type!==RB.ELLIPSE)return;const e=this.node._uiProps.uiTransformComp,t=this._graphics;t.clear();const n=e.contentSize,i=n.width,s=n.height,o=e.anchorPoint,r=-i*o.x,a=-s*o.y;if(this._type===RB.RECT)t.rect(r,a,i,s);else if(this._type===RB.ELLIPSE){const e=function(e,t,n){IB.length=0;const i=2*Math.PI/n;for(let s=0;s<n;++s)IB.push(new gn(t.x*Math.cos(i*s)+e.x,t.y*Math.sin(i*s)+e.y,0));return IB}(new gn(r+i/2,a+s/2,0),new gn(i/2,s/2,0),this._segments);for(let n=0;n<e.length;++n){const i=e[n];0===n?t.moveTo(i.x,i.y):t.lineTo(i.x,i.y)}t.close()}t.fill()}_createClearModel(){if(!this._clearModel){const e=Fm.get("default-clear-stencil");this._clearStencilMtl=new vv({parent:e,owner:this,subModelIdx:0}),this._clearModel=Sw.root.createModel(fv),this._clearModel.node=this._clearModel.transform=this.node;const t=$O(WO),n=u.director.root.device,i=n.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.DEVICE,4*t,t)),s=new Float32Array([-1,-1,0,1,-1,0,-1,1,0,1,1,0]);i.update(s);const o=n.createBuffer(new es(si.INDEX|si.TRANSFER_DST,ai.DEVICE,6*Uint16Array.BYTES_PER_ELEMENT,Uint16Array.BYTES_PER_ELEMENT)),r=new Uint16Array([0,1,2,2,1,3]);o.update(r),this._clearModelMesh=new yE([i],WO,Pi.TRIANGLE_LIST,o),this._clearModelMesh.subMeshIdx=0,this._clearModel.initSubModel(0,this._clearModelMesh,this._clearStencilMtl)}}_updateMaterial(){if(this._graphics){const e=this._graphics;let t;e.stencilStage=AN.DISABLED,this._type===RB.IMAGE_STENCIL?(t=Fm.get("ui-alpha-test-material"),e.setMaterial(t,0),t=e.getMaterialInstance(0),t.setProperty("alphaThreshold",this._alphaThreshold)):(t=Fm.get("ui-graphics-material"),e.setMaterial(t,0),e.getMaterialInstance(0))}}_enableGraphics(){this._graphics&&(this._graphics._renderFlag=this._graphics._canRender())}_disableGraphics(){this._graphics&&this._graphics.onDisable()}_removeGraphics(){this._graphics&&(this._graphics.destroy(),this._graphics._destroyImmediate(),this._graphics=null)}_useRenderData(){this._type!==RB.IMAGE_STENCIL||this._renderData||this._assembler&&this._assembler.createData&&(this._renderData=this._assembler.createData(this),this.markForUpdateRenderData())}},TB.Type=RB,ac((vB=bB).prototype,"type",[rB,aB],Object.getOwnPropertyDescriptor(vB.prototype,"type"),vB.prototype),ac(vB.prototype,"inverted",[cB,lB],Object.getOwnPropertyDescriptor(vB.prototype,"inverted"),vB.prototype),ac(vB.prototype,"segments",[hB],Object.getOwnPropertyDescriptor(vB.prototype,"segments"),vB.prototype),ac(vB.prototype,"spriteFrame",[uB,_B],Object.getOwnPropertyDescriptor(vB.prototype,"spriteFrame"),vB.prototype),ac(vB.prototype,"alphaThreshold",[dB,pB,jc],Object.getOwnPropertyDescriptor(vB.prototype,"alphaThreshold"),vB.prototype),ac(vB.prototype,"color",[el,fB],Object.getOwnPropertyDescriptor(vB.prototype,"color"),vB.prototype),ac(vB.prototype,"customMaterial",[el,mB],Object.getOwnPropertyDescriptor(vB.prototype,"customMaterial"),vB.prototype),yB=ac(vB.prototype,"_type",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return RB.RECT}}),xB=ac(vB.prototype,"_inverted",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),SB=ac(vB.prototype,"_segments",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 64}}),CB=ac(vB.prototype,"_spriteFrame",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),EB=ac(vB.prototype,"_alphaThreshold",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),gB=vB))||gB)||gB)||gB)||gB));wE._maskComp=DB,u.Mask=DB;const OB=/^(click)(\s)*=|(param)(\s)*=/,NB=/(\s)*src(\s)*=|(\s)*height(\s)*=|(\s)*width(\s)*=|(\s)*align(\s)*=|(\s)*offset(\s)*=|(\s)*click(\s)*=|(\s)*param(\s)*=/;class MB{constructor(){this._specialSymbolArray=[],this._stack=[],this._resultObjectArray=[],this._specialSymbolArray.push([/&lt;/g,"<"]),this._specialSymbolArray.push([/&gt;/g,">"]),this._specialSymbolArray.push([/&amp;/g,"&"]),this._specialSymbolArray.push([/&quot;/g,'"']),this._specialSymbolArray.push([/&apos;/g,"'"])}parse(e){this._resultObjectArray.length=0,this._stack.length=0;let t=0;const n=e.length;for(;t<n;){let i=e.indexOf(">",t),s=-1;if(i>=0&&(s=e.lastIndexOf("<",i),s<t-1&&(s=e.indexOf("<",i+1),i=e.indexOf(">",s+1))),s<0)this._stack.pop(),this._processResult(e.substring(t)),t=n;else{let n=e.substring(t,s);const o=e.substring(s+1,i);""===o&&(n=e.substring(t,i+1)),this._processResult(n),-1===i?i=s:"/"===e.charAt(s+1)?this._stack.pop():this._addToStack(o),t=i+1}}return this._resultObjectArray}_attributeToObject(e){e=e.trim();const t={};let n=/^(color|size)(\s)*=/.exec(e),i="",s=0,o="";if(n){if(i=n[0],""===(e=e.substring(i.length).trim()))return t;switch(s=e.indexOf(" "),i[0]){case"c":t.color=s>-1?e.substring(0,s).trim():e;break;case"s":t.size=parseInt(e)}return s>-1&&(o=e.substring(s+1).trim(),t.event=this._processEventHandler(o)),t}if(n=/^(br(\s)*\/)/.exec(e),n&&n[0].length>0&&(i=n[0].trim(),i.startsWith("br")&&"/"===i[i.length-1]))return t.isNewLine=!0,this._resultObjectArray.push({text:"",style:{isNewLine:!0}}),t;n=/^(img(\s)*src(\s)*=[^>]+\/)/.exec(e);let r="",a=-1;if(n&&n[0].length>0&&(i=n[0].trim(),i.startsWith("img")&&"/"===i[i.length-1])){let o;n=NB.exec(e);let c=!1;for(;n;){i=(e=e.substring(e.indexOf(n[0]))).substr(0,n[0].length);const l=i.length;if(i=i.replace(/[^a-zA-Z]/g,"").trim(),i=i.toLowerCase(),r=e.substring(l).trim(),a="src"===i?this.getRightQuotationIndex(r):-1,s=r.indexOf(" ",a+1>=r.length?-1:a+1),o=s>-1?r.substr(0,s):r,e=r.substring(s).trim(),o.endsWith("/")&&(o=o.slice(0,-1)),"src"===i){switch(o.charCodeAt(0)){case 34:case 39:c=!0,o=o.slice(1,-1)}t.isImage=!0,t.src=o}else if("height"===i)t.imageHeight=parseInt(o);else if("width"===i)t.imageWidth=parseInt(o);else if("align"===i){switch(o.charCodeAt(0)){case 34:case 39:o=o.slice(1,-1)}t.imageAlign=o.toLowerCase()}else"offset"===i?t.imageOffset=o:"click"===i&&(t.event=this._processEventHandler(`${i}=${o}`));t.event&&"param"===i&&(t.event[i]=o.replace(/^"|"$/g,"")),n=NB.exec(e)}return c&&t.isImage&&this._resultObjectArray.push({text:"",style:t}),{}}if(n=/^(outline(\s)*[^>]*)/.exec(e),n){const o={color:"#ffffff",width:1};if(e=n[0].substring("outline".length).trim()){const a=/(\s)*color(\s)*=|(\s)*width(\s)*=|(\s)*click(\s)*=|(\s)*param(\s)*=/;let c;for(n=a.exec(e);n;)i=(e=e.substring(e.indexOf(n[0]))).substr(0,n[0].length),r=e.substring(i.length).trim(),s=r.indexOf(" "),c=s>-1?r.substr(0,s):r,i=i.replace(/[^a-zA-Z]/g,"").trim(),i=i.toLowerCase(),e=r.substring(s).trim(),"click"===i?t.event=this._processEventHandler(`${i}=${c}`):"color"===i?o.color=c:"width"===i&&(o.width=parseInt(c)),t.event&&"param"===i&&(t.event[i]=c.replace(/^"|"$/g,"")),n=a.exec(e)}t.outline=o}if(n=/^(on|u|b|i)(\s)*/.exec(e),n&&n[0].length>0){switch(i=n[0],e=e.substring(i.length).trim(),i[0]){case"u":t.underline=!0;break;case"i":t.italic=!0;break;case"b":t.bold=!0}if(""===e)return t;t.event=this._processEventHandler(e)}return t}getRightQuotationIndex(e){let t=-1,n=-1;const i=e.indexOf("'"),s=e.indexOf('"'),o=s>-1&&(s<i||-1===i);return i>-1&&(i<s||-1===s)?(t=i,n=e.indexOf("'",t+1>=e.length?-1:t+1)):o&&(t=s,n=e.indexOf('"',t+1>=e.length?-1:t+1)),n}_processEventHandler(e){const t={};let n=0,i=!1,s=OB.exec(e);for(;s;){let o=s[0],r="";if(i=!1,'"'===(e=e.substring(o.length).trim()).charAt(0))n=e.indexOf('"',1),n>-1&&(r=e.substring(1,n).trim(),i=!0),n++;else if("'"===e.charAt(0))n=e.indexOf("'",1),n>-1&&(r=e.substring(1,n).trim(),i=!0),n++;else{const t=/(\S)+/.exec(e);r=t?t[0]:"",n=r.length}i&&(o=o.substring(0,o.length-1).trim(),t[o]=r),e=e.substring(n).trim(),s=OB.exec(e)}return t}_addToStack(e){const t=this._attributeToObject(e);if(0===this._stack.length)this._stack.push(t);else{if(t.isNewLine||t.isImage)return;const e=this._stack[this._stack.length-1];for(const n in e)t[n]||(t[n]=e[n]);this._stack.push(t)}}_processResult(e){0!==e.length&&(e=this._escapeSpecialSymbol(e),this._stack.length>0?this._resultObjectArray.push({text:e,style:this._stack[this._stack.length-1]}):this._resultObjectArray.push({text:e}))}_escapeSpecialSymbol(e){for(const t of this._specialSymbolArray){const n=t[0],i=t[1];e=e.replace(n,i)}return e}}var LB,BB,FB,zB,UB,GB,VB,HB,kB,jB,WB;e("HtmlTextParser",MB);let qB=function(t){return e({LabelOutline:t,LabelOutlineComponent:t}),t}((LB=mc("cc.LabelOutline"),BB=Mc(),FB=vc(110),zB=Rc(),UB=gc(fL),GB=Uc(),VB=Uc(),LB(HB=BB(HB=FB(HB=zB(HB=UB(HB=Ic((jB=ac((kB=class extends Gh{constructor(...e){super(...e),rc(this,"_color",jB,this),rc(this,"_width",WB,this)}get color(){return this._color}set color(e){this._color!==e&&(this._color.set(e),this._updateRenderData())}get width(){return this._width}set width(e){this._width!==e&&(this._width=e,this._updateRenderData())}onEnable(){this._updateRenderData()}onDisable(){this._updateRenderData()}_updateRenderData(){const e=this.node.getComponent(fL);e&&e.updateRenderData(!0)}}).prototype,"_color",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new dn(0,0,0,255)}}),WB=ac(kB.prototype,"_width",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 2}}),ac(kB.prototype,"color",[GB],Object.getOwnPropertyDescriptor(kB.prototype,"color"),kB.prototype),ac(kB.prototype,"width",[VB],Object.getOwnPropertyDescriptor(kB.prototype,"width"),kB.prototype),HB=kB))||HB)||HB)||HB)||HB)||HB)||HB));var XB,YB,KB,$B,QB,JB,ZB,eF,tF,nF,iF,sF,oF,rF,aF,cF,lF,hF,uF,_F,dF,pF,fF,mF,gF,vF,yF,xF,SF,CF,EF,TF,bF,AF,PF,wF,IF,RF,DF,OF,NF,MF,LF,BF,FF,zF;let UF;var GF,VF,HF;u.LabelOutline=qB,function(e){e[e.SIMPLE=0]="SIMPLE",e[e.SLICED=1]="SLICED",e[e.TILED=2]="TILED",e[e.FILLED=3]="FILLED"}(UF||(UF={})),Ke(UF),function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL",e[e.RADIAL=2]="RADIAL"}(GF||(GF={})),Ke(GF),function(e){e[e.CUSTOM=0]="CUSTOM",e[e.TRIMMED=1]="TRIMMED",e[e.RAW=2]="RAW"}(VF||(VF={})),Ke(VF),function(e){e.SPRITE_FRAME_CHANGED="spriteframe-changed"}(HF||(HF={}));let kF=function(t){return e({Sprite:t,SpriteComponent:t}),t}((XB=mc("cc.Sprite"),YB=Mc(),KB=vc(110),$B=Rc(),QB=Zc(eO),JB=Wc(),ZB=Uc(),eF=Zc($D),tF=Wc(),nF=Uc(),iF=Zc(UF),sF=Wc(),oF=Uc(),rF=Zc(GF),aF=Wc(),cF=Uc(),lF=Wc(),hF=Uc(),uF=Gc(),_F=Wc(),dF=Uc(),pF=Gc(),fF=Wc(),mF=Uc(),gF=Bc(),vF=Wc(),yF=Uc(),xF=Wc(),SF=Uc(),CF=Zc(VF),EF=Wc(),TF=Uc(),XB(bF=YB(bF=KB(bF=$B((zF=FF=class e extends KN{constructor(...e){super(...e),rc(this,"_spriteFrame",PF,this),rc(this,"_type",wF,this),rc(this,"_fillType",IF,this),rc(this,"_sizeMode",RF,this),rc(this,"_fillCenter",DF,this),rc(this,"_fillStart",OF,this),rc(this,"_fillRange",NF,this),rc(this,"_isTrimmedMode",MF,this),rc(this,"_useGrayscale",LF,this),rc(this,"_atlas",BF,this)}get spriteAtlas(){return this._atlas}set spriteAtlas(e){this._atlas!==e&&(this._atlas=e)}get spriteFrame(){return this._spriteFrame}set spriteFrame(e){if(this._spriteFrame===e)return;const t=this._spriteFrame;this._spriteFrame=e,this.markForUpdateRenderData(!1),this._applySpriteFrame(t)}get type(){return this._type}set type(e){this._type!==e&&(this._type=e,this._flushAssembler())}get fillType(){return this._fillType}set fillType(e){this._fillType!==e&&(e===GF.RADIAL||this._fillType===GF.RADIAL?(this.destroyRenderData(),this._renderData=null):this._renderData&&this.markForUpdateRenderData(!0)),this._fillType=e,this._flushAssembler()}get fillCenter(){return this._fillCenter}set fillCenter(e){this._fillCenter.x=e.x,this._fillCenter.y=e.y,this._type===UF.FILLED&&this._renderData&&this.markForUpdateRenderData()}get fillStart(){return this._fillStart}set fillStart(e){this._fillStart=Xt(e,0,1),this._type===UF.FILLED&&this._renderData&&(this.markForUpdateRenderData(),this._updateUVs())}get fillRange(){return this._fillRange}set fillRange(e){this._fillRange=Xt(e,-1,1),this._type===UF.FILLED&&this._renderData&&(this.markForUpdateRenderData(),this._updateUVs())}get trim(){return this._isTrimmedMode}set trim(e){this._isTrimmedMode!==e&&(this._isTrimmedMode=e,this._type===UF.SIMPLE&&this._renderData&&this.markForUpdateRenderData(!0))}get grayscale(){return this._useGrayscale}set grayscale(e){this._useGrayscale!==e&&(this._useGrayscale=e,this.changeMaterialForDefine(),this.updateMaterial())}get sizeMode(){return this._sizeMode}set sizeMode(e){this._sizeMode!==e&&(this._sizeMode=e,e!==VF.CUSTOM&&this._applySpriteSize())}__preload(){this.changeMaterialForDefine(),super.__preload()}onEnable(){super.onEnable(),this._activateMaterial();const e=this._spriteFrame;e&&(this._updateUVs(),this._type===UF.SLICED&&e.on($D.EVENT_UV_UPDATED,this._updateUVs,this))}onDisable(){this._spriteFrame&&this._type===UF.SLICED&&this._spriteFrame.off($D.EVENT_UV_UPDATED,this._updateUVs,this)}onDestroy(){super.onDestroy()}changeSpriteFrameFromAtlas(e){if(!this._atlas)return void console.warn("SpriteAtlas is null.");const t=this._atlas.getSpriteFrame(e);this.spriteFrame=t}changeMaterialForDefine(){let e;const t=this._instanceMaterialType;this._spriteFrame&&(e=this._spriteFrame.texture);let n=!1;if(e instanceof sm){const t=e.getPixelFormat();n=t===Vf.RGBA_ETC1||t===Vf.RGB_A_PVRTC_4BPPV1||t===Vf.RGB_A_PVRTC_2BPPV1}n&&this.grayscale?this._instanceMaterialType=YN.USE_ALPHA_SEPARATED_AND_GRAY:n?this._instanceMaterialType=YN.USE_ALPHA_SEPARATED:this.grayscale?this._instanceMaterialType=YN.GRAYSCALE:this._instanceMaterialType=YN.ADD_COLOR_AND_TEXTURE,t!==this._instanceMaterialType&&this.updateMaterial()}_updateBuiltinMaterial(){let e=super._updateBuiltinMaterial();if(this.spriteFrame&&this.spriteFrame.texture instanceof hE){const t={SAMPLE_FROM_RT:!0,...e.passes[0].defines},n=new lg;n.initialize({effectAsset:e.effectAsset,defines:t}),e=n}return e}_render(e){e.commitComp(this,this.renderData,this._spriteFrame,this._assembler,null)}_canRender(){if(!super._canRender())return!1;const e=this._spriteFrame;return!(!e||!e.texture)}_flushAssembler(){const t=e.Assembler.getAssembler(this);this._assembler!==t&&(this.destroyRenderData(),this._assembler=t),this._renderData||this._assembler&&this._assembler.createData&&(this._renderData=this._assembler.createData(this),this._renderData.material=this.getRenderMaterial(0),this.markForUpdateRenderData(),this.spriteFrame&&this._assembler.updateUVs(this),this._updateColor()),this._spriteFrame&&(this._type===UF.SLICED?this._spriteFrame.on($D.EVENT_UV_UPDATED,this._updateUVs,this):this._spriteFrame.off($D.EVENT_UV_UPDATED,this._updateUVs,this))}_applySpriteSize(){if(this._spriteFrame){if(!this._spriteFrame.isDefault)if(VF.RAW===this._sizeMode){const e=this._spriteFrame.originalSize;this.node._uiProps.uiTransformComp.setContentSize(e)}else if(VF.TRIMMED===this._sizeMode){const e=this._spriteFrame.rect;this.node._uiProps.uiTransformComp.setContentSize(e.width,e.height)}this._activateMaterial()}}_resized(){}_activateMaterial(){const e=this._spriteFrame,t=this.getRenderMaterial(0);e&&t&&this.markForUpdateRenderData(),this._renderData&&(this._renderData.material=t)}_updateUVs(){this._assembler&&this._assembler.updateUVs(this)}_applySpriteFrame(e){const t=this._spriteFrame;e&&this._type===UF.SLICED&&e.off($D.EVENT_UV_UPDATED,this._updateUVs,this),this._updateUVs();let n=!1;t&&(e&&e.texture===t.texture||(n=!0),n&&(this._renderData&&(this._renderData.textureDirty=!0),this.changeMaterialForDefine()),this._applySpriteSize(),this._type===UF.SLICED&&t.on($D.EVENT_UV_UPDATED,this._updateUVs,this))}},FF.FillType=GF,FF.Type=UF,FF.SizeMode=VF,FF.EventType=HF,ac((AF=zF).prototype,"spriteAtlas",[QB,JB,ZB],Object.getOwnPropertyDescriptor(AF.prototype,"spriteAtlas"),AF.prototype),ac(AF.prototype,"spriteFrame",[eF,tF,nF],Object.getOwnPropertyDescriptor(AF.prototype,"spriteFrame"),AF.prototype),ac(AF.prototype,"type",[iF,sF,oF],Object.getOwnPropertyDescriptor(AF.prototype,"type"),AF.prototype),ac(AF.prototype,"fillType",[rF,aF,cF],Object.getOwnPropertyDescriptor(AF.prototype,"fillType"),AF.prototype),ac(AF.prototype,"fillCenter",[lF,hF],Object.getOwnPropertyDescriptor(AF.prototype,"fillCenter"),AF.prototype),ac(AF.prototype,"fillStart",[uF,_F,dF],Object.getOwnPropertyDescriptor(AF.prototype,"fillStart"),AF.prototype),ac(AF.prototype,"fillRange",[pF,fF,mF],Object.getOwnPropertyDescriptor(AF.prototype,"fillRange"),AF.prototype),ac(AF.prototype,"trim",[gF,vF,yF],Object.getOwnPropertyDescriptor(AF.prototype,"trim"),AF.prototype),ac(AF.prototype,"grayscale",[Lc,xF,SF],Object.getOwnPropertyDescriptor(AF.prototype,"grayscale"),AF.prototype),ac(AF.prototype,"sizeMode",[CF,EF,TF],Object.getOwnPropertyDescriptor(AF.prototype,"sizeMode"),AF.prototype),PF=ac(AF.prototype,"_spriteFrame",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),wF=ac(AF.prototype,"_type",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return UF.SIMPLE}}),IF=ac(AF.prototype,"_fillType",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return GF.HORIZONTAL}}),RF=ac(AF.prototype,"_sizeMode",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return VF.TRIMMED}}),DF=ac(AF.prototype,"_fillCenter",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Bn(0,0)}}),OF=ac(AF.prototype,"_fillStart",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),NF=ac(AF.prototype,"_fillRange",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),MF=ac(AF.prototype,"_isTrimmedMode",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),LF=ac(AF.prototype,"_useGrayscale",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),BF=ac(AF.prototype,"_atlas",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),bF=AF))||bF)||bF)||bF)||bF));var jF;u.Sprite=kF;let WF=e("RenderRoot2D",mc("cc.RenderRoot2D")(jF=vc(100)(jF=Rc()(jF=gc(PN)(jF=yc(jF=Ic(jF=class extends Gh{onEnable(){u.director.root.batcher2D.addScreen(this)}onDisable(){u.director.root.batcher2D.removeScreen(this)}onDestroy(){u.director.root.batcher2D.removeScreen(this)}})||jF)||jF)||jF)||jF)||jF)||jF);var qF,XF,YF,KF,$F,QF,JF,ZF,ez,tz,nz,iz;const sz=new gn,oz=qe({OVERLAY:0,INTERSPERSE:1});let rz=function(t){return e({Canvas:t,CanvasComponent:t}),t}((qF=mc("cc.Canvas"),XF=Mc(),YF=vc(100),KF=Rc(),$F=Zc(bD),QF=Uc(),JF=Uc(),ZF=Zc(bD),qF(ez=XF(ez=YF(ez=KF(ez=Ic(ez=yc((ac((tz=class extends WF{get renderMode(){return this._renderMode}set renderMode(e){this._renderMode=e,this._cameraComponent&&(this._cameraComponent.priority=this._getViewPriority())}get cameraComponent(){return this._cameraComponent}set cameraComponent(e){this._cameraComponent!==e&&(this._cameraComponent=e,this._onResizeCamera())}get alignCanvasWithScreen(){return this._alignCanvasWithScreen}set alignCanvasWithScreen(e){this._alignCanvasWithScreen=e,this._onResizeCamera()}constructor(){super(),rc(this,"_cameraComponent",nz,this),rc(this,"_alignCanvasWithScreen",iz,this),this._thisOnCameraResized=void 0,this._fitDesignResolution=void 0,this._pos=new gn,this._renderMode=oz.OVERLAY,this._thisOnCameraResized=this._onResizeCamera.bind(this)}__preload(){const e=this.getComponent("cc.Widget");e&&e.updateAlignment(),this._cameraComponent&&(this._cameraComponent._createCamera(),this._cameraComponent.node.on(bD.TARGET_TEXTURE_CHANGE,this._thisOnCameraResized)),this._onResizeCamera(),this.node.on(Ex.TRANSFORM_CHANGED,this._thisOnCameraResized)}onEnable(){super.onEnable(),this._cameraComponent&&this._cameraComponent.node.on(bD.TARGET_TEXTURE_CHANGE,this._thisOnCameraResized)}onDisable(){super.onDisable(),this._cameraComponent&&this._cameraComponent.node.off(bD.TARGET_TEXTURE_CHANGE,this._thisOnCameraResized)}onDestroy(){super.onDestroy(),this.node.off(Ex.TRANSFORM_CHANGED,this._thisOnCameraResized)}_onResizeCamera(){if(this._cameraComponent&&this._alignCanvasWithScreen){if(this._cameraComponent.targetTexture)this._cameraComponent.orthoHeight=Ew.height/2;else{const e=Kh.windowSize;this._cameraComponent.orthoHeight=e.height/Rw.getScaleY()/2}this.node.getWorldPosition(sz),this._cameraComponent.node.setWorldPosition(sz.x,sz.y,1e3)}}_getViewPriority(){if(this._cameraComponent){var e;let t=null===(e=this.cameraComponent)||void 0===e?void 0:e.priority;return t=this._renderMode===oz.OVERLAY?t|1<<30:t&~(1<<30),t}return 0}}).prototype,"cameraComponent",[$F,QF],Object.getOwnPropertyDescriptor(tz.prototype,"cameraComponent"),tz.prototype),ac(tz.prototype,"alignCanvasWithScreen",[JF],Object.getOwnPropertyDescriptor(tz.prototype,"alignCanvasWithScreen"),tz.prototype),nz=ac(tz.prototype,"_cameraComponent",[ZF],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),iz=ac(tz.prototype,"_alignCanvasWithScreen",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),ez=tz))||ez)||ez)||ez)||ez)||ez)||ez));var az,cz,lz,hz,uz,_z,dz,pz,fz,mz,gz,vz,yz,xz,Sz,Cz,Ez,Tz,bz,Az,Pz,wz,Iz,Rz,Dz,Oz,Nz,Mz,Lz,Bz,Fz,zz,Uz,Gz,Vz,Hz,kz,jz,Wz,qz;u.Canvas=rz,H(e("UIComponent",mc("cc.UIComponent")(az=gc(PN)(az=vc(110)(az=yc(az=Ic(az=class extends Gh{constructor(...e){super(...e),this._lastParent=null,this.stencilStage=AN.DISABLED}__preload(){this.node._uiProps.uiComp=this}onEnable(){}onDisable(){}onDestroy(){this.node._uiProps.uiComp===this&&(this.node._uiProps.uiComp=null)}updateAssembler(e){}postUpdateAssembler(e){}markForUpdateRenderData(e=!0){}setNodeDirty(){}setTextureDirty(){}})||az)||az)||az)||az)||az).prototype,"UIComponent",[{name:"_visibility"},{name:"setVisibility"}]),H(KN.prototype,"Renderable2D.prototype",[{name:"srcBlendFactor"},{name:"dstBlendFactor"}]),V(rz.prototype,"Canvas.prototype",[{name:"camera",newName:"cameraComponent.camera",customGetter(){return this._cameraComponent.camera}},{name:"clearFlag",newName:"cameraComponent.clearFlags",customGetter(){return this._cameraComponent?this._cameraComponent.clearFlags:0},customSetter(e){this._cameraComponent&&(this._cameraComponent.clearFlags=e)}},{name:"color",newName:"cameraComponent.clearColor",customGetter(){return this._cameraComponent?this._cameraComponent.clearColor:dn.BLACK},customSetter(e){this._cameraComponent&&(this._cameraComponent.clearColor=e)}},{name:"priority",newName:"cameraComponent.priority",customGetter(){return this._cameraComponent?this._cameraComponent.priority:0},customSetter(e){this._cameraComponent&&(this._cameraComponent.priority=e)}},{name:"targetTexture",newName:"cameraComponent.targetTexture",customGetter(){return this._cameraComponent?this._cameraComponent.targetTexture:null},customSetter(e){this._cameraComponent&&(this._cameraComponent.targetTexture=e)}},{name:"visibility",newName:"cameraComponent.visibility",customGetter(){return this._cameraComponent?this._cameraComponent.visibility:0}}]),k(PN.prototype,"UITransform.prototype",[{name:"priority",suggest:"Please use setSiblingIndex to change index of the current node in its parent's children array."}]),u.UITransformComponent=PN,ke.setClassAlias(PN,"cc.UITransformComponent"),ke.setClassAlias(KN,"cc.RenderComponent"),u.CanvasComponent=rz,ke.setClassAlias(rz,"cc.CanvasComponent");const Xz=new MB,Yz="RICHTEXT_CHILD",Kz="RICHTEXT_Image_CHILD",$z=new Ve((e=>{if(!u.isValid(e.node))return!1;{const t=e.node.getComponent(qB);t&&(t.width=0)}return!0}),20),Qz=new Ve((e=>u.isValid(e.node)),10);function Jz(e){return{node:new lS(e),comp:null,lineCount:0,styleIndex:0,imageOffset:"",clickParam:"",clickHandler:"",type:e}}function Zz(e,t){let n;e===Yz?n=$z._get():e===Kz&&(n=Qz._get()),n=n||Jz(e);let i=n.node;return i||(i=new lS(e)),i.hideFlags|=rl.Flags.DontSave|rl.Flags.HideInHierarchy,e===Kz?(n.comp=i.getComponent(kF)||i.addComponent(kF),n.comp.spriteFrame=t,n.comp.type=kF.Type.SLICED,n.comp.sizeMode=kF.SizeMode.CUSTOM):(n.comp=i.getComponent(fL)||i.addComponent(fL),n.comp.string=t,n.comp.horizontalAlign=cL.LEFT,n.comp.verticalAlign=lL.TOP,n.comp.underlineHeight=2),i.setPosition(0,0,0),i._uiProps.uiTransformComp.setAnchorPoint(.5,.5),n.node=i,n.lineCount=0,n.styleIndex=0,n.imageOffset="",n.clickParam="",n.clickHandler="",n}let eU=function(t){return e({RichText:t,RichTextComponent:t}),t}((cz=mc("cc.RichText"),lz=Mc(),hz=vc(110),uz=Rc(),_z=Uc(),dz=Zc(cL),pz=Uc(),fz=Zc(lL),mz=Uc(),gz=Uc(),vz=Uc(),yz=Zc(nO),xz=Uc(),Sz=Uc(),Cz=Wc(),Ez=Zc(uL),Tz=Uc(),bz=Uc(),Az=Uc(),Pz=Zc(eO),wz=Uc(),Iz=Uc(),cz(Rz=lz(Rz=hz(Rz=uz(Rz=Ic((qz=Wz=class extends Gh{get string(){return this._string}set string(e){this._string!==e&&(this._string=e,this._updateRichTextStatus())}get horizontalAlign(){return this._horizontalAlign}set horizontalAlign(e){this.horizontalAlign!==e&&(this._horizontalAlign=e,this._layoutDirty=!0,this._updateRichTextStatus())}get verticalAlign(){return this._verticalAlign}set verticalAlign(e){this._verticalAlign!==e&&(this._verticalAlign=e,this._layoutDirty=!0,this._updateRichTextStatus())}get fontSize(){return this._fontSize}set fontSize(e){this._fontSize!==e&&(this._fontSize=e,this._layoutDirty=!0,this._updateRichTextStatus())}get fontFamily(){return this._fontFamily}set fontFamily(e){this._fontFamily!==e&&(this._fontFamily=e,this._layoutDirty=!0,this._updateRichTextStatus())}get font(){return this._font}set font(e){this._font!==e&&(this._font=e,this._layoutDirty=!0,this._font?(this.useSystemFont=!1,this._onTTFLoaded()):this.useSystemFont=!0,this._updateRichTextStatus())}get useSystemFont(){return this._isSystemFontUsed}set useSystemFont(e){this._isSystemFontUsed!==e&&(this._isSystemFontUsed=e,this._layoutDirty=!0,this._updateRichTextStatus())}get cacheMode(){return this._cacheMode}set cacheMode(e){this._cacheMode!==e&&(this._cacheMode=e,this._updateRichTextStatus())}get maxWidth(){return this._maxWidth}set maxWidth(e){this._maxWidth!==e&&(this._maxWidth=e,this._layoutDirty=!0,this._updateRichTextStatus())}get lineHeight(){return this._lineHeight}set lineHeight(e){this._lineHeight!==e&&(this._lineHeight=e,this._layoutDirty=!0,this._updateRichTextStatus())}get imageAtlas(){return this._imageAtlas}set imageAtlas(e){this._imageAtlas!==e&&(this._imageAtlas=e,this._layoutDirty=!0,this._updateRichTextStatus())}get handleTouchEvent(){return this._handleTouchEvent}set handleTouchEvent(e){this._handleTouchEvent!==e&&(this._handleTouchEvent=e,this.enabledInHierarchy&&(this.handleTouchEvent?this._addEventListeners():this._removeEventListeners()))}constructor(){super(),rc(this,"_lineHeight",Oz,this),rc(this,"_string",Nz,this),rc(this,"_horizontalAlign",Mz,this),rc(this,"_verticalAlign",Lz,this),rc(this,"_fontSize",Bz,this),rc(this,"_maxWidth",Fz,this),rc(this,"_fontFamily",zz,this),rc(this,"_font",Uz,this),rc(this,"_isSystemFontUsed",Gz,this),rc(this,"_userDefinedFont",Vz,this),rc(this,"_cacheMode",Hz,this),rc(this,"_imageAtlas",kz,this),rc(this,"_handleTouchEvent",jz,this),this._textArray=[],this._segments=[],this._labelSegmentsCache=[],this._linesWidth=[],this._lineCount=1,this._labelWidth=0,this._labelHeight=0,this._layoutDirty=!0,this._lineOffsetX=0,this._updateRichTextStatus=void 0,this._labelChildrenNum=0,this._updateRichTextStatus=this._updateRichText}onLoad(){this.node.on(Ex.LAYER_CHANGED,this._applyLayer,this)}onEnable(){this.handleTouchEvent&&this._addEventListeners(),this._updateRichText(),this._activateChildren(!0)}onDisable(){this.handleTouchEvent&&this._removeEventListeners(),this._activateChildren(!1)}start(){this._onTTFLoaded(),this.node.on(Ex.ANCHOR_CHANGED,this._updateRichTextPosition,this)}onRestore(){}onDestroy(){for(const e of this._segments)e.node.removeFromParent(),e.type===Yz?$z.put(e):e.type===Kz&&Qz.put(e);this.node.off(Ex.ANCHOR_CHANGED,this._updateRichTextPosition,this),this.node.off(Ex.LAYER_CHANGED,this._applyLayer,this)}_addEventListeners(){this.node.on(Ex.TOUCH_END,this._onTouchEnded,this)}_removeEventListeners(){this.node.off(Ex.TOUCH_END,this._onTouchEnded,this)}_updateLabelSegmentTextAttributes(){this._segments.forEach((e=>{this._applyTextAttribute(e)}))}_createFontLabel(e){return Zz(Yz,e)}_createImage(e){return Zz(Kz,e)}_onTTFLoaded(){this._font,this._layoutDirty=!0,this._updateRichText()}SplitLongStringApproximatelyIn2048(e,t){const n=[];if(this._calculateSize(t,e).x<2048)n.push(e);else{const i=e.split("\n");for(let e=0;e<i.length;e++)if(this._calculateSize(t,i[e]).x<2048)n.push(i[e]);else{const s=this.splitLongStringOver2048(i[e],t);n.push(...s)}}return n}splitLongStringOver2048(e,t){const n=[],i=e;let s=0,o=i.length/2,r=i.substring(s,o),a=i.substring(o),c=this._calculateSize(t,r),l=this._calculateSize(t,a);const h=1*this.maxWidth;for(;c.x>h;){if(o/=2,o<1){o*=2;break}r=r.substring(s,o),a=i.substring(o),c=this._calculateSize(t,r)}let u=1e3,_=1;for(;u&&s<e.length;){for(;u&&c.x<h;){const e=NO(a);e&&e.length>0&&(_=e[0].length),o+=_,r=i.substring(s,o),a=i.substring(o),c=this._calculateSize(t,r),u--}for(;u&&r.length>=2&&c.x>h;)o-=_,r=i.substring(s,o),c=this._calculateSize(t,r),_=1,u--;if(r.length>=2){const e=MO(r);e&&e.length>0&&r!==e[0]&&(o-=e[0].length,r=i.substring(s,o))}if(n.push(r),s=o,o+=r.length,r=i.substring(s,o),a=i.substring(o),l=this._calculateSize(t,a),u--,l.x<2048){s=e.length,o=e.length,r=a,n.push(r);break}c=this._calculateSize(t,r)}return n}_measureText(e,t){const n=t=>this._calculateSize(e,t).width;return t?n(t):n}_calculateSize(e,t){let n;return 0===this._labelSegmentsCache.length?(n=this._createFontLabel(t),this._labelSegmentsCache.push(n)):(n=this._labelSegmentsCache[0],n.node.getComponent(fL).string=t),n.styleIndex=e,this._applyTextAttribute(n),n.node._uiProps.uiTransformComp.contentSize}_onTouchEnded(e){const t=this.node.getComponents(Gh);for(const n of this._segments){const i=n.clickHandler,s=n.clickParam;i&&this._containsTouchLocation(n,e.touch.getUILocation())&&(t.forEach((t=>{const n=t[i];t.enabledInHierarchy&&n&&n.call(t,e,s)})),e.propagationStopped=!0)}}_containsTouchLocation(e,t){const n=e.node.getComponent(PN);return!!n&&n.getBoundingBoxToWorld().contains(t)}_resetState(){const e=this.node.children;for(let t=e.length-1;t>=0;t--){const n=e[t];if(n.name===Yz||n.name===Kz){n.parent===this.node?n.parent=null:e.splice(t,1);const i=Jz(n.name);i.node=n,n.name===Yz?(i.comp=n.getComponent(fL),$z.put(i)):(i.comp=n.getComponent(kF),Qz.put(i)),this._labelChildrenNum--}}this._segments.length=0,this._labelSegmentsCache.length=0,this._linesWidth.length=0,this._lineOffsetX=0,this._lineCount=1,this._labelWidth=0,this._labelHeight=0,this._layoutDirty=!0}_activateChildren(e){for(let t=this.node.children.length-1;t>=0;t--){const n=this.node.children[t];n.name!==Yz&&n.name!==Kz||(n.active=e)}}_addLabelSegment(e,t){let n;if(0===this._labelSegmentsCache.length)n=this._createFontLabel(e);else{n=this._labelSegmentsCache.pop();const t=n.node.getComponent(fL);t&&(t.string=e)}const i=n.comp;return i.verticalAlign!==this._verticalAlign&&(i.verticalAlign=this._verticalAlign),n.styleIndex=t,n.lineCount=this._lineCount,n.node._uiProps.uiTransformComp.setAnchorPoint(0,0),n.node.layer=this.node.layer,this.node.insertChild(n.node,this._labelChildrenNum++),this._applyTextAttribute(n),this._segments.push(n),n}_updateRichTextWithMaxWidth(e,t,n){let i,s=t;if(this._lineOffsetX>0&&s+this._lineOffsetX>this._maxWidth){let t=0;for(;this._lineOffsetX<=this._maxWidth;){const i=this._getFirstWordLen(e,t,e.length),o=e.substr(t,i),r=this._measureText(n,o);if(!(this._lineOffsetX+r<=this._maxWidth)){if(t>0){const i=e.substr(0,t);this._addLabelSegment(i,n),e=e.substr(t,e.length),s=this._measureText(n,e)}this._updateLineInfo();break}this._lineOffsetX+=r,t+=i}}if(s>this._maxWidth){const t=LO(e,s,this._maxWidth,this._measureText(n));for(let e=0;e<t.length;++e){const s=t[e];i=this._addLabelSegment(s,n);const o=i.node._uiProps.uiTransformComp.contentSize;this._lineOffsetX+=o.width,t.length>1&&e<t.length-1&&this._updateLineInfo()}}else this._lineOffsetX+=s,this._addLabelSegment(e,n)}_isLastComponentCR(e){return e.length-1===e.lastIndexOf("\n")}_updateLineInfo(){this._linesWidth.push(this._lineOffsetX),this._lineOffsetX=0,this._lineCount++}_needsUpdateTextLayout(e){if(this._layoutDirty||!this._textArray||!e)return!0;if(this._textArray.length!==e.length)return!0;for(let t=0;t<this._textArray.length;t++){const n=this._textArray[t],i=e[t];if(n.text!==i.text)return!0;{const e=n.style,t=i.style;if(e){if(t){if(!!t.outline!=!!e.outline)return!0;if(e.size!==t.size||e.italic!==t.italic||e.isImage!==t.isImage)return!0;if(e.src!==t.src||e.imageAlign!==t.imageAlign||e.imageHeight!==t.imageHeight||e.imageWidth!==t.imageWidth||e.imageOffset!==t.imageOffset)return!0}else if(e.size||e.italic||e.isImage||e.outline)return!0}else if(t&&(t.size||t.italic||t.isImage||t.outline))return!0}}return!1}_addRichTextImageElement(e){if(!e.style)return;const t=e.style,n=t.src,i=this._imageAtlas&&n&&this._imageAtlas.getSpriteFrame(n);if(i){const e=this._createImage(i);switch(e.comp,t.imageAlign){case"top":e.node._uiProps.uiTransformComp.setAnchorPoint(0,1);break;case"center":e.node._uiProps.uiTransformComp.setAnchorPoint(0,.5);break;default:e.node._uiProps.uiTransformComp.setAnchorPoint(0,0)}t.imageOffset&&(e.imageOffset=t.imageOffset),e.node.layer=this.node.layer,this.node.insertChild(e.node,this._labelChildrenNum++),this._segments.push(e);const n=i.rect.clone();let s=1,o=n.width,r=n.height;const a=t.imageWidth||0,c=t.imageHeight||0;c>0?(s=c/r,o*=s,r*=s):(s=this._lineHeight/r,o*=s,r*=s),a>0&&(o=a),this._maxWidth>0?(this._lineOffsetX+o>this._maxWidth&&this._updateLineInfo(),this._lineOffsetX+=o):(this._lineOffsetX+=o,this._lineOffsetX>this._labelWidth&&(this._labelWidth=this._lineOffsetX)),e.node._uiProps.uiTransformComp.setContentSize(o,r),e.lineCount=this._lineCount,e.clickHandler="",e.clickParam="";const l=t.event;l&&(e.clickHandler=l.click,e.clickParam=l.param)}else D(4400)}_updateRichText(){if(!this.enabledInHierarchy)return;const e=Xz.parse(this._string);if(!this._needsUpdateTextLayout(e))return this._textArray=e.slice(),void this._updateLabelSegmentTextAttributes();this._textArray=e.slice(),this._resetState();let t,n=!1;for(let e=0;e<this._textArray.length;++e){const i=this._textArray[e];let s=i.text;if(void 0===s)continue;if(""===s){if(i.style&&i.style.isNewLine){this._updateLineInfo();continue}if(i.style&&i.style.isImage&&this._imageAtlas){this._addRichTextImageElement(i);continue}}s=this.SplitLongStringApproximatelyIn2048(s,e).join("\n");const o=s.split("\n");for(let i=0;i<o.length;++i){const r=o[i];if(""!==r)if(n=!1,this._maxWidth>0){const t=this._measureText(e,r);this._updateRichTextWithMaxWidth(r,t,e),o.length>1&&i<o.length-1&&this._updateLineInfo()}else t=this._addLabelSegment(r,e),this._lineOffsetX+=t.node._uiProps.uiTransformComp.width,this._lineOffsetX>this._labelWidth&&(this._labelWidth=this._lineOffsetX),o.length>1&&i<o.length-1&&this._updateLineInfo();else{if(this._isLastComponentCR(s)&&i===o.length-1)continue;this._updateLineInfo(),n=!0}}}n||this._linesWidth.push(this._lineOffsetX),this._maxWidth>0&&(this._labelWidth=this._maxWidth),this._labelHeight=(this._lineCount+xO)*this._lineHeight,this.node._uiProps.uiTransformComp.setContentSize(this._labelWidth,this._labelHeight),this._updateRichTextPosition(),this._layoutDirty=!1}_getFirstWordLen(e,t,n){let i=e.charAt(t);if(IO(i)||RO(i))return 1;let s=1;for(let o=t+1;o<n&&(i=e.charAt(o),!RO(i)&&!IO(i));++o)s++;return s}_updateRichTextPosition(){let e=0,t=1;const n=this._lineCount,i=this.node._uiProps.uiTransformComp,s=i.anchorX,o=i.anchorY;for(let i=0;i<this._segments.length;++i){const r=this._segments[i],a=r.lineCount;a>t&&(e=0,t=a);let c=this._labelWidth*(.5*this._horizontalAlign-s);switch(this._horizontalAlign){case cL.LEFT:break;case cL.CENTER:c-=this._linesWidth[a-1]/2;break;case cL.RIGHT:c-=this._linesWidth[a-1]}const l=r.node.position;if(r.node.setPosition(e+c,this._lineHeight*(n-a)-this._labelHeight*o,l.z),a===t&&(e+=r.node._uiProps.uiTransformComp.width),r.node.getComponent(kF)){const e=r.node.position.clone(),t=this._lineHeight,n=this._lineHeight*(1+xO);switch(r.node._uiProps.uiTransformComp.anchorY){case 1:e.y+=t+(n-t)/2;break;case.5:e.y+=n/2;break;default:e.y+=(n-t)/2}if(r.imageOffset){const t=r.imageOffset.split(",");if(1===t.length&&t[0]){const n=parseFloat(t[0]);Number.isInteger(n)&&(e.y+=n)}else if(2===t.length){const n=parseFloat(t[0]),i=parseFloat(t[1]);Number.isInteger(n)&&(e.x+=n),Number.isInteger(i)&&(e.y+=i)}}r.node.position=e}const h=r.node.getComponent(qB);if(h){const e=r.node.position.clone();e.y-=h.width,r.node.position=e}}}_convertLiteralColorValue(e){const t=e.toUpperCase();return dn[t]?dn[t]:(new dn).fromHEX(e)}_applyTextAttribute(e){const t=e.node.getComponent(fL);if(!t)return;this._resetLabelState(t);const n=e.styleIndex;let i;if(this._textArray[n]&&(i=this._textArray[n].style),i){if(t.color=this._convertLiteralColorValue(i.color||"white"),t.isBold=!!i.bold,t.isItalic=!!i.italic,t.isUnderline=!!i.underline,i.outline){let t=e.node.getComponent(qB);t||(t=e.node.addComponent(qB)),t.color=this._convertLiteralColorValue(i.outline.color),t.width=i.outline.width}t.fontSize=i.size||this._fontSize,e.clickHandler="",e.clickParam="";const n=i.event;n&&(e.clickHandler=n.click||"",e.clickParam=n.param||"")}t.cacheMode=this._cacheMode,this._font instanceof nO&&!this._isSystemFontUsed?t.font=this._font:t.fontFamily=this._fontFamily,t.useSystemFont=this._isSystemFontUsed,t.lineHeight=this._lineHeight,t.updateRenderData(!0);const s=t._assembler;s&&s.updateRenderData(t)}_applyLayer(){for(const e of this._segments)e.node.layer=this.node.layer}_resetLabelState(e){e.fontSize=this._fontSize,e.color=dn.WHITE,e.isBold=!1,e.isItalic=!1,e.isUnderline=!1}},Wz.HorizontalAlign=cL,Wz.VerticalAlign=lL,ac((Dz=qz).prototype,"string",[Xc,_z],Object.getOwnPropertyDescriptor(Dz.prototype,"string"),Dz.prototype),ac(Dz.prototype,"horizontalAlign",[dz,pz],Object.getOwnPropertyDescriptor(Dz.prototype,"horizontalAlign"),Dz.prototype),ac(Dz.prototype,"verticalAlign",[fz,mz],Object.getOwnPropertyDescriptor(Dz.prototype,"verticalAlign"),Dz.prototype),ac(Dz.prototype,"fontSize",[gz],Object.getOwnPropertyDescriptor(Dz.prototype,"fontSize"),Dz.prototype),ac(Dz.prototype,"fontFamily",[vz],Object.getOwnPropertyDescriptor(Dz.prototype,"fontFamily"),Dz.prototype),ac(Dz.prototype,"font",[yz,xz],Object.getOwnPropertyDescriptor(Dz.prototype,"font"),Dz.prototype),ac(Dz.prototype,"useSystemFont",[Sz,Cz],Object.getOwnPropertyDescriptor(Dz.prototype,"useSystemFont"),Dz.prototype),ac(Dz.prototype,"cacheMode",[Ez,Tz],Object.getOwnPropertyDescriptor(Dz.prototype,"cacheMode"),Dz.prototype),ac(Dz.prototype,"maxWidth",[bz],Object.getOwnPropertyDescriptor(Dz.prototype,"maxWidth"),Dz.prototype),ac(Dz.prototype,"lineHeight",[Az],Object.getOwnPropertyDescriptor(Dz.prototype,"lineHeight"),Dz.prototype),ac(Dz.prototype,"imageAtlas",[Pz,wz],Object.getOwnPropertyDescriptor(Dz.prototype,"imageAtlas"),Dz.prototype),ac(Dz.prototype,"handleTouchEvent",[Iz],Object.getOwnPropertyDescriptor(Dz.prototype,"handleTouchEvent"),Dz.prototype),Oz=ac(Dz.prototype,"_lineHeight",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 40}}),Nz=ac(Dz.prototype,"_string",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"<color=#00ff00>Rich</color><color=#0fffff>Text</color>"}}),Mz=ac(Dz.prototype,"_horizontalAlign",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return cL.LEFT}}),Lz=ac(Dz.prototype,"_verticalAlign",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return lL.TOP}}),Bz=ac(Dz.prototype,"_fontSize",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 40}}),Fz=ac(Dz.prototype,"_maxWidth",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),zz=ac(Dz.prototype,"_fontFamily",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"Arial"}}),Uz=ac(Dz.prototype,"_font",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Gz=ac(Dz.prototype,"_isSystemFontUsed",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Vz=ac(Dz.prototype,"_userDefinedFont",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Hz=ac(Dz.prototype,"_cacheMode",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return uL.NONE}}),kz=ac(Dz.prototype,"_imageAtlas",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),jz=ac(Dz.prototype,"_handleTouchEvent",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Rz=Dz))||Rz)||Rz)||Rz)||Rz)||Rz));var tU;u.RichText=eU;let nU=function(t){return e({UIMeshRenderer:t,UIModelComponent:t}),t}(mc("cc.UIMeshRenderer")(tU=Mc()(tU=vc(110)(tU=Rc()(tU=Ic(tU=class extends Gh{constructor(...e){super(...e),this._modelComponent=null,this.stencilStage=AN.DISABLED}get modelComponent(){return this._modelComponent}__preload(){this.node._uiProps.uiComp=this}onLoad(){this.node._uiProps.uiTransformComp||this.node.addComponent("cc.UITransform"),this._modelComponent=this.getComponent("cc.RenderableComponent"),this._modelComponent||console.warn(`node '${this.node&&this.node.name}' doesn't have any renderable component`)}onDestroy(){this.node._uiProps.uiComp===this&&(this.node._uiProps.uiComp=null),this._modelComponent=this.getComponent("cc.RenderableComponent"),this._modelComponent&&(this._modelComponent._sceneGetter=null)}updateAssembler(e){if(this._modelComponent){const t=this._modelComponent._collectModels();this._modelComponent._detachFromScene();for(let n=0;n<t.length;n++)t[n].enabled&&e.commitModel(this,t[n],this._modelComponent.material);return!0}return!1}postUpdateAssembler(e){}update(){this._fitUIRenderQueue()}_fitUIRenderQueue(){if(!this._modelComponent)return;const e=this._modelComponent.sharedMaterials.length;for(let t=0;t<e;t++){const e=this._modelComponent.getMaterialInstance(t);if(null==e)continue;const n=e.passes,i=n.length;for(let t=0;t<i;t++)n[t]._priority=tp.MAX-11,e.recompileShaders({CC_FORCE_FORWARD_SHADING:!0},t)}}markForUpdateRenderData(e=!0){}setNodeDirty(){}setTextureDirty(){}})||tU)||tU)||tU)||tU)||tU);u.UIMeshRenderer=nU;const iU=Zd.Enum.NONE|Zd.Enum.UI_3D;class sU{get native(){return this._nativeObj}get inputAssembler(){return this._inputAssembler}set inputAssembler(e){this._inputAssembler=e,this._nativeObj.inputAssembler=e}get descriptorSet(){return this._descriptorSet}set descriptorSet(e){this._descriptorSet=e,this._nativeObj.descriptorSet=e}get visFlags(){return this._visFlags}set visFlags(e){this._visFlags=e,this._nativeObj.visFlags=e}get passes(){return this._passes}get shaders(){return this._shaders}constructor(){this.bufferBatch=null,this.camera=null,this.renderScene=null,this.model=null,this.texture=null,this.sampler=null,this.useLocalData=null,this.isStatic=!1,this.textureHash=0,this.samplerHash=0,this._passes=[],this._shaders=[],this._visFlags=iU,this._inputAssembler=null,this._descriptorSet=null,this._nativeObj=new Aa,this._nativeObj.visFlags=this._visFlags}destroy(e){this._passes=[],this._nativeObj=null}clear(){this.bufferBatch=null,this.inputAssembler=null,this.descriptorSet=null,this.camera=null,this.texture=null,this.sampler=null,this.textureHash=0,this.samplerHash=0,this.model=null,this.isStatic=!1,this.useLocalData=null,this.visFlags=iU,this.renderScene=null}fillPasses(e,t,n,i,s,o,r){if(e){const r=e.passes;if(!r)return;let a=0,c=!1;this._shaders.length=r.length;for(let e=0;e<r.length;e++){this._passes[e]||(this._passes[e]=new Wm(u.director.root));const l=r[e],h=this._passes[e];l.update(),t||(t=l.depthStencilState,n=0),i||(i=l.blendState,s=0),-1===s&&(s=0),a=n<<16|s,h._initPassFromTarget(l,t,i,a),this._shaders[e]=h.getShaderVariant(o),c=!0}if(c){const e=[],t=this._passes;for(let n=0;n<t.length;n++)e.push(t[n].native);this._nativeObj.passes=e,this._nativeObj.shaders=this._shaders}}}}var oU,rU,aU,cU,lU,hU,uU;e("UIDrawBatch",sU);let _U=function(t){return e({UIStaticBatch:t,UIStaticBatchComponent:t}),t}((oU=mc("cc.UIStaticBatch"),rU=Mc(),aU=Rc(),cU=vc(110),lU=Bc(),oU(hU=rU(hU=aU(hU=cU((ac((uU=class extends KN{constructor(...e){super(...e),this._init=!1,this._bufferAccessor=null,this._dirty=!0,this._uiDrawBatchList=[]}get color(){return this._color}set color(e){this._color!==e&&this._color.set(e)}get drawBatchList(){return this._uiDrawBatchList}onLoad(){}onDestroy(){}updateAssembler(e){}postUpdateAssembler(e){}markAsDirty(){}_requireDrawBatch(){const e=new sU;return e.isStatic=!0,this._uiDrawBatchList.push(e),e}_clearData(){if(this._bufferAccessor){this._bufferAccessor.reset();const e=this._getBatcher();for(let t=0;t<this._uiDrawBatchList.length;t++)this._uiDrawBatchList[t].destroy(e)}this._uiDrawBatchList.length=0,this._init=!1}_getBatcher(){return Sw.root&&Sw.root.batcher2D?Sw.root.batcher2D:(D(9301),null)}}).prototype,"color",[el,lU],Object.getOwnPropertyDescriptor(uU.prototype,"color"),uU.prototype),hU=uU))||hU)||hU)||hU)||hU));var dU,pU,fU,mU,gU,vU,yU,xU,SU,CU,EU,TU,bU;let AU=e("LabelShadow",(dU=mc("cc.LabelShadow"),pU=Mc(),fU=vc(110),mU=Rc(),gU=gc(fL),vU=Uc(),yU=Uc(),xU=Uc(),dU(SU=pU(SU=fU(SU=mU(SU=gU(SU=Ic((EU=ac((CU=class extends Gh{constructor(...e){super(...e),rc(this,"_color",EU,this),rc(this,"_offset",TU,this),rc(this,"_blur",bU,this)}get color(){return this._color}set color(e){this._color!==e&&(this._color.set(e),this._updateRenderData())}get offset(){return this._offset}set offset(e){this._offset=e,this._updateRenderData()}get blur(){return this._blur}set blur(e){this._blur=e,this._updateRenderData()}onEnable(){this._updateRenderData()}onDisable(){this._updateRenderData()}_updateRenderData(){const e=this.node.getComponent(fL);e&&e.updateRenderData(!0)}}).prototype,"_color",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new dn(0,0,0,255)}}),TU=ac(CU.prototype,"_offset",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Bn(2,2)}}),bU=ac(CU.prototype,"_blur",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 2}}),ac(CU.prototype,"color",[vU],Object.getOwnPropertyDescriptor(CU.prototype,"color"),CU.prototype),ac(CU.prototype,"offset",[yU],Object.getOwnPropertyDescriptor(CU.prototype,"offset"),CU.prototype),ac(CU.prototype,"blur",[xU],Object.getOwnPropertyDescriptor(CU.prototype,"blur"),CU.prototype),SU=CU))||SU)||SU)||SU)||SU)||SU)||SU));var PU,wU,IU,RU,DU,OU,NU,MU;let LU=function(t){return e({UIOpacity:t,UIOpacityComponent:t}),t}((PU=mc("cc.UIOpacity"),wU=Mc(),IU=vc(110),RU=Rc(),DU=Uc(),PU(OU=wU(OU=IU(OU=RU(OU=Ic(OU=yc((ac((NU=class extends Gh{constructor(...e){super(...e),rc(this,"_opacity",MU,this)}get opacity(){return this._opacity}set opacity(e){this._opacity!==e&&(e=at(e,0,255),this._opacity=e,this.node._uiProps.localOpacity=e/255)}onEnable(){this.node._uiProps.localOpacity=this._opacity/255}onDisable(){this.node._uiProps.localOpacity=1}}).prototype,"opacity",[Lc,DU],Object.getOwnPropertyDescriptor(NU.prototype,"opacity"),NU.prototype),MU=ac(NU.prototype,"_opacity",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 255}}),OU=NU))||OU)||OU)||OU)||OU)||OU)||OU));u.MaskComponent=DB,ke.setClassAlias(DB,"cc.MaskComponent"),u.LabelComponent=fL,ke.setClassAlias(fL,"cc.LabelComponent"),u.LabelOutlineComponent=qB,ke.setClassAlias(qB,"cc.LabelOutlineComponent"),u.RichTextComponent=eU,ke.setClassAlias(eU,"cc.RichTextComponent"),u.SpriteComponent=kF,ke.setClassAlias(kF,"cc.SpriteComponent"),u.UIModelComponent=nU,ke.setClassAlias(nU,"cc.UIModelComponent"),u.GraphicsComponent=tB,ke.setClassAlias(tB,"cc.GraphicsComponent"),ke.setClassAlias(_U,"cc.UIStaticBatchComponent"),ke.setClassAlias(LU,"cc.UIOpacityComponent");class BU{constructor(e,t,n){this.i=void 0,this.x=void 0,this.y=void 0,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1,this.i=e,this.x=t,this.y=n}}function FU(e,t,n,i,s){let o=0,r=null;if(s===function(e,t,n,i){let s=0;for(let o=t,r=n-i;o<n;o+=i)s+=(e[r]-e[o])*(e[o+1]+e[r+1]),r=o;return s}(e,t,n,i)>0)for(o=t;o<n;o+=i)r=tG(o,e[o],e[o+1],r);else for(o=n-i;o>=t;o-=i)r=tG(o,e[o],e[o+1],r);return r&&QU(r,r.next)&&(nG(r),r=r.next),r}function zU(e,t=null){if(!e)return e;t||(t=e);let n=e,i=!1;do{if(i=!1,n.steiner||!QU(n,n.next)&&0!==$U(n.prev,n,n.next))n=n.next;else{if(nG(n),n=t=n.prev,n===n.next)return null;i=!0}}while(i||n!==t);return t}function UU(e,t,n,i,s,o,r=0){if(!e)return;!r&&o&&function(e,t,n,i){let s=e;do{null===s.z&&(s.z=qU(s.x,s.y,t,n,i)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next}while(s!==e);s.prevZ.nextZ=null,s.prevZ=null,function(e){let t=0,n=null,i=null,s=null,o=null,r=0,a=0,c=0,l=1;do{for(n=e,e=null,o=null,r=0;n;){for(r++,i=n,a=0,t=0;t<l&&(a++,i=i.nextZ,i);t++);for(c=l;a>0||c>0&&i;)0===a?(s=i,i=i.nextZ,c--):0!==c&&i?n.z<=i.z?(s=n,n=n.nextZ,a--):(s=i,i=i.nextZ,c--):(s=n,n=n.nextZ,a--),o?o.nextZ=s:e=s,s.prevZ=o,o=s;n=i}o.nextZ=null,l*=2}while(r>1)}(s)}(e,i,s,o);let a=e,c=null,l=null;for(;e.prev!==e.next;)if(c=e.prev,l=e.next,o?VU(e,i,s,o):GU(e))t.push(c.i/n),t.push(e.i/n),t.push(l.i/n),nG(e),e=l.next,a=l.next;else if((e=l)===a){r?1===r?UU(e=HU(e,t,n),t,n,i,s,o,2):2===r&&kU(e,t,n,i,s,o):UU(zU(e),t,n,i,s,o,1);break}}function GU(e){const t=e.prev,n=e,i=e.next;if($U(t,n,i)>=0)return!1;let s=e.next.next;for(;s!==e.prev;){if(YU(t.x,t.y,n.x,n.y,i.x,i.y,s.x,s.y)&&$U(s.prev,s,s.next)>=0)return!1;s=s.next}return!0}function VU(e,t,n,i){const s=e.prev,o=e,r=e.next;if($U(s,o,r)>=0)return!1;const a=s.x<o.x?s.x<r.x?s.x:r.x:o.x<r.x?o.x:r.x,c=s.y<o.y?s.y<r.y?s.y:r.y:o.y<r.y?o.y:r.y,l=s.x>o.x?s.x>r.x?s.x:r.x:o.x>r.x?o.x:r.x,h=s.y>o.y?s.y>r.y?s.y:r.y:o.y>r.y?o.y:r.y,u=qU(a,c,t,n,i),_=qU(l,h,t,n,i);let d=e.nextZ;for(;d&&d.z<=_;){if(d!==e.prev&&d!==e.next&&YU(s.x,s.y,o.x,o.y,r.x,r.y,d.x,d.y)&&$U(d.prev,d,d.next)>=0)return!1;d=d.nextZ}for(d=e.prevZ;d&&d.z>=u;){if(d!==e.prev&&d!==e.next&&YU(s.x,s.y,o.x,o.y,r.x,r.y,d.x,d.y)&&$U(d.prev,d,d.next)>=0)return!1;d=d.prevZ}return!0}function HU(e,t,n){let i=e;do{const s=i.prev,o=i.next.next;!QU(s,o)&&JU(s,i,i.next,o)&&ZU(s,o)&&ZU(o,s)&&(t.push(s.i/n),t.push(i.i/n),t.push(o.i/n),nG(i),nG(i.next),i=e=o),i=i.next}while(i!==e);return i}function kU(e,t,n,i,s,o){let r=e;do{let e=r.next.next;for(;e!==r.prev;){if(r.i!==e.i&&KU(r,e)){let a=eG(r,e);return r=zU(r,r.next),a=zU(a,a.next),UU(r,t,n,i,s,o),void UU(a,t,n,i,s,o)}e=e.next}r=r.next}while(r!==e)}function jU(e,t){return e.x-t.x}function WU(e,t){if(t=function(e,t){let n=t;const i=e.x,s=e.y;let o=-1/0,r=null;do{if(s<=n.y&&s>=n.next.y){const e=n.x+(s-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(e<=i&&e>o){if(o=e,e===i){if(s===n.y)return n;if(s===n.next.y)return n.next}r=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!r)return null;if(i===o)return r.prev;const a=r,c=r.x,l=r.y;let h,u=1/0;for(n=r.next;n!==a;)i>=n.x&&n.x>=c&&YU(s<l?i:o,s,c,l,s<l?o:i,s,n.x,n.y)&&(h=Math.abs(s-n.y)/(i-n.x),(h<u||h===u&&n.x>r.x)&&ZU(n,e)&&(r=n,u=h)),n=n.next;return r}(e,t)){const n=eG(t,e);zU(n,n.next)}}function qU(e,t,n,i,s){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)/s)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)/s)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function XU(e){let t=e,n=e;do{t.x<n.x&&(n=t),t=t.next}while(t!==e);return n}function YU(e,t,n,i,s,o,r,a){return(s-r)*(t-a)-(e-r)*(o-a)>=0&&(e-r)*(i-a)-(n-r)*(t-a)>=0&&(n-r)*(o-a)-(s-r)*(i-a)>=0}function KU(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&JU(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&ZU(e,t)&&ZU(t,e)&&function(e,t){let n=e,i=!1;const s=(e.x+t.x)/2,o=(e.y+t.y)/2;do{n.y>o!=n.next.y>o&&s<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==e);return i}(e,t)}function $U(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function QU(e,t){return e.x===t.x&&e.y===t.y}function JU(e,t,n,i){return!!(QU(e,t)&&QU(n,i)||QU(e,i)&&QU(n,t))||$U(e,t,n)>0!=$U(e,t,i)>0&&$U(n,i,e)>0!=$U(n,i,t)>0}function ZU(e,t){return $U(e.prev,e,e.next)<0?$U(e,t,e.next)>=0&&$U(e,e.prev,t)>=0:$U(e,t,e.prev)<0||$U(e,e.next,t)<0}function eG(e,t){const n=new BU(e.i,e.x,e.y),i=new BU(t.i,t.x,t.y),s=e.next,o=t.prev;return e.next=t,t.prev=e,n.next=s,s.prev=n,i.next=n,n.prev=i,o.next=i,i.prev=o,i}function tG(e,t,n,i){const s=new BU(e,t,n);return i?(s.next=i.next,s.prev=i,i.next.prev=s,i.next=s):(s.prev=s,s.next=s),s}function nG(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function iG(e,t,n){n=n||3;const i=t?t.length:0,s=i?t[0]*n:e.length;let o=FU(e,0,s,n,!0);const r=[];if(!o)return r;let a=0,c=0,l=0,h=0,u=0,_=0,d=0;if(i&&(o=function(e,t,n,i){const s=[];let o=0,r=0,a=0,c=0,l=null;for(o=0,r=t.length;o<r;o++)a=t[o]*i,c=o<r-1?t[o+1]*i:e.length,l=FU(e,a,c,i,!1),l&&(l===l.next&&(l.steiner=!0),s.push(XU(l)));if(s.sort(jU),!n)return n;for(o=0;o<s.length;o++)WU(s[o],n),n=zU(n,n.next);return n}(e,t,o,n)),e.length>80*n){a=l=e[0],c=h=e[1];for(let t=n;t<s;t+=n)u=e[t],_=e[t+1],u<a&&(a=u),_<c&&(c=_),u>l&&(l=u),_>h&&(h=_);d=Math.max(l-a,h-c)}return UU(o,r,n,a,c,d),r}const sG=Math.PI,oG=Math.min,rG=Math.max,aG=Math.ceil,cG=Math.acos,lG=Math.cos,hG=Math.sin,uG=Math.atan2;let _G=null,dG=null;const pG=new dn,fG=[];for(let e=0;e<4;e++)fG.push(new gn);function mG(e,t,n){return e<t?t:e>n?n:e}const gG={useModel:!0,updateRenderData(e){},fillBuffers(e,t){},renderIA(e,t){},getRenderData(e,t){if(!dG)return null;const n=dG.getRenderDataList();let i=n[dG.dataOffset];if(!i)return null;let s=i;const o=s?s.vertexStart+t:0;return(o>65535||3*o>131070)&&(++dG.dataOffset,dG.dataOffset<n.length?i=n[dG.dataOffset]:(i=dG.requestRenderData(),n[dG.dataOffset]=i),s=i),s&&s.vertexCount<o&&s.request(t,3*t),i},stroke(e){dn.copy(pG,e.strokeColor),e.impl&&(this._flattenPaths(e.impl),this._expandStroke(e),e.impl.updatePathOffset=!0,this.end(e))},fill(e){dn.copy(pG,e.fillColor),this._expandFill(e),e.impl&&(e.impl.updatePathOffset=!0),this.end(e)},end(e){e.markForUpdateRenderData()},_expandStroke(e){const t=.5*e.lineWidth,n=e.lineCap,i=e.lineJoin,s=e.miterLimit;if(dG=e.impl,!dG)return;const o=function(e,t,n){const i=2*cG(e/(e+n));return rG(2,aG(t/i))}(t,sG,dG.tessTol);this._calculateJoins(dG,t,i,s);const r=dG.paths;let a=0;for(let e=dG.pathOffset,t=dG.pathLength;e<t;e++){const t=r[e],s=t.points.length;i===dL.ROUND?a+=2*(s+t.bevel*(o+2)+1):a+=2*(s+5*t.bevel+1),t.closed||(n===_L.ROUND?a+=2*(2*o+2):a+=12)}const c=_G=this.getRenderData(e,a);if(!c)return;const l=c.vData,h=c.iData;for(let e=dG.pathOffset,s=dG.pathLength;e<s;e++){const s=r[e],a=s.points,u=a.length,_=c.vertexStart;let d,p,f=0,m=0;const g=s.closed;if(g?(d=a[u-1],p=a[0],f=0,m=u):(d=a[0],p=a[1],f=1,m=u-1),p=p||d,!g){const e=new AL(p.x,p.y);e.subtract(d),e.normalize();const i=e.x,s=e.y;n===_L.BUTT?this._buttCapStart(d,i,s,t,0):n===_L.SQUARE?this._buttCapStart(d,i,s,t,t):n===_L.ROUND&&this._roundCapStart(d,i,s,t,o)}for(let e=f;e<m;++e)i===dL.ROUND?this._roundJoin(d,p,t,t,o):0!=(p.flags&(pL.PT_BEVEL|pL.PT_INNERBEVEL))?this._bevelJoin(d,p,t,t):(this._vSet(p.x+p.dmx*t,p.y+p.dmy*t,1),this._vSet(p.x-p.dmx*t,p.y-p.dmy*t,-1)),d=p,p=a[e+1];if(g){const e=8*_;this._vSet(l[e],l[e+1],1),this._vSet(l[e+8],l[e+8+1],-1)}else{const e=new AL(p.x,p.y);e.subtract(d),e.normalize();const i=e.x,s=e.y;n===_L.BUTT?this._buttCapEnd(p,i,s,t,0):n===_L.SQUARE?this._buttCapEnd(p,i,s,t,t):n===_L.ROUND&&this._roundCapEnd(p,i,s,t,o)}let v=c.indexStart;for(let e=_+2,t=c.vertexStart;e<t;e++)h[v++]=e-2,h[v++]=e-1,h[v++]=e;c.indexStart=v}_G=null,dG=null},_expandFill(e){if(dG=e.impl,!dG)return;const t=dG.paths;let n=0;for(let e=dG.pathOffset,i=dG.pathLength;e<i;e++)n+=t[e].points.length;const i=_G=this.getRenderData(e,n);if(!i)return;const s=i,o=s.vData,r=s.iData;for(let e=dG.pathOffset,n=dG.pathLength;e<n;e++){const n=t[e],a=n.points,c=a.length;if(0===c)continue;const l=i.vertexStart;for(let e=0;e<c;++e)this._vSet(a[e].x,a[e].y);let h=i.indexStart;if(n.complex){const e=[];for(let t=l,n=i.vertexStart;t<n;t++){let n=8*t;e.push(o[n++]),e.push(o[n++]),e.push(o[n++])}const t=iG(e,null,3);if(!t||0===t.length)continue;for(let e=0,n=t.length;e<n;e++)r[h++]=t[e]+l}else{const e=l;for(let t=l+2,n=s.vertexStart;t<n;t++)r[h++]=e,r[h++]=t-1,r[h++]=t}s.indexStart=h}_G=null,dG=null},_calculateJoins(e,t,n,i){let s=0;t>0&&(s=1/t);const o=e.paths;for(let t=e.pathOffset,r=e.pathLength;t<r;t++){const e=o[t],r=e.points,a=r.length;let c=r[a-1],l=r[0];e.bevel=0;for(let t=0;t<a;t++){let o=0,a=0,h=0;const u=c.dy,_=-c.dx,d=l.dy,p=-l.dx;if(l.dmx=.5*(u+d),l.dmy=.5*(_+p),o=l.dmx*l.dmx+l.dmy*l.dmy,o>1e-6){let e=1/o;e>600&&(e=600),l.dmx*=e,l.dmy*=e}a=l.dx*c.dy-c.dx*l.dy,a>0&&(l.flags|=pL.PT_LEFT),h=rG(11,oG(c.len,l.len)*s),o*h*h<1&&(l.flags|=pL.PT_INNERBEVEL),l.flags&pL.PT_CORNER&&(o*i*i<1||n===dL.BEVEL||n===dL.ROUND)&&(l.flags|=pL.PT_BEVEL),0!=(l.flags&(pL.PT_BEVEL|pL.PT_INNERBEVEL))&&e.bevel++,c=l,l=r[t+1]}}},_flattenPaths(e){const t=e.paths;for(let n=e.pathOffset,i=e.pathLength;n<i;n++){const e=t[n],i=e.points;let s=i[i.length-1],o=i[0];i.length>2&&s.equals(o)&&(e.closed=!0,i.pop(),s=i[i.length-1]);for(let e=0,t=i.length;e<t;e++){const t=new AL(o.x,o.y);t.subtract(s),s.len=t.length(),(t.x||t.y)&&t.normalize(),s.dx=t.x,s.dy=t.y,s=o,o=i[e+1]}}},_chooseBevel(e,t,n,i){const s=n.x,o=n.y;let r=0,a=0,c=0,l=0;return 0!==e?(r=s+t.dy*i,a=o-t.dx*i,c=s+n.dy*i,l=o-n.dx*i):(r=c=s+n.dmx*i,a=l=o+n.dmy*i),[r,a,c,l]},_buttCapStart(e,t,n,i,s){const o=e.x-t*s,r=e.y-n*s,a=n,c=-t;this._vSet(o+a*i,r+c*i,1),this._vSet(o-a*i,r-c*i,-1)},_buttCapEnd(e,t,n,i,s){const o=e.x+t*s,r=e.y+n*s,a=n,c=-t;this._vSet(o+a*i,r+c*i,1),this._vSet(o-a*i,r-c*i,-1)},_roundCapStart(e,t,n,i,s){const o=e.x,r=e.y,a=n,c=-t;for(let e=0;e<s;e++){const l=e/(s-1)*sG,h=lG(l)*i,u=hG(l)*i;this._vSet(o-a*h-t*u,r-c*h-n*u,1),this._vSet(o,r,0)}this._vSet(o+a*i,r+c*i,1),this._vSet(o-a*i,r-c*i,-1)},_roundCapEnd(e,t,n,i,s){const o=e.x,r=e.y,a=n,c=-t;this._vSet(o+a*i,r+c*i,1),this._vSet(o-a*i,r-c*i,-1);for(let e=0;e<s;e++){const l=e/(s-1)*sG,h=lG(l)*i,u=hG(l)*i;this._vSet(o,r,0),this._vSet(o-a*h+t*u,r-c*h+n*u,1)}},_roundJoin(e,t,n,i,s){const o=e.dy,r=-e.dx,a=t.dy,c=-t.dx,l=t.x,h=t.y;if(0!=(t.flags&pL.PT_LEFT)){const u=this._chooseBevel(t.flags&pL.PT_INNERBEVEL,e,t,n),_=u[0],d=u[1],p=u[2],f=u[3],m=uG(-r,-o);let g=uG(-c,-a);g>m&&(g-=2*sG),this._vSet(_,d,1),this._vSet(l-o*i,t.y-r*i,-1);const v=mG(aG((m-g)/sG)*s,2,s);for(let e=0;e<v;e++){const t=m+e/(v-1)*(g-m),n=l+lG(t)*i,s=h+hG(t)*i;this._vSet(l,h,0),this._vSet(n,s,-1)}this._vSet(p,f,1),this._vSet(l-a*i,h-c*i,-1)}else{const u=this._chooseBevel(t.flags&pL.PT_INNERBEVEL,e,t,-i),_=u[0],d=u[1],p=u[2],f=u[3],m=uG(r,o);let g=uG(c,a);g<m&&(g+=2*sG),this._vSet(l+o*i,h+r*i,1),this._vSet(_,d,-1);const v=mG(aG((g-m)/sG)*s,2,s);for(let e=0;e<v;e++){const t=m+e/(v-1)*(g-m),i=l+lG(t)*n,s=h+hG(t)*n;this._vSet(i,s,1),this._vSet(l,h,0)}this._vSet(l+a*i,h+c*i,1),this._vSet(p,f,-1)}},_bevelJoin(e,t,n,i){let s=0,o=0,r=0,a=0,c=0,l=0,h=0,u=0;const _=e.dy,d=-e.dx,p=t.dy,f=-t.dx;if(t.flags&pL.PT_LEFT){const s=this._chooseBevel(t.flags&pL.PT_INNERBEVEL,e,t,n);c=s[0],l=s[1],h=s[2],u=s[3],this._vSet(c,l,1),this._vSet(t.x-_*i,t.y-d*i,-1),this._vSet(h,u,1),this._vSet(t.x-p*i,t.y-f*i,-1)}else{const c=this._chooseBevel(t.flags&pL.PT_INNERBEVEL,e,t,-i);s=c[0],o=c[1],r=c[2],a=c[3],this._vSet(t.x+_*n,t.y+d*n,1),this._vSet(s,o,-1),this._vSet(t.x+p*n,t.y+f*n,1),this._vSet(r,a,-1)}},_vSet(e,t,n=0){if(!_G)return;const i=_G;let s=8*i.vertexStart;const o=i.vData;o[s++]=e,o[s++]=t,o[s++]=0,dn.toArray(o,pG,s),s+=4,o[s++]=n,i.vertexStart++}},vG=e("graphicsAssembler",{getAssembler:()=>gG});tB.Assembler=vG;class yG{constructor(){this.char="",this.valid=!0,this.x=0,this.y=0,this.line=0,this.hash=""}}const xG=new Wn;let SG=null,CG=null;const EG=[],TG=[],bG=[],AG=[],PG=new kn,wG=new kn,IG=new Bn;let RG=null,DG=0,OG=0,NG=0,MG=0,LG=0,BG=1,FG=null,zG="",UG=0,GG=0,VG=0,HG=0,kG=0,jG=0,WG=0,qG=!1,XG=0,YG=0,KG=0;const $G={updateRenderData(e){e.renderData&&SG!==e&&(e.renderData.vertDirty&&(SG=e,CG=SG.node._uiProps.uiTransformComp,this._updateFontFamily(e),this._updateProperties(e),this._updateLabelInfo(e),this._updateContent(),SG.actualFontSize=UG,CG.setContentSize(wG),this.updateUVs(e),SG.renderData.vertDirty=!1,SG.markForUpdateRenderData(!1),SG=null,this._resetProperties()),e.spriteFrame)&&e.renderData.updateRenderData(e,e.spriteFrame)},updateUVs(e){const t=e.renderData,n=t.chunk.vb,i=t.vertexCount,s=t.data;let o=3;for(let e=0;e<i;e++){const t=s[e];n[o]=t.u,n[o+1]=t.v,o+=9}},_updateFontScale(){BG=UG/GG},_updateFontFamily(e){const t=e.font;FG=t.spriteFrame,RG=t.fntConfig,jO.fontAtlas=t.fontDefDictionary,WD.packToDynamicAtlas(e,FG)},_updateLabelInfo(e){jO.hash="",jO.margin=0},_updateProperties(e){zG=e.string.toString(),UG=e.fontSize,GG=RG?RG.fontSize:e.fontSize,VG=e.horizontalAlign,HG=e.verticalAlign,kG=e.spacingX,WG=e.overflow,jG=e._lineHeight;const t=CG.contentSize;wG.width=t.width,wG.height=t.height,WG===hL.NONE?(qG=!1,wG.width+=2*jO.margin,wG.height+=2*jO.margin):WG===hL.RESIZE_HEIGHT?(qG=!0,wG.height+=2*jO.margin):qG=e.enableWrapText,jO.lineHeight=jG,jO.fontSize=UG,this._setupBMFontOverflowMetrics()},_resetProperties(){RG=null,FG=null,jO.hash="",jO.margin=0},_updateContent(){this._updateFontScale(),this._computeHorizontalKerningForText(),this._alignText()},_computeHorizontalKerningForText(){const e=zG,t=e.length,n=RG.kerningDict,i=EG;let s=-1;for(let o=0;o<t;++o){const r=e.charCodeAt(o),a=n[s<<16|65535&r]||0;i[o]=o<t-1?a:0,s=r}},_multilineTextWrap(e){const t=zG.length;let n=0,i=0,s=0,o=0,r=0,a=0,c=0,l=null;for(let h=0;h<t;){let u=zG.charAt(h);if("\n"===u){bG.push(r),r=0,n++,i=0,s-=jG*this._getFontScale()+0,this._recordPlaceholderInfo(h,u),h++;continue}const _=e(zG,h,t);let d=a,p=c,f=r,m=i,g=!1;for(let e=0;e<_;++e){const o=h+e;if(u=zG.charAt(o),"\r"===u){this._recordPlaceholderInfo(o,u);continue}if(l=jO.fontAtlas.getLetterDefinitionForChar(u,jO),!l){this._recordPlaceholderInfo(o,u),console.log(`Can't find letter definition in texture atlas ${RG.atlasName} for letter:${u}`);continue}const a=m+l.offsetX*BG-jO.margin;if(qG&&KG>0&&i>0&&a+l.w*BG>KG&&!RO(u)){bG.push(r),r=0,n++,i=0,s-=jG*this._getFontScale()+0,g=!0;break}IG.x=a,IG.y=s-l.offsetY*BG,this._recordLetterInfo(IG,u,o,n),o+1<EG.length&&o<t-1&&(m+=EG[o+1]),m+=l.xAdvance*BG+kG,f=IG.x+l.w*BG,d<IG.y&&(d=IG.y),p>IG.y-l.h*BG&&(p=IG.y-l.h*BG)}g||(i=m,r=f,a<d&&(a=d),c>p&&(c=p),o<r&&(o=r),h+=_)}return bG.push(r),DG=n+1,OG=DG*jG*this._getFontScale(),DG>1&&(OG+=0*(DG-1)),wG.width=XG,wG.height=YG,XG<=0&&(wG.width=parseFloat(o.toFixed(2))+2*jO.margin),YG<=0&&(wG.height=parseFloat(OG.toFixed(2))+2*jO.margin),MG=wG.height,LG=0,a>0&&(MG=wG.height+a),c<-OG&&(LG=OG+c),!0},_getFirstCharLen:()=>1,_getFontScale:()=>WG===hL.SHRINK?BG:1,_getFirstWordLen(e,t,n){let i=e.charAt(t);if(IO(i)||"\n"===i||RO(i))return 1;let s=1,o=jO.fontAtlas.getLetterDefinitionForChar(i,jO);if(!o)return s;let r=o.xAdvance*BG+kG,a=0;for(let c=t+1;c<n&&(i=e.charAt(c),o=jO.fontAtlas.getLetterDefinitionForChar(i,jO),o);++c){if(a=r+o.offsetX*BG,a+o.w*BG>KG&&!RO(i)&&KG>0)return s;if(r+=o.xAdvance*BG+kG,"\n"===i||RO(i)||IO(i))break;s++}return s},_multilineTextWrapByWord(){return this._multilineTextWrap(this._getFirstWordLen)},_multilineTextWrapByChar(){return this._multilineTextWrap(this._getFirstCharLen)},_recordPlaceholderInfo(e,t){if(e>=TG.length){const e=new yG;TG.push(e)}TG[e].char=t,TG[e].hash=`${t.charCodeAt(0)}${jO.hash}`,TG[e].valid=!1},_recordLetterInfo(e,t,n,i){if(n>=TG.length){const e=new yG;TG.push(e)}const s=`${t.charCodeAt(0)}${jO.hash}`;TG[n].line=i,TG[n].char=t,TG[n].hash=s,TG[n].valid=jO.fontAtlas.getLetter(s).valid,TG[n].x=e.x,TG[n].y=e.y},_alignText(){OG=0,bG.length=0,this._multilineTextWrapByWord(),this._computeAlignmentOffset(),WG===hL.SHRINK&&UG>0&&this._isVerticalClamp()&&this._shrinkLabelToContentSize(this._isVerticalClamp),this._updateQuads()||WG===hL.SHRINK&&this._shrinkLabelToContentSize(this._isHorizontalClamp)},_scaleFontSizeDown(e){let t=!0;e||(e=.1,t=!1),UG=e,t&&this._updateContent()},_shrinkLabelToContentSize(e){let t=0,n=0|UG,i=0;for(;t<n;){i=t+n+1>>1;const s=i;if(s<=0)break;BG=s/GG,this._multilineTextWrapByWord(),this._computeAlignmentOffset(),e()?n=i-1:t=i}t>=0&&this._scaleFontSizeDown(t)},_isVerticalClamp:()=>OG>wG.height,_isHorizontalClamp(){let e=!1;for(let t=0,n=zG.length;t<n;++t){const n=TG[t];if(n.valid){const t=jO.fontAtlas.getLetterDefinitionForChar(n.char,jO);if(!t)continue;const i=n.x+t.w*BG,s=n.line;if(XG>0)if(qG){if(bG[s]>wG.width&&(i>wG.width||i<0)){e=!0;break}}else if(i>wG.width){e=!0;break}}}return e},_isHorizontalClamped(e,t){const n=bG[t],i=e>wG.width||e<0;return qG?n>wG.width&&i:i},_updateQuads(){if(!SG)return!1;const e=FG?FG.texture:jO.fontAtlas.getTexture(),t=SG.renderData;t.dataLength=0,t.resize(0,0);const n=CG.anchorPoint,i=wG,s=n.x*i.width,o=n.y*i.height;let r=!0;for(let t=0,n=zG.length;t<n;++t){const n=TG[t];if(!n.valid)continue;const i=jO.fontAtlas.getLetter(n.hash);if(!i){console.warn("Can't find letter in this bitmap-font");continue}xG.height=i.h,xG.width=i.w,xG.x=i.u,xG.y=i.v;let a=n.y+NG;if(YG>0){if(a>MG){const e=a-MG;xG.y+=e,xG.height-=e,a-=e}a-i.h*BG<LG&&WG===hL.CLAMP&&(xG.height=a<LG?0:(a-LG)/BG)}const c=n.line,l=n.x+i.w/2*BG+AG[c];if(XG>0&&this._isHorizontalClamped(l,c))if(WG===hL.CLAMP)xG.width=0;else if(WG===hL.SHRINK){if(wG.width>i.w){r=!1;break}xG.width=0}if(xG.height>0&&xG.width>0){const t=this._determineRect(),i=n.x+AG[n.line];this.appendQuad(SG,e,xG,t,i-s,a-o,BG)}}return r},appendQuad(e,t,n,i,s,o,r){},_determineRect(){const e=FG.isRotated(),t=FG.getOriginalSize(),n=FG.getRect(),i=FG.getOffset(),s=i.x+(t.width-n.width)/2,o=i.y-(t.height-n.height)/2;if(e){const e=xG.x;xG.x=n.x+n.height-xG.y-xG.height-o,xG.y=e+n.y-s,xG.y<0&&(xG.height+=o)}else xG.x+=n.x-s,xG.y+=n.y+o;return e},_computeAlignmentOffset(){switch(AG.length=0,VG){case cL.LEFT:for(let e=0;e<DG;++e)AG.push(0);break;case cL.CENTER:for(let e=0,t=bG.length;e<t;e++)AG.push((wG.width-bG[e])/2);break;case cL.RIGHT:for(let e=0,t=bG.length;e<t;e++)AG.push(wG.width-bG[e])}if(NG=wG.height,HG!==lL.TOP){const e=wG.height-OG+jG*this._getFontScale()-GG*BG;HG===lL.BOTTOM?NG-=e:NG-=e/2}},_setupBMFontOverflowMetrics(){let e=wG.width,t=wG.height;WG===hL.RESIZE_HEIGHT&&(t=0),WG===hL.NONE&&(e=0,t=0),XG=e,YG=t,PG.width=e,PG.height=t,KG=e}},QG=new dn(255,255,255,255),JG={createData:e=>e.requestRenderData(),fillBuffers(e,t){const n=e.node;QG.set(e.color),QG.a=255*n._uiProps.opacity,GD(n,0,e.renderData,QG)},appendQuad(e,t,n,i,s,o,r){const a=e.renderData;if(!a)return;const c=a.dataLength;a.dataLength+=4,a.resize(a.dataLength,a.dataLength/2*3);const l=a.data,h=t.width,u=t.height,_=n.width,d=n.height;let p=0,f=0,m=0,g=0;i?(p=n.x/h,g=(n.x+d)/h,f=(n.y+_)/u,m=n.y/u,l[c].u=p,l[c].v=m,l[c+1].u=p,l[c+1].v=f,l[c+2].u=g,l[c+2].v=m,l[c+3].u=g,l[c+3].v=f):(p=n.x/h,g=(n.x+_)/h,f=(n.y+d)/u,m=n.y/u,l[c].u=p,l[c].v=f,l[c+1].u=g,l[c+1].v=f,l[c+2].u=p,l[c+2].v=m,l[c+3].u=g,l[c+3].v=m),l[c].x=s,l[c].y=o-d*r,l[c+1].x=s+_*r,l[c+1].y=o-d*r,l[c+2].x=s,l[c+2].y=o,l[c+3].x=s+_*r,l[c+3].y=o},updateColor(e){}};Te(JG,$G);let ZG=null;const eV=be($G,{getAssemblerData:()=>(ZG||(ZG=new kO(1024,1024)),ZG.getTexture()),_updateFontFamily(e){jO.fontAtlas=ZG,jO.fontFamily=this._getFontFamily(e);const t=e.getComponent(qB);t&&t.enabled?(jO.isOutlined=!0,jO.margin=t.width,jO.out=t.color.clone(),jO.out.a=t.color.a*e.color.a/255):(jO.isOutlined=!1,jO.margin=0)},_getFontFamily(e){let t="Arial";return e.useSystemFont?t=e.fontFamily||"Arial":e.font&&(t=e.font._nativeAsset||"Arial"),t},_updateLabelInfo(e){jO.fontDesc=this._getFontDesc(),jO.color=e.color,jO.hash=function(e){const t=e.color.toHEX();let n="";return e.isOutlined&&e.margin>0&&(n=n+e.margin+e.out.toHEX()),""+e.fontSize+e.fontFamily+t+n}(jO)},_getFontDesc(){let e=`${jO.fontSize.toString()}px `;return e+=jO.fontFamily,e},_computeHorizontalKerningForText(){},_determineRect:()=>!1}),tV=new dn(255,255,255,255),nV={createData:e=>e.requestRenderData(),fillBuffers(e,t){if(!e.renderData)return;const n=e.node;tV.a=255*n._uiProps.opacity,GD(n,0,e.renderData,tV)},updateColor(e){},appendQuad:JG.appendQuad};Te(nV,eV);const iV=fL.Overflow,sV=(1/255).toFixed(3);let oV=null,rV=null,aV=null,cV="",lV="",hV=0,uV=0,_V=[];const dV=new kn;let pV=0,fV=0,mV=0,gV=new dn,vV=1,yV="",xV=iV.NONE,SV=!1,CV=null;const EV=dn.BLACK.clone();let TV=null;const bV=dn.BLACK.clone(),AV=new Wn,PV=kn.ZERO.clone(),wV=kn.ZERO.clone(),IV=Bn.ZERO.clone(),RV=Bn.ZERO.clone();let DV=0,OV=0,NV=!1,MV=!1,LV=!1;const BV=["left","center","right"],FV={getAssemblerData:()=>fL._canvasPool.get(),resetAssemblerData(e){e&&fL._canvasPool.put(e)},updateRenderData(e){if(e.renderData){if(e.renderData.vertDirty){const t=e.node._uiProps.uiTransformComp;this._updateFontFamily(e),this._updateProperties(e,t),this._calculateLabelFont(),this._updateLabelDimensions(),this._updateTexture(e),this._calDynamicAtlas(e),e.actualFontSize=hV,t.setContentSize(dV),this.updateVertexData(e),this.updateUVs(e),e.markForUpdateRenderData(!1),oV=null,rV=null,aV=null}e.spriteFrame&&e.renderData.updateRenderData(e,e.spriteFrame)}},updateVertexData(e){},updateUVs(e){},_updateFontFamily(e){yV=e.useSystemFont?e.fontFamily||"Arial":e.font&&e.font._nativeAsset||"Arial"},_updateProperties(e,t){const n=e.assemblerData;n&&(oV=n.context,rV=n.canvas,aV=e.spriteFrame,lV=e.string.toString(),hV=e.fontSize,uV=hV,xV=e.overflow,wV.width=dV.width=t.width,wV.height=dV.height=t.height,OV=e.underlineHeight,pV=e.lineHeight,fV=e.horizontalAlign,mV=e.verticalAlign,gV=e.color,vV=e.node._uiProps.opacity,NV=e.isBold,MV=e.isItalic,LV=e.isUnderline,SV=xV!==iV.NONE&&(xV===iV.RESIZE_HEIGHT||e.enableWrapText),CV=qB&&e.getComponent(qB),CV=CV&&CV.enabled&&CV.width>0?CV:null,CV&&EV.set(CV.color),TV=AU&&e.getComponent(AU),TV=TV&&TV.enabled?TV:null,TV&&bV.set(TV.color),this._updatePaddingRect())},_updatePaddingRect(){let e=0,t=0,n=0,i=0,s=0;if(PV.width=PV.height=0,CV&&(s=CV.width,e=t=n=i=s,PV.width=PV.height=2*s),TV){const o=TV.blur+s,r=TV.offset.x,a=TV.offset.y;n=Math.max(n,-r+o),i=Math.max(i,r+o),e=Math.max(e,a+o),t=Math.max(t,-a+o)}if(MV){const e=uV*Math.tan(.20943951);i+=e,PV.width+=e}AV.x=n,AV.y=e,AV.width=n+i,AV.height=e+t},_calculateFillTextStartPosition(){let e=0;fV===cL.RIGHT?e=dV.width-AV.width:fV===cL.CENTER&&(e=(dV.width-AV.width)/2);const t=this._getLineHeight()*(_V.length-1);let n=hV*(1-xO/2);if(mV!==lL.TOP){let e=t+AV.height+hV-dV.height;mV===lL.BOTTOM?(e+=xO/2*hV,n-=e):n-=e/2}n+=0*hV,IV.set(e+AV.x,n+AV.y)},_updateTexture(e){if(!oV||!rV)return;oV.clearRect(0,0,rV.width,rV.height),oV.font=cV,this._calculateFillTextStartPosition();const t=this._getLineHeight();oV.lineJoin="round",CV?(oV.fillStyle=`rgba(${EV.r}, ${EV.g}, ${EV.b}, ${sV})`,oV.fillRect(0,0,rV.width,rV.height)):e._srcBlendFactor===vi.SRC_ALPHA&&(oV.fillStyle=`rgba(${gV.r}, ${gV.g}, ${gV.b}, ${sV})`,oV.fillRect(0,0,rV.width,rV.height)),oV.fillStyle=`rgb(${gV.r}, ${gV.g}, ${gV.b})`;const n=IV.x;let i=0;this._drawTextEffect(IV,t);for(let e=0;e<_V.length;++e)i=IV.y+e*t,CV&&oV.strokeText(_V[e],n,i),oV.fillText(_V[e],n,i);TV&&(oV.shadowColor="transparent"),this._uploadTexture(e)},_uploadTexture(e){if(e.cacheMode===fL.CacheMode.BITMAP){const t=e.ttfSpriteFrame;WD.deleteAtlasSpriteFrame(t),t._resetDynamicAtlasFrame()}if(aV&&rV){let t;t=aV instanceof $D?aV.texture:aV,0!==rV.width&&0!==rV.height&&(t.reset({width:rV.width,height:rV.height,mipmapLevel:1}),t.uploadData(rV),t.setWrapMode(Hf.CLAMP_TO_EDGE,Hf.CLAMP_TO_EDGE),aV instanceof $D&&(aV.rect=new Wn(0,0,rV.width,rV.height),aV._calculateUV()),e.renderData&&(e.renderData.textureDirty=!0),u.director.root&&u.director.root.batcher2D&&u.director.root.batcher2D._releaseDescriptorSetCache(t.getHash()))}},_calDynamicAtlas(e){if(e.cacheMode!==fL.CacheMode.BITMAP||!rV||rV.width<=0||rV.height<=0)return;const t=e.ttfSpriteFrame;WD.packToDynamicAtlas(e,t)},_setupOutline(){oV.strokeStyle=`rgba(${EV.r}, ${EV.g}, ${EV.b}, ${EV.a/255})`,oV.lineWidth=2*CV.width},_setupShadow(){oV.shadowColor=`rgba(${bV.r}, ${bV.g}, ${bV.b}, ${bV.a/255})`,oV.shadowBlur=TV.blur,oV.shadowOffsetX=TV.offset.x,oV.shadowOffsetY=-TV.offset.y},_drawTextEffect(e,t){if(!TV&&!CV&&!LV)return;const n=_V.length>1&&TV,i=this._measureText(oV,cV);let s=0,o=0;TV&&this._setupShadow(),CV&&this._setupOutline();for(let r=0;r<_V.length;++r)s=e.x,o=e.y+r*t,n&&(CV&&oV.strokeText(_V[r],s,o),oV.fillText(_V[r],s,o)),LV&&(DV=i(_V[r]),fV===cL.RIGHT?RV.x=e.x-DV:fV===cL.CENTER?RV.x=e.x-DV/2:RV.x=e.x,RV.y=o+uV/8,oV.fillRect(RV.x,RV.y,DV,OV));n&&(oV.shadowColor="transparent")},_updateLabelDimensions(){dV.width=Math.min(dV.width,2048),dV.height=Math.min(dV.height,2048);let e=!1;rV.width!==dV.width&&(rV.width=dV.width,e=!0),rV.height!==dV.height&&(rV.height=dV.height,e=!0),e&&(oV.font=cV),oV.textAlign=BV[fV],oV.textBaseline="alphabetic"},_getFontDesc(){let e=`${hV.toString()}px `;return e+=yV,NV&&(e=`bold ${e}`),MV&&(e=`italic ${e}`),e},_getLineHeight(){let e=pV;return e=0===e?hV:e*hV/uV,0|e},_calculateParagraphLength(e,t){const n=[];for(const i of e){const e=DO(t,i,cV);n.push(e)}return n},_measureText:(e,t)=>n=>DO(e,n,t),_calculateShrinkFont(e){if(!oV)return;const t=this._calculateParagraphLength(e,oV);let n=0,i=0,s=0;if(SV){const t=wV.width,s=wV.height;if(t<0||s<0)return;i=s+1;let o=[],r=0,a=0|hV+1,c=0;for(;r<a;){if(c=r+a+1>>1,c<=0){I(4003);break}hV=c,cV=this._getFontDesc(),oV.font=cV;const l=this._getLineHeight();for(i=0,n=0;n<e.length;++n){const s=DO(oV,e[n],cV);o=LO(e[n],s,t,this._measureText(oV,cV)),i+=o.length*l}i>s?a=c-1:r=c}0===r?I(4003):(hV=r,cV=this._getFontDesc(),oV.font=cV)}else{for(i=e.length*this._getLineHeight(),n=0;n<e.length;++n)s<t[n]&&(s=t[n]);const o=(dV.width-AV.width)/s,r=dV.height/i;hV=uV*Math.min(1,o,r)|0,cV=this._getFontDesc(),oV.font=cV}},_calculateWrapText(e){if(!SV||!oV)return;_V=[];const t=wV.width;for(let n=0;n<e.length;++n){const i=DO(oV,e[n],cV),s=LO(e[n],i,t,this._measureText(oV,cV));_V=_V.concat(s)}},_calculateLabelFont(){if(!oV)return;const e=lV.split("\n");switch(_V=e,cV=this._getFontDesc(),oV.font=cV,xV){case iV.NONE:{let t=0,n=0;for(let n=0;n<e.length;++n){const i=DO(oV,e[n],cV);t=t>i?t:i}n=(_V.length+xO)*this._getLineHeight();const i=parseFloat(t.toFixed(2)),s=parseFloat(n.toFixed(2));dV.width=i+AV.width,dV.height=s+AV.height,wV.width=i+PV.width,wV.height=s+PV.height;break}case iV.SHRINK:this._calculateShrinkFont(e),this._calculateWrapText(e);break;case iV.CLAMP:this._calculateWrapText(e);break;case iV.RESIZE_HEIGHT:{this._calculateWrapText(e);const t=(_V.length+xO)*this._getLineHeight();dV.height=t+AV.height,wV.height=t+PV.height;break}}}},zV=dn.WHITE.clone(),UV={createData(e){const t=e.requestRenderData();t.dataLength=2,t.resize(4,6);const n=t.chunk.vb;n[3]=n[21]=n[22]=n[31]=0,n[4]=n[12]=n[13]=n[30]=1;let i=5;for(let e=0;e<4;e++)dn.toArray(n,zV,i),i+=9;return t},fillBuffers(e,t){const n=e.renderData.chunk,i=e.renderData.data,s=e.node,o=n.vb,r=i[0],a=i[1];s.updateWorldTransform();const c=s._pos,l=s._rot,h=s._scale,u=r.x*h.x,_=a.x*h.x,d=r.y*h.y,p=a.y*h.y,f=l.x,m=l.y,g=l.z,v=l.w,y=f*m,x=g*v,S=f*f-m*m,C=v*v-g*g,E=C+S,T=2*(y-x),b=C-S,A=2*(y+x),P=c.x,w=c.y;o[0]=E*u+T*d+P,o[1]=b*d+A*u+w,o[9]=E*_+T*d+P,o[10]=b*d+A*_+w,o[18]=E*u+T*p+P,o[19]=b*p+A*u+w,o[27]=E*_+T*p+P,o[28]=b*p+A*_+w;const I=n.bufferId,R=n.vertexOffset,D=n.vertexAccessor.getMeshBuffer(n.bufferId),O=n.vertexAccessor.getIndexBuffer(I);let N=D.indexOffset;O[N++]=R,O[N++]=R+1,O[N++]=R+2,O[N++]=R+2,O[N++]=R+1,O[N++]=R+3,D.indexOffset+=6},updateVertexData(e){const t=e.renderData;if(!t)return;const n=e.node._uiProps.uiTransformComp,i=n.width,s=n.height,o=n.anchorX*i,r=n.anchorY*s,a=t.data;a[0].x=-o,a[0].y=-r,a[1].x=i-o,a[1].y=s-r},updateUVs(e){const t=e.renderData;if(!t||!e.ttfSpriteFrame)return;const n=t.chunk.vb,i=e.ttfSpriteFrame.uv;n[3]=i[0],n[4]=i[1],n[12]=i[2],n[13]=i[3],n[21]=i[4],n[22]=i[5],n[30]=i[6],n[31]=i[7]},updateColor(e){}};Te(UV,FV);const GV=e("labelAssembler",{getAssembler(e){let t=UV;return e.font instanceof gO?t=JG:e.cacheMode===fL.CacheMode.CHAR&&(t=nV),t}});fL.Assembler=GV;const VV=kF.FillType,HV=new On,kV=new gn,jV={updateRenderData(e){const t=e.spriteFrame;WD.packToDynamicAtlas(e,t);const n=e.renderData;if(n&&t){if(n.updateRenderData(e,t),!n.vertDirty)return;let i=e.fillStart,s=e.fillRange;s<0&&(i+=s,s=-s),s=i+s,i=i>1?1:i,i=i<0?0:i,s=s>1?1:s,s=s<0?0:s,s-=i,s=s<0?0:s;let o=i+s;o=o>1?1:o,this.updateUVs(e,i,o),this.updateVertexData(e,i,o)}},updateUVs(e,t,n){const i=e.spriteFrame,s=e.renderData.chunk.vb,o=i.width,r=i.height,a=i.rect;let c=0,l=0,h=0,u=0,_=0,d=0,p=0,f=0,m=0,g=0,v=0,y=0;switch(i.isRotated()?(c=a.x/o,l=(a.y+a.width)/r,h=(a.x+a.height)/o,u=a.y/r,_=p=c,m=v=h,f=y=l,d=g=u):(c=a.x/o,l=(a.y+a.height)/r,h=(a.x+a.width)/o,u=a.y/r,_=m=c,p=v=h,d=f=l,g=y=u),e.fillType){case VV.HORIZONTAL:s[3]=_+(p-_)*t,s[4]=d+(f-d)*t,s[12]=_+(p-_)*n,s[13]=d+(f-d)*n,s[21]=m+(v-m)*t,s[22]=g+(y-g)*t,s[30]=m+(v-m)*n,s[31]=g+(y-g)*n;break;case VV.VERTICAL:s[3]=_+(m-_)*t,s[4]=d+(g-d)*t,s[12]=p+(v-p)*t,s[13]=f+(y-f)*t,s[21]=_+(m-_)*n,s[22]=d+(g-d)*n,s[30]=p+(v-p)*n,s[31]=f+(y-f)*n;break;default:N(2626)}},updateVertexData(e,t,n){const i=e.renderData.data,s=e.node._uiProps.uiTransformComp,o=s.width,r=s.height,a=s.anchorX*o,c=s.anchorY*r;let l=-a,h=-c,u=o-a,_=r-c,d=0,p=0;switch(e.fillType){case VV.HORIZONTAL:d=l+(u-l)*t,p=l+(u-l)*n,l=d,u=p;break;case VV.VERTICAL:d=h+(_-h)*t,p=h+(_-h)*n,h=d,_=p;break;default:N(2626)}i[0].x=l,i[0].y=h,i[1].x=u,i[1].y=h,i[2].x=l,i[2].y=_,i[3].x=u,i[3].y=_},createData(e){const t=e.requestRenderData();t.dataLength=4,t.resize(4,6);const n=t.data;for(const e of n)e.z=0;return t},updateWorldVertexData(e,t){e.node.getWorldMatrix(HV);const n=e.renderData.floatStride,i=e.renderData.data,s=t.vb;let o=0;for(let e=0;e<4;e++){const t=i[e];gn.transformMat4(kV,t,HV),o=e*n,s[o]=kV.x,s[o+1]=kV.y,s[o+2]=kV.z}},fillBuffers(e,t){const n=e.renderData,i=n.chunk;(e.node.hasChangedFlags||n.vertDirty)&&(this.updateWorldVertexData(e,i),n.vertDirty=!1);const s=i.bufferId,o=i.vertexOffset,r=i.vertexAccessor.getMeshBuffer(i.bufferId),a=i.vertexAccessor.getIndexBuffer(s);let c=r.indexOffset;a[c++]=o,a[c++]=o+1,a[c++]=o+2,a[c++]=o+2,a[c++]=o+1,a[c++]=o+3,r.indexOffset+=6},updateColor(e){const t=e.renderData,n=t.chunk.vb,i=t.floatStride;let s=5;const o=e.color,r=o.r/255,a=o.g/255,c=o.b/255,l=e.node._uiProps.opacity;for(let e=0;e<4;e++)n[s]=r,n[s+1]=a,n[s+2]=c,n[s+3]=l,s+=i}},WV=2*Math.PI,qV=1e-6,XV=new On,YV=new gn,KV=[new Bn,new Bn,new Bn,new Bn],$V=new Array(4),QV=new Array(8),JV=[new Bn,new Bn,new Bn,new Bn],ZV=[new Bn,new Bn,new Bn,new Bn],eH=new Bn,tH=[new Bn,new Bn,new Bn,new Bn];function nH(e,t,n,i,s,o,r){let a=Math.sin(o);a=Math.abs(a)>qV?a:0;let c=Math.cos(o);c=Math.abs(c)>qV?c:0;let l=0,h=0;if(0!==c){if(l=a/c,(e-s.x)*c>0){const t=s.y+l*(e-s.x);r[0].x=e,r[0].y=t}if((t-s.x)*c>0){const e=s.y+l*(t-s.x);r[2].x=t,r[2].y=e}}if(0!==a){if(h=c/a,(i-s.y)*a>0){const e=s.x+h*(i-s.y);r[3].x=e,r[3].y=i}if((n-s.y)*a>0){const e=s.x+h*(n-s.y);r[1].x=e,r[1].y=n}}}function iH(e,t){const n=t.x-e.x,i=t.y-e.y;if(0===n&&0===i)return 0;if(0===n)return i>0?.5*Math.PI:1.5*Math.PI;{let e=Math.atan(i/n);return n<0&&(e+=Math.PI),e}}function sH(e,t,n,i,s){const o=$V,r=o[0],a=o[1],c=o[2],l=o[3];e[t].x=n.x,e[t].y=n.y,e[t+1].x=i.x,e[t+1].y=i.y,e[t+2].x=s.x,e[t+2].y=s.y;let h=0,u=0;h=(n.x-r)/(c-r),u=(n.y-a)/(l-a),oH(h,u,e,t),h=(i.x-r)/(c-r),u=(i.y-a)/(l-a),oH(h,u,e,t+1),h=(s.x-r)/(c-r),u=(s.y-a)/(l-a),oH(h,u,e,t+2)}function oH(e,t,n,i){const s=QV,o=s[0]+(s[2]-s[0])*e,r=s[4]+(s[6]-s[4])*e,a=s[1]+(s[3]-s[1])*e,c=s[5]+(s[7]-s[5])*e,l=n[i];l.u=o+(r-o)*t,l.v=a+(c-a)*t}const rH={useModel:!1,createData:e=>e.requestRenderData(),updateRenderData(e){const t=e.spriteFrame;WD.packToDynamicAtlas(e,t),this.updateUVs(e);const n=e.renderData;if(n&&t){if(!n.vertDirty)return;const i=n.data;let s=e.fillStart,o=e.fillRange;for(o<0&&(s+=o,o=-o);s>=1;)s-=1;for(;s<0;)s+=1;s*=WV,o*=WV;const r=s+o;!function(e){const t=e.node._uiProps.uiTransformComp,n=t.width,i=t.height,s=t.anchorX*n,o=t.anchorY*i,r=-s,a=-o,c=n-s,l=i-o,h=$V;h[0]=r,h[1]=a,h[2]=c,h[3]=l;const u=e.fillCenter,_=eH.x=Math.min(Math.max(0,u.x),1)*(c-r)+r,d=eH.y=Math.min(Math.max(0,u.y),1)*(l-a)+a;KV[0].x=KV[3].x=r,KV[1].x=KV[2].x=c,KV[0].y=KV[1].y=a,KV[2].y=KV[3].y=l;for(const e of tH)Bn.set(e,0,0);_!==h[0]&&Bn.set(tH[0],3,0),_!==h[2]&&Bn.set(tH[2],1,2),d!==h[1]&&Bn.set(tH[1],0,1),d!==h[3]&&Bn.set(tH[3],2,3)}(e),function(e){const t=e.width,n=e.height,i=e.getRect();let s=0,o=0,r=0,a=0;const c=QV;e.isRotated()?(s=i.x/t,o=(i.x+i.height)/t,r=i.y/n,a=(i.y+i.width)/n,c[0]=c[2]=s,c[4]=c[6]=o,c[3]=c[7]=a,c[1]=c[5]=r):(s=i.x/t,o=(i.x+i.width)/t,r=i.y/n,a=(i.y+i.height)/n,c[0]=c[4]=s,c[2]=c[6]=o,c[1]=c[3]=a,c[5]=c[7]=r)}(t),nH($V[0],$V[2],$V[1],$V[3],eH,s,JV),nH($V[0],$V[2],$V[1],$V[3],eH,s+o,ZV);let a=0;for(let e=0;e<4;++e){const t=tH[e];if(!t)continue;if(o>=WV){n.dataLength=a+3,sH(i,a,eH,KV[t.x],KV[t.y]),a+=3;continue}let c=iH(eH,KV[t.x]),l=iH(eH,KV[t.y]);l<c&&(l+=WV),c-=WV,l-=WV;for(let o=0;o<3;++o)c>=r||(c>=s?(n.dataLength=a+3,sH(i,a,eH,KV[t.x],l>=r?ZV[e]:KV[t.y]),a+=3):l>s&&(l<=r?(n.dataLength=a+3,sH(i,a,eH,JV[e],KV[t.y]),a+=3):(n.dataLength=a+3,sH(i,a,eH,JV[e],ZV[e]),a+=3))),c+=WV,l+=WV}n.resize(a,a),n.updateRenderData(e,t)}},fillBuffers(e,t){const n=e.node,i=e.renderData,s=i.chunk;(n.hasChangedFlags||i.vertDirty)&&(this.updateWorldVertexAndUVData(e,s),i.vertDirty=!1),this.updataColorLate(e);const o=s.bufferId,r=s.vertexOffset,a=s.vertexAccessor.getMeshBuffer(s.bufferId),c=s.vertexAccessor.getIndexBuffer(o),l=a.indexOffset;for(let e=0;e<i.indexCount;e++)c[l+e]=r+e;a.indexOffset+=i.indexCount,a.setDirty()},updateWorldVertexAndUVData(e,t){e.node.getWorldMatrix(XV);const n=e.renderData,i=n.floatStride,s=e.renderData.data,o=t.vb,r=n.vertexCount;let a=0;for(let e=0;e<r;e++){const t=s[e];gn.set(YV,t.x,t.y,0),gn.transformMat4(YV,YV,XV),o[a+0]=YV.x,o[a+1]=YV.y,o[a+2]=YV.z,o[a+3]=t.u,o[a+4]=t.v,a+=i}},updateUVs(e){e.renderData.vertDirty=!0,e.markForUpdateRenderData()},updataColorLate(e){const t=e.renderData,n=t.chunk.vb,i=t.floatStride,s=t.vertexCount;let o=5;const r=e.color,a=r.r/255,c=r.g/255,l=r.b/255,h=e.node._uiProps.opacity;for(let e=0;e<s;e++)n[o]=a,n[o+1]=c,n[o+2]=l,n[o+3]=h,o+=i},updateColor(e){}},aH=[];for(let e=0;e<4;e++)aH.push(new gn);const cH={createData(e){const t=e.requestRenderData();return t.dataLength=2,t.resize(4,6),t},updateRenderData(e){const t=e.spriteFrame;WD.packToDynamicAtlas(e,t),this.updateUVs(e);const n=e.renderData;n&&t&&(n.vertDirty&&this.updateVertexData(e),n.updateRenderData(e,t))},updateWorldVerts(e,t){const n=e.renderData,i=t.vb,s=n.data,o=e.node,r=s[0],a=s[1],c=o.worldMatrix,l=c.m00,h=c.m01,u=c.m04,_=c.m05,d=1===l&&0===h&&0===u&&1===_,p=c.m12,f=c.m13,m=r.x,g=a.x,v=r.y,y=a.y;if(d){const e=m+p,t=g+p,n=v+f,s=y+f;i[0]=e,i[1]=n,i[9]=t,i[10]=n,i[18]=e,i[19]=s,i[27]=t,i[28]=s}else{const e=l*m,t=l*g,n=h*m,s=h*g,o=u*v+p,r=u*y+p,a=_*v+f,c=_*y+f;i[0]=e+o,i[1]=n+a,i[9]=t+o,i[10]=s+a,i[18]=e+r,i[19]=n+c,i[27]=t+r,i[28]=s+c}},fillBuffers(e,t){if(null===e)return;const n=e.renderData,i=n.chunk;(e.node.hasChangedFlags||n.vertDirty)&&(this.updateWorldVerts(e,i),n.vertDirty=!1);const s=i.bufferId,o=i.vertexOffset,r=i.vertexAccessor.getMeshBuffer(s),a=i.vertexAccessor.getIndexBuffer(s);let c=r.indexOffset;a[c++]=o,a[c++]=o+1,a[c++]=o+2,a[c++]=o+2,a[c++]=o+1,a[c++]=o+3,r.indexOffset+=6},updateVertexData(e){const t=e.renderData;if(!t)return;const n=e.node._uiProps.uiTransformComp,i=t.data,s=n.width,o=n.height,r=n.anchorX*s,a=n.anchorY*o;let c=0,l=0,h=0,u=0;if(e.trim)c=-r,l=-a,h=s-r,u=o-a;else{const t=e.spriteFrame,n=t.getOriginalSize(),i=t.getRect(),_=n.width,d=n.height,p=i.width,f=i.height,m=t.getOffset(),g=s/_,v=o/d,y=m.x+(_-p)/2,x=m.x-(_-p)/2;c=y*g-r,l=(m.y+(d-f)/2)*v-a,h=s+x*g-r,u=o+(m.y-(d-f)/2)*v-a}i[0].x=c,i[0].y=l,i[1].x=h,i[1].y=u,t.vertDirty=!0},updateUVs(e){if(!e.spriteFrame)return;const t=e.renderData.chunk.vb,n=e.spriteFrame.uv;t[3]=n[0],t[4]=n[1],t[12]=n[2],t[13]=n[3],t[21]=n[4],t[22]=n[5],t[30]=n[6],t[31]=n[7]},updateColor(e){const t=e.renderData,n=t.chunk.vb;let i=5;const s=e.color,o=s.r/255,r=s.g/255,a=s.b/255,c=s.a/255;for(let e=0;e<4;e++,i+=t.floatStride)n[i]=o,n[i+1]=r,n[i+2]=a,n[i+3]=c}},lH=new gn,hH=new On,uH={createData(e){const t=e.requestRenderData();return t.dataLength=4,t.resize(16,54),t},updateRenderData(e){const t=e.spriteFrame;WD.packToDynamicAtlas(e,t),this.updateUVs(e);const n=e.renderData;n&&t&&(n.vertDirty&&this.updateVertexData(e),n.updateRenderData(e,t))},updateVertexData(e){const t=e.renderData.data,n=e.node._uiProps.uiTransformComp,i=n.width,s=n.height,o=n.anchorX*i,r=n.anchorY*s,a=e.spriteFrame,c=a.insetLeft,l=a.insetRight,h=a.insetTop,u=a.insetBottom;let _=i-c-l,d=s-h-u,p=i/(c+l),f=s/(h+u);p=Number.isNaN(p)||p>1?1:p,f=Number.isNaN(f)||f>1?1:f,_=_<0?0:_,d=d<0?0:d,t[0].x=-o,t[0].y=-r,t[1].x=c*p-o,t[1].y=u*f-r,t[2].x=t[1].x+_,t[2].y=t[1].y+d,t[3].x=i-o,t[3].y=s-r},fillBuffers(e,t){const n=e.renderData,i=n.chunk;(e.node.hasChangedFlags||n.vertDirty)&&(this.updateWorldVertexData(e,i),n.vertDirty=!1);const s=i.bufferId,o=i.vertexOffset,r=i.vertexAccessor.getMeshBuffer(i.bufferId),a=i.vertexAccessor.getIndexBuffer(s);let c=r.indexOffset;for(let e=0;e<3;++e)for(let t=0;t<3;++t){const n=o+4*e+t;a[c++]=n,a[c++]=n+1,a[c++]=n+4,a[c++]=n+1,a[c++]=n+5,a[c++]=n+4}r.indexOffset=c},updateWorldVertexData(e,t){e.node.getWorldMatrix(hH);const n=e.renderData,i=n.floatStride,s=n.data,o=t.vb;let r=0;for(let e=0;e<4;++e){const t=s[e];for(let n=0;n<4;++n){const a=s[n];gn.set(lH,a.x,t.y,0),gn.transformMat4(lH,lH,hH),r=(4*e+n)*i,o[r++]=lH.x,o[r++]=lH.y,o[r++]=lH.z}}},updateUVs(e){if(!e.spriteFrame)return;const t=e.renderData,n=t.chunk.vb,i=t.floatStride,s=e.spriteFrame.uvSliced;let o=3;for(let e=0;e<16;e++)n[o]=s[e].u,n[o+1]=s[e].v,o+=i},updateColor(e){const t=e.renderData,n=t.chunk.vb,i=t.floatStride;let s=5;const o=e.color,r=o.r/255,a=o.g/255,c=o.b/255,l=e.node._uiProps.opacity;for(let e=0;e<16;e++)n[s]=r,n[s+1]=a,n[s+2]=c,n[s+3]=l,s+=i}},_H=[];for(let e=0;e<4;e++)_H.push(new gn);const dH=new On,pH={createData:e=>e.requestRenderData(),updateRenderData(e){const t=e.renderData,n=e.spriteFrame;if(!n||!t)return;if(t.updateRenderData(e,n),!t.vertDirty)return;const i=e.node._uiProps.uiTransformComp,s=Math.abs(i.width),o=Math.abs(i.height),r=n.getRect(),a=n.insetLeft,c=n.insetRight,l=r.width-a-c,h=n.insetTop,u=n.insetBottom,_=r.height-h-u;let d=s-a-c,p=o-h-u;d=d>0?d:0,p=p>0?p:0;const f=0===l?d:d/l,m=0===_?p:p/_,g=Math.ceil(m+2),v=Math.ceil(f+2);t.dataLength=Math.max(8,g+1,v+1),this.updateVerts(e,d,p,g,v),t.resize(g*v*4,g*v*6)},updateUVs(e){e.renderData.vertDirty=!0,e.markForUpdateRenderData()},fillBuffers(e,t){const n=e.node,i=e.renderData,s=i.chunk;(n.hasChangedFlags||i.vertDirty)&&(this.updateWorldVertexAndUVData(e,s),i.vertDirty=!1),this.updataColorLate(e);const o=s.bufferId;let r=s.vertexOffset;const a=s.vertexAccessor.getMeshBuffer(s.bufferId),c=s.vertexAccessor.getIndexBuffer(o);let l=a.indexOffset;for(let e=0;e<i.indexCount;e+=6)c[l++]=r,c[l++]=r+1,c[l++]=r+2,c[l++]=r+1,c[l++]=r+3,c[l++]=r+2,r+=4,a.indexOffset+=6;a.setDirty()},updateWorldVertexAndUVData(e,t){const n=e.node;n.getWorldMatrix(dH);const i=e.renderData,s=i.floatStride,o=i.data,r=t.vb,a=n._uiProps.uiTransformComp,c=Math.abs(a.width),l=Math.abs(a.height),h=e.spriteFrame,u=h.rotated,_=h.uv,d=h.uvSliced,p=h.rect,f=h.insetLeft,m=h.insetRight,g=p.width-f-m,v=h.insetTop,y=h.insetBottom,x=p.height-v-y;let S=c-f-m,C=l-v-y;S=S>0?S:0,C=C>0?C:0;const E=0===g?S:S/g,T=0===x?C:C/x,b=Math.ceil(T+2),A=Math.ceil(E+2);let P=0,w=0,I=0,R=0,D=0;for(let e=0,t=b;e<t;++e){R=o[e].y,D=o[e+1].y;for(let e=0,t=A;e<t;++e){w=o[e].x,I=o[e+1].x,gn.set(_H[0],w,R,0),gn.set(_H[1],I,R,0),gn.set(_H[2],w,D,0),gn.set(_H[3],I,D,0);for(let e=0;e<4;e++){const t=_H[e];gn.transformMat4(t,t,dH);const n=e*s;r[P+n]=t.x,r[P+n+1]=t.y,r[P+n+2]=t.z}P+=4*s}}P=0;const O=s,N=2*s,M=3*s,L=4*s;let B=0,F=0;const z=[],U=[];for(let e=0,t=b;e<t;++e){F=C>x?C>=e*x?1:T%1:T;for(let t=0,n=A;t<n;++t){B=S>g?S>=t*g?1:E%1:E;const n=P+3,i=n+1;u?(0===e?(z[0]=d[0].u,z[1]=d[0].u,z[2]=d[4].u+(d[8].u-d[4].u)*F):e<b-1?(z[0]=d[4].u,z[1]=d[4].u,z[2]=d[4].u+(d[8].u-d[4].u)*F):e===b-1&&(z[0]=d[8].u,z[1]=d[8].u,z[2]=d[12].u),0===t?(U[0]=d[0].v,U[1]=d[1].v+(d[2].v-d[1].v)*B,U[2]=d[0].v):t<A-1?(U[0]=d[1].v,U[1]=d[1].v+(d[2].v-d[1].v)*B,U[2]=d[1].v):t===A-1&&(U[0]=d[2].v,U[1]=d[3].v,U[2]=d[2].v),z[3]=z[2],U[3]=U[1]):(0===t?(z[0]=d[0].u,z[1]=d[1].u+(d[2].u-d[1].u)*B,z[2]=_[0]):t<A-1?(z[0]=d[1].u,z[1]=d[1].u+(d[2].u-d[1].u)*B,z[2]=d[1].u):t===A-1&&(z[0]=d[2].u,z[1]=d[3].u,z[2]=d[2].u),0===e?(U[0]=d[0].v,U[1]=d[0].v,U[2]=d[4].v+(d[8].v-d[4].v)*F):e<b-1?(U[0]=d[4].v,U[1]=d[4].v,U[2]=d[4].v+(d[8].v-d[4].v)*F):e===b-1&&(U[0]=d[8].v,U[1]=d[8].v,U[2]=d[12].v),z[3]=z[1],U[3]=U[2]),r[n]=z[0],r[i]=U[0],r[n+O]=z[1],r[i+O]=U[1],r[n+N]=z[2],r[i+N]=U[2],r[n+M]=z[3],r[i+M]=U[3],P+=L}}},updateVerts(e,t,n,i,s){const o=e.node._uiProps.uiTransformComp,r=e.renderData.data,a=e.spriteFrame,c=a.rect,l=Math.abs(o.width),h=Math.abs(o.height),u=o.anchorX*l,_=o.anchorY*h,d=a.insetLeft,p=a.insetRight,f=c.width-d-p,m=a.insetTop,g=a.insetBottom,v=c.height-m-g,y=o.width/(d+p)>1?1:o.width/(d+p),x=o.height/(m+g)>1?1:o.height/(m+g);let S=0,C=0;S=f>0?Math.floor(1e3*t)/1e3%f==0?f:t%f:t,C=v>0?Math.floor(1e3*n)/1e3%v==0?v:n%v:n;for(let e=0;e<=s;e++)0===e?r[e].x=-u:e>0&&e<s?r[e].x=1===e?d*y+Math.min(f,t)-u:f>0?e===s-1?d+S+f*(e-2)-u:d+Math.min(f,t)+f*(e-2)-u:d+t-u:e===s&&(r[e].x=Math.min(d+t+p,l)-u);for(let e=0;e<=i;e++)0===e?r[e].y=-_:e>0&&e<i?r[e].y=1===e?g*x+Math.min(v,n)-_:v>0?e===i-1?g+C+(e-2)*v-_:g+Math.min(v,n)+(e-2)*v-_:g+n-_:e===i&&(r[e].y=Math.min(g+n+m,h)-_)},updataColorLate(e){const t=e.renderData,n=t.chunk.vb,i=t.floatStride,s=t.vertexCount;let o=5;const r=e.color,a=r.r/255,c=r.g/255,l=r.b/255,h=e.node._uiProps.opacity;for(let e=0;e<s;e++)n[o]=a,n[o+1]=c,n[o+2]=l,n[o+3]=h,o+=i},updateColor(e){}},fH=kF.Type,mH=kF.FillType,gH=e("spriteAssembler",{getAssembler(e){let t=cH;const n=e;switch(n.type){case fH.SLICED:t=uH;break;case fH.TILED:t=pH;break;case fH.FILLED:t=n.fillType===mH.RADIAL?rH:jV}return t}});kF.Assembler=gH;const vH=wN.sharedManager,yH={createData(e){const t=e.requestRenderData();return t.dataLength=2,t.resize(4,6),t},updateRenderData(e){e.type===RB.IMAGE_STENCIL&&(cH.updateRenderData(e),cH.updateColor(e))},fillBuffers(e,t){(e.type!==RB.IMAGE_STENCIL||e.spriteFrame)&&(vH.pushMask(e),t.finishMergeBatches(),function(e,t){vH.clear(e),t.commitModel(e,e._clearModel,e._clearStencilMtl)}(e,t),function(e,t){if(vH.enterLevel(e),e.type===RB.IMAGE_STENCIL){cH.fillBuffers(e,t);const n=e.graphics.getMaterialInstance(0);t.forceMergeBatches(n,e.spriteFrame,e.graphics)}else e.graphics.updateAssembler(t)}(e,t),vH.enableMask())}},xH={fillBuffers(e,t){vH.exitMask()}},SH={getAssembler:()=>yH},CH={getAssembler:()=>xH};DB.Assembler=SH,DB.PostAssembler=CH;class EH{constructor(){this.byteOffset=0,this.vertexOffset=0,this.indexOffset=0,this.vData=null,this.iData=null,this._dirty=!1,this._vertexFormatBytes=0,this._floatsPerVertex=0,this._initVDataCount=0,this._initIDataCount=0,this._attributes=null,this._iaPool=[],this._iaInfo=null,this._nextFreeIAHandle=0}get attributes(){return this._attributes}get vertexFormatBytes(){return this._vertexFormatBytes}initialize(e,t,n,i){this._initVDataCount=n,this._initIDataCount=i,this._attributes=t,this._floatsPerVertex=KO(t),this._initVDataCount,this._floatsPerVertex,F(9005),this.vData&&this.iData||(this.vData=new Float32Array(this._initVDataCount),this.iData=new Uint16Array(this._initIDataCount)),this._iaPool.push(this.createNewIA(e))}reset(){this._nextFreeIAHandle=0,this._dirty=!1}destroy(){this.reset(),this._attributes=null,this._iaInfo=null,this.vData=null,this.iData=null;for(let e=0;e<this._iaPool.length;++e){const t=this._iaPool[e];t.vertexBuffers[0]&&t.vertexBuffers[0].destroy(),t.indexBuffer&&t.indexBuffer.destroy(),t.ia.destroy()}this._iaPool.length=0}setDirty(){this._dirty=!0}request(e,t){return D(9002),!1}requireFreeIA(e){return this._iaPool.length<=this._nextFreeIAHandle&&this._iaPool.push(this.createNewIA(e)),this._iaPool[this._nextFreeIAHandle++].ia}recycleIA(e){const t=this._iaPool;for(let n=0;n<this._nextFreeIAHandle;++n)if(e===t[n].ia){const e=t[n];return t[n]=t[--this._nextFreeIAHandle],void(t[this._nextFreeIAHandle]=e)}}checkCapacity(e,t){const n=(this.vertexOffset+e)*this._floatsPerVertex,i=this.indexOffset+t;return!(n>this._initVDataCount||i>this._initIDataCount)}uploadBuffers(){if(0===this.byteOffset||!this._dirty)return;const e=$h.__isWebIOS14OrIPadOS14Env?this._nextFreeIAHandle:1,t=this.byteOffset,n=this.indexOffset;for(let i=0;i<e;++i){const e=this._iaPool[i],s=new Float32Array(this.vData.buffer,0,t>>2),o=new Uint16Array(this.iData.buffer,0,n),r=e.vertexBuffers[0];t>r.size&&r.resize(t),r.update(s),2*n>e.indexBuffer.size&&e.indexBuffer.resize(2*n),e.indexBuffer.update(o)}this._dirty=!1}createNewIA(e){let t,n,i;if($h.__isWebIOS14OrIPadOS14Env||!this._iaPool[0]){const s=this._vertexFormatBytes=this._floatsPerVertex*Float32Array.BYTES_PER_ELEMENT,o=Uint16Array.BYTES_PER_ELEMENT,r=e.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.HOST|ai.DEVICE,s,s));i=e.createBuffer(new es(si.INDEX|si.TRANSFER_DST,ai.HOST|ai.DEVICE,o,o)),n=[r],this._iaInfo=new xs(this._attributes,n,i),t=e.createInputAssembler(this._iaInfo)}else t=e.createInputAssembler(this._iaInfo),n=this._iaInfo.vertexBuffers,i=this._iaInfo.indexBuffer;return{ia:t,vertexBuffers:n,indexBuffer:i}}}e("MeshBuffer",EH);const TH=[HA.EventType.MOUSE_DOWN,HA.EventType.MOUSE_MOVE,HA.EventType.MOUSE_UP,HA.EventType.MOUSE_WHEEL],bH=[HA.EventType.TOUCH_START,HA.EventType.TOUCH_MOVE,HA.EventType.TOUCH_END,HA.EventType.TOUCH_CANCEL];new class{constructor(){this.priority=UA.UI,this._isListDirty=!1,this._inDispatchCount=0,this._pointerEventProcessorList=[],this._processorListToAdd=[],this._processorListToRemove=[],kA._registerEventDispatcher(this),wE.callbacksInvoker.on(PE.ADD_POINTER_EVENT_PROCESSOR,this.addPointerEventProcessor,this),wE.callbacksInvoker.on(PE.REMOVE_POINTER_EVENT_PROCESSOR,this.removePointerEventProcessor,this),wE.callbacksInvoker.on(PE.MARK_LIST_DIRTY,this._markListDirty,this)}dispatchEvent(e){const t=e.type;return bH.includes(t)?this.dispatchEventTouch(e):!TH.includes(t)||this.dispatchEventMouse(e)}addPointerEventProcessor(e){0===this._inDispatchCount?this._pointerEventProcessorList.includes(e)||(this._pointerEventProcessorList.push(e),this._isListDirty=!0):this._processorListToAdd.includes(e)||this._processorListToAdd.push(e),ke.array.remove(this._processorListToRemove,e)}removePointerEventProcessor(e){0===this._inDispatchCount?(ke.array.remove(this._pointerEventProcessorList,e),this._isListDirty=!0):this._processorListToRemove.includes(e)||this._processorListToRemove.push(e),ke.array.remove(this._processorListToAdd,e)}dispatchEventMouse(e){this._inDispatchCount++,this._sortPointerEventProcessorList();const t=this._pointerEventProcessorList,n=t.length;let i=!0;for(let s=0;s<n;++s){const n=t[s];if(n.isEnabled&&n.shouldHandleEventMouse&&n._handleEventMouse(e)){if(i=!1,!e.preventSwallow)break;e.preventSwallow=!1}}return--this._inDispatchCount<=0&&this._updatePointerEventProcessorList(),i}dispatchEventTouch(e){this._inDispatchCount++,this._sortPointerEventProcessorList();const t=this._pointerEventProcessorList,n=t.length,i=e.touch;let s=!0;for(let o=0;o<n;++o){const n=t[o];if(n.isEnabled&&n.shouldHandleEventTouch)if(e.type===SE.TOUCH_START){if(n._handleEventTouch(e)){if(n.claimedTouchIdList.push(i.getID()),s=!1,!e.preventSwallow)break;e.preventSwallow=!1}}else if(n.claimedTouchIdList.length>0){const t=n.claimedTouchIdList.indexOf(i.getID());if(-1!==t){if(n._handleEventTouch(e),e.type!==SE.TOUCH_END&&e.type!==SE.TOUCH_CANCEL||ke.array.removeAt(n.claimedTouchIdList,t),s=!1,!e.preventSwallow)break;e.preventSwallow=!1}}}return--this._inDispatchCount<=0&&this._updatePointerEventProcessorList(),s}_updatePointerEventProcessorList(){const e=this._processorListToAdd,t=e.length;for(let n=0;n<t;++n)this.addPointerEventProcessor(e[n]);e.length=0;const n=this._processorListToRemove,i=n.length;for(let e=0;e<i;++e)this.removePointerEventProcessor(n[e]);n.length=0}_sortPointerEventProcessorList(){if(!this._isListDirty)return;const e=this._pointerEventProcessorList,t=e.length;for(let n=0;n<t;++n){const t=e[n],i=t.node;if(i._uiProps){const e=i._uiProps.uiTransformComp;t.cachedCameraPriority=e.cameraPriority}}e.sort(this._sortByPriority),this._isListDirty=!1}_sortByPriority(e,t){const n=e.node,i=t.node;if(!(t&&i&&i.activeInHierarchy&&i._uiProps.uiTransformComp))return-1;if(!(e&&n&&n.activeInHierarchy&&n._uiProps.uiTransformComp))return 1;if(e.cachedCameraPriority!==t.cachedCameraPriority)return t.cachedCameraPriority-e.cachedCameraPriority;let s=n,o=i,r=!1;for(;(null===(a=s.parent)||void 0===a?void 0:a._id)!==(null===(c=o.parent)||void 0===c?void 0:c._id);){var a,c,l,h,u,_;s=null===(null===(l=s)||void 0===l||null===(h=l.parent)||void 0===h?void 0:h.parent)?(r=!0)&&i:s&&s.parent,o=null===(null===(u=o)||void 0===u||null===(_=u.parent)||void 0===_?void 0:_.parent)?(r=!0)&&n:o&&o.parent}if(s._id===o._id){if(s._id===i._id)return-1;if(s._id===n._id)return 1}const d=s?s.getSiblingIndex():0,p=o?o.getSiblingIndex():0;return r?d-p:p-d}_markListDirty(){this._isListDirty=!0}};const AH=new Bl((()=>({offset:0,length:0})),32);class PH{constructor(e,t,n,i,s){this.vertexAccessor=e,this.bufferId=t,this.vertexOffset=n,this.vb=i}}class wH extends class{get attributes(){return this._attributes}get vertexFormatBytes(){return this._vertexFormatBytes}get floatsPerVertex(){return this._floatsPerVertex}constructor(e,t){this._device=null,this._attributes=null,this._vertexFormatBytes=void 0,this._floatsPerVertex=void 0,this._buffers=[],this._device=e,this._attributes=t,this._floatsPerVertex=KO(t),this._vertexFormatBytes=this._floatsPerVertex*Float32Array.BYTES_PER_ELEMENT}initialize(){}reset(){}request(e=4,t=6){}appendBuffers(e,t){}uploadBuffers(){}destroy(){this._attributes.length=0}}{constructor(e,t,n,i){super(e,t),this._freeLists=[],this._vCount=0,this._iCount=0,this._vCount=n||Math.floor(1024*Qe.BATCHER2D_MEM_INCREMENT/this._vertexFormatBytes),this._iCount=i||this._vCount*wH.IB_SCALE,this._allocateBuffer()}destroy(){for(let e=0;e<this._buffers.length;++e){this._buffers[e].destroy();const t=this._freeLists[e];for(let e=0;e<t.length;++e)AH.free(t[e])}this._buffers.length=0,this._freeLists.length=0,super.destroy()}reset(){for(let e=0;e<this._buffers.length;++e){const t=this._buffers[e];t.indexOffset=0,t.reset()}}getVertexBuffer(e){return this._buffers[e].vData}getIndexBuffer(e){return this._buffers[e].iData}getMeshBuffer(e){return this._buffers[e]}uploadBuffers(){for(let e=0;e<this._buffers.length;++e){const t=this._freeLists[e][0],n=this._buffers[e];(!t||t.length<n.vData.byteLength)&&n.uploadBuffers()}}appendIndices(e,t){const n=this._buffers[e];t.length&&(n.iData.set(t,n.indexOffset),n.indexOffset+=t.length)}allocateChunk(e,t){const n=e*this.vertexFormatBytes;let i,s=null,o=0,r=-1,a=null;for(let e=0;e<this._buffers.length;++e){s=this._buffers[e],i=this._freeLists[e];for(let t=0;t<i.length;++t)if(i[t].length>=n){a=i[t],o=e,r=t;break}if(a)break}if(a||(o=this._allocateBuffer(),s=this._buffers[o],s&&s.checkCapacity(e,t)&&(r=0,a=this._freeLists[o][r])),a){const e=a.offset/this.vertexFormatBytes,i=new Float32Array(s.vData.buffer,a.offset,n>>2).fill(0);return this._allocateChunkFromEntry(o,r,a,n),new PH(this,o,e,i,t)}return N(9004,n),null}recycleChunk(e){const t=this._freeLists[e.bufferId],n=this._buffers[e.bufferId];let i=e.vertexOffset*this.vertexFormatBytes,s=e.vb.byteLength;if(0===s)return;let o=!1,r=0,a=null,c=t[r];for(;c&&c.offset<i;)a=c,c=t[++r];if(a&&0==i-(a.offset+a.length)&&(a.length+=s,i=a.offset,s=a.length,c&&c.offset-(i+s)==0&&(a.length+=c.length,t.splice(r,1),AH.free(c),c=null),o=!0),!o&&c){if(0==c.offset-(i+s))c.offset=i,c.length+=s;else{const e=AH.alloc();e.offset=i,e.length=s,t.splice(r,0,e)}o=!0}if(o)i+s===n.byteOffset&&(n.byteOffset=i);else{const e=AH.alloc();e.offset=i,e.length=s,t.push(e)}}_allocateChunkFromEntry(e,t,n,i){const s=n.length-i,o=n.offset+i,r=this._buffers[e];r.byteOffset<o&&(r.byteOffset=o),L(s>=0,9004,e,n.offset,n.length),0===s?(this._freeLists[e].splice(t,1),AH.free(n)):(n.offset+=i,n.length=s)}_allocateBuffer(){L(this._buffers.length===this._freeLists.length,9003);const e=new EH,t=this._vCount*this._floatsPerVertex;e.initialize(this._device,this._attributes,t,this._iCount),this._buffers.push(e);const n=AH.alloc();n.offset=0,n.length=e.vData.byteLength;const i=[n];return this._freeLists.push(i),this._buffers.length-1}}wH.IB_SCALE=4;const IH=new Ds(null),RH=new On;class DH{get currBufferAccessor(){return this._staticVBBuffer||(this._staticVBBuffer=this.switchBufferAccessor()),this._staticVBBuffer}get batches(){return this._batches}set currStaticRoot(e){this._currStaticRoot=e}set currIsStatic(e){this._currIsStatic=e}constructor(e){this.device=void 0,this._screens=[],this._staticVBBuffer=null,this._bufferAccessors=new Map,this._drawBatchPool=void 0,this._batches=void 0,this._currBID=-1,this._indexStart=0,this._emptyMaterial=new lg,this._currRenderData=null,this._currMaterial=this._emptyMaterial,this._currTexture=null,this._currSampler=null,this._currStaticRoot=null,this._currComponent=null,this._currTransform=null,this._currTextureHash=0,this._currSamplerHash=0,this._currLayer=0,this._currDepthStencilStateStage=null,this._currIsStatic=!1,this._currHash=0,this._pOpacity=1,this._opacityDirty=0,this._descriptorSetCache=new NH,this._meshDataArray=[],this._root=e,this.device=e.device,this._batches=new zl(64),this._drawBatchPool=new Bl((()=>new sU),128,(e=>e.destroy(this)))}initialize(){return!0}destroy(){for(let e=0;e<this._batches.length;e++)this._batches.array[e]&&this._batches.array[e].destroy(this);this._batches.destroy(),this._bufferAccessors.forEach((e=>{e.destroy()})),this._bufferAccessors.clear(),this._drawBatchPool&&this._drawBatchPool.destroy(),this._descriptorSetCache.destroy(),wN.sharedManager.destroy()}addScreen(e){this._screens.push(e),this._screens.sort(this._screenSort)}removeScreen(e){const t=this._screens.indexOf(e);-1!==t&&this._screens.splice(t,1)}sortScreens(){this._screens.sort(this._screenSort)}getFirstRenderCamera(e){if(e.scene&&e.scene.renderScene){const t=e.scene.renderScene.cameras;for(let n=0;n<t.length;n++){const i=t[n];if(i.visibility&e.layer)return i}}return null}update(){const e=this._screens;let t=0;for(let n=0;n<e.length;++n){const i=e[n],s=i._getRenderScene();if(!i.enabledInHierarchy||!s)continue;this._opacityDirty=0,this._pOpacity=1,this.walk(i.node),this.autoMergeBatches(this._currComponent),this.resetRenderStates();let o=0;if(this._batches.length>t)for(;t<this._batches.length;++t){const e=this._batches.array[t];if(e.model){const t=e.model.subModels;for(let e=0;e<t.length;e++)t[e].priority=o++}else e.descriptorSet=this._descriptorSetCache.getDescriptorSet(e);s.addBatch(e)}}}uploadBuffers(){this._batches.length>0&&(this._meshDataArray.forEach((e=>{e.uploadBuffers()})),this._bufferAccessors.forEach((e=>{e.uploadBuffers(),e.reset()})),this._descriptorSetCache.update())}reset(){for(let e=0;e<this._batches.length;++e){const t=this._batches.array[e];t.isStatic||(t.clear(),this._drawBatchPool.free(t))}this._bufferAccessors.forEach((e=>{e.reset()})),this._meshDataArray.forEach((e=>{e.freeIAPool()})),this._meshDataArray.length=0,this._staticVBBuffer=null,this._currBID=-1,this._indexStart=0,this._currHash=0,this._currLayer=0,this._currRenderData=null,this._currMaterial=this._emptyMaterial,this._currTexture=null,this._currSampler=null,this._currComponent=null,this._currTransform=null,this._batches.clear(),wN.sharedManager.reset()}switchBufferAccessor(e=XO){const t=e===XO?36:$O(e);if(!this._staticVBBuffer||this._staticVBBuffer.vertexFormatBytes!==t){let n=this._bufferAccessors.get(t);n||(n=new wH(this.device,e),this._bufferAccessors.set(t,n)),this._staticVBBuffer=n,this._currBID=-1}return this._staticVBBuffer}registerBufferAccessor(e,t){this._bufferAccessors.set(e,t)}updateBuffer(e,t){const n=this.switchBufferAccessor(e);this._currBID!==t&&(this._currBID=t,this._indexStart=n.getMeshBuffer(t).indexOffset)}commitComp(e,t,n,i,s){let o,r=0,a=-1;if(t&&t.chunk){if(!t.isValid())return;r=t.dataHash,o=t.material,a=t.chunk.bufferId}e.stencilStage=wN.sharedManager.stage;const c=e.stencilStage;this._currHash===r&&0!==r&&this._currMaterial===o&&this._currDepthStencilStateStage===c||(this.autoMergeBatches(this._currComponent),t&&!t.isMeshBuffer&&this.updateBuffer(t.vertexFormat,a),this._currRenderData=t,this._currHash=t?t.dataHash:0,this._currComponent=e,this._currTransform=s,this._currMaterial=e.getRenderMaterial(0),this._currDepthStencilStateStage=c,this._currLayer=e.node.layer,n?(this._currTexture=n.getGFXTexture(),this._currSampler=n.getGFXSampler(),this._currTextureHash=n.getHash(),this._currSamplerHash=this._currSampler.hash):(this._currTexture=null,this._currSampler=null,this._currTextureHash=0,this._currSamplerHash=0)),i.fillBuffers(e,this)}commitIA(e,t,n,i,s){let o,r;this._currMaterial!==this._emptyMaterial&&(this.autoMergeBatches(this._currComponent),this.resetRenderStates());let a=0,c=0;e&&(o=-1===e.blendHash?null:e.getBlendState(),c=e.blendHash,e.stencilStage=wN.sharedManager.stage,r=null!==e.customMaterial?wN.sharedManager.getStencilStage(e.stencilStage,i):wN.sharedManager.getStencilStage(e.stencilStage),a=wN.sharedManager.getStencilHash(e.stencilStage));const l=this._currStaticRoot?this._currStaticRoot._requireDrawBatch():this._drawBatchPool.alloc();l.visFlags=e.node.layer,l.inputAssembler=t,l.useLocalData=s||null,n&&(l.texture=n.getGFXTexture(),l.sampler=n.getGFXSampler(),l.textureHash=n.getHash(),l.samplerHash=l.sampler.hash),l.fillPasses(i||null,r,a,o,c,null,this),this._batches.push(l)}commitModel(e,t,n){let i;this._currMaterial!==this._emptyMaterial&&(this.autoMergeBatches(this._currComponent),this.resetRenderStates());let s=0;n&&(e.stencilStage!==AN.ENABLED&&e.stencilStage!==AN.DISABLED||(e.stencilStage=wN.sharedManager.stage),i=wN.sharedManager.getStencilStage(e.stencilStage,n),s=wN.sharedManager.getStencilHash(e.stencilStage));const o=u.director.getTotalFrames();t&&(t.updateTransform(o),t.updateUBOs(o));for(let o=0;o<t.subModels.length;o++){const r=this._drawBatchPool.alloc(),a=t.subModels[o];r.visFlags=e.node.layer,r.model=t,r.texture=null,r.sampler=null,r.useLocalData=null,i||(i=null),r.fillPasses(n,i,s,null,0,a.patches,this),r.inputAssembler=a.inputAssembler,r.model.visFlags=r.visFlags,r.descriptorSet=a.descriptorSet,this._batches.push(r)}}setupStaticBatch(e,t){this.finishMergeBatches(),this._staticVBBuffer=t,this.currStaticRoot=e}endStaticBatch(){this.finishMergeBatches(),this.currStaticRoot=null,this._staticVBBuffer=null,this.switchBufferAccessor()}commitStaticBatch(e){this._batches.concat(e.drawBatchList),this.finishMergeBatches()}autoMergeBatches(e){const t=this._currMaterial;if(!t)return;let n;const i=this._currRenderData,s=this._staticVBBuffer;if(i&&i.isMeshBuffer)n=i.requestIA(this.device),-1===this._meshDataArray.indexOf(i)&&this._meshDataArray.push(i);else if(s){const e=this._currBID,t=s.getMeshBuffer(e);if(!t)return;const i=t.indexOffset-this._indexStart;if(i<=0)return;this._indexStart,t.indexOffset,t.setDirty(),n=t.requireFreeIA(this.device),n.firstIndex=this._indexStart,n.indexCount=i,this._indexStart=t.indexOffset}if(this._currBID=-1,!n)return;let o,r,a=0,c=0;e&&(o=-1===e.blendHash?null:e.getBlendState(),c=e.blendHash,r=null!==e.customMaterial?wN.sharedManager.getStencilStage(e.stencilStage,t):wN.sharedManager.getStencilStage(e.stencilStage),a=wN.sharedManager.getStencilHash(e.stencilStage));const l=this._currStaticRoot?this._currStaticRoot._requireDrawBatch():this._drawBatchPool.alloc();l.visFlags=this._currLayer,l.texture=this._currTexture,l.sampler=this._currSampler,l.inputAssembler=n,l.useLocalData=this._currTransform,l.textureHash=this._currTextureHash,l.samplerHash=this._currSamplerHash,l.fillPasses(t,r,a,o,c,null,this),this._batches.push(l)}forceMergeBatches(e,t,n){this._currMaterial=e,t?(this._currTexture=t.getGFXTexture(),this._currSampler=t.getGFXSampler(),this._currTextureHash=t.getHash(),this._currSamplerHash=this._currSampler.hash):(this._currTexture=this._currSampler=null,this._currTextureHash=this._currSamplerHash=0),this._currLayer=n.node.layer,this.autoMergeBatches(n)}resetRenderStates(){this._currMaterial=this._emptyMaterial,this._currRenderData=null,this._currTexture=null,this._currComponent=null,this._currTransform=null,this._currTextureHash=0,this._currSamplerHash=0,this._currLayer=0}finishMergeBatches(){this.autoMergeBatches(),this.resetRenderStates()}flushMaterial(e){this._currMaterial=e}walk(e,t=0){if(!e.activeInHierarchy)return;const n=e.children,i=e._uiProps,s=i.uiComp,o=this._pOpacity;let r=o;const a=s&&s.color?s.color.a/255:1;if(this._pOpacity=r*=a*i.localOpacity,i._opacity=r,i.colorDirty&&this._opacityDirty++,s&&s.enabledInHierarchy&&s.updateAssembler(this),this._opacityDirty&&s&&!s.useVertexOpacity&&s.renderData&&s.renderData.vertexCount>0){!function(e,t){const n=e.vertexFormat,i=e.chunk.vb;let s,o,r,a=0;for(let c=0;c<n.length;++c){if(s=n[c],o=Hs[s.format],o.hasAlpha)if(r=e.floatStride,o.size/o.count==1){const e=~~Xt(Math.round(255*t),0,255);for(let t=a;t<i.length;t+=r)i[t]=(4294967040&i[t]|e)>>>0}else if(o.size/o.count==4)for(let e=a+3;e<i.length;e+=r)i[e]=t;a+=o.size>>2}}(s.renderData,r);const e=s.renderData.getMeshBuffer();e&&e.setDirty()}if(n.length>0&&!e._static)for(let e=0;e<n.length;++e){const i=n[e];this.walk(i,t)}i.colorDirty&&(this._opacityDirty--,i.colorDirty=!1),this._pOpacity=o,s&&s.enabledInHierarchy&&s.postUpdateAssembler(this),t+=1}_screenSort(e,t){return e.node.getSiblingIndex()-t.node.getSiblingIndex()}_releaseDescriptorSetCache(e){this._descriptorSetCache.releaseDescriptorSetCache(e)}}e("UI",DH);class OH{get descriptorSet(){return this._descriptorSet}constructor(){this._descriptorSet=null,this._transform=null,this._textureHash=0,this._samplerHash=0,this._localBuffer=null,this._transformUpdate=!0;const e=u.director.root.device;this._localData=new Float32Array(wp.COUNT),this._localBuffer=e.createBuffer(new es(si.UNIFORM|si.TRANSFER_DST,ai.HOST|ai.DEVICE,wp.SIZE,wp.SIZE))}initialize(e){const t=u.director.root.device;this._transform=e.useLocalData,this._textureHash=e.textureHash,this._samplerHash=e.samplerHash,IH.layout=e.passes[0].localSetLayout,this._descriptorSet=t.createDescriptorSet(IH),this._descriptorSet.bindBuffer(wp.BINDING,this._localBuffer);const n=ap.SAMPLER_SPRITE;this._descriptorSet.bindTexture(n,e.texture),this._descriptorSet.bindSampler(n,e.sampler),this._descriptorSet.update(),this._transformUpdate=!0}updateTransform(e){e!==this._transform&&(this._transform=e,this._transformUpdate=!0,this.uploadLocalData())}equals(e,t,n){return this._transform===e&&this._textureHash===t&&this._samplerHash===n}reset(){this._transform=null,this._textureHash=0,this._samplerHash=0}destroy(){this._localBuffer&&(this._localBuffer.destroy(),this._localBuffer=null),this._descriptorSet&&(this._descriptorSet.destroy(),this._descriptorSet=null),this._localData=null}isValid(){return this._transform&&this._transform.isValid}uploadLocalData(){const e=this._transform;if((e.hasChangedFlags||e._dirtyFlags)&&(e.updateWorldTransform(),this._transformUpdate=!0),this._transformUpdate){const t=e.worldMatrix;On.toArray(this._localData,t,wp.MAT_WORLD_OFFSET),On.inverseTranspose(RH,t),On.toArray(this._localData,RH,wp.MAT_WORLD_IT_OFFSET),this._localBuffer.update(this._localData),this._transformUpdate=!1}}}class NH{constructor(){this._descriptorSetCache=new Map,this._dsCacheHashByTexture=new Map,this._localDescriptorSetCache=[],this._localCachePool=void 0,this._localCachePool=new Bl((()=>new OH),16,(e=>e.destroy()))}getDescriptorSet(e){const t=u.director.root;let n;if(e.useLocalData){const t=this._localDescriptorSetCache;for(let n=0,i=t.length;n<i;n++){const i=t[n];if(i.equals(e.useLocalData,e.textureHash,e.samplerHash))return i.descriptorSet}const n=this._localCachePool.alloc();return n.initialize(e),this._localDescriptorSetCache.push(n),n.descriptorSet}if(n=e.textureHash^e.samplerHash,this._descriptorSetCache.has(n))return this._descriptorSetCache.get(n);{IH.layout=e.passes[0].localSetLayout;const i=t.device.createDescriptorSet(IH),s=ap.SAMPLER_SPRITE;return i.bindTexture(s,e.texture),i.bindSampler(s,e.sampler),i.update(),this._descriptorSetCache.set(n,i),this._dsCacheHashByTexture.set(e.textureHash,n),i}}update(){const e=this._localDescriptorSetCache,t=[];e.forEach((n=>{if(n.isValid())n.uploadLocalData();else{n.reset();const i=e.indexOf(n);t.push(i)}}));for(let n=t.length-1;n>=0;n--)e.splice(t[n],1)}reset(){this._localDescriptorSetCache.forEach((e=>{this._localCachePool.free(e)})),this._localDescriptorSetCache.length=0}releaseDescriptorSetCache(e){const t=this._dsCacheHashByTexture.get(e);t&&this._descriptorSetCache.has(t)&&(this._descriptorSetCache.get(t).destroy(),this._descriptorSetCache.delete(t),this._dsCacheHashByTexture.delete(e))}destroy(){this._descriptorSetCache.forEach((e=>{e.destroy()})),this._descriptorSetCache.clear(),this._dsCacheHashByTexture.clear(),this._localDescriptorSetCache.length=0,this._localCachePool.destroy()}}u.internal.Batcher2D=DH,k(EH.prototype,"MeshBuffer",["byteStart","vertexStart","indicesStart","request"].map((e=>({name:e,suggest:`please use meshBuffer.accessor.${e} instead`})))),V(EH.prototype,"MeshBuffer",[{name:"indicesOffset",newName:"indexOffset"}]),H(EH.prototype,"MeshBuffer",[{name:"vertexBuffers"},{name:"indexBuffer"}]),V(DH.prototype,"Batcher2D",[{name:"currBufferBatch",newName:"currBufferAccessor"},{name:"acquireBufferBatch",newName:"switchBufferAccessor"}]),H(nN.prototype,"MeshRenderData",[{name:"formatByte"},{name:"byteStart"},{name:"byteCount"}]),V(nN.prototype,"MeshRenderData",[{name:"indicesStart",newName:"indexStart"}]),e("QuadRenderData",class extends nN{constructor(e){super(e),D(9006)}});let MH=null,LH=-1;const BH="BES bswy:->@123丁ぁᄁ",FH=Object.create(null),zH=[],UH=3e3,GH=(()=>{let e;return()=>{if(void 0===e)if("FontFace"in window){const t=/Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent),n=/OS X.*Version\/10\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);e=t?parseInt(t[1],10)>42:!n}else e=!1;return e}})();function VH(){let e=!0;const t=Date.now();for(let n=zH.length-1;n>=0;n--){const i=zH[n],s=i.fontFamilyName;if(t-i.startTime>UH){D(4933,s),i.onComplete(null,s),zH.splice(n,1);continue}const o=i.refWidth,r=`40px ${s}`;MH.font=r,o!==DO(MH,BH,r)?(zH.splice(n,1),i.onComplete(null,s)):e=!1}e&&(clearInterval(LH),LH=-1)}function HH(e,t,n){const i=function(e){const t=e.lastIndexOf(".ttf");if(-1===t)return e;const n=e.lastIndexOf("/");let i;return i=-1===n?`${e.substring(0,t)}_LABEL`:`${e.substring(n+1,t)}_LABEL`,-1!==i.indexOf(" ")&&(i=`"${i}"`),i}(e);if(FH[i])return void n(null,i);if(!MH){const e=document.createElement("canvas");e.width=100,e.height=100,MH=e.getContext("2d")}const s=DO(MH,BH,`40px ${i}`),o=document.createElement("style");o.type="text/css";let r="";Number.isNaN(i)?r+=`@font-face { font-family:${i}; src:`:r+=`@font-face { font-family:"${i}"; src:`,r+=`url("${e}");`,o.textContent=`${r}}`,document.body.appendChild(o);const a=document.createElement("div"),c=a.style;if(c.fontFamily=i,a.innerHTML=".",c.position="absolute",c.left="-100px",c.top="-100px",document.body.appendChild(a),GH())!function(e,t,n){const i=new Promise(((n,i)=>{const s=()=>{Date.now()-e>=UH?i():document.fonts.load(`40px ${t}`).then((e=>{e.length>=1?n():setTimeout(s,100)}),(()=>{i()}))};s()}));let s=null;const o=new Promise(((e,t)=>{s=setTimeout(t,UH)}));Promise.race([o,i]).then((()=>{s&&(clearTimeout(s),s=null),n(null,t)}),(()=>{D(4933,t),n(null,t)}))}(Date.now(),i,n);else{const e={fontFamilyName:i,refWidth:s,onComplete:n,startTime:Date.now()};zH.push(e),-1===LH&&(LH=setInterval(VH,100))}FH[i]=o}function kH(e,t,n,i){const s=new rO;s._nativeUrl=e,s._nativeAsset=t,i(null,s)}var jH,WH,qH,XH,YH;hI.register({".font":HH,".eot":HH,".ttf":HH,".woff":HH,".svg":HH,".ttc":HH}),gI.register({".font":kH,".eot":kH,".ttf":kH,".woff":kH,".svg":kH,".ttc":kH}),u.UI={MeshBuffer:EH,spriteAssembler:gH,graphicsAssembler:vG,labelAssembler:GV,RenderData:tN,MeshRenderData:nN},function(e){e[e.positions=zi.ATTR_POSITION]="positions",e[e.normals=zi.ATTR_NORMAL]="normals",e[e.uvs=zi.ATTR_TEX_COORD]="uvs",e[e.colors=zi.ATTR_COLOR]="colors"}(jH||(jH={}));class KH{constructor(){this._arrayBufferOrPaddings=[],this._length=0}setNextAlignment(e){if(0!==e){const t=this._length%e;if(0!==t){const n=e-t;this._arrayBufferOrPaddings.push(n),this._length+=n}}}addBuffer(e){const t=this._length;return this._arrayBufferOrPaddings.push(e),this._length+=e.byteLength,t}getLength(){return this._length}getCombined(){const e=new Uint8Array(this._length);let t=0;return this._arrayBufferOrPaddings.forEach((n=>{"number"==typeof n?t+=n:(e.set(new Uint8Array(n),t),t+=n.byteLength)})),e.buffer}}class $H{constructor(e,t){if(this._mesh=void 0,this._subMeshRenderings=[],this._mesh=e,!this._mesh.struct.morph)return;const n=this._mesh.struct.primitives.length;this._subMeshRenderings=new Array(n).fill(null);for(let e=0;e<n;++e){const n=this._mesh.struct.morph.subMeshMorphs[e];n&&(n.targets.length>Lp.MAX_MORPH_TARGET_COUNT?this._subMeshRenderings[e]=new JH(this._mesh,e,this._mesh.struct.morph,t):this._subMeshRenderings[e]=new QH(this._mesh,e,this._mesh.struct.morph,t))}}createInstance(){const e=this._mesh.struct.primitives.length,t=new Array(e);for(let s=0;s<e;++s){var n,i;t[s]=null!==(n=null===(i=this._subMeshRenderings[s])||void 0===i?void 0:i.createInstance())&&void 0!==n?n:null}return{setWeights(e,n){var i;null===(i=t[e])||void 0===i||i.setWeights(n)},requiredPatches:e=>{this._mesh.struct.morph;const n=this._mesh.struct.morph.subMeshMorphs[e],i=t[e];if(null===i)return null;const s=[{name:"CC_USE_MORPH",value:!0},{name:"CC_MORPH_TARGET_COUNT",value:n.targets.length}];return n.attributes.includes(zi.ATTR_POSITION)&&s.push({name:"CC_MORPH_TARGET_HAS_POSITION",value:!0}),n.attributes.includes(zi.ATTR_NORMAL)&&s.push({name:"CC_MORPH_TARGET_HAS_NORMAL",value:!0}),n.attributes.includes(zi.ATTR_TANGENT)&&s.push({name:"CC_MORPH_TARGET_HAS_TANGENT",value:!0}),s.push(...i.requiredPatches()),s},adaptPipelineState:(e,n)=>{var i;null===(i=t[e])||void 0===i||i.adaptPipelineState(n)},destroy:()=>{for(const e of t)null==e||e.destroy()}}}}class QH{constructor(e,t,n,i){this._gfxDevice=void 0,this._subMeshMorph=void 0,this._textureInfo=void 0,this._attributes=void 0,this._verticesCount=void 0,this._gfxDevice=i;const s=n.subMeshMorphs[t];this._subMeshMorph=s,nk(e,t,i);const o=e.struct.vertexBundles[e.struct.primitives[t].vertexBundelIndices[0]].view.count;this._verticesCount=o;const r=s.targets.length,a=tk(i,o*r);this._textureInfo={width:a.width,height:a.height},this._attributes=s.attributes.map(((t,n)=>{const i=a.create(),r=i.valueView;return s.targets.forEach(((t,i)=>{const s=t.displacements[n],a=new Float32Array(e.data.buffer,e.data.byteOffset+s.offset,s.count),c=o*i*4;for(let e=0;e<o;++e)r[c+4*e+0]=a[3*e+0],r[c+4*e+1]=a[3*e+1],r[c+4*e+2]=a[3*e+2]})),i.updatePixels(),{name:t,morphTexture:i}}))}destroy(){for(const e of this._attributes)e.morphTexture.destroy()}createInstance(){const e=new ek(this._gfxDevice,this._subMeshMorph.targets.length);return e.setMorphTextureInfo(this._textureInfo.width,this._textureInfo.height),e.setVerticesCount(this._verticesCount),e.commit(),{setWeights:t=>{e.setWeights(t),e.commit()},requiredPatches:()=>[{name:"CC_MORPH_TARGET_USE_TEXTURE",value:!0}],adaptPipelineState:t=>{for(const e of this._attributes){let n;switch(e.name){case zi.ATTR_POSITION:n=Gp;break;case zi.ATTR_NORMAL:n=kp;break;case zi.ATTR_TANGENT:n=qp;break;default:S("Unexpected attribute!")}void 0!==n&&(t.bindSampler(n,e.morphTexture.sampler),t.bindTexture(n,e.morphTexture.texture))}t.bindBuffer(Lp.BINDING,e.buffer),t.update()},destroy:()=>{}}}}class JH{constructor(e,t,n,i){this._gfxDevice=void 0,this._attributes=[],this._gfxDevice=i;const s=n.subMeshMorphs[t];nk(e,t,i),this._attributes=s.attributes.map(((t,n)=>({name:t,targets:s.targets.map((t=>({displacements:new Float32Array(e.data.buffer,e.data.byteOffset+t.displacements[n].offset,t.displacements[n].count)})))})))}get data(){return this._attributes}createInstance(){return new ZH(this,this._attributes[0].targets[0].displacements.length/3,this._gfxDevice)}}class ZH{constructor(e,t,n){this._attributes=void 0,this._owner=void 0,this._morphUniforms=void 0,this._owner=e,this._morphUniforms=new ek(n,0);const i=tk(n,t);this._morphUniforms.setMorphTextureInfo(i.width,i.height),this._morphUniforms.commit(),this._attributes=this._owner.data.map((e=>{const t=i.create();return{attributeName:e.name,morphTexture:t}}))}setWeights(e){for(let t=0;t<this._attributes.length;++t){const n=this._attributes[t],i=n.morphTexture.valueView,s=this._owner.data[t];e.length,s.targets.length;for(let t=0;t<s.targets.length;++t){const n=s.targets[t].displacements,o=e[t],r=n.length/3;if(0===t)for(let e=0;e<r;++e)i[4*e+0]=n[3*e+0]*o,i[4*e+1]=n[3*e+1]*o,i[4*e+2]=n[3*e+2]*o;else if(0!==o)for(let e=0;e<r;++e)i[4*e+0]+=n[3*e+0]*o,i[4*e+1]+=n[3*e+1]*o,i[4*e+2]+=n[3*e+2]*o}n.morphTexture.updatePixels()}}requiredPatches(){return[{name:"CC_MORPH_TARGET_USE_TEXTURE",value:!0},{name:"CC_MORPH_PRECOMPUTED",value:!0}]}adaptPipelineState(e){for(const t of this._attributes){let n;switch(t.attributeName){case zi.ATTR_POSITION:n=Gp;break;case zi.ATTR_NORMAL:n=kp;break;case zi.ATTR_TANGENT:n=qp;break;default:S("Unexpected attribute!")}void 0!==n&&(e.bindSampler(n,t.morphTexture.sampler),e.bindTexture(n,t.morphTexture.texture))}e.bindBuffer(Lp.BINDING,this._morphUniforms.buffer),e.update()}destroy(){this._morphUniforms.destroy();for(let e=0;e<this._attributes.length;++e)this._attributes[e].morphTexture.destroy()}}class ek{constructor(e,t){this._targetCount=void 0,this._localBuffer=void 0,this._remoteBuffer=void 0,this._targetCount=t,this._localBuffer=new DataView(new ArrayBuffer(Lp.SIZE)),this._remoteBuffer=e.createBuffer(new es(si.UNIFORM|si.TRANSFER_DST,ai.HOST|ai.DEVICE,Lp.SIZE,Lp.SIZE))}destroy(){this._remoteBuffer.destroy()}get buffer(){return this._remoteBuffer}setWeights(e){e.length,this._targetCount;for(let t=0;t<e.length;++t)this._localBuffer.setFloat32(Lp.OFFSET_OF_WEIGHTS+4*t,e[t],u.sys.isLittleEndian)}setMorphTextureInfo(e,t){this._localBuffer.setFloat32(Lp.OFFSET_OF_DISPLACEMENT_TEXTURE_WIDTH,e,u.sys.isLittleEndian),this._localBuffer.setFloat32(Lp.OFFSET_OF_DISPLACEMENT_TEXTURE_HEIGHT,t,u.sys.isLittleEndian)}setVerticesCount(e){this._localBuffer.setFloat32(Lp.OFFSET_OF_VERTICES_COUNT,e,u.sys.isLittleEndian)}commit(){this._remoteBuffer.update(this._localBuffer.buffer)}}function tk(e,t){let n,i,o,r;e.getFormatFeatures(ti.RGBA32F)&ui.SAMPLED_TEXTURE?(n=t,o=16,i=bm.PixelFormat.RGBA32F,r=Float32Array):(n=4*t,o=4,i=bm.PixelFormat.RGBA8888,r=Uint8Array);const{width:c,height:l}=function(e){e<5&&(e=5);const t=s(a(e)),n=t>>1;return{width:1<<(1&t?n+1:n),height:1<<n}}(n);return{width:c,height:l,create:()=>{const t=new ArrayBuffer(c*l*o),n=new Float32Array(t),s=r===Float32Array?n:new r(t),a=new hm({width:c,height:l,_data:s,_compressed:!1,format:i}),h=new bm;h.setFilters(bm.Filter.NEAREST,bm.Filter.NEAREST),h.setMipFilter(bm.Filter.NONE),h.setWrapMode(bm.WrapMode.CLAMP_TO_EDGE,bm.WrapMode.CLAMP_TO_EDGE,bm.WrapMode.CLAMP_TO_EDGE),h.image=a,h.getGFXTexture()||S("Unexpected: failed to create morph texture?");const u=e.getSampler(h.getSamplerInfo());return{get texture(){return h.getGFXTexture()},get sampler(){return u},get valueView(){return n},destroy(){h.destroy()},updatePixels(){h.uploadData(s)}}}}}function nk(e,t,n){e.renderingSubMeshes[t].enableVertexIdChannel(n)}function ik(e){switch(e){case 1:return Uint8Array;case 2:return Uint16Array;case 4:return Uint32Array;default:return Uint8Array}}const sk=new gn,ok=new gn,rk=new Uint8Array;let ak=e("Mesh",mc("cc.Mesh")((XH=ac((qH=class extends xh{get _nativeAsset(){return this._data.buffer}set _nativeAsset(e){this._data=new Uint8Array(e)}get subMeshCount(){const e=this.renderingSubMeshes;return e?e.length:0}get minPosition(){return this.struct.minPosition}get maxPosition(){return this.struct.maxPosition}get struct(){return this._struct}get data(){return this._data}get hash(){return this._hash||(this._hash=fo(this._data,666)),this._hash}get jointBufferIndices(){return this._jointBufferIndices?this._jointBufferIndices:this._jointBufferIndices=this._struct.primitives.map((e=>e.jointMapIndex||0))}get renderingSubMeshes(){return this.initialize(),this._renderingSubMeshes}constructor(){super(),this.morphRendering=null,rc(this,"_struct",XH,this),rc(this,"_hash",YH,this),this._data=rk,this._initialized=!1,this._renderingSubMeshes=null,this._boneSpaceBounds=new Map,this._jointBufferIndices=null}onLoaded(){this.initialize()}initialize(){if(this._initialized)return;this._initialized=!0;const{buffer:e}=this._data,t=u.director.root.device,n=this._createVertexBuffers(t,e),i=[];for(let s=0;s<this._struct.primitives.length;s++){const o=this._struct.primitives[s];if(0===o.vertexBundelIndices.length)continue;let r=null,a=null;if(o.indexView){const n=o.indexView;let i=n.stride,s=n.length;if(4===i&&!t.hasFeature(ei.ELEMENT_INDEX_UINT)){const e=this._struct.vertexBundles[o.vertexBundelIndices[0]].view.count;if(e>=65536){D(10001,e,65536);continue}i>>=1,s>>=1}r=t.createBuffer(new es(si.INDEX,ai.DEVICE,s,i)),a=new(ik(n.stride))(e,n.offset,n.count),n.stride!==i&&(a=ik(i).from(a)),r.update(a)}const c=o.vertexBundelIndices.map((e=>n[e])),l=[];if(o.vertexBundelIndices.length>0){const e=o.vertexBundelIndices[0],t=this._struct.vertexBundles[e].attributes;for(let e=0;e<t.length;++e){const n=t[e];l[e]=new vs(n.name,n.format,n.isNormalized,n.stream,n.isInstanced,n.location)}}const h=new yE(c,l,o.primitiveMode,r);h.mesh=this,h.subMeshIdx=s,i.push(h)}this._renderingSubMeshes=i,this._struct.morph&&(this.morphRendering=function(e,t){return new $H(e,t)}(this,t))}destroy(){return this.destroyRenderingMesh(),super.destroy()}destroyRenderingMesh(){if(this._renderingSubMeshes){for(let e=0;e<this._renderingSubMeshes.length;e++)this._renderingSubMeshes[e].destroy();this._renderingSubMeshes=null,this._initialized=!1}}assign(e,t){this.reset({struct:e,data:t})}reset(e){this.destroyRenderingMesh(),this._struct=e.struct,this._data=e.data,this._hash=0}getBoneSpaceBounds(e){if(this._boneSpaceBounds.has(e.hash))return this._boneSpaceBounds.get(e.hash);const t=[];this._boneSpaceBounds.set(e.hash,t);const n=[],{bindposes:i}=e;for(let e=0;e<i.length;e++)t.push(new Ua(1/0,1/0,1/0,-1/0,-1/0,-1/0)),n.push(!1);const{primitives:s}=this._struct;for(let e=0;e<s.length;e++){const s=this.readAttribute(e,zi.ATTR_JOINTS),o=this.readAttribute(e,zi.ATTR_WEIGHTS),r=this.readAttribute(e,zi.ATTR_POSITION);if(!s||!o||!r)continue;const a=Math.min(s.length/4,o.length/4,r.length/3);for(let e=0;e<a;e++){gn.set(sk,r[3*e+0],r[3*e+1],r[3*e+2]);for(let r=0;r<4;++r){const a=4*e+r,c=s[a];if(0===o[a]||c>=i.length)continue;gn.transformMat4(ok,sk,i[c]),n[c]=!0;const l=t[c];gn.min(l.center,l.center,ok),gn.max(l.halfExtents,l.halfExtents,ok)}}}for(let e=0;e<i.length;e++){const i=t[e];n[e]?Ua.fromPoints(i,i.center,i.halfExtents):t[e]=null}return t}merge(e,t,n){if(n&&!this.validateMergingMesh(e))return!1;const i=new gn,s=t&&new Tn,o=t&&new Ua;if(s&&t.getRotation(s),!this._initialized){const n=JSON.parse(JSON.stringify(e._struct)),r=e._data.slice();if(t){n.maxPosition&&n.minPosition&&(gn.add(o.center,n.maxPosition,n.minPosition),gn.multiplyScalar(o.center,o.center,.5),gn.subtract(o.halfExtents,n.maxPosition,n.minPosition),gn.multiplyScalar(o.halfExtents,o.halfExtents,.5),Ua.transform(o,o,t),gn.add(n.maxPosition,o.center,o.halfExtents),gn.subtract(n.minPosition,o.center,o.halfExtents));for(let e=0;e<n.vertexBundles.length;e++){const o=n.vertexBundles[e];for(let e=0;e<o.attributes.length;e++)if(o.attributes[e].name===zi.ATTR_POSITION||o.attributes[e].name===zi.ATTR_NORMAL){const{format:n}=o.attributes[e],a=new DataView(r.buffer,o.view.offset+ck(o.attributes,e)),c=uk(a,n),l=_k(a,n);if(!c||!l)continue;const h=o.view.count,u=o.view.stride,_=hk(n);for(let n=0;n<h;n++){const r=n*u,a=r+_,h=a+_;switch(i.set(c(r),c(a),c(h)),o.attributes[e].name){case zi.ATTR_POSITION:i.transformMat4(t);break;case zi.ATTR_NORMAL:gn.transformQuat(i,i,s)}l(r,i.x),l(a,i.y),l(h,i.z)}}}}return this.reset({struct:n,data:r}),this.initialize(),!0}const r=new KH;let a,c,l,h,u,_=0,d=0,p=0,f=0,m=0,g=0,v=0,y=0,x=!1;const S=new Array(this._struct.vertexBundles.length);for(let n=0;n<this._struct.vertexBundles.length;++n){const o=this._struct.vertexBundles[n],C=e._struct.vertexBundles[n];p=o.view.offset,f=C.view.offset,d=o.view.stride,_=o.view.count+C.view.count,a=new ArrayBuffer(_*d),c=new Uint8Array(a),l=this._data.subarray(p,p+o.view.length),p+=l.length,h=e._data.subarray(f,f+C.view.length),f+=h.length,c.set(l),m=0;for(const e of o.attributes){v=0,x=!1;for(const t of C.attributes){if(e.name===t.name&&e.format===t.format){x=!0;break}v+=Hs[t.format].size}if(x){y=Hs[e.format].size,g=o.view.length+m;for(let n=0;n<C.view.count;++n){if(u=h.subarray(v,v+y),c.set(u,g),(e.name===zi.ATTR_POSITION||e.name===zi.ATTR_NORMAL)&&t){const n=new Float32Array(c.buffer,g,3);switch(i.set(n[0],n[1],n[2]),e.name){case zi.ATTR_POSITION:i.transformMat4(t);break;case zi.ATTR_NORMAL:gn.transformQuat(i,i,s)}n[0]=i.x,n[1]=i.y,n[2]=i.z}g+=o.view.stride,v+=C.view.stride}}m+=Hs[e.format].size}S[n]={attributes:o.attributes,view:{offset:r.getLength(),length:a.byteLength,count:_,stride:d}},r.addBuffer(a)}let C,E,T,b=0,A=2,P=0;const w=new Array(this._struct.primitives.length);for(let t=0;t<this._struct.primitives.length;++t){const n=this._struct.primitives[t],i=e._struct.primitives[t];w[t]={primitiveMode:n.primitiveMode,vertexBundelIndices:n.vertexBundelIndices};for(const e of n.vertexBundelIndices)P=Math.max(P,this._struct.vertexBundles[e].view.count);if(n.indexView&&i.indexView){b=n.indexView.count,b+=i.indexView.count,p=n.indexView.offset,f=i.indexView.offset,A=b<256?1:b<65536?2:4;const s=new ArrayBuffer(b*A);if(C=2===A?new Uint16Array(s):1===A?new Uint8Array(s):new Uint32Array(s),E=2===n.indexView.stride?new Uint16Array(this._data.buffer,p,n.indexView.count):1===n.indexView.stride?new Uint8Array(this._data.buffer,p,n.indexView.count):new Uint32Array(this._data.buffer,p,n.indexView.count),A===n.indexView.stride)C.set(E);else for(let e=0;e<n.indexView.count;++e)C[e]=E[e];p+=n.indexView.length,T=2===i.indexView.stride?new Uint16Array(e._data.buffer,f,i.indexView.count):1===i.indexView.stride?new Uint8Array(e._data.buffer,f,i.indexView.count):new Uint32Array(e._data.buffer,f,i.indexView.count);for(let e=0;e<i.indexView.count;++e)C[n.indexView.count+e]=P+T[e];f+=i.indexView.length,w[t].indexView={offset:r.getLength(),length:s.byteLength,count:b,stride:A},r.setNextAlignment(A),r.addBuffer(s)}}const I={vertexBundles:S,primitives:w,minPosition:this._struct.minPosition,maxPosition:this._struct.maxPosition};return I.minPosition&&e._struct.minPosition&&I.maxPosition&&e._struct.maxPosition&&(t?(gn.add(o.center,e._struct.maxPosition,e._struct.minPosition),gn.multiplyScalar(o.center,o.center,.5),gn.subtract(o.halfExtents,e._struct.maxPosition,e._struct.minPosition),gn.multiplyScalar(o.halfExtents,o.halfExtents,.5),Ua.transform(o,o,t),gn.add(i,o.center,o.halfExtents),gn.max(I.maxPosition,I.maxPosition,i),gn.subtract(i,o.center,o.halfExtents),gn.min(I.minPosition,I.minPosition,i)):(gn.min(I.minPosition,I.minPosition,e._struct.minPosition),gn.max(I.maxPosition,I.maxPosition,e._struct.maxPosition))),this.reset({struct:I,data:new Uint8Array(r.getCombined())}),this.initialize(),!0}validateMergingMesh(e){if(this._struct.vertexBundles.length!==e._struct.vertexBundles.length)return!1;for(let t=0;t<this._struct.vertexBundles.length;++t){const n=this._struct.vertexBundles[t],i=e._struct.vertexBundles[t];if(n.attributes.length!==i.attributes.length)return!1;for(let e=0;e<n.attributes.length;++e)if(n.attributes[e].format!==i.attributes[e].format)return!1}if(this._struct.primitives.length!==e._struct.primitives.length)return!1;for(let t=0;t<this._struct.primitives.length;++t){const n=this._struct.primitives[t],i=e._struct.primitives[t];if(n.vertexBundelIndices.length!==i.vertexBundelIndices.length)return!1;for(let e=0;e<n.vertexBundelIndices.length;++e)if(n.vertexBundelIndices[e]!==i.vertexBundelIndices[e])return!1;if(n.primitiveMode!==i.primitiveMode)return!1;if(n.indexView){if(void 0===i.indexView)return!1}else if(i.indexView)return!1}return!0}readAttribute(e,t){let n=null;return this._accessAttribute(e,t,((e,t)=>{const i=e.view.count,{format:s}=e.attributes[t],o=Js(Hs[s]);if(0===i)return;const r=new DataView(this._data.buffer,e.view.offset+ck(e.attributes,t)),a=Hs[s],c=uk(r,s);if(!o||!c)return;const l=a.count,h=new o(i*l),u=e.view.stride;for(let e=0;e<i;++e)for(let t=0;t<l;++t)h[l*e+t]=c(u*e+h.BYTES_PER_ELEMENT*t);n=h})),n}copyAttribute(e,t,n,i,s){let o=!1;return this._accessAttribute(e,t,((e,t)=>{const r=e.view.count;if(0===r)return void(o=!0);const{format:a}=e.attributes[t],c=new DataView(this._data.buffer,e.view.offset+ck(e.attributes,t)),l=new DataView(n,s),h=Hs[a],u=uk(c,a),_=_k(l,a);if(!u||!_)return;const d=h.count,p=e.view.stride,f=hk(a),m=i,g=f;for(let e=0;e<r;++e)for(let t=0;t<d;++t)_(m*e+g*t,u(p*e+f*t));o=!0})),o}readIndices(e){if(e>=this._struct.primitives.length)return null;const t=this._struct.primitives[e];if(!t.indexView)return null;const{stride:n}=t.indexView;return new(1===n?Uint8Array:2===n?Uint16Array:Uint32Array)(this._data.buffer,t.indexView.offset,t.indexView.count)}copyIndices(e,t){if(e>=this._struct.primitives.length)return!1;const n=this._struct.primitives[e];if(!n.indexView)return!1;const i=n.indexView.count,s=1===n.indexView.stride?ti.R8UI:2===n.indexView.stride?ti.R16UI:ti.R32UI,o=uk(new DataView(this._data.buffer),s);for(let e=0;e<i;++e)t[e]=o(n.indexView.offset+Hs[s].size*e);return!0}_accessAttribute(e,t,n){if(e>=this._struct.primitives.length)return;const i=this._struct.primitives[e];for(const e of i.vertexBundelIndices){const i=this._struct.vertexBundles[e],s=i.attributes.findIndex((e=>e.name===t));if(!(s<0)){n(i,s);break}}}_createVertexBuffers(e,t){return this._struct.vertexBundles.map((n=>{const i=e.createBuffer(new es(si.VERTEX,ai.DEVICE,n.view.length,n.view.stride)),s=new Uint8Array(t,n.view.offset,n.view.length);return i.update(s),i}))}initDefault(e){super.initDefault(e),this.reset({struct:{vertexBundles:[],primitives:[]},data:rk})}}).prototype,"_struct",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{vertexBundles:[],primitives:[]}}}),YH=ac(qH.prototype,"_hash",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),WH=qH))||WH);function ck(e,t){let n=0;for(let i=0;i<t;++i){const t=e[i];n+=Hs[t.format].size}return n}u.Mesh=ak;const{isLittleEndian:lk}=$h;function hk(e){const t=Hs[e];return t.size/t.count}function uk(e,t){const n=Hs[t],i=n.size/n.count;switch(n.type){case ni.UNORM:switch(i){case 1:return t=>e.getUint8(t);case 2:return t=>e.getUint16(t,lk);case 4:return t=>e.getUint32(t,lk)}break;case ni.SNORM:case ni.INT:switch(i){case 1:return t=>e.getInt8(t);case 2:return t=>e.getInt16(t,lk);case 4:return t=>e.getInt32(t,lk)}break;case ni.UINT:switch(i){case 1:return t=>e.getUint8(t);case 2:return t=>e.getUint16(t,lk);case 4:return t=>e.getUint32(t,lk)}break;case ni.FLOAT:return t=>e.getFloat32(t,lk)}return null}function _k(e,t){const n=Hs[t],i=n.size/n.count;switch(n.type){case ni.UNORM:switch(i){case 1:return(t,n)=>e.setUint8(t,n);case 2:return(t,n)=>e.setUint16(t,n,lk);case 4:return(t,n)=>e.setUint32(t,n,lk)}break;case ni.SNORM:case ni.INT:switch(i){case 1:return(t,n)=>e.setInt8(t,n);case 2:return(t,n)=>e.setInt16(t,n,lk);case 4:return(t,n)=>e.setInt32(t,n,lk)}break;case ni.UINT:switch(i){case 1:return(t,n)=>e.setUint8(t,n);case 2:return(t,n)=>e.setUint16(t,n,lk);case 4:return(t,n)=>e.setUint32(t,n,lk)}break;case ni.FLOAT:return(t,n)=>e.setFloat32(t,n,lk)}return null}const dk=[new vs(zi.ATTR_POSITION,ti.RGB32F),new vs(zi.ATTR_NORMAL,ti.RGB32F),new vs(zi.ATTR_TEX_COORD,ti.RG32F),new vs(zi.ATTR_TANGENT,ti.RGBA32F),new vs(zi.ATTR_COLOR,ti.RGBA32F)],pk=new gn;function fk(e,t,n){n=n||{};const i=[];let s=0;const o=[];let r,a=0;const c=e.positions.slice();if(c.length>0){if(r=null,e.attributes)for(const t of e.attributes)if(t.name===zi.ATTR_POSITION){r=t;break}r||(r=dk[0]),i.push(r);const t=Hs[r.format];a=Math.max(a,Math.floor(c.length/t.count)),o.push({offset:s,data:c,attribute:r}),s+=t.size}if(e.normals&&e.normals.length>0){if(r=null,e.attributes)for(const t of e.attributes)if(t.name===zi.ATTR_NORMAL){r=t;break}r||(r=dk[1]);const t=Hs[r.format];i.push(r),a=Math.max(a,Math.floor(e.normals.length/t.count)),o.push({offset:s,data:e.normals,attribute:r}),s+=t.size}if(e.uvs&&e.uvs.length>0){if(r=null,e.attributes)for(const t of e.attributes)if(t.name===zi.ATTR_TEX_COORD){r=t;break}r||(r=dk[2]);const t=Hs[r.format];i.push(r),a=Math.max(a,Math.floor(e.uvs.length/t.count)),o.push({offset:s,data:e.uvs,attribute:r}),s+=t.size}if(e.tangents&&e.tangents.length>0){if(r=null,e.attributes)for(const t of e.attributes)if(t.name===zi.ATTR_TANGENT){r=t;break}r||(r=dk[3]);const t=Hs[r.format];i.push(r),a=Math.max(a,Math.floor(e.tangents.length/t.count)),o.push({offset:s,data:e.tangents,attribute:r}),s+=t.size}if(e.colors&&e.colors.length>0){if(r=null,e.attributes)for(const t of e.attributes)if(t.name===zi.ATTR_COLOR){r=t;break}r||(r=dk[4]);const t=Hs[r.format];i.push(r),a=Math.max(a,Math.floor(e.colors.length/t.count)),o.push({offset:s,data:e.colors,attribute:r}),s+=t.size}if(e.customAttributes)for(const t of e.customAttributes){const e=Hs[t.attr.format];i.push(t.attr),a=Math.max(a,Math.floor(t.values.length/e.count)),o.push({offset:s,data:t.values,attribute:t.attr}),s+=e.size}const l=new KH,h=new ArrayBuffer(a*s),u=new DataView(h);for(const e of o)mE(u,e.data,e.attribute.format,e.offset,s);l.setNextAlignment(0);const _={attributes:i,view:{offset:l.getLength(),length:h.byteLength,count:a,stride:s}};l.addBuffer(h);let d=null,p=0;if(e.indices){const{indices:t}=e;p=t.length,d=new ArrayBuffer(2*p),mE(new DataView(d),t,ti.R16UI)}const f={primitiveMode:e.primitiveMode||Pi.TRIANGLE_LIST,vertexBundelIndices:[0]};d&&(l.setNextAlignment(2),f.indexView={offset:l.getLength(),length:d.byteLength,count:p,stride:2},l.addBuffer(d));let m=e.minPos;if(!m&&n.calculateBounds){m=gn.set(new gn,1/0,1/0,1/0);for(let e=0;e<a;++e)gn.set(pk,c[3*e+0],c[3*e+1],c[3*e+2]),gn.min(m,m,pk)}let g=e.maxPos;if(!g&&n.calculateBounds){g=gn.set(new gn,-1/0,-1/0,-1/0);for(let e=0;e<a;++e)gn.set(pk,c[3*e+0],c[3*e+1],c[3*e+2]),gn.max(g,g,pk)}const v={vertexBundles:[_],primitives:[f]};return m&&(v.minPosition=new gn(m.x,m.y,m.z)),g&&(v.maxPosition=new gn(g.x,g.y,g.z)),t||(t=new ak),t.reset({struct:v,data:new Uint8Array(l.getCombined())}),t}var mk,gk,vk,yk,xk,Sk,Ck,Ek,Tk,bk,Ak,Pk,wk,Ik,Rk,Dk,Ok,Nk,Mk,Lk,Bk,Fk,zk,Uk,Gk,Vk,Hk,kk,jk,Wk,qk,Xk,Yk,Kk,$k,Qk,Jk,Zk,ej,tj,nj=Object.freeze({__proto__:null,find:tP,toPPM:function(e,t,n){return`P3 ${t} ${n} 255\n${e.filter(((e,t)=>t%4<3)).toString()}\n`},readMesh:function(e,t=0){const n={positions:[]},i=new DataView(e.data.buffer,e.data.byteOffset,e.data.byteLength),s=e.struct,o=s.primitives[t];for(const e of o.vertexBundelIndices){const t=s.vertexBundles[e];let o=t.view.offset;const{length:r,stride:a}=t.view;for(const e of t.attributes){const t=jH[e.name];t&&(n[t]=(n[t]||[]).concat(gE(i,e.format,o,r,a))),o+=Hs[e.format].size}}const r=o.indexView;return n.indices=gE(i,ti[`R${8*r.stride}UI`],r.offset,r.length),n},createMesh:fk,readBuffer:gE,writeBuffer:mE,mapBuffer:vE});e("utils",nj);class ij extends fv{constructor(...e){super(...e),this._morphRenderingInstance=null,this._usedMaterials=new Set}getMacroPatches(e){const t=super.getMacroPatches(e);if(this._morphRenderingInstance){const n=this._morphRenderingInstance.requiredPatches(e);if(n)return n.concat(null!=t?t:[])}return t}initSubModel(e,t,n){return super.initSubModel(e,t,this._launderMaterial(n))}destroy(){super.destroy(),this._morphRenderingInstance=null}setSubModelMaterial(e,t){return super.setSubModelMaterial(e,this._launderMaterial(t))}setMorphRendering(e){this._morphRenderingInstance=e}_updateLocalDescriptors(e,t){super._updateLocalDescriptors(e,t),this._morphRenderingInstance&&this._morphRenderingInstance.adaptPipelineState(e,t)}_launderMaterial(e){return e}}const sj=qe({OFF:0,ON:1}),oj=qe({OFF:0,ON:1});let rj=(mk=mc("cc.ModelLightmapSettings"),gk=bc("_recieveShadow"),mk((xk=ac((yk=class{constructor(){rc(this,"texture",xk,this),rc(this,"uvParam",Sk,this),rc(this,"_bakeable",Ck,this),rc(this,"_castShadow",Ek,this),rc(this,"_receiveShadow",Tk,this),rc(this,"_lightmapSize",bk,this)}get bakeable(){return this._bakeable}set bakeable(e){this._bakeable=e}get castShadow(){return this._castShadow}set castShadow(e){this._castShadow=e}get receiveShadow(){return this._receiveShadow}set receiveShadow(e){this._receiveShadow=e}get lightmapSize(){return this._lightmapSize}set lightmapSize(e){this._lightmapSize=e}}).prototype,"texture",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Sk=ac(yk.prototype,"uvParam",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Gn}}),Ck=ac(yk.prototype,"_bakeable",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Ek=ac(yk.prototype,"_castShadow",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Tk=ac(yk.prototype,"_receiveShadow",[gk],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),bk=ac(yk.prototype,"_lightmapSize",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 64}}),ac(yk.prototype,"bakeable",[Lc],Object.getOwnPropertyDescriptor(yk.prototype,"bakeable"),yk.prototype),ac(yk.prototype,"castShadow",[Lc],Object.getOwnPropertyDescriptor(yk.prototype,"castShadow"),yk.prototype),ac(yk.prototype,"receiveShadow",[Lc],Object.getOwnPropertyDescriptor(yk.prototype,"receiveShadow"),yk.prototype),ac(yk.prototype,"lightmapSize",[Lc],Object.getOwnPropertyDescriptor(yk.prototype,"lightmapSize"),yk.prototype),vk=yk))||vk),aj=function(t){return e({MeshRenderer:t,ModelComponent:t}),t}((Ak=mc("cc.MeshRenderer"),Pk=Mc(),wk=vc(100),Ik=Rc(),Rk=Zc(vt),Dk=Uc(),Ok=xc({group:{name:"DynamicShadowSettings",displayOrder:0}}),Nk=Zc(vt),Mk=Uc(),Lk=xc({group:{name:"DynamicShadowSettings",displayOrder:1}}),Bk=Zc(sj),Fk=Uc(),zk=xc({group:{name:"DynamicShadowSettings",displayOrder:2}}),Uk=Zc(oj),Gk=Uc(),Vk=xc({group:{name:"DynamicShadowSettings",displayOrder:3}}),Hk=Zc(ak),kk=Uc(),jk=Bc(),Ak(Wk=Pk(Wk=wk(Wk=Ik(Wk=Ic((tj=ej=class extends FD{get shadowBias(){return this._shadowBias}set shadowBias(e){this._shadowBias=e,this._updateShadowBias(),this._onUpdateLocalShadowBias()}get shadowNormalBias(){return this._shadowNormalBias}set shadowNormalBias(e){this._shadowNormalBias=e,this._updateShadowNormalBias(),this._onUpdateLocalShadowBias()}get shadowCastingMode(){return this._shadowCastingMode}set shadowCastingMode(e){this._shadowCastingMode=e,this._updateCastShadow()}get receiveShadow(){return this._shadowReceivingMode}set receiveShadow(e){this._shadowReceivingMode=e,this._updateReceiveShadow()}get mesh(){return this._mesh}set mesh(e){const t=this._mesh,n=this._mesh=e;null==n||n.initialize(),this._initSubMeshShapesWeights(),this._watchMorphInMesh(),this._onMeshChanged(t),this._updateModels(),this.enabledInHierarchy&&this._attachToScene(),this._updateCastShadow(),this._updateReceiveShadow()}get model(){return this._model}get enableMorph(){return this._enableMorph}set enableMorph(e){this._enableMorph=e}constructor(){super(),rc(this,"lightmapSettings",Xk,this),rc(this,"_mesh",Yk,this),rc(this,"_shadowCastingMode",Kk,this),rc(this,"_shadowReceivingMode",$k,this),rc(this,"_shadowBias",Qk,this),rc(this,"_shadowNormalBias",Jk,this),this._subMeshShapesWeights=[],this._modelType=void 0,this._model=null,this._morphInstance=null,rc(this,"_enableMorph",Zk,this),this._modelType=fv}onLoad(){this._mesh&&this._mesh.initialize(),this._validateShapeWeights()||this._initSubMeshShapesWeights(),this._watchMorphInMesh(),this._updateModels(),this._updateCastShadow(),this._updateReceiveShadow(),this._updateShadowBias(),this._updateShadowNormalBias()}onRestore(){this._updateModels(),this.enabledInHierarchy&&this._attachToScene(),this._updateCastShadow(),this._updateReceiveShadow(),this._updateShadowBias(),this._updateShadowNormalBias()}onEnable(){this._model||this._updateModels(),this._updateCastShadow(),this._updateReceiveShadow(),this._updateShadowBias(),this._updateShadowNormalBias(),this._onUpdateLocalShadowBias(),this._attachToScene()}onDisable(){this._model&&this._detachFromScene()}onDestroy(){this._model&&(u.director.root.destroyModel(this._model),this._model=null,this._models.length=0),this._morphInstance&&this._morphInstance.destroy()}getWeight(e,t){const{_subMeshShapesWeights:n}=this;n.length;const i=this._subMeshShapesWeights[e];return i.length,i[t]}setWeights(e,t){const{_subMeshShapesWeights:n}=this;t>=n.length||n[t].length===e.length&&(n[t]=e.slice(0),this._uploadSubMeshShapesWeights(t))}setWeight(e,t,n){const{_subMeshShapesWeights:i}=this;if(t>=i.length)return;const s=i[t];n>=s.length||(s[n]=e,this._uploadSubMeshShapesWeights(t))}setInstancedAttribute(e,t){if(!this.model)return;const{attributes:n,views:i}=this.model.instancedAttributes;for(let s=0;s<n.length;s++)if(n[s].name===e){i[s].set(t);break}}_updateLightmap(e,t,n,i,s){this.lightmapSettings.texture=e,this.lightmapSettings.uvParam.x=t,this.lightmapSettings.uvParam.y=n,this.lightmapSettings.uvParam.z=i,this.lightmapSettings.uvParam.w=s,this._onUpdateLightingmap()}_updateModels(){if(!this.enabledInHierarchy)return;const e=this._model;e?(e.destroy(),e.initialize(),e.node=e.transform=this.node):this._createModel(),this._model&&(this._mesh&&this._model.createBoundingShape(this._mesh.struct.minPosition,this._mesh.struct.maxPosition),this._updateModelParams(),this._onUpdateLightingmap(),this._onUpdateLocalShadowBias())}_createModel(){const e=this._morphInstance&&this._modelType===fv?ij:this._modelType,t=this._model=u.director.root.createModel(e);t.visFlags=this.visibility,t.node=t.transform=this.node,this._models.length=0,this._models.push(this._model),this._morphInstance&&t instanceof ij&&t.setMorphRendering(this._morphInstance)}_attachToScene(){if(!this.node.scene||!this._model)return;const e=this._getRenderScene();null!==this._model.scene&&this._detachFromScene(),e.addModel(this._model)}_detachFromScene(){this._model&&this._model.scene&&this._model.scene.removeModel(this._model)}_updateModelParams(){if(!this._mesh||!this._model)return;this.node.hasChangedFlags|=Iv.POSITION,this._model.transform.hasChangedFlags|=Iv.POSITION,this._model.isDynamicBatching=this._isBatchingEnabled();const e=this._mesh?this._mesh.renderingSubMeshes.length:0,t=this._mesh.renderingSubMeshes;if(t)for(let n=0;n<e;++n){let e=this.getRenderMaterial(n);e&&!e.isValid&&(e=null);const i=t[n];i&&this._model.initSubModel(n,i,e||this._getBuiltinMaterial())}this._model.enabled=!0}_onUpdateLightingmap(){null!==this.model&&this.model.updateLightingmap(this.lightmapSettings.texture,this.lightmapSettings.uvParam),this.setInstancedAttribute("a_lightingMapUVParam",[this.lightmapSettings.uvParam.x,this.lightmapSettings.uvParam.y,this.lightmapSettings.uvParam.z,this.lightmapSettings.uvParam.w])}_onUpdateLocalShadowBias(){null!==this.model&&this.model.updateLocalShadowBias(),this.setInstancedAttribute("a_localShadowBias",[this._shadowBias,this._shadowNormalBias])}_onMaterialModified(e,t){this._model&&this._model.inited&&this._onRebuildPSO(e,t||this._getBuiltinMaterial())}_onRebuildPSO(e,t){this._model&&this._model.inited&&(this._model.isDynamicBatching=this._isBatchingEnabled(),this._model.setSubModelMaterial(e,t),this._onUpdateLightingmap(),this._onUpdateLocalShadowBias())}_onMeshChanged(e){}_clearMaterials(){if(!this._model)return;const e=this._model.subModels;for(let t=0;t<e.length;++t)this._onMaterialModified(t,null)}_getBuiltinMaterial(){return Fm.get("missing-material")}_onVisibilityChange(e){this._model&&(this._model.visFlags=e)}_updateShadowBias(){this._model&&(this._model.shadowBias=this._shadowBias)}_updateShadowNormalBias(){this._model&&(this._model.shadowNormalBias=this._shadowNormalBias)}_updateCastShadow(){this._model&&(this._shadowCastingMode===sj.OFF?this._model.castShadow=!1:(this._shadowCastingMode,sj.ON,this._shadowCastingMode,this._model.castShadow=!0))}_updateReceiveShadow(){this._model&&(this._shadowReceivingMode===oj.OFF?this._model.receiveShadow=!1:this._model.receiveShadow=!0)}_isBatchingEnabled(){for(let e=0;e<this._materials.length;++e){const t=this._materials[e];if(t)for(let e=0;e<t.passes.length;++e)if(t.passes[e].batchingScheme)return!0}return!1}_watchMorphInMesh(){if(this._morphInstance&&(this._morphInstance.destroy(),this._morphInstance=null),!this._enableMorph)return;if(!this._mesh||!this._mesh.struct.morph||!this._mesh.morphRendering)return;this._morphInstance=this._mesh.morphRendering.createInstance();const e=this._mesh.struct.primitives.length;for(let t=0;t<e;++t)this._uploadSubMeshShapesWeights(t);this._model&&this._model instanceof ij&&this._model.setMorphRendering(this._morphInstance)}_initSubMeshShapesWeights(){const{_mesh:e}=this;if(this._subMeshShapesWeights.length=0,!e)return;const t=e.struct.morph;if(!t)return;const n=t.weights;this._subMeshShapesWeights=t.subMeshMorphs.map((e=>e?e.weights?e.weights.slice(0):n?(n.length,e.targets.length,n.slice(0)):new Array(e.targets.length).fill(0):[]))}_validateShapeWeights(){const{_mesh:e,_subMeshShapesWeights:t}=this;if(!e||!e.struct.morph)return 0===t.length;const{morph:n}=e.struct;return n.subMeshMorphs.length===t.length&&t.every((({length:e},t)=>{var i,s;return(null!==(i=null===(s=n.subMeshMorphs[t])||void 0===s?void 0:s.targets.length)&&void 0!==i?i:0)===e}))}_uploadSubMeshShapesWeights(e){var t;null===(t=this._morphInstance)||void 0===t||t.setWeights(e,this._subMeshShapesWeights[e])}},ej.ShadowCastingMode=sj,ej.ShadowReceivingMode=oj,Xk=ac((qk=tj).prototype,"lightmapSettings",[Tc,Lc,Yc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new rj}}),Yk=ac(qk.prototype,"_mesh",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Kk=ac(qk.prototype,"_shadowCastingMode",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return sj.OFF}}),$k=ac(qk.prototype,"_shadowReceivingMode",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return oj.ON}}),Qk=ac(qk.prototype,"_shadowBias",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Jk=ac(qk.prototype,"_shadowNormalBias",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ac(qk.prototype,"shadowBias",[Rk,Dk,Ok,Yc],Object.getOwnPropertyDescriptor(qk.prototype,"shadowBias"),qk.prototype),ac(qk.prototype,"shadowNormalBias",[Nk,Mk,Lk,Yc],Object.getOwnPropertyDescriptor(qk.prototype,"shadowNormalBias"),qk.prototype),ac(qk.prototype,"shadowCastingMode",[Bk,Fk,zk,Yc],Object.getOwnPropertyDescriptor(qk.prototype,"shadowCastingMode"),qk.prototype),ac(qk.prototype,"receiveShadow",[Uk,Gk,Vk,Yc],Object.getOwnPropertyDescriptor(qk.prototype,"receiveShadow"),qk.prototype),ac(qk.prototype,"mesh",[Hk,kk],Object.getOwnPropertyDescriptor(qk.prototype,"mesh"),qk.prototype),ac(qk.prototype,"enableMorph",[jk,Yc],Object.getOwnPropertyDescriptor(qk.prototype,"enableMorph"),qk.prototype),Zk=ac(qk.prototype,"_enableMorph",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Wk=qk))||Wk)||Wk)||Wk)||Wk)||Wk));function cj(e,t){const n=e.sharedMaterials.length;if(n!==t.sharedMaterials.length)return!1;for(let i=0;i<n;i++)if(e.getRenderMaterial(i)!==t.getRenderMaterial(i))return!1;return!0}var lj,hj,uj,_j,dj,pj,fj,mj;e("BatchingUtility",class{static batchStaticModel(e,t){const n=e.getComponentsInChildren(aj);if(n.length<2)return console.error("the number of static models to batch is less than 2,it needn't batch."),!1;for(let e=1;e<n.length;e++){if(!n[0].mesh.validateMergingMesh(n[e].mesh))return console.error(`the meshes of ${n[0].node.name} and ${n[e].node.name} can't be merged`),!1;if(!cj(n[0],n[e]))return console.error(`the materials of ${n[0].node.name} and ${n[e].node.name} can't be merged`),!1}const i=new ak,s=new On,o=new On;e.getWorldMatrix(o),On.invert(o,o);for(let e=0;e<n.length;e++){const t=n[e];t.node.getWorldMatrix(s),On.multiply(s,o,s),i.merge(n[e].mesh,s),t.enabled=!1}const r=t.addComponent(aj);return r.mesh=i,r.sharedMaterials=n[0].sharedMaterials,!0}static unbatchStaticModel(e,t){const n=e.getComponentsInChildren(aj);for(let e=0;e<n.length;e++)n[e].enabled=!0;const i=t.getComponent(aj);return i&&(i.mesh&&i.mesh.destroyRenderingMesh(),i.destroy()),!0}}),V(ak.prototype,"Mesh.prototype",[{name:"renderingMesh",newName:"renderingSubMeshes"}]),H(ak.prototype,"Mesh.prototype",[{name:"hasFlatBuffers"},{name:"destroyFlatBuffers"}]);let gj=e("Skeleton",(lj=mc("cc.Skeleton"),hj=Zc([xt]),uj=Zc([On]),lj((pj=ac((dj=class extends xh{constructor(...e){super(...e),rc(this,"_joints",pj,this),rc(this,"_bindposes",fj,this),rc(this,"_hash",mj,this),this._invBindposes=null}get joints(){return this._joints}set joints(e){this._joints=e}get bindposes(){return this._bindposes}set bindposes(e){this._bindposes=e}get inverseBindposes(){if(!this._invBindposes){this._invBindposes=[];for(let e=0;e<this._bindposes.length;e++){const t=new On;On.invert(t,this._bindposes[e]),this._invBindposes.push(t)}}return this._invBindposes}get hash(){if(!this._hash){let e="";for(let t=0;t<this._bindposes.length;t++){const n=this._bindposes[t];e+=`${n.m00.toPrecision(2)} ${n.m01.toPrecision(2)} ${n.m02.toPrecision(2)} ${n.m03.toPrecision(2)} ${n.m04.toPrecision(2)} ${n.m05.toPrecision(2)} ${n.m06.toPrecision(2)} ${n.m07.toPrecision(2)} ${n.m08.toPrecision(2)} ${n.m09.toPrecision(2)} ${n.m10.toPrecision(2)} ${n.m11.toPrecision(2)} ${n.m12.toPrecision(2)} ${n.m13.toPrecision(2)} ${n.m14.toPrecision(2)} ${n.m15.toPrecision(2)}\n`}this._hash=fo(e,666)}return this._hash}destroy(){var e,t;return null===(e=null===(t=u.director.root)||void 0===t?void 0:t.dataPoolManager)||void 0===e||e.releaseSkeleton(this),super.destroy()}validate(){return this.joints.length>0&&this.bindposes.length>0}}).prototype,"_joints",[hj],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),fj=ac(dj.prototype,"_bindposes",[uj],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),mj=ac(dj.prototype,"_hash",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),_j=dj))||_j));var vj,yj,xj,Sj,Cj,Ej,Tj,bj,Aj,Pj,wj,Ij,Rj,Dj,Oj,Nj,Mj,Lj,Bj,Fj,zj;u.Skeleton=gj,H(aj.prototype,"MeshRenderer.prototype",[{name:"enableDynamicBatching"},{name:"recieveShadows"}]),u.ModelComponent=aj,ke.setClassAlias(aj,"cc.ModelComponent");const Uj=new gn,Gj=qe({LUMINOUS_FLUX:0,LUMINANCE:1});let Vj=mc("cc.StaticLightSettings")((xj=ac((yj=class{constructor(){rc(this,"_baked",xj,this),rc(this,"_editorOnly",Sj,this),rc(this,"_bakeable",Cj,this),rc(this,"_castShadow",Ej,this)}get editorOnly(){return this._editorOnly}set editorOnly(e){this._editorOnly=e}get baked(){return this._baked}set baked(e){this._baked=e}get bakeable(){return this._bakeable}set bakeable(e){this._bakeable=e}get castShadow(){return this._castShadow}set castShadow(e){this._castShadow=e}}).prototype,"_baked",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Sj=ac(yj.prototype,"_editorOnly",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Cj=ac(yj.prototype,"_bakeable",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Ej=ac(yj.prototype,"_castShadow",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ac(yj.prototype,"editorOnly",[Lc],Object.getOwnPropertyDescriptor(yj.prototype,"editorOnly"),yj.prototype),ac(yj.prototype,"bakeable",[Lc],Object.getOwnPropertyDescriptor(yj.prototype,"bakeable"),yj.prototype),ac(yj.prototype,"castShadow",[Lc],Object.getOwnPropertyDescriptor(yj.prototype,"castShadow"),yj.prototype),vj=yj))||vj,Hj=function(t){return e({Light:t,LightComponent:t}),t}((Tj=mc("cc.Light"),bj=Uc(),Aj=Uc(),Pj=Gc(),wj=Uc(),Ij=Zc(Vj),Rj=Wc(),Tj((zj=Fj=class extends Gh{get color(){return this._color}set color(e){this._color=e,this._light&&(Uj.x=e.r/255,Uj.y=e.g/255,Uj.z=e.b/255,this._light.color=Uj)}get useColorTemperature(){return this._useColorTemperature}set useColorTemperature(e){this._useColorTemperature=e,this._light&&(this._light.useColorTemperature=e)}get colorTemperature(){return this._colorTemperature}set colorTemperature(e){this._colorTemperature=e,this._light&&(this._light.colorTemperature=e)}get staticSettings(){return this._staticSettings}set staticSettings(e){this._staticSettings=e}get type(){return this._type}get baked(){return this.staticSettings.baked}set baked(e){this.staticSettings.baked=e,null!==this._light&&(this._light.baked=e)}constructor(){super(),rc(this,"_color",Nj,this),rc(this,"_useColorTemperature",Mj,this),rc(this,"_colorTemperature",Lj,this),rc(this,"_staticSettings",Bj,this),this._type=Rv.UNKNOWN,this._lightType=void 0,this._light=null,this._lightType=Nv}onLoad(){this._createLight()}onEnable(){this._attachToScene()}onDisable(){this._detachFromScene()}onDestroy(){this._destroyLight()}_createLight(){this._light||(this._light=u.director.root.createLight(this._lightType)),this.color=this._color,this.useColorTemperature=this._useColorTemperature,this.colorTemperature=this._colorTemperature,this._light.node=this.node,this._light.baked=this.baked}_destroyLight(){this._light&&(u.director.root.destroyLight(this._light),this._light=null)}_attachToScene(){if(this._detachFromScene(),this._light&&!this._light.scene&&this.node.scene){const e=this._getRenderScene();switch(this._type){case Rv.DIRECTIONAL:e.addDirectionalLight(this._light),e.setMainLight(this._light);break;case Rv.SPHERE:e.addSphereLight(this._light);break;case Rv.SPOT:e.addSpotLight(this._light)}}}_detachFromScene(){if(this._light&&this._light.scene){const e=this._light.scene;switch(this._type){case Rv.DIRECTIONAL:e.removeDirectionalLight(this._light),e.unsetMainLight(this._light);break;case Rv.SPHERE:e.removeSphereLight(this._light);break;case Rv.SPOT:e.removeSpotLight(this._light)}}}},Fj.Type=Rv,Fj.PhotometricTerm=Gj,Nj=ac((Oj=zj).prototype,"_color",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return dn.WHITE.clone()}}),Mj=ac(Oj.prototype,"_useColorTemperature",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Lj=ac(Oj.prototype,"_colorTemperature",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 6550}}),Bj=ac(Oj.prototype,"_staticSettings",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Vj}}),ac(Oj.prototype,"color",[bj],Object.getOwnPropertyDescriptor(Oj.prototype,"color"),Oj.prototype),ac(Oj.prototype,"useColorTemperature",[Aj],Object.getOwnPropertyDescriptor(Oj.prototype,"useColorTemperature"),Oj.prototype),ac(Oj.prototype,"colorTemperature",[jc,Pj,wj],Object.getOwnPropertyDescriptor(Oj.prototype,"colorTemperature"),Oj.prototype),ac(Oj.prototype,"staticSettings",[Ij,Rj],Object.getOwnPropertyDescriptor(Oj.prototype,"staticSettings"),Oj.prototype),Dj=Oj))||Dj));var kj,jj,Wj,qj,Xj,Yj,Kj,$j,Qj,Jj,Zj,eW,tW,nW,iW,sW,oW,rW,aW,cW,lW,hW,uW,_W,dW,pW,fW,mW,gW,vW,yW,xW,SW,CW,EW,TW,bW,AW,PW,wW,IW,RW,DW,OW,NW,MW,LW,BW,FW,zW,UW,GW,VW,HW,kW,jW,WW,qW;let XW=function(t){return e({DirectionalLight:t,DirectionalLightComponent:t}),t}((kj=mc("cc.DirectionalLight"),jj=Mc(),Wj=Rc(),qj=bc("_illuminance"),Xj=Uc(),Yj=Bc(),Kj=xc({group:{name:"DynamicShadowSettings",displayOrder:1}}),$j=Zc(yt),Qj=Bc(),Jj=xc({group:{name:"DynamicShadowSettings",displayOrder:5}}),Zj=Zc(Sg),eW=Bc(),tW=xc({group:{name:"DynamicShadowSettings",displayOrder:6}}),nW=Zc(vt),iW=Bc(),sW=xc({group:{name:"DynamicShadowSettings",displayOrder:7}}),oW=Zc(vt),rW=Bc(),aW=xc({group:{name:"DynamicShadowSettings",displayOrder:8}}),cW=Gc(),lW=Zc(vt),hW=Bc(),uW=xc({group:{name:"DynamicShadowSettings",displayOrder:9}}),_W=Uc(),dW=Gc(),pW=Zc(vt),fW=Bc(),mW=xc({group:{name:"DynamicShadowSettings",displayOrder:10}}),gW=Uc(),vW=Gc(),yW=Zc(vt),xW=Bc(),SW=xc({group:{name:"DynamicShadowSettings",displayOrder:11}}),CW=Zc(yt),EW=Bc(),TW=xc({group:{name:"DynamicShadowSettings",displayOrder:12}}),bW=Zc(vt),AW=Bc(),PW=xc({group:{name:"DynamicShadowSettings",displayOrder:13}}),wW=Zc(vt),IW=Bc(),RW=xc({group:{name:"DynamicShadowSettings",displayOrder:14}}),DW=Zc(vt),kj(OW=jj(OW=Wj(OW=Ic((MW=ac((NW=class extends Hj{get illuminance(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._illuminanceHDR:this._illuminanceLDR}set illuminance(e){u.director.root.pipeline.pipelineSceneData.isHDR?(this._illuminanceHDR=e,this._light&&(this._light.illuminanceHDR=this._illuminanceHDR)):(this._illuminanceLDR=e,this._light&&(this._light.illuminanceLDR=this._illuminanceLDR))}get shadowEnabled(){return this._shadowEnabled}set shadowEnabled(e){this._shadowEnabled=e,this._light&&(this._light.shadowEnabled=this._shadowEnabled)}get shadowPcf(){return this._shadowPcf}set shadowPcf(e){this._shadowPcf=e,this._light&&(this._light.shadowPcf=this._shadowPcf)}get shadowBias(){return this._shadowBias}set shadowBias(e){this._shadowBias=e,this._light&&(this._light.shadowBias=this._shadowBias)}get shadowNormalBias(){return this._shadowNormalBias}set shadowNormalBias(e){this._shadowNormalBias=e,this._light&&(this._light.shadowNormalBias=this._shadowNormalBias)}get shadowSaturation(){return this._shadowSaturation}set shadowSaturation(e){this._shadowSaturation=Xt(e,0,1),this._light&&(this._light.shadowSaturation=this._shadowSaturation)}get shadowDistance(){return this._shadowDistance}set shadowDistance(e){this._shadowDistance=Math.min(e,Eg.MAX_FAR),this._light&&(this._light.shadowDistance=this._shadowDistance)}get shadowInvisibleOcclusionRange(){return this._shadowInvisibleOcclusionRange}set shadowInvisibleOcclusionRange(e){this._shadowInvisibleOcclusionRange=Math.min(e,Eg.MAX_FAR),this._light&&(this._light.shadowInvisibleOcclusionRange=this._shadowInvisibleOcclusionRange)}get shadowFixedArea(){return this._shadowFixedArea}set shadowFixedArea(e){this._shadowFixedArea=e,this._light&&(this._light.shadowFixedArea=this._shadowFixedArea)}get shadowNear(){return this._shadowNear}set shadowNear(e){this._shadowNear=e,this._light&&(this._light.shadowNear=this._shadowNear)}get shadowFar(){return this._shadowFar}set shadowFar(e){this._shadowFar=Math.min(e,Eg.MAX_FAR),this._light&&(this._light.shadowFar=this._shadowFar)}get shadowOrthoSize(){return this._shadowOrthoSize}set shadowOrthoSize(e){this._shadowOrthoSize=e,this._light&&(this._light.shadowOrthoSize=this._shadowOrthoSize)}constructor(){super(),rc(this,"_illuminanceHDR",MW,this),rc(this,"_illuminanceLDR",LW,this),rc(this,"_shadowEnabled",BW,this),rc(this,"_shadowPcf",FW,this),rc(this,"_shadowBias",zW,this),rc(this,"_shadowNormalBias",UW,this),rc(this,"_shadowSaturation",GW,this),rc(this,"_shadowDistance",VW,this),rc(this,"_shadowInvisibleOcclusionRange",HW,this),rc(this,"_shadowFixedArea",kW,this),rc(this,"_shadowNear",jW,this),rc(this,"_shadowFar",WW,this),rc(this,"_shadowOrthoSize",qW,this),this._type=Rv.DIRECTIONAL,this._light=null,this._lightType=Bv}_createLight(){super._createLight(),this._light&&(this._light.illuminanceHDR=this._illuminanceHDR,this._light.illuminanceLDR=this._illuminanceLDR,this._light.shadowEnabled=this._shadowEnabled,this._light.shadowPcf=this._shadowPcf,this._light.shadowBias=this._shadowBias,this._light.shadowNormalBias=this._shadowNormalBias,this._light.shadowSaturation=this._shadowSaturation,this._light.shadowDistance=this._shadowDistance,this._light.shadowInvisibleOcclusionRange=this._shadowInvisibleOcclusionRange,this._light.shadowFixedArea=this._shadowFixedArea,this._light.shadowNear=this._shadowNear,this._light.shadowFar=this._shadowFar,this._light.shadowOrthoSize=this._shadowOrthoSize)}}).prototype,"_illuminanceHDR",[xc,qj],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 65e3}}),LW=ac(NW.prototype,"_illuminanceLDR",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 65e3*vg.standardExposureValue}}),BW=ac(NW.prototype,"_shadowEnabled",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),FW=ac(NW.prototype,"_shadowPcf",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Sg.HARD}}),zW=ac(NW.prototype,"_shadowBias",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1e-5}}),UW=ac(NW.prototype,"_shadowNormalBias",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),GW=ac(NW.prototype,"_shadowSaturation",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),VW=ac(NW.prototype,"_shadowDistance",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 100}}),HW=ac(NW.prototype,"_shadowInvisibleOcclusionRange",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 200}}),kW=ac(NW.prototype,"_shadowFixedArea",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),jW=ac(NW.prototype,"_shadowNear",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),WW=ac(NW.prototype,"_shadowFar",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 10}}),qW=ac(NW.prototype,"_shadowOrthoSize",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 5}}),ac(NW.prototype,"illuminance",[Xj],Object.getOwnPropertyDescriptor(NW.prototype,"illuminance"),NW.prototype),ac(NW.prototype,"shadowEnabled",[Yj,Kj,Lc,$j],Object.getOwnPropertyDescriptor(NW.prototype,"shadowEnabled"),NW.prototype),ac(NW.prototype,"shadowPcf",[Qj,Jj,Lc,Zj],Object.getOwnPropertyDescriptor(NW.prototype,"shadowPcf"),NW.prototype),ac(NW.prototype,"shadowBias",[eW,tW,Lc,nW],Object.getOwnPropertyDescriptor(NW.prototype,"shadowBias"),NW.prototype),ac(NW.prototype,"shadowNormalBias",[iW,sW,Lc,oW],Object.getOwnPropertyDescriptor(NW.prototype,"shadowNormalBias"),NW.prototype),ac(NW.prototype,"shadowSaturation",[rW,aW,Lc,cW,jc,lW],Object.getOwnPropertyDescriptor(NW.prototype,"shadowSaturation"),NW.prototype),ac(NW.prototype,"shadowDistance",[hW,uW,Lc,_W,dW,jc,pW],Object.getOwnPropertyDescriptor(NW.prototype,"shadowDistance"),NW.prototype),ac(NW.prototype,"shadowInvisibleOcclusionRange",[fW,mW,Lc,gW,vW,jc,yW],Object.getOwnPropertyDescriptor(NW.prototype,"shadowInvisibleOcclusionRange"),NW.prototype),ac(NW.prototype,"shadowFixedArea",[xW,SW,Lc,CW],Object.getOwnPropertyDescriptor(NW.prototype,"shadowFixedArea"),NW.prototype),ac(NW.prototype,"shadowNear",[EW,TW,Lc,bW],Object.getOwnPropertyDescriptor(NW.prototype,"shadowNear"),NW.prototype),ac(NW.prototype,"shadowFar",[AW,PW,Lc,wW],Object.getOwnPropertyDescriptor(NW.prototype,"shadowFar"),NW.prototype),ac(NW.prototype,"shadowOrthoSize",[IW,RW,DW],Object.getOwnPropertyDescriptor(NW.prototype,"shadowOrthoSize"),NW.prototype),OW=NW))||OW)||OW)||OW)||OW));var YW,KW,$W,QW,JW,ZW,eq,tq,nq,iq,sq,oq,rq,aq,cq,lq,hq,uq,_q,dq;let pq=function(t){return e({SphereLight:t,SphereLightComponent:t}),t}((YW=mc("cc.SphereLight"),KW=Mc(),$W=Rc(),QW=bc("_luminance"),JW=Wc(),ZW=Uc(),eq=Wc(),tq=Uc(),nq=Zc(Gj),iq=Wc(),sq=Uc(),oq=Uc(),rq=Uc(),YW(aq=KW(aq=$W(aq=Ic((lq=ac((cq=class extends Hj{get luminousFlux(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._luminanceHDR*Ov(this._size):this._luminanceLDR}set luminousFlux(e){let t=0;u.director.root.pipeline.pipelineSceneData.isHDR?(this._luminanceHDR=e/Ov(this._size),t=this._luminanceHDR):(this._luminanceLDR=e,t=this._luminanceLDR),this._light&&(this._light.luminance=t)}get luminance(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._luminanceHDR:this._luminanceLDR}set luminance(e){u.director.root.pipeline.pipelineSceneData.isHDR?(this._luminanceHDR=e,this._light&&(this._light.luminanceHDR=this._luminanceHDR)):(this._luminanceLDR=e,this._light&&(this._light.luminanceLDR=this._luminanceLDR))}get term(){return this._term}set term(e){this._term=e}get size(){return this._size}set size(e){this._size=e,this._light&&(this._light.size=e)}get range(){return this._range}set range(e){this._range=e,this._light&&(this._light.range=e)}constructor(){super(),rc(this,"_size",lq,this),rc(this,"_luminanceHDR",hq,this),rc(this,"_luminanceLDR",uq,this),rc(this,"_term",_q,this),rc(this,"_range",dq,this),this._type=Rv.SPHERE,this._light=null,this._lightType=Fv}_createLight(){super._createLight(),this.size=this._size,this.range=this._range,this._light&&(this._light.luminanceHDR=this._luminanceHDR,this._light.luminanceLDR=this._luminanceLDR)}}).prototype,"_size",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.15}}),hq=ac(cq.prototype,"_luminanceHDR",[Tc,QW],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1700/Ov(.15)}}),uq=ac(cq.prototype,"_luminanceLDR",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1700/Ov(.15)*vg.standardExposureValue*vg.standardLightMeterScale}}),_q=ac(cq.prototype,"_term",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Gj.LUMINOUS_FLUX}}),dq=ac(cq.prototype,"_range",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),ac(cq.prototype,"luminousFlux",[JW,ZW],Object.getOwnPropertyDescriptor(cq.prototype,"luminousFlux"),cq.prototype),ac(cq.prototype,"luminance",[eq,tq],Object.getOwnPropertyDescriptor(cq.prototype,"luminance"),cq.prototype),ac(cq.prototype,"term",[nq,iq,sq],Object.getOwnPropertyDescriptor(cq.prototype,"term"),cq.prototype),ac(cq.prototype,"size",[oq],Object.getOwnPropertyDescriptor(cq.prototype,"size"),cq.prototype),ac(cq.prototype,"range",[rq],Object.getOwnPropertyDescriptor(cq.prototype,"range"),cq.prototype),aq=cq))||aq)||aq)||aq)||aq));var fq,mq,gq,vq,yq,xq,Sq,Cq,Eq,Tq,bq,Aq,Pq,wq,Iq,Rq,Dq,Oq,Nq,Mq,Lq,Bq,Fq,zq,Uq,Gq,Vq,Hq,kq,jq,Wq,qq,Xq,Yq,Kq,$q,Qq,Jq,Zq;let eX=function(t){return e({SpotLight:t,SpotLightComponent:t}),t}((fq=mc("cc.SpotLight"),mq=Mc(),gq=Rc(),vq=bc("_luminance"),yq=Uc(),xq=Wc(),Sq=Uc(),Cq=Wc(),Eq=Zc(Gj),Tq=Wc(),bq=Uc(),Aq=Uc(),Pq=Uc(),wq=Gc(),Iq=Uc(),Rq=Bc(),Dq=xc({group:{name:"DynamicShadowSettings",displayOrder:1}}),Oq=Zc(yt),Nq=Bc(),Mq=xc({group:{name:"DynamicShadowSettings",displayOrder:2}}),Lq=Zc(Sg),Bq=Bc(),Fq=xc({group:{name:"DynamicShadowSettings",displayOrder:3}}),zq=Zc(vt),Uq=Bc(),Gq=xc({group:{name:"DynamicShadowSettings",displayOrder:4}}),Vq=Zc(vt),fq(Hq=mq(Hq=gq(Hq=Ic((jq=ac((kq=class extends Hj{get luminousFlux(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._luminanceHDR*Ov(this._size):this._luminanceLDR}set luminousFlux(e){let t=0;u.director.root.pipeline.pipelineSceneData.isHDR?(this._luminanceHDR=e/Ov(this._size),t=this._luminanceHDR):(this._luminanceLDR=e,t=this._luminanceLDR),this._light&&(this._light.luminance=t)}get luminance(){return u.director.root.pipeline.pipelineSceneData.isHDR?this._luminanceHDR:this._luminanceLDR}set luminance(e){u.director.root.pipeline.pipelineSceneData.isHDR?(this._luminanceHDR=e,this._light&&(this._light.luminanceHDR=this._luminanceHDR)):(this._luminanceLDR=e,this._light&&(this._light.luminanceLDR=this._luminanceLDR))}get term(){return this._term}set term(e){this._term=e}get size(){return this._size}set size(e){this._size=e,this._light&&(this._light.size=e)}get range(){return this._range}set range(e){this._range=e,this._light&&(this._light.range=e)}get spotAngle(){return this._spotAngle}set spotAngle(e){this._spotAngle=e,this._light&&(this._light.spotAngle=$t(e))}get shadowEnabled(){return this._shadowEnabled}set shadowEnabled(e){this._shadowEnabled=e,this._light&&(this._light.shadowEnabled=e)}get shadowPcf(){return this._shadowPcf}set shadowPcf(e){this._shadowPcf=e,this._light&&(this._light.shadowPcf=e)}get shadowBias(){return this._shadowBias}set shadowBias(e){this._shadowBias=e,this._light&&(this._light.shadowBias=e)}get shadowNormalBias(){return this._shadowNormalBias}set shadowNormalBias(e){this._shadowNormalBias=e,this._light&&(this._light.shadowNormalBias=e)}constructor(){super(),rc(this,"_size",jq,this),rc(this,"_luminanceHDR",Wq,this),rc(this,"_luminanceLDR",qq,this),rc(this,"_term",Xq,this),rc(this,"_range",Yq,this),rc(this,"_spotAngle",Kq,this),rc(this,"_shadowEnabled",$q,this),rc(this,"_shadowPcf",Qq,this),rc(this,"_shadowBias",Jq,this),rc(this,"_shadowNormalBias",Zq,this),this._type=Rv.SPOT,this._light=null,this._lightType=jv}_createLight(){super._createLight(),this.size=this._size,this.range=this._range,this.spotAngle=this._spotAngle,this._light&&(this._light.luminanceHDR=this._luminanceHDR,this._light.luminanceLDR=this._luminanceLDR,this._light.shadowEnabled=this._shadowEnabled,this._light.shadowPcf=this._shadowPcf,this._light.shadowBias=this._shadowBias,this._light.shadowNormalBias=this._shadowNormalBias)}}).prototype,"_size",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.15}}),Wq=ac(kq.prototype,"_luminanceHDR",[Tc,vq],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1700/Ov(.15)}}),qq=ac(kq.prototype,"_luminanceLDR",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1700/Ov(.15)*vg.standardExposureValue*vg.standardLightMeterScale}}),Xq=ac(kq.prototype,"_term",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Gj.LUMINOUS_FLUX}}),Yq=ac(kq.prototype,"_range",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Kq=ac(kq.prototype,"_spotAngle",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 60}}),$q=ac(kq.prototype,"_shadowEnabled",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Qq=ac(kq.prototype,"_shadowPcf",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Sg.HARD}}),Jq=ac(kq.prototype,"_shadowBias",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1e-5}}),Zq=ac(kq.prototype,"_shadowNormalBias",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ac(kq.prototype,"luminousFlux",[yq,xq],Object.getOwnPropertyDescriptor(kq.prototype,"luminousFlux"),kq.prototype),ac(kq.prototype,"luminance",[Sq,Cq],Object.getOwnPropertyDescriptor(kq.prototype,"luminance"),kq.prototype),ac(kq.prototype,"term",[Eq,Tq,bq],Object.getOwnPropertyDescriptor(kq.prototype,"term"),kq.prototype),ac(kq.prototype,"size",[Aq],Object.getOwnPropertyDescriptor(kq.prototype,"size"),kq.prototype),ac(kq.prototype,"range",[Pq],Object.getOwnPropertyDescriptor(kq.prototype,"range"),kq.prototype),ac(kq.prototype,"spotAngle",[jc,wq,Iq],Object.getOwnPropertyDescriptor(kq.prototype,"spotAngle"),kq.prototype),ac(kq.prototype,"shadowEnabled",[Rq,Dq,Lc,Oq],Object.getOwnPropertyDescriptor(kq.prototype,"shadowEnabled"),kq.prototype),ac(kq.prototype,"shadowPcf",[Nq,Mq,Lc,Lq],Object.getOwnPropertyDescriptor(kq.prototype,"shadowPcf"),kq.prototype),ac(kq.prototype,"shadowBias",[Bq,Fq,Lc,zq],Object.getOwnPropertyDescriptor(kq.prototype,"shadowBias"),kq.prototype),ac(kq.prototype,"shadowNormalBias",[Uq,Gq,Lc,Vq],Object.getOwnPropertyDescriptor(kq.prototype,"shadowNormalBias"),kq.prototype),Hq=kq))||Hq)||Hq)||Hq)||Hq));u.LightComponent=Hj,ke.setClassAlias(Hj,"cc.LightComponent"),u.DirectionalLightComponent=XW,ke.setClassAlias(XW,"cc.DirectionalLightComponent"),u.SphereLightComponent=pq,ke.setClassAlias(pq,"cc.SphereLightComponent"),u.SpotLightComponent=eX,ke.setClassAlias(eX,"cc.SpotLightComponent"),V(eX.prototype,"SpotLight.prototype",[{name:"luminousPower",newName:"luminousFlux",customGetter(){return this.luminousFlux},customSetter(e){this.luminousFlux=e}}]),V(pq.prototype,"SphereLight.prototype",[{name:"luminousPower",newName:"luminousFlux",customGetter(){return this.luminousFlux},customSetter(e){this.luminousFlux=e}}]),V(Hj.PhotometricTerm,"Light.PhotometricTerm",[{name:"LUMINOUS_POWER",newName:"LUMINOUS_FLUX"}]);const tX=Symbol("BakeNodeCurves");class nX{static getOrExtract(e){let t=nX.pool.get(e);if(!t||t.samples!==e.sample){t&&u.director.root.dataPoolManager.releaseAnimationClip(e);const n=Math.ceil(e.sample*e.duration)+1,i=e.sample;t=e[tX](0,i,n),nX.pool.set(e,t)}return t}static destroy(e){nX.pool.delete(e)}}e("SkelAnimDataHub",nX),nX.pool=new Map;const iX=new On;function sX(e,t,n){for(On.identity(n);e!==t;)On.fromRTS(iX,e.rotation,e.position,e.scale),On.multiply(n,iX,n),e=e.parent;return n}const oX=new cs(pi.POINT,pi.POINT,pi.NONE,fi.CLAMP,fi.CLAMP,fi.CLAMP),rX=function(e,t,n){e[t+0]=n.m00,e[t+1]=n.m01,e[t+2]=n.m02,e[t+3]=n.m12,e[t+4]=n.m04,e[t+5]=n.m05,e[t+6]=n.m06,e[t+7]=n.m13,e[t+8]=n.m08,e[t+9]=n.m09,e[t+10]=n.m10,e[t+11]=n.m14};function aX(e,t){const n=4/Math.sqrt(t);return 12*Math.ceil(Math.max(480*n,e)/12)}new Tn,new Tn,new gn,new Tn,new gn;const cX=new gn,lX=new gn,hX=new gn,uX=new gn,_X=new On,dX=new On,pX=new Ua,fX=Number.MAX_SAFE_INTEGER;class mX{get pixelsPerJoint(){return this._pixelsPerJoint}constructor(e){this._device=void 0,this._pool=void 0,this._textureBuffers=new Map,this._formatSize=void 0,this._pixelsPerJoint=void 0,this._customPool=void 0,this._chunkIdxMap=new Map,this._device=e;const t=function(e){return e.getFormatFeatures(ti.RGBA32F)&ui.SAMPLED_TEXTURE?ti.RGBA32F:ti.RGBA8}(this._device);this._formatSize=Hs[t].size,this._pixelsPerJoint=48/this._formatSize,this._pool=new Qv(e),this._pool.initialize({format:t,roundUpFn:aX}),this._customPool=new Qv(e),this._customPool.initialize({format:t,roundUpFn:aX})}clear(){this._pool.destroy(),this._textureBuffers.clear()}registerCustomTextureLayouts(e){for(let t=0;t<e.length;t++){const n=e[t],i=this._customPool.createChunk(n.textureLength);for(let e=0;e<n.contents.length;e++){const t=n.contents[e],{skeleton:s}=t;this._chunkIdxMap.set(s,i);for(let e=0;e<t.clips.length;e++){const n=t.clips[e];this._chunkIdxMap.set(s^n,i)}}}}getDefaultPoseTexture(e,t,n){const i=0^e.hash;let s=this._textureBuffers.get(i)||null;if(s&&s.bounds.has(t.hash))return s.refCount++,s;const{joints:o,bindposes:r}=e;let a=null,c=!1;const l=o.length;if(s)s.refCount++;else{const t=12*l,n=this._chunkIdxMap.get(i),o=void 0!==n?this._customPool.alloc(t*Float32Array.BYTES_PER_ELEMENT,n):this._pool.alloc(t*Float32Array.BYTES_PER_ELEMENT);if(!o)return s;s={pixelOffset:o.start/this._formatSize,refCount:1,bounds:new Map,skeletonHash:e.hash,clipHash:0,readyToBeDeleted:!1,handle:o},a=new Float32Array(t),c=!0}gn.set(hX,fX,fX,fX),gn.set(uX,-fX,-fX,-fX);const h=t.getBoneSpaceBounds(e);for(let t=0,i=0;t<l;t++,i+=12){const s=n.getChildByPath(o[t]),l=s?sX(s,n,_X):e.inverseBindposes[t],u=h[t];u&&(Ua.transform(pX,u,l),pX.getBoundary(cX,lX),gn.min(hX,hX,cX),gn.max(uX,uX,lX)),c&&(s&&On.multiply(l,l,r[t]),rX(a,i,s?l:On.IDENTITY))}const u=[new Ua];return s.bounds.set(t.hash,u),Ua.fromPoints(u[0],hX,uX),c&&(this._pool.update(s.handle,a.buffer),this._textureBuffers.set(i,s)),s}getSequencePoseTexture(e,t,n,i){const s=e.hash^t.hash;let o=this._textureBuffers.get(s)||null;if(o&&o.bounds.has(n.hash))return o.refCount++,o;const{joints:r,bindposes:a}=e,c=nX.getOrExtract(t),{frames:l}=c;let h=null,u=!1;const _=r.length;if(o)o.refCount++;else{const n=12*_*l,r=this._chunkIdxMap.get(s),a=void 0!==r?this._customPool.alloc(n*Float32Array.BYTES_PER_ELEMENT,r):this._pool.alloc(n*Float32Array.BYTES_PER_ELEMENT);if(!a)return null;const c=this._createAnimInfos(e,t,i);o={pixelOffset:a.start/this._formatSize,refCount:1,bounds:new Map,skeletonHash:e.hash,clipHash:t.hash,readyToBeDeleted:!1,handle:a,animInfos:c},h=new Float32Array(n),u=!0}const d=n.getBoneSpaceBounds(e),p=[];o.bounds.set(n.hash,p);for(let e=0;e<l;e++)p.push(new Ua(fX,fX,fX,-fX,-fX,-fX));for(let t=0,n=0;t<l;t++){const i=p[t];for(let s=0;s<_;s++,n+=12){const{curveData:r,downstream:c,bindposeIdx:l,bindposeCorrection:_}=o.animInfos[s];let p,f=!0;r&&c?p=On.multiply(_X,r[t],c):r?p=r[t]:c?p=c:(p=e.inverseBindposes[l],f=!1);const m=d[s];if(m){const e=_?On.multiply(dX,p,_):p;Ua.transform(pX,m,e),pX.getBoundary(cX,lX),gn.min(i.center,i.center,cX),gn.max(i.halfExtents,i.halfExtents,lX)}u&&(f&&On.multiply(_X,p,a[l]),rX(h,n,f?_X:On.IDENTITY))}Ua.fromPoints(i,i.center,i.halfExtents)}return u&&(this._pool.update(o.handle,h.buffer),this._textureBuffers.set(s,o)),o}releaseHandle(e){if(e.refCount>0&&e.refCount--,!e.refCount&&e.readyToBeDeleted){const t=e.skeletonHash^e.clipHash;(void 0!==this._chunkIdxMap.get(t)?this._customPool:this._pool).free(e.handle),this._textureBuffers.get(t)===e&&this._textureBuffers.delete(t)}}releaseSkeleton(e){const t=this._textureBuffers.values();let n=t.next();for(;!n.done;){const i=n.value;i.skeletonHash===e.hash&&(i.readyToBeDeleted=!0,i.refCount?this._textureBuffers.delete(i.skeletonHash^i.clipHash):this.releaseHandle(i)),n=t.next()}}releaseAnimationClip(e){const t=this._textureBuffers.values();let n=t.next();for(;!n.done;){const i=n.value;i.clipHash===e.hash&&(i.readyToBeDeleted=!0,i.refCount?this._textureBuffers.delete(i.skeletonHash^i.clipHash):this.releaseHandle(i)),n=t.next()}}_createAnimInfos(e,t,n){const i=[],{joints:s,bindposes:o}=e,r=s.length,a=nX.getOrExtract(t);for(let t=0;t<r;t++){let c,l,h=s[t],u=a.joints[h],_=n.getChildByPath(h);for(;!u;){const e=h.lastIndexOf("/");if(h=h.substring(0,e),u=a.joints[h],_?(c||(c=new On),On.fromRTS(_X,_.rotation,_.position,_.scale),On.multiply(c,_X,c),_=_.parent):l=h,e<0)break}let d,p=t;if(void 0!==l&&u){p=t-1;for(let n=0;n<r;n++)if(s[n]===l){p=n,d=new On,On.multiply(d,o[n],e.inverseBindposes[t]);break}}i.push({curveData:u&&u.transforms,downstream:c,bindposeIdx:p,bindposeCorrection:d})}return i}}class gX{constructor(e){this._pool=new Map,this._device=void 0,this._device=e}getData(e="-1"){const t=this._pool.get(e);if(t)return t;const n=this._device.createBuffer(new es(si.UNIFORM|si.TRANSFER_DST,ai.HOST|ai.DEVICE,Np.SIZE,Np.SIZE)),i=new Float32Array([0,0,0,0]);n.update(i);const s={buffer:n,data:i,dirty:!1,currentClip:null};return this._setAnimInfoDirty(s,!1),this._pool.set(e,s),s}destroy(e){const t=this._pool.get(e);t&&(t.buffer.destroy(),this._pool.delete(e))}_setAnimInfoDirty(e,t){e.dirty=t;{const n="nativeDirty",i=t?1:0;if(!e[n])return void Object.defineProperty(e,n,{value:new Uint32Array(1).fill(i),enumerable:!0});e[n].fill(i)}}switchClip(e,t){return e.currentClip=t,e.data[0]=-1,e.buffer.update(e.data),this._setAnimInfoDirty(e,!1),e}clear(){for(const e of this._pool.values())e.buffer.destroy();this._pool.clear()}}const vX=[],yX=new Map;function xX(e,t){let n=0,i=On.IDENTITY;for(;e;){if(e.stamp===t||e.stamp+1===t&&!e.node.hasChangedFlags){i=e.world,e.stamp=t;break}e.stamp=t,vX[n++]=e,e=e.parent}for(;n>0;){e=vX[--n],vX[n]=null;const t=e.node;On.fromRTS(e.local,t.rotation,t.position,t.scale),i=On.multiply(e.world,i,e.local)}return i}function SX(e,t){let n,i=null,s=0;for(;e!==t;){const t=e.uuid;if(yX.has(t)){i=yX.get(t);break}i={node:e,local:new On,world:new On,stamp:-1,parent:null},yX.set(t,i),vX[s++]=i,e=e.parent,i=null}for(;s>0;)n=vX[--s],vX[s]=null,n.parent=i,i=n;return i}function CX(e){let t=yX.get(e.uuid)||null;for(;t;)yX.delete(t.node.uuid),t=t.parent}const EX=[{name:"CC_USE_SKINNING",value:!0}];function TX(e,t,n,i){for(let s=0;s<n.length;s++){const o=n[s];let r=-1;for(let e=0;e<o.length;e++)if(o[e]===i){r=e;break}r>=0&&(t.push(s),e.push(r))}}const bX=new gn,AX=new gn,PX=new gn,wX=new gn,IX=new On,RX=new Ua;class DX extends ij{constructor(){super(),this._buffers=[],this._dataArray=[],this._joints=[],this._bufferIndices=null,this.type=_v.SKINNING}_init(){this._nativeObj=new _a}destroy(){if(this.bindSkeleton(),this._buffers.length){for(let e=0;e<this._buffers.length;e++)this._buffers[e].destroy();this._buffers.length=0}super.destroy()}uploadAnimation(){}bindSkeleton(e=null,t=null,n=null){for(let e=0;e<this._joints.length;e++)CX(this._joints[e].target);if(this._bufferIndices=null,this._joints.length=0,!e||!t||!n)return;this.transform=t;const i=n.getBoneSpaceBounds(e),s=n.struct.jointMaps;this._ensureEnoughBuffers(s&&s.length||1),this._bufferIndices=n.jointBufferIndices;const o=[];for(let n=0;n<e.joints.length;n++){const r=i[n],a=t.getChildByPath(e.joints[n]);if(!r||!a)continue;const c=SX(a,t),l=e.bindposes[n],h=[],u=[];s?TX(h,u,s,n):(h.push(n),u.push(0)),this._joints.push({indices:h,buffers:u,bound:r,target:a,bindpose:l,transform:c});{let e=c.parent;const t=[];for(;e;)t.push({node:e.node.native,local:e.local,world:e.local,stamp:e.stamp}),e=e.parent;o.push({indices:h,buffers:u,bound:r.native,target:a.native,bindpose:l,transform:{node:c.node.native,local:c.local,world:c.world,stamp:c.stamp},parents:t})}}this._nativeObj.setIndicesAndJoints(this._bufferIndices,o)}updateTransform(e){const t=this.transform;(t.hasChangedFlags||t._dirtyFlags)&&(t.updateWorldTransform(),this._localDataUpdated=!0),gn.set(bX,1/0,1/0,1/0),gn.set(AX,-1/0,-1/0,-1/0);for(let t=0;t<this._joints.length;t++){const{bound:n,transform:i}=this._joints[t],s=xX(i,e);Ua.transform(RX,n,s),RX.getBoundary(PX,wX),gn.min(bX,bX,PX),gn.max(AX,AX,wX)}const n=this._worldBounds;this._modelBounds&&n&&(Ua.fromPoints(this._modelBounds,bX,AX),this._modelBounds.transform(t._mat,t._pos,t._rot,t._scale,this._worldBounds),this._updateNativeBounds())}updateUBOs(e){super.updateUBOs(e);for(let e=0;e<this._joints.length;e++){const{indices:t,buffers:n,transform:i,bindpose:s}=this._joints[e];On.multiply(IX,i.world,s);for(let e=0;e<n.length;e++)rX(this._dataArray[n[e]],12*t[e],IX)}for(let e=0;e<this._buffers.length;e++)this._buffers[e].update(this._dataArray[e]);return!0}initSubModel(e,t,n){const i=t.vertexBuffers,s=t.iaInfo;s.vertexBuffers=t.jointMappedBuffers,super.initSubModel(e,t,n),s.vertexBuffers=i}getMacroPatches(e){const t=super.getMacroPatches(e);return t?EX.concat(t):EX}_updateLocalDescriptors(e,t){super._updateLocalDescriptors(e,t),this._nativeObj.updateLocalDescriptors(e,t)}_updateInstancedAttributes(e,t){t.batchingScheme!==jm.NONE&&D(3936,this.node.getPathInHierarchy()),super._updateInstancedAttributes(e,t)}_ensureEnoughBuffers(e){for(let t=0;t<e;t++)this._buffers[t]||(this._buffers[t]=this._device.createBuffer(new es(si.UNIFORM|si.TRANSFER_DST,ai.HOST|ai.DEVICE,Mp.SIZE,Mp.SIZE))),this._dataArray[t]||(this._dataArray[t]=new Float32Array(Mp.COUNT));this._nativeObj.setBuffers(this._buffers)}}const OX=[{name:"CC_USE_SKINNING",value:!0},{name:"CC_USE_BAKED_ANIMATION",value:!0}];class NX extends ij{constructor(){super(),this.uploadedAnim=void 0,this._jointsMedium=void 0,this._skeleton=null,this._mesh=null,this._dataPoolManager=void 0,this._instAnimInfoIdx=-1,this.type=_v.BAKED_SKINNING,this._dataPoolManager=u.director.root.dataPoolManager;const e=new Float32Array(4),t=this._dataPoolManager.jointAnimationInfo.getData();this._jointsMedium={buffer:null,jointTextureInfo:e,animInfo:t,texture:null,boundsInfo:null}}_init(){this._nativeObj=new da}destroy(){this.uploadedAnim=void 0,this._jointsMedium.boundsInfo=null,this._jointsMedium.buffer&&(this._jointsMedium.buffer.destroy(),this._jointsMedium.buffer=null),this._applyJointTexture(),this._applyNativeJointMedium(),super.destroy()}bindSkeleton(e=null,t=null,n=null){if(this._skeleton=e,this._mesh=n,!e||!t||!n)return;this.transform=t;const i=this._dataPoolManager;this._jointsMedium.animInfo=i.jointAnimationInfo.getData(t.uuid),this._jointsMedium.buffer||(this._jointsMedium.buffer=this._device.createBuffer(new es(si.UNIFORM|si.TRANSFER_DST,ai.DEVICE,Op.SIZE,Op.SIZE)))}updateTransform(e){if(super.updateTransform(e),!this.uploadedAnim)return;const{animInfo:t,boundsInfo:n}=this._jointsMedium,i=n[t.data[0]],s=this._worldBounds;if(s&&i){const e=this.transform;i.transform(e._mat,e._pos,e._rot,e._scale,s)}}updateUBOs(e){super.updateUBOs(e);const t=this._jointsMedium.animInfo,n=this._instAnimInfoIdx;return n>=0?this.instancedAttributes.views[n][0]=t.data[0]:t.dirty&&(t.buffer.update(t.data),t.dirty=!1),!0}getMacroPatches(e){const t=super.getMacroPatches(e);return t?t.concat(OX):OX}uploadAnimation(e){if(!this._skeleton||!this._mesh||this.uploadedAnim===e)return;this.uploadedAnim=e;const t=this._dataPoolManager;let n=null;e?(n=t.jointTexturePool.getSequencePoseTexture(this._skeleton,e,this._mesh,this.transform),this._jointsMedium.boundsInfo=n&&n.bounds.get(this._mesh.hash),this._updateModelBounds(null)):(n=t.jointTexturePool.getDefaultPoseTexture(this._skeleton,this._mesh,this.transform),this._jointsMedium.boundsInfo=null,this._updateModelBounds(n&&n.bounds.get(this._mesh.hash)[0])),this._applyJointTexture(n),this._applyNativeJointMedium()}_applyNativeJointMedium(){if(this._nativeObj){const e=[];this._jointsMedium.boundsInfo&&this._jointsMedium.boundsInfo.forEach((t=>{e.push(t.native)}));const t="nativeDirty";this._nativeObj.setJointMedium(!!this.uploadedAnim,{boundsInfo:e,jointTextureInfo:this._jointsMedium.jointTextureInfo.buffer,animInfo:{buffer:this._jointsMedium.animInfo.buffer,data:this._jointsMedium.animInfo.data.buffer,dirty:this._jointsMedium.animInfo[t].buffer},buffer:this._jointsMedium.buffer})}}_updateModelBounds(e){this._modelBounds=e,this._nativeObj.updateModelBounds(e?e.native:null)}_applyJointTexture(e=null){const t=this._jointsMedium.texture;if(t&&t!==e&&this._dataPoolManager.jointTexturePool.releaseHandle(t),this._jointsMedium.texture=e,!e)return;const{buffer:n,jointTextureInfo:i}=this._jointsMedium;i[0]=e.handle.texture.width,i[1]=this._skeleton.joints.length,i[2]=e.pixelOffset+.1,i[3]=1/i[0],this.updateInstancedJointTextureInfo(),n&&n.update(i);const s=e.handle.texture;for(let e=0;e<this._subModels.length;++e)this._subModels[e].descriptorSet.bindTexture(Fp,s)}_updateLocalDescriptors(e,t){super._updateLocalDescriptors(e,t);const{buffer:n,texture:i,animInfo:s}=this._jointsMedium;if(t.bindBuffer(Op.BINDING,n),t.bindBuffer(Np.BINDING,s.buffer),i){const e=this._device.getSampler(oX);t.bindTexture(Fp,i.handle.texture),t.bindSampler(Fp,e)}}_updateInstancedAttributes(e,t){super._updateInstancedAttributes(e,t),this._setInstAnimInfoIdx(this._getInstancedAttributeIndex("a_jointAnimInfo")),this.updateInstancedJointTextureInfo()}_setInstAnimInfoIdx(e){this._instAnimInfoIdx=e,this._nativeObj.setAnimInfoIdx(e)}updateInstancedJointTextureInfo(){const{jointTextureInfo:e,animInfo:t}=this._jointsMedium,n=this._instAnimInfoIdx;if(n>=0){const i=this.instancedAttributes.views[n];i[0]=t.data[0],i[1]=e[1],i[2]=e[2]}}}var MX,LX,BX,FX,zX,UX,GX,VX,HX,kX,jX,WX,qX;let XX=function(t){return e({SkinnedMeshRenderer:t,SkinningModelComponent:t}),t}((MX=mc("cc.SkinnedMeshRenderer"),LX=Mc(),BX=vc(100),FX=Rc(),zX=Zc(gj),UX=Zc(lS),GX=Zc(gj),VX=Zc(lS),HX=Uc(),MX(kX=LX(kX=BX(kX=Ic(kX=FX((WX=ac((jX=class extends aj{get skeleton(){return this._skeleton}set skeleton(e){e!==this._skeleton&&(this._skeleton=e,this._update())}get skinningRoot(){return this._skinningRoot}set skinningRoot(e){this._skinningRoot=e,this._tryBindAnimation(),e!==this._skinningRoot&&this._update()}get model(){return this._model}constructor(){super(),rc(this,"_skeleton",WX,this),rc(this,"_skinningRoot",qX,this),this._clip=null,this.associatedAnimation=null,this._modelType=NX}onLoad(){super.onLoad(),this._tryBindAnimation()}onDestroy(){this.associatedAnimation&&(this.associatedAnimation.notifySkinnedMeshRemoved(this),this.associatedAnimation),super.onDestroy()}uploadAnimation(e){this._clip=e,this.model&&this.model.uploadAnimation&&this.model.uploadAnimation(e)}setUseBakedAnimation(e=!0,t=!1){const n=e?NX:DX;(t||this._modelType!==n)&&(this._modelType=n,this._model&&(u.director.root.destroyModel(this._model),this._model=null,this._models.length=0,this._updateModels(),this._updateCastShadow(),this._updateReceiveShadow(),this.enabledInHierarchy&&this._attachToScene()))}setMaterial(e,t){super.setMaterial(e,t),this._modelType===DX&&this.getMaterialInstance(t)}_updateModelParams(){this._update(),super._updateModelParams()}_tryBindAnimation(){const{_skinningRoot:e}=this;if(!e)return;let t=!1;for(let n=this.node;n;n=n.parent)if(n===e){t=!0;break}if(!t)return;const n=e.getComponent("cc.SkeletalAnimation");n?n.notifySkinnedMeshAdded(this):this.setUseBakedAnimation(!1)}_update(){this.model&&(this.model.bindSkeleton(this._skeleton,this._skinningRoot,this._mesh),this.model.uploadAnimation&&this.model.uploadAnimation(this._clip))}}).prototype,"_skeleton",[zX],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),qX=ac(jX.prototype,"_skinningRoot",[UX],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(jX.prototype,"skeleton",[GX],Object.getOwnPropertyDescriptor(jX.prototype,"skeleton"),jX.prototype),ac(jX.prototype,"skinningRoot",[VX,HX],Object.getOwnPropertyDescriptor(jX.prototype,"skinningRoot"),jX.prototype),kX=jX))||kX)||kX)||kX)||kX)||kX));var YX,KX,$X,QX,JX,ZX,eY,tY,nY,iY,sY,oY,rY,aY,cY,lY,hY,uY,_Y,dY,pY,fY,mY,gY,vY,yY,xY,SY,CY;const EY=new vs(zi.ATTR_BATCH_ID,ti.R32F),TY=new vs(zi.ATTR_BATCH_UV,ti.RG32F),bY=Hs[EY.format].size+Hs[TY.format].size;let AY=function(t){return e({SkinnedMeshUnit:t,SkinningModelUnit:t}),t}((YX=mc("cc.SkinnedMeshUnit"),KX=Zc(ak),$X=Zc(gj),QX=Zc(lg),JX=Zc(XX),YX((tY=ac((eY=class{constructor(){rc(this,"mesh",tY,this),rc(this,"skeleton",nY,this),rc(this,"material",iY,this),rc(this,"_localTransform",sY,this),rc(this,"_offset",oY,this),rc(this,"_size",rY,this)}set offset(e){Bn.copy(this._offset,e)}get offset(){return this._offset}set size(e){Bn.copy(this._size,e)}get size(){return this._size}set copyFrom(e){e&&(this.mesh=e.mesh,this.skeleton=e.skeleton,this.material=e.getMaterial(0),e.skinningRoot&&sX(e.node,e.skinningRoot,this._localTransform))}get copyFrom(){return null}}).prototype,"mesh",[KX],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),nY=ac(eY.prototype,"skeleton",[$X],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),iY=ac(eY.prototype,"material",[QX],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),sY=ac(eY.prototype,"_localTransform",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new On}}),oY=ac(eY.prototype,"_offset",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Bn(0,0)}}),rY=ac(eY.prototype,"_size",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Bn(1,1)}}),ac(eY.prototype,"offset",[Lc],Object.getOwnPropertyDescriptor(eY.prototype,"offset"),eY.prototype),ac(eY.prototype,"size",[Lc],Object.getOwnPropertyDescriptor(eY.prototype,"size"),eY.prototype),ac(eY.prototype,"copyFrom",[JX],Object.getOwnPropertyDescriptor(eY.prototype,"copyFrom"),eY.prototype),ZX=eY))||ZX));const PY=new On,wY=(new On,new gn);let IY=function(t){return e({SkinnedMeshBatchRenderer:t,BatchedSkinningModelComponent:t}),t}((aY=mc("cc.SkinnedMeshBatchRenderer"),cY=Mc(),lY=vc(100),hY=Rc(),uY=Uc(),_Y=Zc([xt]),dY=Uc(),pY=Zc([AY]),fY=Uc(),mY=Bc(),gY=Bc(),aY(vY=cY(vY=lY(vY=Ic(vY=hY((xY=ac((yY=class extends XX{constructor(...e){super(...e),rc(this,"atlasSize",xY,this),rc(this,"batchableTextureNames",SY,this),rc(this,"units",CY,this),this._textures={},this._batchMaterial=null}get mesh(){return super.mesh}set mesh(e){super.mesh=e}get skeleton(){return super.skeleton}set skeleton(e){super.skeleton=e}onLoad(){super.onLoad(),this.cook()}onDestroy(){for(const e in this._textures)this._textures[e].destroy();this._textures={},this._mesh&&(this._mesh.destroy(),this._mesh=null),super.onDestroy()}_onMaterialModified(e,t){this.cookMaterials(),super._onMaterialModified(e,this.getMaterialInstance(e))}cook(){this.cookMaterials(),this.cookSkeletons(),this.cookMeshes()}cookMaterials(){this._batchMaterial||(this._batchMaterial=this.getMaterial(0));const e=this.getMaterialInstance(0);if(!e||!this._batchMaterial||!this._batchMaterial.effectAsset)return void console.warn("incomplete batch material!");e.copy(this._batchMaterial),this.resizeAtlases();const t=e.effectAsset.techniques[e.technique];for(let n=0;n<t.passes.length;n++){const i=t.passes[n];if(i.properties)for(const t in i.properties)if(i.properties[t].type>=ii.SAMPLER1D){let i=null;this.batchableTextureNames.find((e=>e===t))?(i=this._textures[t],i||(i=this.createTexture(t)),this.cookTextures(i,t,n)):this.units.some((e=>i=e.material&&e.material.getProperty(t,n))),i&&e.setProperty(t,i,n)}else{const i=[];for(let e=0;e<this.units.length;e++){const s=this.units[e];s.material&&i.push(s.material.getProperty(t.slice(0,-3),n))}e.setProperty(t,i,n)}}}cookSkeletons(){if(!this._skinningRoot)return void console.warn("no skinning root specified!");const e=[],t=[];for(let n=0;n<this.units.length;n++){const i=this.units[n];if(!i||!i.skeleton)continue;const s=i.skeleton;On.invert(PY,i._localTransform);for(let n=0;n<s.joints.length;n++){const i=s.joints[n];e.findIndex((e=>e===i))>=0||(e.push(i),t.push(On.multiply(new On,s.bindposes[n]||On.IDENTITY,PY)))}}const n=Array.from(Array(e.length).keys()).sort(((t,n)=>e[t]>e[n]?1:e[t]<e[n]?-1:0)),i=new gj;i.joints=e.map(((e,t,i)=>i[n[t]])),i.bindposes=t.map(((e,t,i)=>i[n[t]])),this._skeleton&&this._skeleton.destroy(),this.skeleton=i}cookMeshes(){let e=!1;for(let t=0;t<this.units.length;t++)if(this.units[t].mesh){e=!0;break}if(!e||!this._skinningRoot)return;this._mesh?this._mesh.destroyRenderingMesh():this._mesh=new ak;let t=0,n=ti.UNKNOWN,i=0,s=ti.UNKNOWN,o=0,r=ti.UNKNOWN,a=0,c=ti.UNKNOWN,l=0,h=ti.UNKNOWN;const u=new Array(this.units.length),_=this.units.length;for(let e=0;e<_;e++){const t=this.units[e];t&&t.skeleton&&(u[e]=t.skeleton.joints.map((e=>this._skeleton.joints.findIndex((t=>e===t)))))}for(let e=0;e<_;e++){const _=this.units[e];if(!_||!_.mesh||!_.mesh.data)continue;const d=this._createUnitMesh(e,_.mesh),p=new DataView(d.data.buffer);On.inverseTranspose(PY,_._localTransform);const{offset:f}=_,{size:m}=_;for(let g=0;g<d.struct.vertexBundles.length;g++){const v=d.struct.vertexBundles[g];t=v.view.offset,n=ti.UNKNOWN;for(let e=0;e<v.attributes.length;e++){const i=v.attributes[e];if(i.name===zi.ATTR_POSITION){n=i.format;break}t+=Hs[i.format].size}if(n){const e=gE(p,n,t,v.view.length,v.view.stride);for(let t=0;t<e.length;t+=3)gn.fromArray(wY,e,t),gn.transformMat4(wY,wY,_._localTransform),gn.toArray(e,wY,t);mE(p,e,n,t,v.view.stride)}i=v.view.offset,s=ti.UNKNOWN;for(let e=0;e<v.attributes.length;e++){const t=v.attributes[e];if(t.name===zi.ATTR_NORMAL){s=t.format;break}i+=Hs[t.format].size}if(s){const e=gE(p,s,i,v.view.length,v.view.stride);for(let t=0;t<e.length;t+=3)gn.fromArray(wY,e,t),gn.transformMat4Normal(wY,wY,PY),gn.toArray(e,wY,t);mE(p,e,s,i,v.view.stride)}o=v.view.offset,r=ti.UNKNOWN;for(let e=0;e<v.attributes.length;e++){const t=v.attributes[e];if(t.name===zi.ATTR_TANGENT){r=t.format;break}o+=Hs[t.format].size}if(r){const e=gE(p,r,o,v.view.length,v.view.stride);for(let t=0;t<e.length;t+=3)gn.fromArray(wY,e,t),gn.transformMat4Normal(wY,wY,PY),gn.toArray(e,wY,t);mE(p,e,r,o,v.view.stride)}a=v.view.offset,c=ti.UNKNOWN;for(let e=0;e<v.attributes.length;e++){const t=v.attributes[e];if(t.name===zi.ATTR_BATCH_UV){c=t.format;break}a+=Hs[t.format].size}c&&vE(p,((e,t)=>{var n;const i=0===t?"x":"y";return(e=(n=e)-Math.floor(n))*m[i]+f[i]}),c,a,v.view.length,v.view.stride,p);const y=u[e];if(y){l=v.view.offset,h=ti.UNKNOWN;for(let e=0;e<v.attributes.length;e++){const t=v.attributes[e];if(t.name===zi.ATTR_JOINTS){h=t.format;break}l+=Hs[t.format].size}h&&vE(p,(e=>y[e]),h,l,v.view.length,v.view.stride,p)}}this._mesh.merge(d)}this._onMeshChanged(this._mesh),this._updateModels()}cookTextures(e,t,n){const i=[],s=[],o=[],r=[];for(let e=0;e<this.units.length;e++){const a=this.units[e];if(!a.material)continue;const c=a.material.getProperty(t,n);if(c&&c.image&&c.image.data){const e=new Yi;e.texOffset.x=a.offset.x*this.atlasSize,e.texOffset.y=a.offset.y*this.atlasSize,e.texExtent.width=a.size.x*this.atlasSize,e.texExtent.height=a.size.y*this.atlasSize;const{data:t}=c.image;ArrayBuffer.isView(t)?(o.push(t),r.push(e)):(i.push(t),s.push(e))}}const a=e.getGFXTexture(),{device:c}=u.director.root;o.length>0&&c.copyBuffersToTexture(o,a,r),i.length>0&&c.copyTexImagesToTexture(i,a,s)}createTexture(e){const t=new bm;return t.setFilters(kf.LINEAR,kf.LINEAR),t.setMipFilter(kf.NEAREST),t.reset({width:this.atlasSize,height:this.atlasSize,format:Vf.RGBA8888}),this._textures[e]=t,t}resizeAtlases(){for(const e in this._textures)this._textures[e].reset({width:this.atlasSize,height:this.atlasSize,format:Vf.RGBA8888})}_createUnitMesh(e,t){const n=JSON.parse(JSON.stringify(t.struct)),i={};for(let e=0;e<t.struct.primitives.length;e++){const s=t.struct.primitives[e];let o=0,r=ti.UNKNOWN,a=0;for(;a<s.vertexBundelIndices.length;a++){const e=t.struct.vertexBundles[s.vertexBundelIndices[a]];o=e.view.offset,r=ti.UNKNOWN;for(let t=0;t<e.attributes.length;t++){const n=e.attributes[t];if(n.name===zi.ATTR_TEX_COORD){r=n.format;break}o+=Hs[n.format].size}if(r)break}if(void 0!==i[a])continue;i[a]=[r,o];const c=n.vertexBundles[a];c.attributes.push(EY),c.attributes.push(TY),c.view.offset=0,c.view.length+=c.view.count*bY,c.view.stride+=bY}let s=0;for(let e=0;e<n.vertexBundles.length;e++)s+=n.vertexBundles[e].view.length;for(let e=0;e<n.primitives.length;e++){const t=n.primitives[e];t.indexView&&(t.indexView.offset=s,s+=t.indexView.length)}const o=new Uint8Array(s),r=t.data,a=new DataView(o.buffer),c=new DataView(r.buffer),{isLittleEndian:l}=u.sys;for(const s in i){const h=n.vertexBundles[s],u=t.struct.vertexBundles[s],[_,d]=i[s],p=gE(c,_,d,u.view.length,u.view.stride),f=u.view,m=h.view,g=f.stride,v=m.stride;let y=f.offset,x=m.offset;for(let t=0;t<m.count;t++){const n=r.subarray(y,y+g);o.set(n,x),a.setFloat32(x+g,e),a.setFloat32(x+g+4,p[2*t],l),a.setFloat32(x+g+8,p[2*t+1],l),x+=v,y+=g}}for(let e=0;e<n.primitives.length;e++){const i=t.struct.primitives[e],s=n.primitives[e];if(i.indexView&&s.indexView){const e=i.indexView.stride,t=s.indexView.stride;let n=i.indexView.offset,a=s.indexView.offset;for(let i=0;i<s.indexView.count;i++){const i=r.subarray(n,n+e);o.set(i,a),a+=t,n+=e}}}const h=new ak;return h.reset({struct:n,data:o}),h}}).prototype,"atlasSize",[Tc,uY],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1024}}),SY=ac(yY.prototype,"batchableTextureNames",[_Y,Tc,dY],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),CY=ac(yY.prototype,"units",[pY,Tc,fY],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),ac(yY.prototype,"mesh",[el,mY],Object.getOwnPropertyDescriptor(yY.prototype,"mesh"),yY.prototype),ac(yY.prototype,"skeleton",[el,gY],Object.getOwnPropertyDescriptor(yY.prototype,"skeleton"),yY.prototype),vY=yY))||vY)||vY)||vY)||vY)||vY));var RY,DY,OY,NY,MY,LY;function BY(e){return"string"==typeof e||"number"==typeof e}u.SkinningModelComponent=XX,ke.setClassAlias(XX,"cc.SkinningModelComponent"),u.SkinningModelUnit=AY,ke.setClassAlias(AY,"cc.SkinningModelUnit"),u.BatchedSkinningModelComponent=IY,ke.setClassAlias(IY,"cc.BatchedSkinningModelComponent"),u.utils=nj;let FY=mc("cc.animation.HierarchyPath")((OY=ac((DY=class{constructor(e){rc(this,"path",OY,this),this.path=e||""}get(e){if(!(e instanceof lS))return D(3925),null;return e.getChildByPath(this.path)||(D(3926,e.name,this.path),null)}}).prototype,"path",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),RY=DY))||RY,zY=mc("cc.animation.ComponentPath")((LY=ac((MY=class{constructor(e){rc(this,"component",LY,this),this.component=e||""}get(e){if(!(e instanceof lS))return D(3927),null;return e.getComponent(this.component)||(D(3928,e.name,this.component),null)}}).prototype,"component",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),NY=MY))||NY;var UY,GY,VY,HY,kY;let jY=mc("cc.animation.UniformProxyFactory")((VY=ac((GY=class{constructor(e,t){rc(this,"passIndex",VY,this),rc(this,"uniformName",HY,this),rc(this,"channelIndex",kY,this),this.passIndex=t||0,this.uniformName=e||""}forTarget(e){const t=e.passes[this.passIndex],n=t.getHandle(this.uniformName);if(!n)throw new Error(`Material "${e.name}" has no uniform "${this.uniformName}"`);if(Wm.getTypeFromHandle(n)<ii.SAMPLER1D){const i=void 0===this.channelIndex?n:t.getHandle(this.uniformName,this.channelIndex,ii.FLOAT);if(!i)throw new Error(`Uniform "${this.uniformName} (in material ${e.name}) has no channel ${this.channelIndex}"`);return function(e,t){for(const n of e.shaderInfo.blocks)for(const e of n.members)if(e.name===t)return e.count>1;return!1}(t,this.uniformName)?{set:e=>{t.setUniformArray(i,e)}}:{set:e=>{t.setUniform(i,e)}}}{const e=Wm.getBindingFromHandle(n),i=t.properties[this.uniformName],s=i&&i.value?`${i.value}-texture`:Cf(i.type);let o=Fm.get(s);return o||(S(`Illegal texture default value: ${s}.`),o=Fm.get("default-texture")),{set:n=>{n||(n=o);const i=n.getGFXTexture();i&&i.width&&i.height&&(t.bindTexture(e,i),n instanceof sm&&t.bindSampler(e,u.game._gfxDevice.getSampler(n.getSamplerInfo())))}}}}}).prototype,"passIndex",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),HY=ac(GY.prototype,"uniformName",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),kY=ac(GY.prototype,"channelIndex",[$c],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){}}),UY=GY))||UY;var WY,qY,XY,YY,KY,$Y,QY,JY;let ZY=mc("cc.animation.MorphWeightValueProxy")((XY=ac((qY=class{constructor(){rc(this,"subMeshIndex",XY,this),rc(this,"shapeIndex",YY,this)}forTarget(e){return{set:t=>{e.setWeight(t,this.subMeshIndex,this.shapeIndex)}}}}).prototype,"subMeshIndex",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),YY=ac(qY.prototype,"shapeIndex",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),WY=qY))||WY,eK=mc("cc.animation.MorphWeightsValueProxy")((QY=ac(($Y=class{constructor(){rc(this,"subMeshIndex",QY,this)}forTarget(e){return{set:t=>{e.setWeights(t,this.subMeshIndex)}}}}).prototype,"subMeshIndex",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),KY=$Y))||KY,tK=mc("cc.animation.MorphWeightsAllValueProxy")(JY=class{forTarget(e){return{set:t=>{var n,i;const s=null!==(n=null===(i=e.mesh)||void 0===i?void 0:i.struct.primitives.length)&&void 0!==n?n:0;for(let n=0;n<s;++n)e.setWeights(t,n)}}}})||JY;var nK,iK,sK,oK,rK;function aK(e,t,n,i){var s,o,r,a,c;let l=new t,h=new t,u=new t,_=mc(e)((r=ac((o=class{constructor(e,n,i){rc(this,"dataPoint",r,this),rc(this,"inTangent",a,this),rc(this,"outTangent",c,this),this.dataPoint=e||new t,this.inTangent=n||new t,this.outTangent=i||new t}lerp(e,t,s){const o=this.dataPoint,r=e.dataPoint;h=n(h,this.inTangent,s),u=n(u,e.outTangent,s);const a=t*t*t,c=t*t,_=a-2*c+t,d=-2*a+3*c,p=a-c;return l=n(l,o,2*a-3*c+1),l=i(l,l,h,_),l=i(l,l,r,d),l=i(l,l,u,p),l}getNoLerp(){return this.dataPoint}}).prototype,"dataPoint",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new t}}),a=ac(o.prototype,"inTangent",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new t}}),c=ac(o.prototype,"outTangent",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new t}}),s=o))||s;if(t===Tn){const e=_.prototype.lerp;_.prototype.lerp=function(t,n,i){const s=e.call(this,t,n,i);return Tn.normalize(s,s),s}}return _}const cK=aK("cc.CubicSplineVec2Value",Bn,Bn.multiplyScalar,Bn.scaleAndAdd),lK=aK("cc.CubicSplineVec3Value",gn,gn.multiplyScalar,gn.scaleAndAdd),hK=aK("cc.CubicSplineVec4Value",Gn,Gn.multiplyScalar,Gn.scaleAndAdd),uK=aK("cc.CubicSplineQuatValue",Tn,Tn.multiplyScalar,Tn.scaleAndAdd);let _K=mc("cc.CubicSplineNumberValue")((sK=ac((iK=class{constructor(e,t,n){rc(this,"dataPoint",sK,this),rc(this,"inTangent",oK,this),rc(this,"outTangent",rK,this),this.dataPoint=e,this.inTangent=t,this.outTangent=n}lerp(e,t,n){const i=this.dataPoint,s=e.dataPoint,o=t*t*t,r=t*t;return i*(2*o-3*r+1)+this.outTangent*n*(o-2*r+t)+s*(-2*o+3*r)+e.inTangent*n*(o-r)}getNoLerp(){return this.dataPoint}}).prototype,"dataPoint",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),oK=ac(iK.prototype,"inTangent",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),rK=ac(iK.prototype,"outTangent",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),nK=iK))||nK;const dK=Symbol("CreateEval");var pK,fK,mK,gK,vK,yK,xK,SK,CK,EK,TK,bK,AK,PK,wK,IK;const RK=Symbol("NormalizedFollow"),DK=Symbol("ConvertAsTrsPath"),OK=Symbol("TrackBinding");let NK=mc("cc.animation.TrackPath")((mK=ac((fK=class e{constructor(){rc(this,"_paths",mK,this)}get length(){return this._paths.length}toProperty(e){return this._paths.push(e),this}toElement(e){return this._paths.push(e),this}toHierarchy(e){return this._paths.push(new FY(e)),this}toComponent(e){const t=new zY("string"==typeof e?e:ke.getClassName(e));return this._paths.push(t),this}toCustomized(e){return this._paths.push(e),this}append(...e){const t=this._paths.concat(...e.map((e=>e._paths)));return this._paths=t,this}isPropertyAt(e){return"string"==typeof this._paths[e]}parsePropertyAt(e){return this._paths[e]}isElementAt(e){return"number"==typeof this._paths[e]}parseElementAt(e){return this._paths[e]}isHierarchyAt(e){return this._paths[e]instanceof FY}parseHierarchyAt(e){return this.isHierarchyAt(e),this._paths[e].path}isComponentAt(e){return this._paths[e]instanceof zY}parseComponentAt(e){return this.isComponentAt(e),this._paths[e].component}slice(t,n){const i=new e;return i._paths=this._paths.slice(t,n),i}trace(e,t,n){var i,s;return null!==(i=t)&&void 0!==i||(t=0),null!==(s=n)&&void 0!==s||(n=this._paths.length),this[RK](e,t,n)}[DK](){const{_paths:e}=this,t=e.length;let n,i=0,s="";for(;i<t;++i){const t=e[i];if(!(t instanceof FY))break;t.path&&(s?s+=`/${t.path}`:s=t.path)}if(i===t)return null;if(i!==t-1)return null;switch(e[i]){case"position":case"scale":case"rotation":case"eulerAngles":n=e[i];break;default:return null}return{node:s,property:n}}[RK](e,t,n){const{_paths:i}=this;let s=e;for(let e=t;e<n;++e){const t=i[e];if(BY(t)){if(!(t in s))return D(3929,t),null;s=s[t]}else s=t.get(s);if(null===s)break}return s}}).prototype,"_paths",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),pK=fK))||pK,MK=mc("cc.animation.TrackBinding")(gK=wc((yK=ac((vK=class{constructor(){rc(this,"path",yK,this),rc(this,"proxy",xK,this)}parseTrsPath(){return this.proxy?null:this.path[DK]()}createRuntimeBinding(e,t,n){const{path:i,proxy:s}=this,o=i.length,r=o-1;if(0===o||!i.isPropertyAt(r)&&!i.isElementAt(r)||s){if(s){const t=i[RK](e,0,o);if(null===t)return null;const n=s.forTarget(t),r={setValue:e=>{n.set(e)}},a=n.get;return a&&(r.getValue=()=>a.call(n)),r}return N(3921),null}{const s=i.isPropertyAt(r)?i.parsePropertyAt(r):i.parseElementAt(r),c=i[RK](e,0,o-1);return null===c?null:t&&c instanceof lS&&("position"===(a=s)||"rotation"===a||"scale"===a||"eulerAngles"===a)?t.createPoseWriter(c,s,n):{setValue:e=>{c[s]=e},getValue:()=>c[s]}}var a}isMaskedOff(e){const t=this.parseTrsPath();if(!t)return!1;const n=e.joints[Symbol.iterator]();for(let e=n.next();!e.done;e=n.next()){const{value:n}=e;if(n.path===t.node)return!n.enabled}return!1}}).prototype,"path",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new NK}}),xK=ac(vK.prototype,"proxy",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),gK=vK))||gK)||gK,LK=mc("cc.animation.Track")((EK=ac((CK=class{constructor(){rc(this,"_binding",EK,this)}get path(){return this._binding.path}set path(e){this._binding.path=e}get proxy(){return this._binding.proxy}set proxy(e){this._binding.proxy=e}get[OK](){return this._binding}channels(){return[]}range(){const e={min:1/0,max:-1/0};for(const t of this.channels())e.min=Math.min(e.min,t.curve.rangeMin),e.max=Math.max(e.max,t.curve.rangeMax);return e}}).prototype,"_binding",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new MK}}),SK=CK))||SK,BK=mc("cc.animation.Channel")((AK=ac((bK=class{constructor(e){this.name="",rc(this,"_curve",AK,this),this._curve=e}get curve(){return this._curve}}).prototype,"_curve",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),TK=bK))||TK,FK=mc("cc.animation.SingleChannelTrack")((IK=ac((wK=class extends LK{constructor(){super(),rc(this,"_channel",IK,this),this._channel=new BK(this.createCurve())}get channel(){return this._channel}channels(){return[this._channel]}createCurve(){throw new Error("Not impl")}[dK](e){const{curve:t}=this._channel;return new zK(t)}}).prototype,"_channel",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),PK=wK))||PK;class zK{constructor(e){this._curve=e}evaluate(e){return this._curve.evaluate(e)}}var UK;let GK=mc("cc.animation.RealTrack")(UK=class extends FK{createCurve(){return new K_}})||UK;function VK(e){return 0===e.keyFramesCount?void 0:e}var HK,kK,jK,WK;const qK=["X","Y","Z","W"];let XK=mc("cc.animation.VectorTrack")((jK=ac((kK=class extends LK{constructor(){super(),rc(this,"_channels",jK,this),rc(this,"_nComponents",WK,this),this._channels=new Array(4);for(let e=0;e<this._channels.length;++e){const t=new BK(new K_);t.name=qK[e],this._channels[e]=t}}get componentsCount(){return this._nComponents}set componentsCount(e){this._nComponents=e}channels(){return this._channels}[dK](){switch(this._nComponents){default:case 2:return new YK(VK(this._channels[0].curve),VK(this._channels[1].curve));case 3:return new KK(VK(this._channels[0].curve),VK(this._channels[1].curve),VK(this._channels[2].curve));case 4:return new $K(VK(this._channels[0].curve),VK(this._channels[1].curve),VK(this._channels[2].curve),VK(this._channels[3].curve))}}}).prototype,"_channels",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),WK=ac(kK.prototype,"_nComponents",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 4}}),HK=kK))||HK;class YK{constructor(e,t){this._result=new Bn,this._x=e,this._y=t}evaluate(e,t){return this._x&&this._y||!t.getValue||Bn.copy(this._result,t.getValue()),this._x&&(this._result.x=this._x.evaluate(e)),this._y&&(this._result.y=this._y.evaluate(e)),this._result}}class KK{constructor(e,t,n){this._result=new gn,this._x=e,this._y=t,this._z=n}evaluate(e,t){return this._x&&this._y&&this._z||!t.getValue||gn.copy(this._result,t.getValue()),this._x&&(this._result.x=this._x.evaluate(e)),this._y&&(this._result.y=this._y.evaluate(e)),this._z&&(this._result.z=this._z.evaluate(e)),this._result}}class $K{constructor(e,t,n,i){this._result=new Gn,this._x=e,this._y=t,this._z=n,this._w=i}evaluate(e,t){return this._x&&this._y&&this._z&&this._w||!t.getValue||Gn.copy(this._result,t.getValue()),this._x&&(this._result.x=this._x.evaluate(e)),this._y&&(this._result.y=this._y.evaluate(e)),this._z&&(this._result.z=this._z.evaluate(e)),this._w&&(this._result.w=this._w.evaluate(e)),this._result}}var QK;let JK=mc("cc.animation.QuatTrack")(QK=class extends FK{createCurve(){return new Od}[dK](){return new ZK(this.channels()[0].curve)}})||QK;class ZK{constructor(e){this._result=new Tn,this._curve=e}evaluate(e){return this._curve.evaluate(e,this._result),this._result}}var e$,t$,n$;const i$=["Red","Green","Blue","Alpha"];let s$=mc("cc.animation.ColorTrack")((n$=ac((t$=class extends LK{constructor(){super(),rc(this,"_channels",n$,this),this._channels=new Array(4);for(let e=0;e<this._channels.length;++e){const t=new BK(new K_);t.name=i$[e],this._channels[e]=t}}channels(){return this._channels}[dK](){return new o$(VK(this._channels[0].curve),VK(this._channels[1].curve),VK(this._channels[2].curve),VK(this._channels[3].curve))}}).prototype,"_channels",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),e$=t$))||e$;class o${constructor(e,t,n,i){this._result=new dn,this._x=e,this._y=t,this._z=n,this._w=i}evaluate(e,t){return this._x&&this._y&&this._z&&this._w||!t.getValue||dn.copy(this._result,t.getValue()),this._x&&(this._result.r=this._x.evaluate(e)),this._y&&(this._result.g=this._y.evaluate(e)),this._z&&(this._result.b=this._z.evaluate(e)),this._w&&(this._result.a=this._w.evaluate(e)),this._result}}var r$,a$,c$;const l$=["Width","Height"];let h$=mc("cc.animation.SizeTrack")((c$=ac((a$=class extends LK{constructor(){super(),rc(this,"_channels",c$,this),this._channels=new Array(2);for(let e=0;e<this._channels.length;++e){const t=new BK(new K_);t.name=l$[e],this._channels[e]=t}}channels(){return this._channels}[dK](){return new u$(VK(this._channels[0].curve),VK(this._channels[1].curve))}}).prototype,"_channels",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),r$=a$))||r$;class u${constructor(e,t){this._result=new kn,this._width=e,this._height=t}evaluate(e,t){if((!this._width||!this._height)&&t.getValue){const e=t.getValue();this._result.x=e.x,this._result.y=e.y}return this._width&&(this._result.width=this._width.evaluate(e)),this._height&&(this._result.height=this._height.evaluate(e)),this._result}}var _$;let d$=mc("cc.animation.ObjectTrack")(_$=class extends FK{createCurve(){return new kd}})||_$;const p$=Symbol("[[Owner]]");function f$(e){e[p$]}let m$,g$;!function(e){e[e.FLOAT=0]="FLOAT",e[e.BOOLEAN=1]="BOOLEAN",e[e.TRIGGER=2]="TRIGGER",e[e.INTEGER=3]="INTEGER"}(m$||(m$={})),function(e){e[e.AFTER_CONSUMED=0]="AFTER_CONSUMED",e[e.NEXT_FRAME_OR_AFTER_CONSUMED=1]="NEXT_FRAME_OR_AFTER_CONSUMED"}(g$||(g$={}));class v${constructor(e,t){this.type=void 0,this.resetMode=g$.AFTER_CONSUMED,this._value=void 0,this._refs=[],this.type=e,this._value=t}get value(){return this._value}set value(e){this._value=e;for(const{fn:t,thisArg:n,args:i}of this._refs)t.call(n,e,...i)}bind(e,t,...n){return this._refs.push({fn:e,thisArg:t,args:n}),this._value}}class y$ extends Error{constructor(e){super(`${e} transition is invalid`),this.name="TransitionRejectError"}}class x$ extends Error{constructor(e){super(`Graph variable ${e} is not defined`)}}class S$ extends Error{constructor(e,t,n){super(`Expect graph variable ${e} to have type '${t}' instead of received '${null!=n?n:typeof n}'`)}}const C$=Symbol("[[createEval]]");var E$,T$,b$,A$,P$,w$;const I$=Symbol("[[Outgoing transitions]]"),R$=Symbol("[[Incoming transitions]]");let D$=mc("cc.animation.State")((b$=ac((T$=class extends nl{constructor(){super(),rc(this,"name",b$,this),this[I$]=[],this[R$]=[]}}).prototype,"name",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),E$=T$))||E$,O$=mc("cc.animation.InteractiveState")((w$=ac((P$=class extends D${constructor(...e){super(...e),rc(this,"_components",w$,this)}get components(){return this._components}addComponent(e){const t=new e;return this._components.push(t),t}removeComponent(e){Z(this._components,e)}instantiateComponents(){return this._components.map((e=>Iu(e)))}}).prototype,"_components",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),A$=P$))||A$;var N$,M$,L$,B$,F$,z$;let U$=mc("cc.animation.Motion")((L$=ac((M$=class e extends O${constructor(...e){super(...e),rc(this,"motion",L$,this),rc(this,"speed",B$,this),rc(this,"speedMultiplier",F$,this),rc(this,"speedMultiplierEnabled",z$,this)}clone(){var t,n;const i=new e;return i.motion=null!==(t=null===(n=this.motion)||void 0===n?void 0:n.clone())&&void 0!==t?t:null,i.speed=this.speed,i.speedMultiplier=this.speedMultiplier,i.speedMultiplierEnabled=this.speedMultiplierEnabled,i}}).prototype,"motion",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),B$=ac(M$.prototype,"speed",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),F$=ac(M$.prototype,"speedMultiplier",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),z$=ac(M$.prototype,"speedMultiplierEnabled",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),N$=M$))||N$;const G$=Symbol("[[OnAfterDeserialized]]");var V$,H$,k$,j$,W$,q$,X$,Y$,K$,$$,Q$,J$,Z$,eQ,tQ,nQ,iQ,sQ,oQ,rQ,aQ,cQ,lQ,hQ,uQ,_Q,dQ,pQ,fQ,mQ,gQ,vQ,yQ,xQ,SQ,CQ,EQ,TQ,bQ,AQ,PQ,wQ;let IQ,RQ=mc("cc.animation.Transition")((k$=ac((H$=class extends nl{constructor(e,t,n){super(),rc(this,"from",k$,this),rc(this,"to",j$,this),rc(this,"conditions",W$,this),this[p$]=void 0,this.from=e,this.to=t,n&&(this.conditions=n)}}).prototype,"from",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),j$=ac(H$.prototype,"to",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),W$=ac(H$.prototype,"conditions",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),V$=H$))||V$,DQ=mc("cc.animation.AnimationTransition")((Y$=ac((X$=class extends RQ{constructor(...e){super(...e),rc(this,"duration",Y$,this),rc(this,"relativeDuration",K$,this),rc(this,"exitConditionEnabled",$$,this),rc(this,"_exitCondition",Q$,this)}get exitCondition(){return this._exitCondition}set exitCondition(e){this._exitCondition=e}}).prototype,"duration",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.3}}),K$=ac(X$.prototype,"relativeDuration",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),$$=ac(X$.prototype,"exitConditionEnabled",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Q$=ac(X$.prototype,"_exitCondition",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),q$=X$))||q$,OQ=mc("cc.animation.EmptyState")(J$=class extends D${})||J$,NQ=mc("cc.animation.EmptyStateTransition")((tQ=ac((eQ=class extends RQ{constructor(...e){super(...e),rc(this,"duration",tQ,this)}}).prototype,"duration",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.3}}),Z$=eQ))||Z$,MQ=mc("cc.animation.StateMachine")((sQ=ac((iQ=class e extends nl{__callOnAfterDeserializeRecursive(){this[G$]();const e=this._states.length;for(let t=0;t<e;++t){const e=this._states[t];e instanceof LQ&&e.stateMachine.__callOnAfterDeserializeRecursive()}}constructor(){super(),rc(this,"_states",sQ,this),rc(this,"_transitions",oQ,this),rc(this,"_entryState",rQ,this),rc(this,"_exitState",aQ,this),rc(this,"_anyState",cQ,this),this._entryState=this._addState(new D$),this._entryState.name="Entry",this._exitState=this._addState(new D$),this._exitState.name="Exit",this._anyState=this._addState(new D$),this._anyState.name="Any"}[G$](){this._states.forEach((()=>{})),this._transitions.forEach((e=>{e.from[I$].push(e),e.to[R$].push(e)}))}[C$](e){throw new Error("Method not implemented.")}get entryState(){return this._entryState}get exitState(){return this._exitState}get anyState(){return this._anyState}states(){return this._states}transitions(){return this._transitions}getTransitionsBetween(e,t){return f$(e),f$(t),e[I$].filter((e=>e.to===t))}getOutgoings(e){return f$(e),e[I$]}getIncomings(e){return f$(e),e[R$]}addMotion(){return this._addState(new U$)}addSubStateMachine(){return this._addState(new LQ)}addEmpty(){return this._addState(new OQ)}remove(e){f$(e),e!==this.entryState&&e!==this.exitState&&e!==this.anyState&&(this.eraseTransitionsIncludes(e),Z(this._states,e))}connect(e,t,n){if(f$(e),f$(t),t===this.entryState)throw new y$("to-entry");if(t===this.anyState)throw new y$("to-any");if(e===this.exitState)throw new y$("from-exit");const i=e instanceof U$||e===this._anyState?new DQ(e,t,n):e instanceof OQ?new NQ(e,t,n):new RQ(e,t,n);return this._transitions.push(i),e[I$].push(i),t[R$].push(i),i}disconnect(e,t){f$(e),f$(t);const n=e[I$],i=t[R$],s=this._transitions,o=n.filter((e=>e.to===t)),r=o.length;for(let e=0;e<r;++e){const t=o[e];Z(n,t),Z(s,t),ee(i,(e=>e===t))}}removeTransition(e){Z(this._transitions,e),ee(e.from[I$],(t=>t===e)),ee(e.to[R$],(t=>t===e))}eraseOutgoings(e){f$(e);const t=e[I$];for(let e=0;e<t.length;++e){const n=t[e],i=n.to;Z(this._transitions,n),ee(i[R$],(e=>e===n))}t.length=0}eraseIncomings(e){f$(e);const t=e[R$];for(let e=0;e<t.length;++e){const n=t[e],i=n.from;Z(this._transitions,n),ee(i[I$],(e=>e===n))}t.length=0}eraseTransitionsIncludes(e){this.eraseIncomings(e),this.eraseOutgoings(e)}clone(){const t=new e,n=new Map;for(const e of this._states)switch(e){case this._entryState:n.set(e,t._entryState);break;case this._exitState:n.set(e,t._exitState);break;case this._anyState:n.set(e,t._anyState);break;default:if(e instanceof U$||e instanceof LQ){const i=e.clone();t._addState(i),n.set(e,i)}}for(const e of this._transitions){const i=n.get(e.from),s=n.get(e.to),o=t.connect(i,s);o.conditions=e.conditions.map((e=>e.clone())),o instanceof DQ&&(o.duration=e.duration,o.exitConditionEnabled=e.exitConditionEnabled,o.exitCondition=e.exitCondition)}return t}_addState(e){return this._states.push(e),e}}).prototype,"_states",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),oQ=ac(iQ.prototype,"_transitions",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),rQ=ac(iQ.prototype,"_entryState",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),aQ=ac(iQ.prototype,"_exitState",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),cQ=ac(iQ.prototype,"_anyState",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),nQ=iQ))||nQ,LQ=mc("cc.animation.SubStateMachine")((uQ=ac((hQ=class e extends O${constructor(...e){super(...e),rc(this,"_stateMachine",uQ,this)}get stateMachine(){return this._stateMachine}clone(){const t=new e;return t._stateMachine=this._stateMachine.clone(),t}}).prototype,"_stateMachine",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new MQ}}),lQ=hQ))||lQ,BQ=mc("cc.animation.Layer")((pQ=ac((dQ=class{constructor(){this[p$]=void 0,rc(this,"_stateMachine",pQ,this),rc(this,"name",fQ,this),rc(this,"weight",mQ,this),rc(this,"mask",gQ,this),this._stateMachine=new MQ}get stateMachine(){return this._stateMachine}}).prototype,"_stateMachine",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),fQ=ac(dQ.prototype,"name",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),mQ=ac(dQ.prototype,"weight",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),gQ=ac(dQ.prototype,"mask",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),_Q=dQ))||_Q;!function(e){e[e.override=0]="override",e[e.additive=1]="additive"}(IQ||(IQ={})),g$.AFTER_CONSUMED;let FQ=mc("cc.animation.PlainVariable")((xQ=ac((yQ=class{constructor(e){if(rc(this,"_type",xQ,this),rc(this,"_value",SQ,this),void 0!==e)switch(this._type=e,e){default:break;case m$.FLOAT:case m$.INTEGER:this._value=0;break;case m$.BOOLEAN:this._value=!1}}get type(){return this._type}get value(){return this._value}set value(e){this._value=e}}).prototype,"_type",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return m$.FLOAT}}),SQ=ac(yQ.prototype,"_value",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),vQ=yQ))||vQ,zQ=mc("cc.animation.TriggerVariable")((TQ=ac((EQ=class{constructor(){rc(this,"_flags",TQ,this)}get type(){return m$.TRIGGER}get value(){return!!((1&this._flags)>>0)}set value(e){e?this._flags|=1:this._flags&=-2}get resetMode(){return(6&this._flags)>>1}set resetMode(e){this._flags&=-7,this._flags|=e<<1}}).prototype,"_flags",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),CQ=EQ))||CQ,UQ=mc("cc.animation.AnimationGraph")((PQ=ac((AQ=class extends xh{constructor(){super(),rc(this,"_layers",PQ,this),rc(this,"_variables",wQ,this)}onLoaded(){const{_layers:e}=this,t=e.length;for(let n=0;n<t;++n)e[n].stateMachine.__callOnAfterDeserializeRecursive()}get layers(){return this._layers}get variables(){return Object.entries(this._variables)}addLayer(){const e=new BQ;return this._layers.push(e),e}removeLayer(e){He.removeAt(this._layers,e)}moveLayer(e,t){!function(e,t,n){if(We(e,t),We(e,n),t===n)return e;const i=e[t];if(t<n)for(let i=t+1;i<=n;++i)e[i-1]=e[i];else for(let i=t;i!==n;--i)e[i]=e[i-1];e[n]=i}(this._layers,e,t)}addBoolean(e,t=!1){const n=new FQ(m$.BOOLEAN);n.value=t,this._variables[e]=n}addFloat(e,t=0){const n=new FQ(m$.FLOAT);n.value=t,this._variables[e]=n}addInteger(e,t=0){const n=new FQ(m$.INTEGER);n.value=t,this._variables[e]=n}addTrigger(e,t=!1,n=g$.AFTER_CONSUMED){const i=new zQ;i.resetMode=n,i.value=t,this._variables[e]=i}removeVariable(e){delete this._variables[e]}getVariable(e){return this._variables[e]}}).prototype,"_layers",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),wQ=ac(AQ.prototype,"_variables",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{}}}),bQ=AQ))||bQ;class GQ{constructor(e){let t,n;this.ratios=void 0,this._findRatio=void 0,this.ratios=e;let i=!0;for(let s=1,o=e.length;s<o;s++)if(t=e[s]-e[s-1],1===s)n=t;else if(Math.abs(t-n)>1e-6){i=!1;break}this._findRatio=i?jQ:ic}sample(e){return this._findRatio(this.ratios,e)}}e("RatioSampler",GQ),u.RatioSampler=GQ;class VQ{static Bezier(e){return e}constructor(e,t){this.types=void 0,this.type=null,this._values=[],this._lerp=void 0,this._duration=void 0,this._array=void 0,this._duration=t,this._values=e.values;const n=e=>"string"==typeof e?e:Array.isArray(e)?e[0]===e[1]&&e[2]===e[3]?VQ.Linear:VQ.Bezier(e):VQ.Linear;if(void 0!==e.easingMethod)this.type=n(e.easingMethod);else if(Array.isArray(e.easingMethods))this.types=e.easingMethods.map(n);else if(void 0!==e.easingMethods){this.types=new Array(this._values.length).fill(null);for(const t of Object.keys(e.easingMethods))this.types[t]=n(e.easingMethods[t])}else this.type=null;const i=e.values[0];(void 0===e.interpolate||e.interpolate)&&(this._lerp=WQ(i)),void 0!==e._arrayLength&&(this._array=new Array(e._arrayLength))}hasLerp(){return!!this._lerp}valueAt(e){if(void 0===this._array){const t=this._values[e];return t&&t.getNoLerp?t.getNoLerp():t}for(let t=0;t<this._array.length;++t)this._array[t]=this._values[this._array.length*e+t];return this._array}valueBetween(e,t,n,i,s){if(this._lerp){const o=this.types?this.types[t]:this.type,r=s-n;let a=(e-n)/r;if(o&&(a=kQ(a,o)),void 0===this._array){const e=this._values[t],n=this._values[i];return this._lerp(e,n,a,r*this._duration)}for(let e=0;e<this._array.length;++e){const n=this._values[this._array.length*t+e],s=this._values[this._array.length*i+e];this._array[e]=this._lerp(n,s,a,r*this._duration)}return this._array}if(void 0===this._array)return this.valueAt(t);for(let e=0;e<this._array.length;++e)this._array[e]=this._values[this._array.length*t+e];return this._array}empty(){return 0===this._values.length}constant(){return 1===this._values.length}}function HQ(e,t,n){let i=t.sample(n);if(i<0)if(i=~i,i<=0)i=0;else{if(!(i>=t.ratios.length))return e.valueBetween(n,i-1,t.ratios[i-1],i,t.ratios[i]);i=t.ratios.length-1}return e.valueAt(i)}function kQ(e,t){if("string"==typeof t){const n=z_[t];n?e=n(e):N(3906,t)}else Array.isArray(t)&&(e=yd(t,e));return e}function jQ(e,t){const n=e.length-1;if(0===n)return 0;const i=e[0];if(t<i)return 0;const s=e[n];if(t>s)return n;const o=(t=(t-i)/(s-i))/(1/n),r=0|o,a=1e-6;return o-r<a?r:r+1-o<a?r+1:~(r+1)}e("AnimCurve",VQ),VQ.Linear=null,u.AnimCurve=VQ,e("EventInfo",class{constructor(){this.events=[]}add(e,t){this.events.push({func:e||"",params:t||[]})}}),u.sampleAnimationCurve=HQ;const WQ=(()=>{function e(e,t,n,i){return e.lerp(t,n,i)}return t=>{if(null!==t){if("number"==typeof t)return Kt;if("object"==typeof t&&t.constructor){if(t instanceof Tn)return function(){const e=new Tn;return(t,n,i)=>Tn.slerp(e,t,n,i)}();if(t instanceof $e)return function(e){const t=new e;return(n,i,s)=>(e.lerp(t,n,i,s),t)}(t.constructor);if(t.constructor===Number)return Kt;if("function"==typeof t.lerp)return e}}}})();var qQ,XQ,YQ,KQ,$Q,QQ;let JQ=mc("cc.animation.UntypedTrackChannel")((YQ=ac((XQ=class extends BK{constructor(){super(new K_),rc(this,"property",YQ,this)}}).prototype,"property",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),qQ=XQ))||qQ,ZQ=mc("cc.animation.UntypedTrack")((QQ=ac(($Q=class extends LK{constructor(...e){super(...e),rc(this,"_channels",QQ,this)}channels(){return this._channels}[dK](e){if(!e.getValue)throw new Error(F(3930));const t=e=>{var t;return null===(t=this._channels.find((t=>t.property===e)))||void 0===t?void 0:t.curve},n=e.getValue();switch(!0){default:throw new Error(F(3931));case n instanceof Bn:return new YK(t("x"),t("y"));case n instanceof gn:return new KK(t("x"),t("y"),t("z"));case n instanceof Gn:return new $K(t("x"),t("y"),t("z"),t("w"));case n instanceof dn:return new o$(t("r"),t("g"),t("b"),t("a"));case n instanceof kn:return new u$(t("width"),t("height"))}}addChannel(e){const t=new JQ;return t.property=e,this._channels.push(t),t}upgrade(e){const t=(e,t)=>{const n=this.channels().find((t=>t.property===e));n&&(t.name=n.name,t.curve.assignSorted(Array.from(n.curve.times()),Array.from(n.curve.values())))},n=e(this.path,this.proxy);switch(n){default:break;case"vec2":case"vec3":case"vec4":{const e=new XK;e.path=this.path,e.proxy=this.proxy,e.componentsCount="vec2"===n?2:"vec3"===n?3:4;const[i,s,o,r]=e.channels();switch(n){case"vec4":t("w",r);case"vec3":t("z",o);default:case"vec2":t("x",i),t("y",s)}return e}case"color":{const e=new s$,[n,i,s,o]=e.channels();return t("r",n),t("g",i),t("b",s),t("a",o),t("x",n),t("y",i),t("z",s),t("w",o),e}case"size":}return null}}).prototype,"_channels",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),KQ=$Q))||KQ;class eJ{constructor(e){this._keys=[],this._curves=[],this._commonTargets=[],this._ratioSamplers=[],this._runtimeCurves=void 0,this._data=null,this._duration=void 0,this._duration=e}get keys(){return this._keys}set keys(e){this._keys=e}get curves(){return this._curves}set curves(e){this._curves=e,delete this._runtimeCurves}get commonTargets(){return this._commonTargets}set commonTargets(e){this._commonTargets=e}get data(){return this._data}getPropertyCurves(){return this._runtimeCurves||this._createPropertyCurves(),this._runtimeCurves}toTracks(){const e=[],{keys:t,curves:n,commonTargets:i}=this,s=(e,t,n)=>{const i=new NK;for(const e of t)"string"==typeof e?i.toProperty(e):"number"==typeof e?i.toElement(e):e instanceof FY?i.toHierarchy(e.path):e instanceof zY?i.toComponent(e.component):i.toCustomized(e);e.path=i,e.proxy=n},o=i.map((t=>{const n=new ZQ;return s(n,t.modifiers,t.valueAdapter),e.push(n),n}));for(const i of n){var r;const n=i.data,a=n.values;if(0===a.length)continue;const c=n.keys<0?[0]:t[n.keys],l=a[0],h=null===(r=n.interpolate)||void 0===r||r;n._arrayLength;const u=new nJ(n,c.length),_=e=>{s(e,i.modifiers,i.valueAdapter)};let d;if("number"==typeof i.commonTarget){if(!a.every((e=>"number"==typeof e))){D(3932);continue}if(i.valueAdapter||1!==i.modifiers.length||"string"!=typeof i.modifiers[0]){D(3933);continue}const e=i.modifiers[0],t=o[i.commonTarget],{curve:n}=t.addChannel(e);d=n}(()=>{if("number"==typeof l){if(!a.every((e=>"number"==typeof e)))return void D(3934);let t;if(d)t=d;else{const n=new GK;_(n),e.push(n),t=n.channel.curve}const n=h?Za.LINEAR:Za.CONSTANT;return t.assignSorted(c,a.map((e=>({value:e,interpolationMode:n})))),void u.convert(t)}if("object"==typeof l)switch(!0){default:break;case tJ(a,Bn):case tJ(a,gn):case tJ(a,Gn):{const t=l instanceof Bn?2:l instanceof gn?3:4,n=new XK;_(n),n.componentsCount=t;const[{curve:i},{curve:s},{curve:o},{curve:r}]=n.channels(),d=h?Za.LINEAR:Za.CONSTANT,p=e=>({value:e,interpolationMode:d});switch(t){case 4:r.assignSorted(c,a.map((e=>p(e.w)))),u.convert(r);case 3:o.assignSorted(c,a.map((e=>p(e.z)))),u.convert(o);default:i.assignSorted(c,a.map((e=>p(e.x)))),u.convert(i),s.assignSorted(c,a.map((e=>p(e.y)))),u.convert(s)}return void e.push(n)}case tJ(a,Tn):{const t=new JK;_(t);const n=h?Id.SLERP:Id.CONSTANT;return t.channel.curve.assignSorted(c,a.map((e=>({value:Tn.clone(e),interpolationMode:n})))),u.convertQuatCurve(t.channel.curve),void e.push(t)}case tJ(a,dn):{const t=new s$;_(t);const[{curve:n},{curve:i},{curve:s},{curve:o}]=t.channels(),r=h?Za.LINEAR:Za.CONSTANT,l=e=>({value:e,interpolationMode:r});return n.assignSorted(c,a.map((e=>l(e.r)))),u.convert(n),i.assignSorted(c,a.map((e=>l(e.g)))),u.convert(i),s.assignSorted(c,a.map((e=>l(e.b)))),u.convert(s),o.assignSorted(c,a.map((e=>l(e.a)))),u.convert(o),void e.push(t)}case tJ(a,kn):{const t=new h$;_(t);const[{curve:n},{curve:i}]=t.channels(),s=h?Za.LINEAR:Za.CONSTANT,o=e=>({value:e,interpolationMode:s});return n.assignSorted(c,a.map((e=>o(e.width)))),u.convert(n),i.assignSorted(c,a.map((e=>o(e.height)))),u.convert(i),void e.push(t)}case tJ(a,_K):{const t=new GK;_(t);const n=h?Za.CUBIC:Za.CONSTANT;return t.channel.curve.assignSorted(c,a.map((e=>({value:e.dataPoint,leftTangent:e.inTangent,rightTangent:e.outTangent,interpolationMode:n})))),void e.push(t)}case tJ(a,cK):case tJ(a,lK):case tJ(a,hK):{const t=l instanceof cK?2:l instanceof lK?3:4,n=new XK;_(n),n.componentsCount=t;const[i,s,o,r]=n.channels(),u=h?Za.LINEAR:Za.CONSTANT,d=(e,t,n)=>({value:e,leftTangent:t,rightTangent:n,interpolationMode:u});switch(t){case 4:r.curve.assignSorted(c,a.map((e=>d(e.dataPoint.w,e.inTangent.w,e.outTangent.w))));case 3:o.curve.assignSorted(c,a.map((e=>d(e.dataPoint.z,e.inTangent.z,e.outTangent.z))));default:i.curve.assignSorted(c,a.map((e=>d(e.dataPoint.y,e.inTangent.y,e.outTangent.y)))),s.curve.assignSorted(c,a.map((e=>d(e.dataPoint.x,e.inTangent.x,e.outTangent.x))))}return void e.push(n)}case a.every((e=>e instanceof uK)):D(3935)}const t=new d$;_(t),t.channel.curve.assignSorted(c,a),e.push(t)})()}return e}_createPropertyCurves(){this._ratioSamplers=this._keys.map((e=>new GQ(e.map((e=>e/this._duration))))),this._runtimeCurves=this._curves.map((e=>({curve:new VQ(e.data,this._duration),modifiers:e.modifiers,valueAdapter:e.valueAdapter,sampler:this._ratioSamplers[e.data.keys],commonTarget:e.commonTarget})))}}function tJ(e,t){return e.every((e=>e instanceof t))}class nJ{constructor(e,t){this._easingMethods=void 0;const{easingMethods:n}=e;Array.isArray(n)?0===n.length&&0!==t?this._easingMethods=new Array(t).fill(null):this._easingMethods=n:this._easingMethods=void 0===n?new Array(t).fill(e.easingMethod):Array.from({length:t},((e,t)=>{var i;return null!==(i=n[t])&&void 0!==i?i:null}))}get nil(){return!this._easingMethods||this._easingMethods.every((e=>null==e))}convert(e){const{_easingMethods:t}=this;if(!t)return;const n=e.keyFramesCount;if(e.keyFramesCount<2)return;Array.isArray(t)&&t.length;const i=n-1;for(let n=0;n<i;++n){const i=t[n];i&&(Array.isArray(i)?rJ(i,e.getKeyframeTime(n),e.getKeyframeValue(n),e.getKeyframeTime(n+1),e.getKeyframeValue(n+1)):iJ(i,e,n))}}convertQuatCurve(e){const{_easingMethods:t}=this;if(!t)return;const n=e.keyFramesCount;if(e.keyFramesCount<2)return;Array.isArray(t)&&t.length;const i=n-1;for(let n=0;n<i;++n){const i=t[n];i&&(Array.isArray(i)?e.getKeyframeValue(n).easingMethod=i.slice():sJ(i,e,n))}}}function iJ(e,t,n){t.keyFramesCount;const i=t.getKeyframeValue(n),s=oJ[e];s===U_.CONSTANT?i.interpolationMode=Za.CONSTANT:(i.interpolationMode=Za.LINEAR,i.easingMethod=s)}function sJ(e,t,n){t.keyFramesCount;const i=t.getKeyframeValue(n),s=oJ[e];i.easingMethod=s}const oJ={constant:U_.CONSTANT,linear:U_.LINEAR,quadIn:U_.QUAD_IN,quadOut:U_.QUAD_OUT,quadInOut:U_.QUAD_IN_OUT,quadOutIn:U_.QUAD_OUT_IN,cubicIn:U_.CUBIC_IN,cubicOut:U_.CUBIC_OUT,cubicInOut:U_.CUBIC_IN_OUT,cubicOutIn:U_.CUBIC_OUT_IN,quartIn:U_.QUART_IN,quartOut:U_.QUART_OUT,quartInOut:U_.QUART_IN_OUT,quartOutIn:U_.QUART_OUT_IN,quintIn:U_.QUINT_IN,quintOut:U_.QUINT_OUT,quintInOut:U_.QUINT_IN_OUT,quintOutIn:U_.QUINT_OUT_IN,sineIn:U_.SINE_IN,sineOut:U_.SINE_OUT,sineInOut:U_.SINE_IN_OUT,sineOutIn:U_.SINE_OUT_IN,expoIn:U_.EXPO_IN,expoOut:U_.EXPO_OUT,expoInOut:U_.EXPO_IN_OUT,expoOutIn:U_.EXPO_OUT_IN,circIn:U_.CIRC_IN,circOut:U_.CIRC_OUT,circInOut:U_.CIRC_IN_OUT,circOutIn:U_.CIRC_OUT_IN,elasticIn:U_.ELASTIC_IN,elasticOut:U_.ELASTIC_OUT,elasticInOut:U_.ELASTIC_IN_OUT,elasticOutIn:U_.ELASTIC_OUT_IN,backIn:U_.BACK_IN,backOut:U_.BACK_OUT,backInOut:U_.BACK_IN_OUT,backOutIn:U_.BACK_OUT_IN,bounceIn:U_.BOUNCE_IN,bounceOut:U_.BOUNCE_OUT,bounceInOut:U_.BOUNCE_IN_OUT,bounceOutIn:U_.BOUNCE_OUT_IN,smooth:U_.SMOOTH,fade:U_.FADE};function rJ(e,t,n,i,s){const[o,r,a,c]=e,{value:l}=n,{value:h}=s,u=3*(i-t),_=3*(h-l),d=o*u,p=r*_,f=(1-a)*u,m=(1-c)*_,g=1/3,v=p/d,y=Math.sqrt(d*d+p*p)*g,x=m/f,S=Math.sqrt(f*f+m*m)*g;var C;n.interpolationMode=Za.CUBIC,n.tangentWeightMode=(C=n.tangentWeightMode)===tc.NONE?tc.RIGHT:C===tc.LEFT?tc.BOTH:C,n.rightTangent=v,n.rightTangentWeight=y,s.tangentWeightMode=function(e){return e===tc.NONE?tc.LEFT:e===tc.RIGHT?tc.BOTH:e}(s.tangentWeightMode),s.leftTangent=x,s.leftTangentWeight=S}var aJ,cJ,lJ,hJ,uJ,_J,dJ,pJ,fJ,mJ,gJ,vJ,yJ,xJ,SJ,CJ,EJ,TJ,bJ,AJ,PJ,wJ,IJ,RJ;function DJ(){throw new Error("split() only valid in Editor.")}mc("cc.animation.ExoticAnimation")((cJ=ac((aJ=class{constructor(){rc(this,"_nodeAnimations",cJ,this)}createEvaluator(e){return new UJ(this._nodeAnimations,e)}addNodeAnimation(e){const t=new OJ(e);return this._nodeAnimations.push(t),t}collectAnimatedJoints(){return Array.from(new Set(this._nodeAnimations.map((({path:e})=>e))))}split(e,t){return DJ()}toHashString(){return this._nodeAnimations.map((e=>e.toHashString())).join("\n")}}).prototype,"_nodeAnimations",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),aJ));let OJ=mc("cc.animation.ExoticNodeAnimation")((uJ=ac((hJ=class{constructor(e){rc(this,"_path",uJ,this),rc(this,"_position",_J,this),rc(this,"_rotation",dJ,this),rc(this,"_scale",pJ,this),this._path=e}createPosition(e,t){this._position=new zJ(e,new BJ(t))}createRotation(e,t){this._rotation=new zJ(e,new FJ(t))}createScale(e,t){this._scale=new zJ(e,new BJ(t))}createEvaluator(e){return new GJ(this._path,this._position,this._rotation,this._scale,e)}split(e,t,n){return DJ()}get path(){return this._path}toHashString(){var e,t,n,i,s,o;return`${this._path}\n${null!==(e=null===(t=this._position)||void 0===t?void 0:t.toHashString())&&void 0!==e?e:""}${null!==(n=null===(i=this._scale)||void 0===i?void 0:i.toHashString())&&void 0!==n?n:""}${null!==(s=null===(o=this._rotation)||void 0===o?void 0:o.toHashString())&&void 0!==s?s:""}`}}).prototype,"_path",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),_J=ac(hJ.prototype,"_position",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),dJ=ac(hJ.prototype,"_rotation",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),pJ=ac(hJ.prototype,"_scale",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),lJ=hJ))||lJ;function NJ(e){return e.toPrecision(2)}function MJ(e){return e.map(NJ).join(" ")}let LJ=mc("cc.animation.ExoticVectorLikeTrackValues")((gJ=ac((mJ=class{constructor(e){rc(this,"_values",gJ,this),rc(this,"_isQuantized",vJ,this),this._values=e,this._isQuantized=!1}get precision(){return this._isQuantized?this._values.originalPrecision:jJ(this._values)}quantize(e){this._isQuantized,this._values=function(e,t){const n=HJ[t],i=1<<n.BYTES_PER_ELEMENT;let s=Number.POSITIVE_INFINITY,o=Number.NEGATIVE_INFINITY;e.forEach((e=>{s=Math.min(e,s),o=Math.max(e,o)}));const r=o-s,a=n.from(e,(e=>(e-s)/r*i));return new WJ(jJ(e),a,r,s)}(this._values,e),this._isQuantized=!0}toHashString(){const{_isQuantized:e,_values:t}=this;return`${e} ${e?t.toHashString():MJ(t)}`}}).prototype,"_values",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),vJ=ac(mJ.prototype,"_isQuantized",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),fJ=mJ))||fJ,BJ=mc("cc.animation.ExoticVec3TrackValues")(yJ=class e extends LJ{static imitate(t,n){const i=new e(t);return n._isQuantized&&i.quantize(n._values.quantizationType),i}get(e,t){const{_values:n,_isQuantized:i}=this;i?YJ(n,e,t):gn.fromArray(t,n,3*e)}lerp(e,t,n,i,s,o){const{_values:r,_isQuantized:a}=this;a?(YJ(r,e,i),YJ(r,t,s)):(gn.fromArray(i,r,3*e),gn.fromArray(s,r,3*t)),gn.lerp(o,i,s,n)}})||yJ,FJ=mc("cc.animation.ExoticQuatTrackValues")(xJ=class e extends LJ{static imitate(t,n){const i=new e(t);return n._isQuantized&&i.quantize(n._values.quantizationType),i}get(e,t){const{_values:n,_isQuantized:i}=this;i?KJ(n,e,t):Tn.fromArray(t,n,4*e)}lerp(e,t,n,i,s,o){const{_values:r,_isQuantized:a}=this;a?(KJ(r,e,i),KJ(r,t,s)):(Tn.fromArray(i,r,4*e),Tn.fromArray(s,r,4*t)),Tn.slerp(o,i,s,n)}})||xJ,zJ=mc("cc.animation.ExoticTrack")((EJ=ac((CJ=class{constructor(e,t){rc(this,"times",EJ,this),rc(this,"values",TJ,this),this.times=e,this.values=t}toHashString(){const{times:e,values:t}=this;return`times: ${MJ(e)}; values: ${t.toHashString()}`}}).prototype,"times",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),TJ=ac(CJ.prototype,"values",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),SJ=CJ))||SJ;class UJ{constructor(e,t){this._nodeEvaluations=void 0,this._nodeEvaluations=e.map((e=>e.createEvaluator(t)))}evaluate(e){this._nodeEvaluations.forEach((t=>{t.evaluate(e)}))}}class GJ{constructor(e,t,n,i,s){this._position=null,this._rotation=null,this._scale=null,t&&(this._position=XJ(t.times,t.values,gn,e,"position",s)),n&&(this._rotation=XJ(n.times,n.values,Tn,e,"rotation",s)),i&&(this._scale=XJ(i.times,i.values,gn,e,"scale",s))}evaluate(e){if(this._position){const t=this._position.evaluator.evaluate(e);this._position.runtimeBinding.setValue(t)}if(this._rotation){const t=this._rotation.evaluator.evaluate(e);this._rotation.runtimeBinding.setValue(t)}if(this._scale){const t=this._scale.evaluator.evaluate(e);this._scale.runtimeBinding.setValue(t)}}}class VJ{constructor(e,t,n){this._times=void 0,this._inputSampleResultCache={just:!1,index:-1,nextIndex:-1,ratio:0},this._values=void 0,this._prevValue=void 0,this._nextValue=void 0,this._resultValue=void 0,this._times=e,this._values=t,this._prevValue=new n,this._nextValue=new n,this._resultValue=new n}evaluate(e){const{_times:t,_values:n,_resultValue:i}=this;if(0===t.length)return i;const s=function(e,t,n){const i=e.length,s=e[0],o=e[i-1];if(t<s)n.just=!0,n.index=0;else if(t>o)n.just=!0,n.index=i-1;else{const i=ic(e,t);if(i>=0)n.just=!0,n.index=i;else{const s=~i,o=s-1,r=e[o],a=e[s],c=(t-e[o])/(a-r);n.just=!1,n.index=o,n.nextIndex=s,n.ratio=c}}return n}(t,e,this._inputSampleResultCache);return s.just?n.get(s.index,i):n.lerp(s.index,s.nextIndex,s.ratio,this._prevValue,this._nextValue,i),i}}const HJ={uint8:Uint8Array,uint16:Uint16Array};var kJ;function jJ(e){switch(e.BYTES_PER_ELEMENT){default:case 4:return kJ.FLOAT_32;case 8:return kJ.FLOAT_64}}!function(e){e[e.FLOAT_32=0]="FLOAT_32",e[e.FLOAT_64=1]="FLOAT_64"}(kJ||(kJ={}));let WJ=mc("cc.animation.QuantizedFloatArray")((PJ=ac((AJ=class{get quantizationType(){switch(this.values.BYTES_PER_ELEMENT){default:case 1:return"uint8";case 2:return"uint16"}}constructor(e,t,n,i=0){rc(this,"originalPrecision",PJ,this),rc(this,"min",wJ,this),rc(this,"extent",IJ,this),rc(this,"values",RJ,this),this.originalPrecision=e,this.values=t,this.extent=n,this.min=i}toHashString(){const{originalPrecision:e,min:t,extent:n,values:i}=this;return`${e} ${NJ(t)} ${NJ(n)} ${i.join(" ")}`}}).prototype,"originalPrecision",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),wJ=ac(AJ.prototype,"min",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),IJ=ac(AJ.prototype,"extent",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),RJ=ac(AJ.prototype,"values",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),bJ=AJ))||bJ;function qJ(e,t){return e.values[t]/(1<<e.values.BYTES_PER_ELEMENT)*e.extent+e.min}function XJ(e,t,n,i,s,o){const r=new MK;r.path=(new NK).toHierarchy(i).toProperty(s);const a=o(r);return a?{runtimeBinding:a,evaluator:new VJ(e,t,n)}:null}function YJ(e,t,n){gn.set(n,qJ(e,3*t+0),qJ(e,3*t+1),qJ(e,3*t+2))}function KJ(e,t,n){Tn.set(n,qJ(e,4*t+0),qJ(e,4*t+1),qJ(e,4*t+2),qJ(e,4*t+3))}function $J(){return u.director.getAnimationManager()}var QJ,JJ,ZJ,eZ,tZ,nZ,iZ,sZ,oZ,rZ,aZ,cZ,lZ;const hZ=Symbol("SearchForRootBonePath"),uZ=Symbol("ExoticAnimation");let _Z=e("AnimationClip",mc("cc.AnimationClip")((lZ=cZ=class e extends xh{constructor(...e){super(...e),rc(this,"sample",ZJ,this),rc(this,"speed",eZ,this),rc(this,"wrapMode",tZ,this),rc(this,"enableTrsBlending",nZ,this),rc(this,"_duration",iZ,this),rc(this,"_hash",sZ,this),this.frameRate=0,rc(this,"_tracks",oZ,this),rc(this,"_exoticAnimation",rZ,this),this._legacyData=void 0,this._legacyDataDirty=!1,rc(this,"_events",aZ,this),this._runtimeEvents={ratios:[],eventGroups:[]}}static createWithSpriteFrames(t,n){const i=new e;i.sample=n||i.sample,i.duration=t.length/i.sample;const s=1/i.sample,o=new d$;return o.path=(new NK).toComponent("cc.Sprite").toProperty("spriteFrame"),o.channels()[0].curve.assignSorted(t.map(((e,t)=>[s*t,e]))),i.addTrack(o),i}get duration(){return this._duration}set duration(e){this._duration=e}get tracksCount(){return this._tracks.length}get tracks(){return this._tracks}get hash(){var e,t;if(this._hash)return this._hash;const n=`Exotic:${null!==(e=null===(t=this._exoticAnimation)||void 0===t?void 0:t.toHashString())&&void 0!==e?e:""}`;return this._hash=fo(n,666)}get events(){return this._events}set events(e){this._events=e;const t=[],n=[],i=this.events.sort(((e,t)=>e.frame-t.frame)),s=i.length;for(let e=0;e<s;++e){const s=i[e],o=s.frame/this._duration;let r=t.findIndex((e=>e===o));r<0&&(r=t.length,t.push(o),n.push({events:[]})),n[r].events.push({functionName:s.func,parameters:s.params})}this._runtimeEvents={ratios:t,eventGroups:n}}get[uZ](){return this._exoticAnimation}set[uZ](e){this._exoticAnimation=e}onLoaded(){this.frameRate=this.sample,this.events=this._events}range(){const e={min:1/0,max:-1/0},{_tracks:t}=this,n=t.length;for(let i=0;i<n;++i){const n=t[i].range();e.min=Math.min(e.min,n.min),e.max=Math.max(e.max,n.max)}return e}getTrack(e){return this._tracks[e]}addTrack(e){const t=this._tracks.length;return this._tracks.push(e),t}removeTrack(e){this._tracks.splice(e,1)}clearTracks(){this._tracks.length=0}createEventEvaluator(e){return new xZ(e,this._runtimeEvents.ratios,this._runtimeEvents.eventGroups,this.wrapMode)}createEvaluator(e){const{target:t}=e;return this._createEvalWithBinder(t,(n=>{if(e.mask&&n.isMaskedOff(e.mask))return;const i=n.createRuntimeBinding(t,this.enableTrsBlending?e.pose:void 0,!1);return null!=i?i:void 0}),e.rootMotion)}destroy(){var e;return(null===(e=u.director.root)||void 0===e?void 0:e.dataPoolManager)&&u.director.root.dataPoolManager.releaseAnimationClip(this),nX.destroy(this),super.destroy()}[tX](e,t,n){const i=1/t,s=this._collectAnimatedJoints(),o=s.length,r={};for(let e=0;e<o;++e)r[s[e]]={transforms:Array.from({length:n},(()=>new On))};const a=s.reduce(((e,t)=>(e[t]=new fZ,e)),{});for(const e in a){const t=a[e],n=e.lastIndexOf("/");if(n>=0){const i=e.substring(0,n),s=a[i];s&&(t.parent=s)}}const c=this._createEvalWithBinder(void 0,(e=>{const t=e.parseTrsPath();if(!t)return;const n=a[t.node];return n?yZ(n,t.property):void 0}),void 0);for(let t=0;t<n;++t){const n=e+i*t;c.evaluate(n);for(let e=0;e<o;++e){const n=s[e];On.copy(r[n].transforms[t],a[n].globalTransform)}for(let e=0;e<o;++e){const t=s[e];a[t].invalidate()}}return{samples:t,frames:n,joints:r}}upgradeUntypedTracks(e){const t=[],n=[],{_tracks:i}=this,s=i.length;for(let o=0;o<s;++o){const s=i[o];if(!(s instanceof ZQ))continue;const r=s.upgrade(e);r&&(t.push(r),n.push(s))}const o=n.length;for(let e=0;e<o;++e)He.remove(i,n[e]);i.push(...t)}[hZ](){return this._searchForRootBonePath()}get keys(){return this._getLegacyData().keys}set keys(e){this._legacyDataDirty=!0,this._getLegacyData().keys=e}get curves(){return this._legacyDataDirty=!0,this._getLegacyData().curves}set curves(e){this._getLegacyData().curves=e}get commonTargets(){return this._getLegacyData().commonTargets}set commonTargets(e){this._legacyDataDirty=!0,this._getLegacyData().commonTargets=e}get data(){return this._getLegacyData().data}getPropertyCurves(){return this._getLegacyData().getPropertyCurves()}get eventGroups(){return this._runtimeEvents.eventGroups}updateEventDatas(){this.events=this._events}hasEvents(){return 0!==this.events.length}syncLegacyData(){this._legacyData&&(this._fromLegacy(this._legacyData),this._legacyData=void 0)}_createEvalWithBinder(e,t,n){this._legacyDataDirty&&(this._legacyDataDirty=!1,this.syncLegacyData());const i=[];let s;n&&(s=this._createRootMotionEvaluation(e,n,i));const o=[];let r;const{_tracks:a}=this,c=a.length;for(let e=0;e<c;++e){const n=a[e];if(i.includes(n))continue;if(Array.from(n.channels()).every((({curve:e})=>0===e.keyFramesCount)))continue;const s=t(n[OK]);if(!s)continue;const r=n[dK](s);o.push({binding:s,trackEval:r})}return this._exoticAnimation&&(r=this._exoticAnimation.createEvaluator(t)),new dZ(o,r,s)}_createRootMotionEvaluation(e,t,n){if(!(e instanceof lS))return void N(3920);const i=this._searchForRootBonePath();if(!i)return void D(3923);const s=e.getChildByPath(i);if(!s)return void D(3924);const o=new pZ,r=[],{_tracks:a}=this,c=a.length;for(let e=0;e<c;++e){const t=a[e],{[OK]:s}=t,c=s.parseTrsPath();if(!c)continue;if(c.node!==i)continue;n.push(t);const l=yZ(o,c.property);if(!l)continue;const h=t[dK](l);r.push({binding:l,trackEval:h})}return new gZ(s,this._duration,o,r)}_searchForRootBonePath(){const e=this._tracks.map((e=>{const t=e[OK].parseTrsPath();if(t){const e=t.node;return{path:e,rank:e.split("/").length}}return{path:"",rank:0}}));e.sort(((e,t)=>e.rank-t.rank));const t=e.findIndex((e=>0!==e.rank));if(t<0)return"";const n=e.length,i=e[t];let s=!0;for(let o=t+1;o<n;++o){const t=e[o];if(t.rank!==i.rank)break;if(t.path!==i.path){s=!1;break}}return s?i.path:""}_getLegacyData(){return this._legacyData||(this._legacyData=this._toLegacy()),this._legacyData}_toLegacy(){const e=new eJ(this._duration);return e.keys=[],e.curves=[],e.commonTargets=[],e}_fromLegacy(e){const t=e.toTracks(),n=t.length;for(let e=0;e<n;++e)this.addTrack(t[e])}_collectAnimatedJoints(){const e=new Set,{_tracks:t}=this,n=t.length;for(let i=0;i<n;++i){const n=t[i][OK].parseTrsPath();n&&e.add(n.node)}if(this._exoticAnimation){const t=this._exoticAnimation.collectAnimatedJoints(),n=t.length;for(let i=0;i<n;++i)e.add(t[i])}return Array.from(e)}},cZ.WrapMode=Qa,ZJ=ac((JJ=lZ).prototype,"sample",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 60}}),eZ=ac(JJ.prototype,"speed",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),tZ=ac(JJ.prototype,"wrapMode",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Qa.Normal}}),nZ=ac(JJ.prototype,"enableTrsBlending",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),iZ=ac(JJ.prototype,"_duration",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),sZ=ac(JJ.prototype,"_hash",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),oZ=ac(JJ.prototype,"_tracks",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),rZ=ac(JJ.prototype,"_exoticAnimation",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),aZ=ac(JJ.prototype,"_events",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),QJ=JJ))||QJ);u.AnimationClip=_Z;class dZ{constructor(e,t,n){this._exoticAnimationEvaluator=void 0,this._trackEvalStatues=[],this._rootMotionEvaluation=void 0,this._trackEvalStatues=e,this._exoticAnimationEvaluator=t,this._rootMotionEvaluation=n}evaluate(e){const{_trackEvalStatues:t,_exoticAnimationEvaluator:n}=this,i=t.length;for(let n=0;n<i;++n){const{trackEval:i,binding:s}=t[n],o=i.evaluate(e,s);s.setValue(o)}n&&n.evaluate(e)}evaluateRootMotion(e,t){const{_rootMotionEvaluation:n}=this;n&&n.evaluate(e,t)}}class pZ{constructor(){this.position=new gn,this.scale=new gn(1,1,1),this.rotation=new Tn,this.eulerAngles=new gn}getTransform(e){On.fromRTS(e,this.rotation,this.position,this.scale)}}class fZ extends pZ{constructor(...e){super(...e),this.parent=null,this._dirty=!0,this._transform=new On}get globalTransform(){const e=this._transform;return this._dirty&&(this._dirty=!1,On.fromRTS(e,this.rotation,this.position,this.scale),this.parent&&On.multiply(e,this.parent.globalTransform,e)),this._transform}invalidate(){this._dirty=!0}}const mZ=new On;class gZ{constructor(e,t,n,i){this._initialTransformCache=new On,this._clipEndTransformCache=new On,this._startTransformCache=new On,this._endTransformCache=new On,this._motionTransformCache=new On,this._translationMotionCache=new gn,this._rotationMotionCache=new Tn,this._scaleMotionCache=new gn,this._rootBone=e,this._duration=t,this._boneTransform=n,this._trackEvalStatuses=i}evaluate(e,t){const n=this._calcMotionTransform(e,t,this._motionTransformCache),{_translationMotionCache:i,_rotationMotionCache:s,_scaleMotionCache:o,_rootBone:r}=this;On.toRTS(n,s,i,o),gn.add(i,i,r.position),r.setPosition(i),Tn.multiply(s,s,r.rotation),r.setRotation(s),gn.multiply(o,o,r.scale),r.setScale(o)}_calcMotionTransform(e,t,n){const{_duration:i}=this,s=i-e,o=this._evaluateAt(e,this._startTransformCache);if(t<s){const i=this._evaluateAt(e+t,this._endTransformCache);vZ(n,o,i)}else{On.identity(n);const e=(e,t)=>{vZ(mZ,e,t),On.multiply(n,n,mZ)},r=t-s,a=Math.floor(r/i),c=r-a*i,l=this._evaluateAt(0,this._initialTransformCache),h=this._evaluateAt(i,this._clipEndTransformCache),u=this._evaluateAt(c,this._endTransformCache);e(o,h),vZ(mZ,l,h);for(let e=0;e<a;++e)On.multiply(n,n,mZ);e(l,u)}return n}_evaluateAt(e,t){const{_trackEvalStatuses:n}=this,i=n.length;for(let t=0;t<i;++t){const{trackEval:i,binding:s}=n[t],o=i.evaluate(e,s);s.setValue(o)}return this._boneTransform.getTransform(t),t}}function vZ(e,t,n){On.invert(e,t),On.multiply(e,n,e)}function yZ(e,t){switch(t){default:return;case"position":return{setValue(t){gn.copy(e.position,t)}};case"rotation":return{setValue(t){Tn.copy(e.rotation,t)}};case"scale":return{setValue(t){gn.copy(e.scale,t)}};case"eulerAngles":return{setValue(t){gn.copy(e.eulerAngles,t)}}}}class xZ{constructor(e,t,n,i){this._lastFrameIndex=-1,this._lastIterations=0,this._lastDirection=0,this._ignoreIndex=-1,this._sampled=!1,this._targetNode=e,this._ratios=t,this._eventGroups=n,this._wrapMode=i}setWrapMode(e){this._wrapMode=e}ignore(e,t){this._ignoreIndex=-1,this._sampled=!1;let n=CZ(e,this._ratios);n<0&&(n=~n-1,t<0&&(n+=1),this._ignoreIndex=n)}sample(e,t,n){const i=this._eventGroups.length;let s=CZ(e,this._ratios);if(s<0&&(s=~s-1,t<0&&(s+=1)),this._ignoreIndex!==s&&(this._ignoreIndex=-1),!this._sampled)return this._sampled=!0,this._doFire(s,!1),this._lastFrameIndex=s,this._lastIterations=n,void(this._lastDirection=t);const o=this._wrapMode,r=SZ(n);let a=SZ(this._lastIterations),c=this._lastFrameIndex;const l=this._lastDirection,h=-1!==a&&r!==a;if(c===s&&h&&1===i)this._doFire(0,!1);else if(c!==s||h){t=l;do{if(c!==s){if(-1===t&&0===c&&s>0?((o&$a.PingPong)===$a.PingPong?t*=-1:c=i,a++):1===t&&c===i-1&&s<i-1&&((o&$a.PingPong)===$a.PingPong?t*=-1:c=-1,a++),c===s)break;if(a>r)break}c+=t,this._doFire(c,!0)}while(c!==s&&c>-1&&c<i)}this._lastFrameIndex=s,this._lastIterations=n,this._lastDirection=t}_doFire(e,t){t?$J().pushDelayEvent(this._checkAndFire,this,[e]):this._checkAndFire(e)}_checkAndFire(e){if(!this._targetNode||!this._targetNode.isValid)return;const{_eventGroups:t}=this;if(e<0||e>=t.length||this._ignoreIndex===e)return;const n=t[e],i=this._targetNode.components,s=n.events.length;for(let e=0;e<s;++e){const t=n.events[e],{functionName:s}=t,o=i.length;for(let e=0;e<o;++e){const n=i[e],o=n[s];"function"==typeof o&&o.apply(n,t.parameters)}}}}function SZ(e){return e-(0|e)==0&&(e-=1),0|e}function CZ(e,t){return ic(t,e)}class EZ{constructor(){this._isPlaying=!1,this._isPaused=!1,this._stepOnce=!1}get isPlaying(){return this._isPlaying}get isPaused(){return this._isPaused}get isMotionless(){return!this.isPlaying||this.isPaused}play(){this._isPlaying?this._isPaused?(this._isPaused=!1,this.onResume()):this.onError(F(3912)):(this._isPlaying=!0,this.onPlay())}stop(){this._isPlaying&&(this._isPlaying=!1,this.onStop(),this._isPaused=!1)}pause(){this._isPlaying&&!this._isPaused&&(this._isPaused=!0,this.onPause())}resume(){this._isPlaying&&this._isPaused&&(this._isPaused=!1,this.onResume())}step(){this.pause(),this._stepOnce=!0,this._isPlaying||this.play()}update(e){}onPlay(){}onPause(){}onResume(){}onStop(){}onError(e){}}class TZ{constructor(e){this.weight=0,this._pose=void 0,this._blendStateWriters=[],this._pose=e}destroy(){for(let e=0;e<this._blendStateWriters.length;++e)this._pose.destroyWriter(this._blendStateWriters[e]);this._blendStateWriters.length=0}createPoseWriter(e,t,n){const i=this._pose.createWriter(e,t,this,n);return this._blendStateWriters.push(i),i}}let bZ;!function(e){e.PLAY="play",e.STOP="stop",e.PAUSE="pause",e.RESUME="resume",e.LASTFRAME="lastframe",e.FINISHED="finished"}(bZ||(bZ={})),Ke(bZ);class AZ extends EZ{get clip(){return this._clip}get name(){return this._name}get length(){return this.duration}get wrapMode(){return this._wrapMode}set wrapMode(e){var t;this._wrapMode=e,this.time=0,e&$a.Loop?this.repeatCount=1/0:this.repeatCount=1,null===(t=this._clipEventEval)||void 0===t||t.setWrapMode(e)}get repeatCount(){return this._repeatCount}set repeatCount(e){this._repeatCount=e;const t=this._wrapMode&$a.ShouldWrap,n=(this.wrapMode&$a.Reverse)===$a.Reverse;this._useSimpleProcess=e===1/0&&!t&&!n}get delay(){return this._delay}set delay(e){this._delayTime=this._delay=e}get playbackRange(){return this._playbackRange}set playbackRange(e){e.max,e.min,this._playbackRange.min=Math.max(e.min,0),this._playbackRange.max=Math.min(e.max,this.duration),this._playbackDuration=this._playbackRange.max-this._playbackRange.min,this.setTime(0)}get current(){return this.getWrappedInfo(this.time).time}get ratio(){return this.current/this.duration}get weight(){return this._weight}set weight(e){this._weight=e,this._poseOutput&&(this._poseOutput.weight=e)}constructor(e,t=""){super(),this.duration=1,this.speed=1,this.time=0,this.frameRate=0,this._targetNode=null,this._curveLoaded=!1,this._clip=void 0,this._useSimpleProcess=!1,this._target=null,this._wrapMode=Qa.Normal,this._repeatCount=1,this._delay=0,this._delayTime=0,this._currentFramePlayed=!1,this._name=void 0,this._lastIterations=NaN,this._lastWrapInfo=null,this._wrappedInfo=new nc,this._allowLastFrame=!1,this._blendStateWriterHost={weight:0},this._playbackDuration=0,this._invDuration=1,this._poseOutput=null,this._weight=1,this._clipEval=void 0,this._clipEventEval=void 0,this._doNotCreateEval=!1,this._clip=e,this._name=t||e&&e.name,this._playbackRange={min:0,max:e.duration},this._playbackDuration=e.duration,e.duration||T(`Clip ${e.name} has zero duration.`)}get curveLoaded(){return this._curveLoaded}initialize(e,t,n){if(this._curveLoaded)return;this._curveLoaded=!0,this._poseOutput&&(this._poseOutput.destroy(),this._poseOutput=null),this._clipEval&&(this._clipEval=void 0),this._targetNode=e;const i=this._clip;if(this.duration=i.duration,this._invDuration=1/this.duration,this.speed=i.speed,this.wrapMode=i.wrapMode,this.frameRate=i.sample,this._playbackRange.min=0,this._playbackRange.max=i.duration,this._playbackDuration=i.duration,(this.wrapMode&$a.Loop)===$a.Loop?this.repeatCount=1/0:this.repeatCount=1,!this._doNotCreateEval){var s,o,r;const a=null!==(s=null!=t?t:null===(o=$J())||void 0===o?void 0:o.blendState)&&void 0!==s?s:null;a&&(this._poseOutput=new TZ(a)),this._clipEval=i.createEvaluator({target:e,pose:null!==(r=this._poseOutput)&&void 0!==r?r:void 0,mask:n})}this._clipEventEval=i.createEventEvaluator(this._targetNode)}destroy(){this.isMotionless||$J().removeAnimation(this),this._poseOutput&&(this._poseOutput.destroy(),this._poseOutput=null),this._clipEval=void 0}emit(...e){$J().pushDelayEvent(this._emit,this,e)}on(e,t,n){return this._target&&this._target.isValid?this._target.on(e,t,n):null}once(e,t,n){return this._target&&this._target.isValid?this._target.once(e,t,n):null}off(e,t,n){this._target&&this._target.isValid&&this._target.off(e,t,n)}allowLastFrameEvent(e){this._allowLastFrame=e}_setEventTarget(e){this._target=e}setTime(e){this._currentFramePlayed=!1,this.time=e||0;{var t;const n=this.getWrappedInfo(e,this._wrappedInfo);null===(t=this._clipEventEval)||void 0===t||t.ignore(n.ratio,n.direction)}}update(e){this._delayTime>0&&(this._delayTime-=e,this._delayTime>0)||(this._currentFramePlayed?this.time+=e*this.speed:this._currentFramePlayed=!0,this._process())}sample(){const e=this.getWrappedInfo(this.time,this._wrappedInfo);return this._sampleCurves(e.time),this._sampleEvents(e),e}onPlay(){this.setTime(this._getPlaybackStart()),this._delayTime=this._delay,this._onReplayOrResume(),this.emit(bZ.PLAY,this)}onStop(){this.isPaused||this._onPauseOrStop(),this.emit(bZ.STOP,this)}onResume(){this._onReplayOrResume(),this.emit(bZ.RESUME,this)}onPause(){this._onPauseOrStop(),this.emit(bZ.PAUSE,this)}_sampleCurves(e){const{_poseOutput:t,_clipEval:n}=this;t&&(t.weight=this.weight),n&&n.evaluate(e)}_process(){this._useSimpleProcess?this.simpleProcess():this.process()}process(){const e=this.sample();if(this._allowLastFrame){let t;t=this._lastWrapInfo?this._lastWrapInfo:this._lastWrapInfo=new nc(e),this.repeatCount>1&&(0|e.iterations)>(0|t.iterations)&&this.emit(bZ.LASTFRAME,this),t.set(e)}e.stopped&&(this.stop(),this.emit(bZ.FINISHED,this))}simpleProcess(){const e=this._playbackRange.min,t=this._playbackDuration;let n=this.time%t;n<0&&(n+=t);const i=(e+n)*this._invDuration;this._sampleCurves(e+n),this._sampleEvents(this.getWrappedInfo(this.time,this._wrappedInfo)),this._allowLastFrame&&(Number.isNaN(this._lastIterations)&&(this._lastIterations=i),(this.time>0&&this._lastIterations>i||this.time<0&&this._lastIterations<i)&&this.emit(bZ.LASTFRAME,this),this._lastIterations=i)}_needReverse(e){const t=this.wrapMode;let n=!1;return(t&$a.PingPong)===$a.PingPong&&(e-(0|e)==0&&e>0&&(e-=1),1&e&&(n=!n)),(t&$a.Reverse)===$a.Reverse&&(n=!n),n}getWrappedInfo(e,t){t=t||new nc;const n=this._getPlaybackStart(),i=this._getPlaybackEnd()-n;let s=!1;const o=this.repeatCount;let r=(e-=n)>0?e/i:-e/i;if(r>=o){r=o,s=!0;let t=o-(0|o);0===t&&(t=1),e=t*i*(e>0?1:-1)}if(e>i){const t=e%i;e=0===t?i:t}else e<0&&0!=(e%=i)&&(e+=i);let a=!1;const c=this._wrapMode&$a.ShouldWrap;c&&(a=this._needReverse(r));let l=a?-1:1;return this.speed<0&&(l*=-1),c&&a&&(e=i-e),t.time=n+e,t.ratio=t.time/this.duration,t.direction=l,t.stopped=s,t.iterations=r,t}_getPlaybackStart(){return this._playbackRange.min}_getPlaybackEnd(){return this._playbackRange.max}_sampleEvents(e){var t;null===(t=this._clipEventEval)||void 0===t||t.sample(e.ratio,e.direction,e.iterations)}_emit(e,t){this._target&&this._target.isValid&&this._target.emit(e,e,t)}_onReplayOrResume(){$J().addAnimation(this)}_onPauseOrStop(){$J().removeAnimation(this)}}e("AnimationState",AZ),u.AnimationState=AZ;const PZ=IZ,wZ=IZ;function IZ(){}var RZ,DZ,OZ,NZ,MZ,LZ,BZ,FZ,zZ,UZ,GZ,VZ;RZ=mc("cc.animation.ClipMotion"),DZ=Zc(_Z),RZ((NZ=ac((OZ=class e extends nl{constructor(...e){super(...e),rc(this,"clip",NZ,this)}[C$](e){return this.clip?new HZ(e,this.clip):null}clone(){const t=new e;return t.clip=this.clip,t}}).prototype,"clip",[DZ],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),OZ));class HZ{constructor(e,t){this.duration=t.duration/t.speed,this._state=new AZ(t),this._state.initialize(e.node,e.blendBuffer,e.mask)}getClipStatuses(e){let t=!1;return{next:()=>t?{done:!0,value:void 0}:(t=!0,{done:!1,value:{__DEBUG_ID__:this.__DEBUG__ID__,clip:this._state.clip,weight:e}})}}get progress(){return this._state.time/this.duration}sample(e,t){if(0===t)return;const n=this._state.duration*e;this._state.time=n,this._state.weight=t,this._state.sample(),this._state.weight=0}}let kZ=mc("cc.animation.BindableNumber")((BZ=ac((LZ=class e{constructor(e=0){rc(this,"variable",BZ,this),rc(this,"value",FZ,this),this.value=e}clone(){const t=new e;return t.value=this.value,t.variable=this.variable,t}}).prototype,"variable",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),FZ=ac(LZ.prototype,"value",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),MZ=LZ))||MZ,jZ=mc("cc.animation.BindableBoolean")((GZ=ac((UZ=class e{constructor(e=!1){rc(this,"variable",GZ,this),rc(this,"value",VZ,this),this.value=e}clone(){const t=new e;return t.value=this.value,t.variable=this.variable,t}}).prototype,"variable",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),VZ=ac(UZ.prototype,"value",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),zZ=UZ))||zZ;function WZ(e,t,n,i,s,...o){const{variable:r,value:a}=t;if(!r)return a;const c=e.getVar(r);if(!XZ(c,r))return a;if(c.type!==n)throw new S$(r,"number");return c.bind(i,s,...o)}function qZ(e,t,n,i,s,...o){const{variable:r,value:a}=t;if(!r)return a;const c=e.getVar(r);if(!XZ(c,r))return a;if(n!==m$.FLOAT&&n!==m$.INTEGER)throw new S$(r,"number or integer");return c.bind(i,s,...o)}function XZ(e,t){if(e)return!0;throw new x$(t)}var YZ,KZ,$Z,QZ,JZ,ZZ;let e0=mc("cc.animation.AnimationBlendItem")(($Z=ac((KZ=class e{constructor(){rc(this,"motion",$Z,this)}clone(){const t=new e;return this._assign(t),t}_assign(e){var t,n;return e.motion=null!==(t=null===(n=this.motion)||void 0===n?void 0:n.clone())&&void 0!==t?t:null,e}}).prototype,"motion",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),YZ=KZ))||YZ,t0=mc("cc.animation.AnimationBlend")((ZZ=ac((JZ=class extends nl{constructor(...e){super(...e),rc(this,"name",ZZ,this)}}).prototype,"name",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),QZ=JZ))||QZ;class n0{constructor(e,t,n,i){this._childEvaluators=n.map((t=>{var n,i;return null!==(n=null===(i=t.motion)||void 0===i?void 0:i[C$](e))&&void 0!==n?n:null})),this._weights=new Array(this._childEvaluators.length).fill(0),this._inputs=[...i]}get childCount(){return this._weights.length}getChildWeight(e){return this._weights[e]}getChildMotionEval(e){return this._childEvaluators[e]}get duration(){let e=0;for(let i=0;i<this._childEvaluators.length;++i){var t,n;e+=(null!==(t=null===(n=this._childEvaluators[i])||void 0===n?void 0:n.duration)&&void 0!==t?t:0)*this._weights[i]}return e}getClipStatuses(e){const{_childEvaluators:t,_weights:n}=this,i=t.length;let s,o=0;return{next(){for(;;){if(s){const e=s.next();if(!e.done)return e}if(o>=i)return{done:!0,value:void 0};{const i=t[o];s=null==i?void 0:i.getClipStatuses(e*n[o]),++o}}}}}sample(e,t){for(let i=0;i<this._childEvaluators.length;++i){var n;null===(n=this._childEvaluators[i])||void 0===n||n.sample(e,t*this._weights[i])}}setInput(e,t){this._inputs[t]=e,this.doEval()}doEval(){this.eval(this._weights,this._inputs)}eval(e,t){}}var i0,s0,o0,r0,a0,c0,l0,h0;let u0=mc("cc.animation.AnimationBlend1DItem")((o0=ac((s0=class e extends e0{constructor(...e){super(...e),rc(this,"threshold",o0,this)}clone(){const t=new e;return this._assign(t),t}_assign(e){return super._assign(e),e.threshold=this.threshold,e}}).prototype,"threshold",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),i0=s0))||i0;mc("cc.animation.AnimationBlend1D")((h0=l0=class e extends t0{constructor(...e){super(...e),rc(this,"_items",a0,this),rc(this,"param",c0,this)}get items(){return this._items}set items(e){this._items=Array.from(e).sort((({threshold:e},{threshold:t})=>e-t))}clone(){const t=new e;return t._items=this._items.map((e=>e.clone())),t.param=this.param.clone(),t}[C$](e){const t=new _0(e,this,this._items,this._items.map((({threshold:e})=>e)),0),n=WZ(e,this.param,m$.FLOAT,t.setInput,t,0);return t.setInput(n,0),t}},l0.Item=u0,a0=ac((r0=h0).prototype,"_items",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),c0=ac(r0.prototype,"param",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new kZ}}),r0));class _0 extends n0{constructor(e,t,n,i,s){super(e,t,n,[s]),this._thresholds=i,this.doEval()}eval(e,[t]){!function(e,t,n){if(e.fill(0),0===t.length);else if(n<=t[0])e[0]=1;else if(n>=t[t.length-1])e[e.length-1]=1;else{let i=0;for(let e=1;e<t.length;++e)if(t[e]>n){i=e;break}const s=t[i-1],o=t[i],r=o-s;e[i-1]=(o-n)/r,e[i]=(n-s)/r}}(e,this._thresholds,t)}}const d0=(()=>{const e=new Bn,t={wA:0,wB:0};return function(n,i,s){if(n.length,i.length,0===i.length)return;if(1===i.length)return void(n[0]=1);if(Bn.strictEquals(s,Bn.ZERO)){const e=i.findIndex((e=>Bn.strictEquals(e,Bn.ZERO)));return void(e>=0?n[e]=1:n.fill(1/i.length))}let o=-1,r=-1,a=-1,c=Number.NEGATIVE_INFINITY,l=Number.NEGATIVE_INFINITY;const{x:h,y:u}=s;for(let t=0;t<i.length;++t){const n=i[t];if(Bn.equals(n,Bn.ZERO)){a=t;continue}const _=Bn.normalize(e,n),d=Bn.dot(_,s);_.x*u-_.y*h>0?d>=l&&(l=d,o=t):d>=c&&(c=d,r=t)}let _=0;if(o<0||r<0)_=1;else{const{wA:e,wB:a}=function(e,t,n,i){const s=Bn.cross(e,t);return s?(i.wA=Bn.cross(n,t)/s,i.wB=Bn.cross(n,e)/-s):(i.wA=0,i.wB=0),i}(i[o],i[r],s,t);let c=0,l=0;const h=e+a;h>1?(c=e/h,l=a/h):h<0?(c=0,l=0,_=1):(c=e,l=a,_=1-h),n[o]=c,n[r]=l}if(_>0)if(a>=0)n[a]=_;else{const e=_/n.length;for(let t=0;t<n.length;++t)n[t]+=e}}})();function p0(e,t,n,i){e.fill(0);const s=new Bn(0,0),o=new Bn(0,0);let r=0;const a=t.length;for(let c=0;c<a;++c){let l=Number.MAX_VALUE,h=!1;for(let e=0;e<a;++e){if(c===e)continue;i(t[c],t[e],n,s,o);const r=1-Bn.dot(s,o)/Bn.lengthSqr(o);if(r<0){h=!0;break}l=Math.min(l,r)}h||(e[c]=l,r+=l)}r>0&&e.forEach(((t,n)=>e[n]=t/r))}const f0=(e,t,n,i,s)=>{Bn.subtract(i,n,e),Bn.subtract(s,t,e)},m0=(()=>{const e=new gn(0,0,0),t=new gn(0,0,0),n=new gn(0,0,0),i=new gn(0,0,0),s=new gn(0,0,0),o=new gn(0,0,0);return(r,a,c,l,h)=>{let u=0,_=0,d=2;gn.set(n,c.x,c.y,0),Bn.equals(r,Bn.ZERO)?(u=Bn.angle(c,a),_=0,d=1):Bn.equals(a,Bn.ZERO)?(u=Bn.angle(c,r),_=u,d=1):(u=Bn.angle(r,a),u<=0?_=0:Bn.equals(c,Bn.ZERO)?_=u:(gn.set(i,r.x,r.y,0),gn.set(s,a.x,a.y,0),gn.set(o,c.x,c.y,0),gn.cross(e,i,s),gn.projectOnPlane(n,o,e),_=gn.angle(i,n),u<.99*Math.PI&&gn.dot(gn.cross(t,i,n),e)<0&&(_=-_)));const p=Bn.len(r),f=Bn.len(a),m=(f+p)/2;Bn.set(h,(f-p)/m,u*d),Bn.set(l,(gn.len(n)-p)/m,_*d)}})();var g0,v0,y0,x0,S0,C0,E0,T0,b0,A0,P0;!function(e){e[e.SIMPLE_DIRECTIONAL=0]="SIMPLE_DIRECTIONAL",e[e.FREEFORM_CARTESIAN=1]="FREEFORM_CARTESIAN",e[e.FREEFORM_DIRECTIONAL=2]="FREEFORM_DIRECTIONAL"}(P0||(P0={})),Ke(P0);let w0=mc("cc.animation.AnimationBlend2DItem")((y0=ac((v0=class e extends e0{constructor(...e){super(...e),rc(this,"threshold",y0,this)}clone(){const t=new e;return this._assign(t),t}_assign(e){return super._assign(e),Bn.copy(e.threshold,this.threshold),e}}).prototype,"threshold",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Bn}}),g0=v0))||g0;mc("cc.animation.AnimationBlend2D")((A0=b0=class e extends t0{constructor(...e){super(...e),rc(this,"algorithm",S0,this),rc(this,"_items",C0,this),rc(this,"paramX",E0,this),rc(this,"paramY",T0,this)}get items(){return this._items}set items(e){this._items=Array.from(e)}clone(){const t=new e;return t._items=this._items.map((e=>{var t;return null!==(t=null==e?void 0:e.clone())&&void 0!==t?t:null})),t.paramX=this.paramX.clone(),t.paramY=this.paramY.clone(),t}[C$](e){const t=new I0(e,this,this._items,this._items.map((({threshold:e})=>e)),this.algorithm,[0,0]),n=WZ(e,this.paramX,m$.FLOAT,t.setInput,t,0),i=WZ(e,this.paramY,m$.FLOAT,t.setInput,t,1);return t.setInput(n,0),t.setInput(i,1),t}},b0.Algorithm=P0,b0.Item=w0,S0=ac((x0=A0).prototype,"algorithm",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return P0.SIMPLE_DIRECTIONAL}}),C0=ac(x0.prototype,"_items",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),E0=ac(x0.prototype,"paramX",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new kZ}}),T0=ac(x0.prototype,"paramY",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new kZ}}),x0));class I0 extends n0{constructor(e,t,n,i,s,o){super(e,t,n,o),this._thresholds=void 0,this._algorithm=void 0,this._value=new Bn,this._thresholds=i,this._algorithm=s,this.doEval()}eval(e,[t,n]){switch(Bn.set(this._value,t,n),e.fill(0),this._algorithm){case P0.SIMPLE_DIRECTIONAL:d0(e,this._thresholds,this._value);break;case P0.FREEFORM_CARTESIAN:!function(e,t,n){p0(e,t,n,f0)}(e,this._thresholds,this._value);break;case P0.FREEFORM_DIRECTIONAL:!function(e,t,n){p0(e,t,n,m0)}(e,this._thresholds,this._value)}}}var R0,D0,O0,N0,M0,L0,B0;let F0=mc("cc.animation.AnimationBlendDirectItem")((O0=ac((D0=class e extends e0{constructor(...e){super(...e),rc(this,"weight",O0,this)}clone(){const t=new e;return this._assign(t),t}_assign(e){return super._assign(e),e.weight=this.weight,e}}).prototype,"weight",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),R0=D0))||R0;mc("cc.animation.AnimationBlendDirect")((B0=L0=class e extends t0{constructor(...e){super(...e),rc(this,"_items",M0,this)}get items(){return this._items}set items(e){this._items=Array.from(e)}clone(){const t=new e;return t._items=this._items.map((e=>{var t;return null!==(t=null==e?void 0:e.clone())&&void 0!==t?t:null})),t}[C$](e){return new z0(e,this,this._items,this._items.map((({weight:e})=>e)))}},L0.Item=F0,M0=ac((N0=B0).prototype,"_items",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),N0));class z0 extends n0{constructor(...e){super(...e),this.doEval()}eval(e,t){const n=e.length;for(let i=0;i<n;++i)e[i]=t[i]}}var U0,G0,V0,H0,k0,j0;mc("cc.animation.AnimationMask")((G0=ac((U0=class extends xh{constructor(...e){super(...e),rc(this,"_jointMasks",G0,this)}get joints(){return this._jointMasks}set joints(e){this.clear();for(const t of e)this.addJoint(t.path,t.enabled)}addJoint(e,t){const n=new W0;n.path=e,n.enabled=t,this._jointMasks.push(n)}removeJoint(e){ee(this._jointMasks,(({path:t})=>t===e))}clear(){this._jointMasks.length=0}filterDisabledNodes(e){const{_jointMasks:t}=this,n=t.length,i=new Set;for(let s=0;s<n;++s){const{path:n,enabled:o}=t[s];if(o)continue;const r=e.getChildByPath(n);r&&i.add(r)}return i}}).prototype,"_jointMasks",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),ac(U0.prototype,"joints",[Lc],Object.getOwnPropertyDescriptor(U0.prototype,"joints"),U0.prototype),U0));let W0=mc("cc.JointMask")((k0=ac((H0=class{constructor(){rc(this,"path",k0,this),rc(this,"enabled",j0,this)}}).prototype,"path",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),j0=ac(H0.prototype,"enabled",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),V0=H0))||V0;var q0,X0,Y0,K0,$0,Q0,J0,Z0,e1,t1,n1,i1,s1,o1,r1,a1;!function(e){e[e.EQUAL_TO=0]="EQUAL_TO",e[e.NOT_EQUAL_TO=1]="NOT_EQUAL_TO",e[e.LESS_THAN=2]="LESS_THAN",e[e.LESS_THAN_OR_EQUAL_TO=3]="LESS_THAN_OR_EQUAL_TO",e[e.GREATER_THAN=4]="GREATER_THAN",e[e.GREATER_THAN_OR_EQUAL_TO=5]="GREATER_THAN_OR_EQUAL_TO"}(r1||(r1={})),mc("cc.animation.BinaryCondition")((Q0=$0=class e{constructor(){rc(this,"operator",X0,this),rc(this,"lhs",Y0,this),rc(this,"rhs",K0,this)}clone(){const t=new e;return t.operator=this.operator,t.lhs=this.lhs.clone(),t.rhs=this.rhs.clone(),t}[C$](e){const{operator:t,lhs:n,rhs:i}=this,s=new c1(t,0,0),o=qZ(e,n,m$.FLOAT,s.setLhs,s),r=qZ(e,i,m$.FLOAT,s.setRhs,s);return s.reset(o,r),s}},$0.Operator=r1,X0=ac((q0=Q0).prototype,"operator",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return r1.EQUAL_TO}}),Y0=ac(q0.prototype,"lhs",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new kZ}}),K0=ac(q0.prototype,"rhs",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new kZ}}),q0));class c1{constructor(e,t,n){this._operator=e,this._lhs=t,this._rhs=n,this._eval()}reset(e,t){this._lhs=e,this._rhs=t,this._eval()}setLhs(e){this._lhs=e,this._eval()}setRhs(e){this._rhs=e,this._eval()}eval(){return this._result}_eval(){const{_lhs:e,_rhs:t}=this;switch(this._operator){default:case r1.EQUAL_TO:this._result=e===t;break;case r1.NOT_EQUAL_TO:this._result=e!==t;break;case r1.LESS_THAN:this._result=e<t;break;case r1.LESS_THAN_OR_EQUAL_TO:this._result=e<=t;break;case r1.GREATER_THAN:this._result=e>t;break;case r1.GREATER_THAN_OR_EQUAL_TO:this._result=e>=t}}}!function(e){e[e.TRUTHY=0]="TRUTHY",e[e.FALSY=1]="FALSY"}(a1||(a1={})),mc("cc.animation.UnaryCondition")((n1=t1=class e{constructor(){rc(this,"operator",Z0,this),rc(this,"operand",e1,this)}clone(){const t=new e;return t.operator=this.operator,t.operand=this.operand.clone(),t}[C$](e){const{operator:t,operand:n}=this,i=new l1(t,!1),s=WZ(e,n,m$.BOOLEAN,i.setOperand,i);return i.reset(s),i}},t1.Operator=a1,Z0=ac((J0=n1).prototype,"operator",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return a1.TRUTHY}}),e1=ac(J0.prototype,"operand",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new jZ}}),J0));class l1{constructor(e,t){this._operator=e,this._operand=t,this._eval()}reset(e){this.setOperand(e)}setOperand(e){this._operand=e,this._eval()}eval(){return this._result}_eval(){const{_operand:e}=this;switch(this._operator){default:case a1.TRUTHY:this._result=!!e;break;case a1.FALSY:this._result=!e}}}let h1=mc("cc.animation.TriggerCondition")((o1=ac((s1=class e{constructor(){rc(this,"trigger",o1,this)}clone(){const t=new e;return t.trigger=this.trigger,t}[C$](e){const t=new u1(!1),n=e.getVar(this.trigger);return XZ(n,this.trigger)&&(function(e,t){if(e!==m$.TRIGGER)throw new S$(t,"trigger")}(n.type,this.trigger),t.setTrigger(n.bind(t.setTrigger,t))),t}}).prototype,"trigger",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),i1=s1))||i1;class u1{constructor(e){this._triggered=!1,this._triggered=e}setTrigger(e){this._triggered=e}eval(){return this._triggered}}class _1{constructor(){this._nodeBlendStates=new Map}createWriter(e,t,n,i){const s=this.ref(e,t);return new d1(e,t,s,n,i)}destroyWriter(e){const t=e;this.deRef(t.node,t.property)}ref(e,t){let n=this._nodeBlendStates.get(e);return n||(n=this.createNodeBlendState(),this._nodeBlendStates.set(e,n)),n.refProperty(e,t)}deRef(e,t){const n=this._nodeBlendStates.get(e);n&&(n.deRefProperty(t),n.empty&&this._nodeBlendStates.delete(e))}apply(){this._nodeBlendStates.forEach(((e,t)=>{e.apply(t)}))}}class d1{constructor(e,t,n,i,s){this._node=e,this._property=t,this._propertyBlendState=n,this._host=i,this._constants=s}get node(){return this._node}get property(){return this._property}getValue(){return this._node[this._property]}setValue(e){const{_propertyBlendState:t,_host:n}=this,i=n.weight;t.blend(e,i)}}var p1;!function(e){e[e.POSITION=1]="POSITION",e[e.ROTATION=2]="ROTATION",e[e.SCALE=4]="SCALE",e[e.EULER_ANGLES=8]="EULER_ANGLES"}(p1||(p1={}));const f1=p1.POSITION|p1.ROTATION|p1.SCALE|p1.EULER_ANGLES;class m1{constructor(){this.refCount=0,this.accumulatedWeight=0,this.result=new gn}blend(e,t){this.accumulatedWeight=b1(this.result,this.result,this.accumulatedWeight,e,t)}reset(){this.accumulatedWeight=0,gn.zero(this.result)}}class g1{constructor(){this.refCount=0,this.accumulatedWeight=0,this.result=new Tn}blend(e,t){this.accumulatedWeight=A1(this.result,this.result,this.accumulatedWeight,e,t)}reset(){this.accumulatedWeight=0,Tn.identity(this.result)}}class v1{constructor(){this._transformApplyFlags=0,this._properties={}}get empty(){const{_properties:e}=this;return!(e.position||e.rotation||e.eulerAngles||e.scale)}refProperty(e,t){var n,i;const{_properties:s}=this;let o;switch(t){default:case"position":case"scale":case"eulerAngles":o=null!==(n=s[t])&&void 0!==n?n:s[t]=this._createVec3BlendState(e[t]);break;case"rotation":o=null!==(i=s[t])&&void 0!==i?i:s[t]=this._createQuatBlendState(e.rotation)}return++o.refCount,o}deRefProperty(e){const{_properties:t}=this,n=t[e];n&&(--n.refCount,n.refCount>0||delete t[e])}apply(e){const{_transformApplyFlags:t,_properties:{position:n,scale:i,rotation:s,eulerAngles:o}}=this;if(!t)return;let r,a,c;n&&t&p1.POSITION&&(r=n.result),i&&t&p1.SCALE&&(a=i.result),o&&t&p1.EULER_ANGLES&&(c=o.result),s&&t&p1.ROTATION&&(c=s.result),(c||r||a)&&e.setRTS(c,r,a),this._transformApplyFlags=0}}class y1 extends v1{apply(e){const{_properties:{position:t,scale:n,rotation:i,eulerAngles:s}}=this;t&&t.accumulatedWeight&&(this._transformApplyFlags|=p1.POSITION,t.accumulatedWeight<1&&t.blend(e.position,1-t.accumulatedWeight)),n&&n.accumulatedWeight&&(this._transformApplyFlags|=p1.SCALE,n.accumulatedWeight<1&&n.blend(e.scale,1-n.accumulatedWeight)),s&&s.accumulatedWeight&&(this._transformApplyFlags|=p1.EULER_ANGLES,s.accumulatedWeight<1&&s.blend(e.eulerAngles,1-s.accumulatedWeight)),i&&i.accumulatedWeight&&(this._transformApplyFlags|=p1.ROTATION,i.accumulatedWeight<1&&i.blend(e.rotation,1-i.accumulatedWeight)),super.apply(e),null==t||t.reset(),null==n||n.reset(),null==i||i.reset(),null==s||s.reset()}_createVec3BlendState(e){return new m1}_createQuatBlendState(e){return new g1}}class x1 extends _1{createNodeBlendState(){return new y1}}class S1{constructor(e){this.refCount=0,this.result=new gn,this._defaultValue=new gn,this._clipBlendResult=new gn,this._accumulatedWeight=0,gn.copy(this._defaultValue,e),gn.copy(this.result,e)}blend(e,t){this._accumulatedWeight=b1(this._clipBlendResult,this._clipBlendResult,this._accumulatedWeight,e,t)}commitLayerChange(e){const{result:t,_clipBlendResult:n,_accumulatedWeight:i}=this;i<1&&this.blend(this._defaultValue,1-i),gn.lerp(t,t,n,e),gn.zero(this._clipBlendResult),this._accumulatedWeight=0}reset(){gn.copy(this.result,this._defaultValue)}}class C1{constructor(e){this.refCount=0,this.result=new Tn,this._defaultValue=new Tn,this._clipBlendResult=new Tn,this._accumulatedWeight=0,Tn.copy(this._defaultValue,e),Tn.copy(this.result,e)}blend(e,t){this._accumulatedWeight=A1(this._clipBlendResult,this._clipBlendResult,this._accumulatedWeight,e,t)}commitLayerChange(e){const{result:t,_clipBlendResult:n,_accumulatedWeight:i}=this;i<1&&this.blend(this._defaultValue,1-i),Tn.slerp(t,t,n,e),Tn.identity(this._clipBlendResult),this._accumulatedWeight=0}reset(){Tn.copy(this.result,this._defaultValue)}}class E1 extends v1{constructor(...e){super(...e),this._layerMask=-1>>>0}setLayerMask(e){this._layerMask&=~(1<<e)}commitLayerChanges(e,t){if(!(this._layerMask&1<<e))return;const{_properties:{position:n,scale:i,rotation:s,eulerAngles:o}}=this;n&&n.commitLayerChange(t),i&&i.commitLayerChange(t),s&&s.commitLayerChange(t),o&&o.commitLayerChange(t)}apply(e){this._transformApplyFlags=f1,super.apply(e);const{_properties:{position:t,scale:n,rotation:i,eulerAngles:s}}=this;null==t||t.reset(),null==n||n.reset(),null==i||i.reset(),null==s||s.reset()}_createVec3BlendState(e){return new S1(e)}_createQuatBlendState(e){return new C1(e)}}class T1 extends _1{setMask(e,t){this._nodeBlendStates.forEach(((n,i)=>{t.has(i)&&n.setLayerMask(e)}))}commitLayerChanges(e,t){this._nodeBlendStates.forEach((n=>{n.commitLayerChanges(e,t)}))}createNodeBlendState(){return new E1}}function b1(e,t,n,i,s){const o=n+s;if(1!==s||n){if(o){const t=s/o;gn.lerp(e,e,i,t)}}else gn.copy(e,i);return o}function A1(e,t,n,i,s){const o=n+s;if(1!==s||n){if(o){const n=s/o;Tn.slerp(e,t,i,n)}}else Tn.copy(e,i);return o}var P1;let w1=mc("cc.animation.StateMachineComponent")(P1=class{onMotionStateEnter(e,t){}onMotionStateExit(e,t){}onMotionStateUpdate(e,t){}onStateMachineEnter(e){}onStateMachineExit(e){}})||P1;class I1{constructor(e,t,n){this._blendBuffer=new T1,this._currentTransitionCache={duration:0,time:0},this._varInstances={},this._hasAutoTrigger=!1;for(const[t,n]of e.variables){const e=this._varInstances[t]=new v$(n.type,n.value);if(n.type===m$.TRIGGER){const{resetMode:t}=n;e.resetMode=t,t===g$.NEXT_FRAME_OR_AFTER_CONSUMED&&(this._hasAutoTrigger=!0)}}const i={controller:n,blendBuffer:this._blendBuffer,node:t,getVar:e=>this._varInstances[e],triggerResetFn:e=>{this.setValue(e,!1)}},s=(this._layerEvaluations=e.layers.map((e=>{var t;return new R1(e,{...i,mask:null!==(t=e.mask)&&void 0!==t?t:void 0})}))).length;for(let t=0;t<s;++t){const n=e.layers[t].mask;if(n){const e=n.filterDisabledNodes(i.node);this._blendBuffer.setMask(t,e)}}}update(e){const{_blendBuffer:t,_layerEvaluations:n}=this,i=n.length;for(let s=0;s<i;++s){const i=n[s];i.update(e),t.commitLayerChanges(s,i.weight*i.passthroughWeight)}if(this._hasAutoTrigger){const{_varInstances:e}=this;for(const t in e){const n=e[t];n.type===m$.TRIGGER&&n.resetMode===g$.NEXT_FRAME_OR_AFTER_CONSUMED&&(n.value=!1)}}this._blendBuffer.apply()}getVariables(){return Object.entries(this._varInstances)}getCurrentStateStatus(e){return this._layerEvaluations[e].getCurrentStateStatus()}getCurrentClipStatuses(e){return this._layerEvaluations[e].getCurrentClipStatuses()}getCurrentTransition(e){const{_layerEvaluations:t,_currentTransitionCache:n}=this;return t[e].getCurrentTransition(n)?n:null}getNextStateStatus(e){return this._layerEvaluations[e].getNextStateStatus()}getNextClipStatuses(e){return this.getCurrentTransition(e),this._layerEvaluations[e].getNextClipStatuses()}getValue(e){const t=this._varInstances[e];return t?t.value:void 0}setValue(e,t){const n=this._varInstances[e];n&&(n.value=t)}setLayerWeight(e,t){this._layerEvaluations[e].weight=t}}class R1{constructor(e,t){this.passthroughWeight=1,this._nodes=[],this._topLevelEntry=void 0,this._topLevelExit=void 0,this._currentNode=void 0,this._currentTransitionToNode=null,this._currentTransitionPath=[],this._transitionProgress=0,this._fromWeight=0,this._toWeight=0,this._fromUpdated=!1,this._toUpdated=!1,this.name=e.name,this._controller=t.controller,this.weight=e.weight;const{entry:n,exit:i}=this._addStateMachine(e.stateMachine,null,{...t},e.name);this._topLevelEntry=n,this._topLevelExit=i,this._currentNode=n,this._resetTrigger=t.triggerResetFn}get exited(){return this._currentNode===this._topLevelExit}update(e){this.exited||(this._fromWeight=1,this._toWeight=0,this._eval(e),this._sample())}getCurrentStateStatus(){const{_currentNode:e}=this;return e.kind===F1.animation?e.getFromPortStatus():null}getCurrentClipStatuses(){const{_currentNode:e}=this;return e.kind===F1.animation?e.getClipStatuses(this._fromWeight):O1}getCurrentTransition(e){const{_currentTransitionPath:t}=this;if(0!==t.length){if(t[t.length-1].to.kind!==F1.animation)return!1;const{duration:n,normalizedDuration:i}=t[0],s=e.duration=i?n*(this._currentNode.kind===F1.animation?this._currentNode.duration:0):n;return e.time=this._transitionProgress*s,!0}return!1}getNextStateStatus(){return this._currentTransitionToNode&&(this._currentTransitionToNode.kind,F1.empty),this._currentTransitionToNode.getToPortStatus()}getNextClipStatuses(){var e;const{_currentTransitionPath:t}=this,n=t[t.length-1].to;return n.kind,F1.animation,null!==(e=n.getClipStatuses(this._toWeight))&&void 0!==e?e:O1}_addStateMachine(e,t,n,i){const s=Array.from(e.states());let o,r,a;const c=s.map((t=>t instanceof U$?new q1(t,n):t===e.entryState?o=new K1(t,F1.entry,t.name):t===e.exitState?a=new K1(t,F1.exit,t.name):t===e.anyState?r=new K1(t,F1.any,t.name):t instanceof OQ?new $1(t):null)),l={components:null,parent:t,entry:o,exit:a,any:r};for(let e=0;e<s.length;++e){const t=c[e];t&&(t.stateMachine=l)}const h=s.map((e=>{if(e instanceof LQ){const t=this._addStateMachine(e.stateMachine,l,n,`${i}/${e.name}`);return t.components=new W1(e),t}return null}));for(let t=0;t<s.length;++t){const i=s[t],o=e.getOutgoings(i),r=[];let a;a=i instanceof LQ?h[t].exit:c[t];for(const e of o){const t=e.to,i=s.findIndex((t=>t===e.to));let o;o=t instanceof LQ?h[i].entry:c[i];const a={conditions:e.conditions.map((e=>e[C$](n))),to:o,triggers:void 0,duration:0,normalizedDuration:!1,exitCondition:0,exitConditionEnabled:!1};e instanceof DQ?(a.duration=e.duration,a.normalizedDuration=e.relativeDuration,a.exitConditionEnabled=e.exitConditionEnabled,a.exitCondition=e.exitCondition):e instanceof NQ&&(a.duration=e.duration),a.conditions.forEach(((t,n)=>{const i=e.conditions[n];var s;i instanceof h1&&i.trigger&&(null!==(s=a.triggers)&&void 0!==s?s:a.triggers=[]).push(i.trigger)})),r.push(a)}a.outgoingTransitions=r}return l}_eval(e){if(this.exited,wZ(`[Layer ${this.name}]: UpdateStart ${e}s`),this._continueDanglingTransition())return 0;let t=e;for(let e=!0,n=0;e||t>0;){if(e=!1,100===n){D(14e3,100);break}if(++n,this._currentTransitionPath.length>0){if(t-=this._updateCurrentTransition(t),this._currentNode.kind===F1.exit)break;0===this._currentTransitionPath.length&&(e=!0);continue}const{_currentNode:i}=this,s=this._matchCurrentNodeTransition(t);if(s){const{transition:n,requires:o}=s;if(PZ(`[SubStateMachine ${this.name}]: CurrentNodeUpdate: ${i.name}`),t-=o,i.kind===F1.animation&&(i.updateFromPort(o),this._fromUpdated=!0),this._switchTo(n))break;e=!0}else PZ(`[SubStateMachine ${this.name}]: CurrentNodeUpdate: ${i.name}`),i.kind===F1.animation?(i.updateFromPort(t),this._fromUpdated=!0,t=0):t=0}return PZ(`[SubStateMachine ${this.name}]: UpdateEnd`),this._fromUpdated&&this._currentNode.kind===F1.animation&&(this._fromUpdated=!1,this._currentNode.triggerFromPortUpdate(this._controller)),this._currentTransitionToNode&&this._toUpdated&&this._currentTransitionToNode.kind===F1.animation&&(this._toUpdated=!1,this._currentTransitionToNode.triggerToPortUpdate(this._controller)),t}_sample(){const{_currentNode:e,_currentTransitionToNode:t,_fromWeight:n,_toWeight:i}=this;e.kind===F1.empty?(this.passthroughWeight=i,t&&t.kind===F1.animation&&t.sampleToPort(1)):t&&t.kind===F1.empty?(this.passthroughWeight=n,e.kind===F1.animation&&e.sampleFromPort(1)):(this.passthroughWeight=1,e.kind===F1.animation&&e.sampleFromPort(n),t&&t.kind===F1.animation&&t.sampleToPort(i))}_matchCurrentNodeTransition(e){const t=this._currentNode;let n=1/0,i=null;const s=this._matchTransition(t,t,e,L1);if(s&&({requires:n,transition:i}=s),t.kind===F1.animation)for(let s=t.stateMachine;null!==s;s=s.parent){const o=this._matchTransition(s.any,t,e,B1);o&&o.requires<n&&({requires:n,transition:i}=o)}return i?M1.set(i,n):null}_matchTransition(e,t,n,i){e===t||(e.kind,F1.any);const{outgoingTransitions:s}=e,o=s.length;let r=1/0,a=null;for(let c=0;c<o;++c){const o=s[c],{conditions:l}=o,h=l.length;if(0===h){if(e.kind===F1.entry||e.kind===F1.exit)return i.set(o,0);if(!o.exitConditionEnabled)continue}let u=0;if(t.kind===F1.animation&&o.exitConditionEnabled){const e=t.duration*o.exitCondition;if(u=Math.max(e-t.fromPortTime,0),u>n)continue}let _=!0;for(let e=0;e<h;++e)if(!l[e].eval()){_=!1;break}if(_){if(0===u)return i.set(o,0);u<r&&(r=u,a=o)}}return a?i.set(a,r):null}_switchTo(e){const{_currentNode:t}=this;wZ(`[SubStateMachine ${this.name}]: STARTED ${t.name} -> ${e.to.name}.`);const{_currentTransitionPath:n}=this;this._consumeTransition(e),n.push(e);const i=this._matchTransitionPathUntilMotion();return!i||(this._doTransitionToMotion(i),!1)}_continueDanglingTransition(){const{_currentTransitionPath:e}=this,t=e.length;if(0===t)return!1;const n=e[t-1].to;if(n.kind!==F1.animation&&n.kind!==F1.empty){const e=this._matchTransitionPathUntilMotion();return!e||(this._doTransitionToMotion(e),!1)}return!1}_matchTransitionPathUntilMotion(){const{_currentTransitionPath:e}=this;let t=e[e.length-1].to;for(;t.kind!==F1.animation&&t.kind!==F1.empty;){const n=this._matchTransition(t,t,0,M1);if(!n)break;const i=n.transition;this._consumeTransition(i),e.push(i),t=i.to}return t.kind===F1.animation||t.kind===F1.empty?t:null}_consumeTransition(e){const{to:t}=e;t.kind===F1.entry&&this._callEnterMethods(t)}_resetTriggersAlongThePath(){const{_currentTransitionPath:e}=this,t=e.length;for(let n=0;n<t;++n){const t=e[n];this._resetTriggersOnTransition(t)}}_doTransitionToMotion(e){this._resetTriggersAlongThePath(),this._transitionProgress=0,this._currentTransitionToNode=e,this._toUpdated=!1,e.kind===F1.animation&&e.resetToPort(),this._callEnterMethods(e)}_updateCurrentTransition(e){var t;const{_currentTransitionPath:n,_currentTransitionToNode:i}=this;n.length;const s=n[0],{duration:o,normalizedDuration:r}=s,a=this._currentNode,c=i;let l=0,h=0;if(o<=0)l=0,h=1;else{a.kind===F1.animation||(a.kind,F1.empty);const{_transitionProgress:t}=this,n=a.kind===F1.empty?o:r?o*a.duration:o,i=t*n,s=n-i;l=Math.min(s,e),h=this._transitionProgress=(i+l)/n}const u=null!==(t=null==c?void 0:c.name)&&void 0!==t?t:"<Empty>";this._fromWeight=1-h,this._toWeight=h;const _=0!==l,d=1===h;if(a.kind===F1.animation&&_&&(wZ(`Update ${a.name}`),a.updateFromPort(l),this._fromUpdated=!0),c.kind===F1.animation&&_&&(wZ(`Update ${c.name}`),c.updateToPort(l),this._toUpdated=!0),d){PZ(`[SubStateMachine ${this.name}]: Transition finished:  ${a.name} -> ${u}.`),this._callExitMethods(a);const{_currentTransitionPath:e}=this,t=e.length;for(let n=0;n<t;++n){const{to:t}=e[n];t.kind===F1.exit&&this._callExitMethods(t)}this._fromUpdated=this._toUpdated,this._toUpdated=!1,c.kind===F1.animation&&c.finishTransition(),this._currentNode=c,this._currentTransitionToNode=null,this._currentTransitionPath.length=0,this._fromWeight=1,this._toWeight=0}return l}_resetTriggersOnTransition(e){const{triggers:t}=e;if(t){const e=t.length;for(let n=0;n<e;++n){const e=t[n];this._resetTrigger(e)}}}_resetTrigger(e){const{_triggerReset:t}=this;t(e)}_callEnterMethods(e){var t;const{_controller:n}=this;switch(e.kind){default:break;case F1.animation:e.components.callMotionStateEnterMethods(n,e.getToPortStatus());break;case F1.entry:null===(t=e.stateMachine.components)||void 0===t||t.callStateMachineEnterMethods(n)}}_callExitMethods(e){var t;const{_controller:n}=this;switch(e.kind){default:break;case F1.animation:e.components.callMotionStateExitMethods(n,e.getFromPortStatus());break;case F1.exit:null===(t=e.stateMachine.components)||void 0===t||t.callStateMachineExitMethods(n)}}}const D1=Object.freeze({next:()=>({done:!0,value:void 0})}),O1=Object.freeze({[Symbol.iterator]:()=>D1});class N1{constructor(){this.transition=null,this.requires=0}set(e,t){return this.transition=e,this.requires=t,this}}const M1=new N1,L1=new N1,B1=new N1;var F1,z1,U1,G1,V1,H1,k1;!function(e){e[e.entry=0]="entry",e[e.exit=1]="exit",e[e.any=2]="any",e[e.animation=3]="animation",e[e.empty=4]="empty"}(F1||(F1={}));class j1{constructor(e){this.name=void 0,this.outgoingTransitions=[],this.name=e.name}}class W1{constructor(e){this._components=e.instantiateComponents()}callMotionStateEnterMethods(e,t){this._callMotionStateCallbackIfNonDefault("onMotionStateEnter",e,t)}callMotionStateUpdateMethods(e,t){this._callMotionStateCallbackIfNonDefault("onMotionStateUpdate",e,t)}callMotionStateExitMethods(e,t){this._callMotionStateCallbackIfNonDefault("onMotionStateExit",e,t)}callStateMachineEnterMethods(e){this._callStateMachineCallbackIfNonDefault("onStateMachineEnter",e)}callStateMachineExitMethods(e){this._callStateMachineCallbackIfNonDefault("onStateMachineExit",e)}_callMotionStateCallbackIfNonDefault(e,t,n){const{_components:i}=this,s=i.length;for(let o=0;o<s;++o){const s=i[o];s[e]!==w1.prototype[e]&&s[e](t,n)}}_callStateMachineCallbackIfNonDefault(e,t){const{_components:n}=this,i=n.length;for(let s=0;s<i;++s){const i=n[s];i[e]!==w1.prototype[e]&&i[e](t)}}}class q1 extends j1{constructor(e,t){var n,i;if(super(e),this.kind=F1.animation,this._source=null,this._baseSpeed=1,this._speed=1,this._fromPort={progress:0,statusCache:{progress:0}},this._toPort={progress:0,statusCache:{progress:0}},this._baseSpeed=e.speed,this._setSpeedMultiplier(1),e.speedMultiplierEnabled&&e.speedMultiplier){const n=e.speedMultiplier,i=t.getVar(n);if(XZ(i,n)){!function(e,t,n){if(e!==t)throw new S$(n,"number")}(i.type,m$.FLOAT,n),i.bind(this._setSpeedMultiplier,this);const e=i.value;this._setSpeedMultiplier(e)}}const s={...t},o=null!==(n=null===(i=e.motion)||void 0===i?void 0:i[C$](s))&&void 0!==n?n:null;o&&Object.defineProperty(o,"__DEBUG_ID__",{value:this.name}),this._source=o,this.components=new W1(e)}get duration(){var e,t;return null!==(e=null===(t=this._source)||void 0===t?void 0:t.duration)&&void 0!==e?e:0}get fromPortTime(){return this._fromPort.progress*this.duration}updateFromPort(e){this._fromPort.progress=X1(this._fromPort.progress,this.duration,e*this._speed)}updateToPort(e){this._toPort.progress=X1(this._toPort.progress,this.duration,e*this._speed)}triggerFromPortUpdate(e){this.components.callMotionStateUpdateMethods(e,this.getFromPortStatus())}triggerToPortUpdate(e){this.components.callMotionStateUpdateMethods(e,this.getToPortStatus())}getFromPortStatus(){const{statusCache:e}=this._fromPort;return e.progress=Y1(this._fromPort.progress),e}getToPortStatus(){const{statusCache:e}=this._toPort;return e.progress=Y1(this._toPort.progress),e}resetToPort(){this._toPort.progress=0}finishTransition(){this._fromPort.progress=this._toPort.progress}sampleFromPort(e){var t;null===(t=this._source)||void 0===t||t.sample(this._fromPort.progress,e)}sampleToPort(e){var t;null===(t=this._source)||void 0===t||t.sample(this._toPort.progress,e)}getClipStatuses(e){const{_source:t}=this;return t?{[Symbol.iterator]:()=>t.getClipStatuses(e)}:O1}_setSpeedMultiplier(e){this._speed=this._baseSpeed*e}}function X1(e,t,n){return 0===t?0:e+n/t}function Y1(e){return e-Math.trunc(e)}class K1 extends j1{constructor(e,t,n){super(e),this.kind=void 0,this.kind=t}}class $1 extends j1{constructor(e){super(e),this.kind=F1.empty}}let Q1=(z1=mc("cc.animation.AnimationController"),U1=Rc(),G1=xc(UQ),z1(V1=U1((k1=ac((H1=class extends Gh{constructor(...e){super(...e),rc(this,"graph",k1,this),this._graphEval=null}__preload(){this.graph&&(this._graphEval=new I1(this.graph,this.node,this))}update(e){var t;null===(t=this._graphEval)||void 0===t||t.update(e)}getVariables(){const{_graphEval:e}=this;return e.getVariables()}setValue(e,t){const{_graphEval:n}=this;n.setValue(e,t)}getValue(e){const{_graphEval:t}=this;return t.getValue(e)}getCurrentStateStatus(e){const{_graphEval:t}=this;return t.getCurrentStateStatus(e)}getCurrentClipStatuses(e){const{_graphEval:t}=this;return t.getCurrentClipStatuses(e)}getCurrentTransition(e){const{_graphEval:t}=this;return t.getCurrentTransition(e)}getNextStateStatus(e){const{_graphEval:t}=this;return t.getNextStateStatus(e)}getNextClipStatuses(e){const{_graphEval:t}=this;return t.getNextClipStatuses(e)}setLayerWeight(e,t){const{_graphEval:n}=this;return n.setLayerWeight(e,t)}}).prototype,"graph",[G1],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),V1=H1))||V1)||V1);var J1,Z1,e2;e("animation",Object.freeze({__proto__:null,UniformProxyFactory:jY,MorphWeightValueProxy:ZY,MorphWeightsValueProxy:eK,MorphWeightsAllValueProxy:tK,Track:LK,TrackPath:NK,RealTrack:GK,VectorTrack:XK,QuatTrack:JK,ColorTrack:s$,SizeTrack:h$,ObjectTrack:d$,isPropertyPath:BY,isCustomPath:function(e,t){return e instanceof t},HierarchyPath:FY,ComponentPath:zY,CubicSplineVec2Value:cK,CubicSplineVec3Value:lK,CubicSplineVec4Value:hK,CubicSplineQuatValue:uK,CubicSplineNumberValue:_K,AnimationController:Q1,get VariableType(){return m$},StateMachineComponent:w1}));let t2=e("AnimationManager",mc((e2=Z1=class extends cw{constructor(...e){super(...e),this._anims=new $([]),this._crossFades=new $([]),this._delayEvents=[],this._blendStateBuffer=new x1,this._sockets=[]}get blendState(){return this._blendStateBuffer}addCrossFade(e){-1===this._crossFades.array.indexOf(e)&&this._crossFades.push(e)}removeCrossFade(e){const t=this._crossFades.array.indexOf(e);t>=0?this._crossFades.fastRemoveAt(t):N(3907)}update(e){const{_delayEvents:t,_crossFades:n,_sockets:i}=this;{const t=n.array;for(n.i=0;n.i<t.length;++n.i)t[n.i].update(e)}const s=this._anims,o=s.array;for(s.i=0;s.i<o.length;++s.i){const t=o[s.i];t.isMotionless||t.update(e)}this._blendStateBuffer.apply();const r=u.director.getTotalFrames();for(let e=0,t=i.length;e<t;e++){const{target:t,transform:n}=i[e];t.matrix=xX(n,r)}for(let e=0,n=t.length;e<n;e++){const n=t[e];n.fn.apply(n.thisArg,n.args)}t.length=0}destruct(){}addAnimation(e){-1===this._anims.array.indexOf(e)&&this._anims.push(e)}removeAnimation(e){const t=this._anims.array.indexOf(e);t>=0?this._anims.fastRemoveAt(t):N(3907)}pushDelayEvent(e,t,n){this._delayEvents.push({fn:e,thisArg:t,args:n})}addSockets(e,t){for(let n=0;n<t.length;++n){const i=t[n];if(this._sockets.find((e=>e.target===i.target)))continue;const s=e.getChildByPath(i.path),o=i.target&&s&&SX(s,e);o&&this._sockets.push({target:i.target,transform:o})}}removeSockets(e,t){for(let e=0;e<t.length;++e){const n=t[e];for(let e=0;e<this._sockets.length;++e){const t=this._sockets[e];if(t.target===n.target){CX(t.transform.node),this._sockets[e]=this._sockets[this._sockets.length-1],this._sockets.length--;break}}}}},Z1.ID="animation",J1=e2))||J1);Sw.on(xw.EVENT_INIT,(()=>{const e=new t2;Sw.registerSystem(t2.ID,e,cw.Priority.HIGH)})),u.AnimationManager=t2;class n2 extends EZ{constructor(e){super(),this._managedStates=[],this._fadings=[],this._scheduled=!1,this._scheduler=null!=e?e:$J()}update(e){if(this.isMotionless)return;const t=this._managedStates,n=this._fadings;if(1===t.length&&1===n.length){const e=t[0].state;e&&(e.weight=1)}else this._calculateWeights(e);1===t.length&&1===n.length&&this._unscheduleThis()}crossFade(e,t){var n;0===this._managedStates.length&&(t=0),0===t&&this.clear();let i=this._managedStates.find((t=>t.state===e));i?(null===(n=i.state)||void 0===n?void 0:n.isMotionless)&&i.state.play():(i={state:e,reference:0},e&&e.play(),this._managedStates.push(i)),++i.reference,this._fadings.unshift({easeDuration:t,easeTime:0,target:i}),this.isMotionless||this._scheduleThis()}clear(){for(let e=0;e<this._managedStates.length;++e){const t=this._managedStates[e].state;t&&t.stop()}this._managedStates.length=0,this._fadings.length=0}onPlay(){super.onPlay(),this._scheduleThis()}onPause(){super.onPause();for(let e=0;e<this._managedStates.length;++e){const t=this._managedStates[e].state;t&&t.pause()}this._unscheduleThis()}onResume(){super.onResume();for(let e=0;e<this._managedStates.length;++e){const t=this._managedStates[e].state;t&&t.resume()}this._scheduleThis()}onStop(){super.onStop(),this.clear()}_calculateWeights(e){const t=this._managedStates,n=this._fadings;for(let e=0;e<t.length;++e){const n=t[e].state;n&&(n.weight=0)}let i=1,s=n.length;for(let t=0;t<n.length;++t){const o=n[t];o.easeTime+=e;const r=0===o.easeDuration?1:Yt(o.easeTime/o.easeDuration),a=r*i;if(i*=1-r,o.target.state&&(o.target.state.weight+=a),o.easeTime>=o.easeDuration){s=t+1,o.easeTime=o.easeDuration;break}}if(s!==n.length){for(let e=s;e<n.length;++e){const t=n[e];--t.target.reference,t.target.reference<=0&&(t.target.state&&t.target.state.stop(),Z(this._managedStates,t.target))}n.splice(s)}}_scheduleThis(){this._scheduled||(this._scheduler.addCrossFade(this),this._scheduled=!0)}_unscheduleThis(){this._scheduled&&(this._scheduler.removeCrossFade(this),this._scheduled=!1)}}var i2,s2,o2,r2,a2,c2,l2,h2,u2,_2,d2,p2,f2,m2,g2,v2,y2;let x2,S2,C2,E2=function(t){return e({Animation:t,AnimationComponent:t}),t}((i2=mc("cc.Animation"),s2=Mc(),o2=vc(99),r2=Rc(),a2=Zc([_Z]),c2=Uc(),l2=Zc(_Z),h2=Uc(),u2=Uc(),_2=Zc([_Z]),i2(d2=s2(d2=o2(d2=Ic(d2=r2((y2=v2=class extends(ql(Gh)){constructor(...e){super(...e),rc(this,"playOnLoad",f2,this),this._crossFade=new n2,this._nameToState=pe(!0),rc(this,"_clips",m2,this),rc(this,"_defaultClip",g2,this),this._hasBeenPlayed=!1}get clips(){return this._clips}set clips(e){this._crossFade&&this._crossFade.clear();for(const e of this._clips)e&&this._removeStateOfAutomaticClip(e);for(const t of e)t&&this.createState(t);const t=e.find((e=>T2(e,this._defaultClip)));this._defaultClip=t||null,this._clips=e}get defaultClip(){return this._defaultClip}set defaultClip(e){this._defaultClip=e,e&&(this._clips.findIndex((t=>T2(t,e)))>=0||(this._clips.push(e),this.createState(e)))}onLoad(){this.clips=this._clips;for(const e in this._nameToState)this._nameToState[e].initialize(this.node)}start(){this.playOnLoad&&!this._hasBeenPlayed&&this._defaultClip&&this.crossFade(this._defaultClip.name,0)}onEnable(){this._crossFade.resume()}onDisable(){this._crossFade.pause()}onDestroy(){this._crossFade.stop();for(const e in this._nameToState)this._nameToState[e].destroy();this._nameToState=pe(!0)}play(e){if(this._hasBeenPlayed=!0,!e){if(!this._defaultClip)return;e=this._defaultClip.name}this.crossFade(e,0)}crossFade(e,t=.3){this._hasBeenPlayed=!0;const n=this._nameToState[e];n&&this.doPlayOrCrossFade(n,t)}pause(){this._crossFade.pause()}resume(){this._crossFade.resume()}stop(){this._crossFade.stop()}getState(e){const t=this._nameToState[e];return t&&!t.curveLoaded&&t.initialize(this.node),t||null}createState(e,t){return t=t||e.name,this.removeState(t),this._doCreateState(e,t)}removeState(e){const t=this._nameToState[e];t&&(t.allowLastFrameEvent(!1),t.stop(),delete this._nameToState[e])}addClip(e,t){return te(this._clips,e)||this._clips.push(e),this.createState(e,t)}removeClip(e,t){let n;for(const t in this._nameToState){const i=this._nameToState[t];if(i.clip===e){n=i;break}}if(e===this._defaultClip){if(!t)return void D(3902);this._defaultClip=null}if(n&&n.isPlaying){if(!t)return void D(3903);n.stop()}this._clips=this._clips.filter((t=>t!==e)),n&&delete this._nameToState[n.name]}on(e,t,n,i){const s=super.on(e,t,n,i);return e===bZ.LASTFRAME&&this._syncAllowLastFrameEvent(),s}once(e,t,n){const i=super.once(e,t,n);return e===bZ.LASTFRAME&&this._syncAllowLastFrameEvent(),i}off(e,t,n){super.off(e,t,n),e===bZ.LASTFRAME&&this._syncDisallowLastFrameEvent()}_createState(e,t){return new AZ(e,t)}_doCreateState(e,t){const n=this._createState(e,t);return n._setEventTarget(this),n.allowLastFrameEvent(this.hasEventListener(bZ.LASTFRAME)),this.node&&n.initialize(this.node),this._nameToState[n.name]=n,n}doPlayOrCrossFade(e,t){this._crossFade.play(),this._crossFade.crossFade(e,t)}_removeStateOfAutomaticClip(e){for(const t in this._nameToState){const n=this._nameToState[t];T2(e,n.clip)&&(n.stop(),delete this._nameToState[t])}}_syncAllowLastFrameEvent(){if(this.hasEventListener(bZ.LASTFRAME))for(const e in this._nameToState)this._nameToState[e].allowLastFrameEvent(!0)}_syncDisallowLastFrameEvent(){if(!this.hasEventListener(bZ.LASTFRAME))for(const e in this._nameToState)this._nameToState[e].allowLastFrameEvent(!1)}},v2.EventType=bZ,ac((p2=y2).prototype,"clips",[a2,c2],Object.getOwnPropertyDescriptor(p2.prototype,"clips"),p2.prototype),ac(p2.prototype,"defaultClip",[l2,h2],Object.getOwnPropertyDescriptor(p2.prototype,"defaultClip"),p2.prototype),f2=ac(p2.prototype,"playOnLoad",[Tc,u2],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),m2=ac(p2.prototype,"_clips",[_2],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),g2=ac(p2.prototype,"_defaultClip",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),d2=p2))||d2)||d2)||d2)||d2)||d2));function T2(e,t){return e===t||!!e&&!!t&&e._uuid===t._uuid&&e._uuid}u.Animation=E2,u.AnimationComponent=E2,ke.setClassAlias(E2,"cc.AnimationComponent"),u.easing=z_,function(e){e.PLAYED="play",e.PAUSED="pause",e.STOPPED="stop",e.SEEKED="seeked",e.ENDED="ended",e.INTERRUPTION_BEGIN="interruptionBegin",e.INTERRUPTION_END="interruptionEnd",e.USER_GESTURE="on_gesture"}(x2||(x2={})),function(e){e[e.DOM_AUDIO=0]="DOM_AUDIO",e[e.WEB_AUDIO=1]="WEB_AUDIO",e[e.MINIGAME_AUDIO=2]="MINIGAME_AUDIO",e[e.NATIVE_AUDIO=3]="NATIVE_AUDIO",e[e.UNKNOWN_AUDIO=4]="UNKNOWN_AUDIO"}(S2||(S2={})),function(e){e[e.INIT=0]="INIT",e[e.PLAYING=1]="PLAYING",e[e.PAUSED=2]="PAUSED",e[e.STOPPED=3]="STOPPED",e[e.INTERRUPTED=4]="INTERRUPTED"}(C2||(C2={}));let b2=0;function A2(e,t){t.invoking||(t.invoking=!0,t.func.call(e,...t.args).then((()=>{t.invoking=!1,e._operationQueue.shift(),e._eventTarget.emit(t.id.toString());const n=e._operationQueue[0];n&&A2(e,n)})).catch((()=>{})))}function P2(e,t,n){const i=n.value;n.value=function(...e){return new Promise((t=>{const n=b2++,s=this;s._operationQueue.push({id:n,func:i,args:e,invoking:!1}),s._eventTarget.once(n.toString(),t),A2(s,s._operationQueue[0])}))}}var w2,I2,R2;const D2={},O2=jsb.AudioEngine,N2=-1;class M2{get onPlay(){return this._onPlayCb}set onPlay(e){this._onPlayCb=e}get onEnd(){return this._onEndCb}set onEnd(e){this._onEndCb=e}constructor(e,t){this._id=N2,this._url=void 0,this._volume=void 0,this._onPlayCb=void 0,this._onEndCb=void 0,this._url=e,this._volume=t}play(){var e;this._id=jsb.AudioEngine.play2d(this._url,!1,this._volume),jsb.AudioEngine.setFinishCallback(this._id,(()=>{var e;null===(e=this.onEnd)||void 0===e||e.call(this)})),null===(e=this.onPlay)||void 0===e||e.call(this)}stop(){this._id!==N2&&jsb.AudioEngine.stop(this._id)}}let L2=(R2=I2=class e{constructor(e){this._url=void 0,this._id=N2,this._state=C2.INIT,this._eventTarget=new Xl,this._operationQueue=[],this._cachedState={duration:1,loop:!1,currentTime:0,volume:1},this._url=e,nh.on("hide",this._onHide,this),nh.on("show",this._onShow,this)}destroy(){nh.on("hide",this._onHide,this),nh.on("show",this._onShow,this),--D2[this._url]<=0&&O2.uncache(this._url)}_onHide(){this._state===C2.PLAYING&&this.pause().then((()=>{this._state=C2.INTERRUPTED,this._eventTarget.emit(x2.INTERRUPTION_BEGIN)})).catch((()=>{}))}_onShow(){this._state===C2.INTERRUPTED&&this.play().then((()=>{this._eventTarget.emit(x2.INTERRUPTION_END)})).catch((()=>{}))}static load(t){return new Promise(((n,i)=>{e.loadNative(t).then((t=>{n(new e(t))})).catch((e=>i(e)))}))}static loadNative(e){return new Promise(((t,n)=>{nh.platform===Jl.WIN32?t(e):O2.preload(e,(i=>{i?t(e):n(new Error("load audio failed"))}))}))}static loadOneShotAudio(t,n){return new Promise(((i,s)=>{e.loadNative(t).then((e=>{i(new M2(e,n))})).catch(s)}))}get _isValid(){return this._id!==N2}get src(){return this._url}get type(){return S2.NATIVE_AUDIO}get state(){return this._state}get loop(){return this._isValid?O2.isLoop(this._id):this._cachedState.loop}set loop(e){this._isValid&&O2.setLoop(this._id,e),this._cachedState.loop=e}get volume(){return this._isValid?O2.getVolume(this._id):this._cachedState.volume}set volume(e){e=Yt(e),this._isValid&&O2.setVolume(this._id,e),this._cachedState.volume=e}get duration(){return this._isValid?O2.getDuration(this._id):this._cachedState.duration}get currentTime(){return this._isValid?O2.getCurrentTime(this._id):this._cachedState.currentTime}seek(e){return new Promise((t=>(this._isValid&&O2.setCurrentTime(this._id,e),this._cachedState.currentTime=e,t())))}play(){return new Promise((e=>{this._isValid?this._state===C2.PAUSED||this._state===C2.INTERRUPTED?O2.resume(this._id):this._state===C2.PLAYING&&(O2.pause(this._id),O2.setCurrentTime(this._id,0),O2.resume(this._id)):(this._id=O2.play2d(this._url,this._cachedState.loop,this._cachedState.volume),this._isValid&&(0!==this._cachedState.currentTime&&(O2.setCurrentTime(this._id,this._cachedState.currentTime),this._cachedState.currentTime=0),O2.setFinishCallback(this._id,(()=>{this._cachedState.currentTime=0,this._id=N2,this._state=C2.INIT,this._eventTarget.emit(x2.ENDED)})))),this._state=C2.PLAYING,e()}))}pause(){return new Promise((e=>{this._isValid&&O2.pause(this._id),this._state=C2.PAUSED,e()}))}stop(){return new Promise((e=>{this._isValid&&O2.stop(this._id),this._state=C2.STOPPED,this._id=N2,this._cachedState.currentTime=0,e()}))}onInterruptionBegin(e){this._eventTarget.on(x2.INTERRUPTION_BEGIN,e)}offInterruptionBegin(e){this._eventTarget.off(x2.INTERRUPTION_BEGIN,e)}onInterruptionEnd(e){this._eventTarget.on(x2.INTERRUPTION_END,e)}offInterruptionEnd(e){this._eventTarget.off(x2.INTERRUPTION_END,e)}onEnded(e){this._eventTarget.on(x2.ENDED,e)}offEnded(e){this._eventTarget.off(x2.ENDED,e)}},I2.maxAudioChannel=O2.getMaxAudioInstance(),ac((w2=R2).prototype,"seek",[P2],Object.getOwnPropertyDescriptor(w2.prototype,"seek"),w2.prototype),ac(w2.prototype,"play",[P2],Object.getOwnPropertyDescriptor(w2.prototype,"play"),w2.prototype),ac(w2.prototype,"pause",[P2],Object.getOwnPropertyDescriptor(w2.prototype,"pause"),w2.prototype),ac(w2.prototype,"stop",[P2],Object.getOwnPropertyDescriptor(w2.prototype,"stop"),w2.prototype),w2);var B2,F2,z2,U2,G2;u.AudioPlayer=L2;let V2=e("AudioClip",mc("cc.AudioClip")((G2=U2=class extends xh{constructor(...e){super(...e),rc(this,"_duration",z2,this),this._loadMode=S2.UNKNOWN_AUDIO,this._meta=null,this._player=null}destroy(){var e;const t=super.destroy();return null===(e=this._player)||void 0===e||e.destroy(),this._player=null,this._meta&&(this._meta.player=null),t}set _nativeAsset(e){this._meta=e,e?(this._loadMode=e.type,this._player=e.player):(this._meta=null,this._loadMode=S2.UNKNOWN_AUDIO,this._duration=0)}get _nativeAsset(){return this._meta}get _nativeDep(){return{uuid:this._uuid,audioLoadMode:this.loadMode,ext:this._native,__isNative__:!0}}get loadMode(){return this._loadMode}validate(){return!!this._meta}getDuration(){return this._duration?this._duration:this._meta?this._meta.duration:0}get state(){return this._player?this._player.state:C2.INIT}getCurrentTime(){return this._player?this._player.currentTime:0}getVolume(){return this._player?this._player.volume:0}getLoop(){return!!this._player&&this._player.loop}setCurrentTime(e){var t;null===(t=this._player)||void 0===t||t.seek(e).catch((()=>{}))}setVolume(e){this._player&&(this._player.volume=e)}setLoop(e){this._player&&(this._player.loop=e)}play(){var e;null===(e=this._player)||void 0===e||e.play().catch((()=>{}))}pause(){var e;null===(e=this._player)||void 0===e||e.pause().catch((()=>{}))}stop(){var e;null===(e=this._player)||void 0===e||e.stop().catch((()=>{}))}playOneShot(e=1){this._nativeAsset&&L2.loadOneShotAudio(this._nativeAsset.url,e).then((e=>{e.play()})).catch((()=>{}))}},U2.AudioType=S2,z2=ac((F2=G2).prototype,"_duration",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ac(F2.prototype,"_nativeDep",[el],Object.getOwnPropertyDescriptor(F2.prototype,"_nativeDep"),F2.prototype),B2=F2))||B2);function H2(e,t,n){L2.load(e,{audioLoadMode:t.audioLoadMode}).then((t=>{const i={player:t,url:e,duration:t.duration,type:t.type};n(null,i)})).catch((e=>{n(e)}))}function k2(e,t,n,i){const s=new V2;s._nativeUrl=e,s._nativeAsset=t,s._duration=t.duration,i(null,s)}u.AudioClip=V2,hI.register({".mp3":H2,".ogg":H2,".wav":H2,".m4a":H2}),gI.register({".mp3":k2,".ogg":k2,".wav":k2,".m4a":k2});const j2=new class{constructor(){this._oneShotAudioInfoList=[],this._audioPlayerInfoList=[]}_findIndex(e,t){return e.findIndex((e=>e.audio===t))}_tryAddPlaying(e,t){const n=this._findIndex(e,t);return n>-1?(e[n].playTime=performance.now(),!1):(e.push({audio:t,playTime:performance.now()}),!0)}addPlaying(e){if(e instanceof L2){if(this._tryAddPlaying(this._audioPlayerInfoList,e))return}else this._tryAddPlaying(this._oneShotAudioInfoList,e)}_tryRemovePlaying(e,t){const n=this._findIndex(e,t);return-1!==n&&(J(e,n),!0)}removePlaying(e){if(e instanceof L2){if(this._tryRemovePlaying(this._audioPlayerInfoList,e))return}else this._tryRemovePlaying(this._oneShotAudioInfoList,e)}discardOnePlayingIfNeeded(){if(this._audioPlayerInfoList.length+this._oneShotAudioInfoList.length<L2.maxAudioChannel)return;let e;this._oneShotAudioInfoList.length>0?this._oneShotAudioInfoList.forEach((t=>{(!e||t.playTime<e.playTime)&&(e=t)})):this._audioPlayerInfoList.forEach((t=>{(!e||t.playTime<e.playTime)&&(e=t)})),e&&(e.audio.stop(),this.removePlaying(e.audio))}};var W2,q2,X2,Y2,K2,$2,Q2,J2,Z2,e4,t4,n4,i4,s4,o4,r4,a4,c4,l4;!function(e){e.STARTED="started",e.ENDED="ended"}(l4||(l4={}));let h4,u4=function(t){return e({AudioSource:t,AudioSourceComponent:t}),t}((W2=mc("cc.AudioSource"),q2=Mc(),X2=Rc(),Y2=Zc(V2),K2=Zc(V2),$2=Uc(),Q2=Uc(),J2=Uc(),Z2=Gc(),e4=Uc(),W2(t4=q2(t4=X2((c4=a4=class e extends Gh{constructor(...e){super(...e),rc(this,"_clip",i4,this),this._player=null,rc(this,"_loop",s4,this),rc(this,"_playOnAwake",o4,this),rc(this,"_volume",r4,this),this._cachedCurrentTime=0,this._operationsBeforeLoading=[],this._isLoaded=!1,this._lastSetClip=null}static get maxAudioChannel(){return L2.maxAudioChannel}set clip(e){e!==this._clip&&(this._clip=e,this._syncPlayer())}get clip(){return this._clip}_syncPlayer(){const e=this._clip;this._isLoaded=!1,this._lastSetClip!==e&&(e?e._nativeAsset?(this._lastSetClip=e,L2.load(e._nativeAsset.url,{audioLoadMode:e.loadMode}).then((t=>{this._lastSetClip===e?(this._isLoaded=!0,this._player&&(j2.removePlaying(this._player),this._player.offEnded(),this._player.offInterruptionBegin(),this._player.offInterruptionEnd(),this._player.destroy()),this._player=t,t.onEnded((()=>{j2.removePlaying(t),this.node.emit(l4.ENDED,this)})),t.onInterruptionBegin((()=>{j2.removePlaying(t)})),t.onInterruptionEnd((()=>{j2.addPlaying(t)})),this._syncStates()):t.destroy()})).catch((()=>{}))):console.error("Invalid audio clip"):this._lastSetClip=null)}set loop(e){this._loop=e,this._player&&(this._player.loop=e)}get loop(){return this._loop}set playOnAwake(e){this._playOnAwake=e}get playOnAwake(){return this._playOnAwake}set volume(e){Number.isNaN(e)?console.warn("illegal audio volume!"):(e=Xt(e,0,1),this._player?(this._player.volume=e,this._volume=this._player.volume):this._volume=e)}get volume(){return this._volume}onLoad(){this._syncPlayer()}onEnable(){this._playOnAwake&&!this.playing&&this.play()}onDisable(){const e=this._getRootNode();(null==e?void 0:e._persistNode)||this.pause()}onDestroy(){var e;this.stop(),null===(e=this._player)||void 0===e||e.destroy(),this._player=null}_getRootNode(){var e,t;let n=this.node,i=null===(e=n)||void 0===e||null===(t=e.parent)||void 0===t?void 0:t.parent;for(;i;){var s,o,r;n=null===(s=n)||void 0===s?void 0:s.parent,i=null===(o=n)||void 0===o||null===(r=o.parent)||void 0===r?void 0:r.parent}return n}play(){var e,t;this._isLoaded?(j2.discardOnePlayingIfNeeded(),this.state===C2.PLAYING&&(null===(t=this._player)||void 0===t||t.stop().catch((()=>{}))),null===(e=this._player)||void 0===e||e.play().then((()=>{j2.addPlaying(this._player),this.node.emit(l4.STARTED,this)})).catch((()=>{}))):this._operationsBeforeLoading.push("play")}pause(){var e;this._isLoaded?null===(e=this._player)||void 0===e||e.pause().then((()=>{j2.removePlaying(this._player)})).catch((()=>{})):this._operationsBeforeLoading.push("pause")}stop(){var e;this._isLoaded?null===(e=this._player)||void 0===e||e.stop().then((()=>{j2.removePlaying(this._player)})).catch((()=>{})):this._operationsBeforeLoading.push("stop")}playOneShot(e,t=1){e._nativeAsset?L2.loadOneShotAudio(e._nativeAsset.url,this._volume*t,{audioLoadMode:e.loadMode}).then((e=>{j2.discardOnePlayingIfNeeded(),e.onPlay=()=>{j2.addPlaying(e)},e.onEnd=()=>{j2.removePlaying(e)},e.play()})).catch((()=>{})):console.error("Invalid audio clip")}_syncStates(){this._player&&this._player.seek(this._cachedCurrentTime).then((()=>{this._player&&(this._player.loop=this._loop,this._player.volume=this._volume,this._operationsBeforeLoading.forEach((e=>{var t;null===(t=this[e])||void 0===t||t.call(this)})),this._operationsBeforeLoading.length=0)})).catch((()=>{}))}set currentTime(e){var t;Number.isNaN(e)?console.warn("illegal audio time!"):(e=Xt(e,0,this.duration),this._cachedCurrentTime=e,null===(t=this._player)||void 0===t||t.seek(this._cachedCurrentTime).catch((()=>{})))}get currentTime(){return this._player?this._player.currentTime:this._cachedCurrentTime}get duration(){var e,t;return null!==(e=null===(t=this._clip)||void 0===t?void 0:t.getDuration())&&void 0!==e?e:this._player?this._player.duration:0}get state(){return this._player?this._player.state:C2.INIT}get playing(){return this.state===e.AudioState.PLAYING}},a4.AudioState=C2,a4.EventType=l4,i4=ac((n4=c4).prototype,"_clip",[Y2],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),s4=ac(n4.prototype,"_loop",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),o4=ac(n4.prototype,"_playOnAwake",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),r4=ac(n4.prototype,"_volume",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),ac(n4.prototype,"clip",[K2,$2],Object.getOwnPropertyDescriptor(n4.prototype,"clip"),n4.prototype),ac(n4.prototype,"loop",[Q2],Object.getOwnPropertyDescriptor(n4.prototype,"loop"),n4.prototype),ac(n4.prototype,"playOnAwake",[J2],Object.getOwnPropertyDescriptor(n4.prototype,"playOnAwake"),n4.prototype),ac(n4.prototype,"volume",[Z2,e4],Object.getOwnPropertyDescriptor(n4.prototype,"volume"),n4.prototype),t4=n4))||t4)||t4)||t4));V(V2,"AudioClip",[{name:"PlayingState",newName:"AudioState",target:u4,targetName:"AudioSource"}]),k(V2.prototype,"AudioClip.prototype",["state","play","pause","stop","playOneShot","setCurrentTime","setVolume","setLoop","getCurrentTime","getVolume","getLoop"].map((e=>({name:e,suggest:`please use AudioSource.prototype.${e} instead`})))),u.AudioSourceComponent=u4,ke.setClassAlias(u4,"cc.AudioSourceComponent"),u.log=x,u.warn=S,u.error=C,u.assert=E,u._throw=A,u.logID=I,u.warnID=D,u.errorID=N,u.assertID=L,u.debug=G,u.path={join:rh,extname:ah,mainFileName:ch,basename:lh,dirname:hh,changeExtname:uh,changeBasename:_h,_normalize:dh,stripSep:ph,get sep(){return fh()}};class _4{constructor(e){this.poolHandlerComp=void 0,this._pool=void 0,this.poolHandlerComp=e,this._pool=[]}size(){return this._pool.length}clear(){const e=this._pool.length;for(let t=0;t<e;++t)this._pool[t].destroy();this._pool.length=0}put(e){if(e&&-1===this._pool.indexOf(e)){e.removeFromParent();const t=this.poolHandlerComp?e.getComponent(this.poolHandlerComp):null;t&&t.unuse&&t.unuse(),this._pool.push(e)}}get(...e){const t=this._pool.length-1;if(t<0)return null;{const e=this._pool[t];this._pool.length=t;const n=this.poolHandlerComp?e.getComponent(this.poolHandlerComp):null;return n&&n.reuse&&n.reuse(arguments),e}}}e("NodePool",_4),u.NodePool=_4,u.renderer=ty;class d4 extends ro{constructor(...e){super(...e),this._gpuDescriptorSet=null}get gpuDescriptorSet(){return this._gpuDescriptorSet}initialize(e){this._layout=e.layout;const{bindings:t,descriptorIndices:n,descriptorCount:i}=e.layout.gpuDescriptorSetLayout;this._buffers=Array(i).fill(null),this._textures=Array(i).fill(null),this._samplers=Array(i).fill(null);const s=[];this._gpuDescriptorSet={gpuDescriptors:s,descriptorIndices:n};for(let e=0;e<t.length;++e){const n=t[e];for(let e=0;e<n.count;e++)s.push({type:n.descriptorType,gpuBuffer:null,gpuTexture:null,gpuSampler:null})}}destroy(){this._layout=null,this._gpuDescriptorSet=null}update(){if(this._isDirty&&this._gpuDescriptorSet){const e=this._gpuDescriptorSet.gpuDescriptors;for(let t=0;t<e.length;++t)if(e[t].type&ks){const n=this._buffers[t];n&&(e[t].gpuBuffer=n.gpuBuffer||n.gpuBufferView)}else e[t].type&js&&(this._textures[t]&&(e[t].gpuTexture=this._textures[t].gpuTexture),this._samplers[t]&&(e[t].gpuSampler=this._samplers[t].gpuSampler));this._isDirty=!1}}}!function(e){e[e.RGBA16F_EXT=34842]="RGBA16F_EXT",e[e.RGB16F_EXT=34843]="RGB16F_EXT",e[e.RGBA32F_EXT=34836]="RGBA32F_EXT",e[e.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT=33297]="FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT",e[e.UNSIGNED_NORMALIZED_EXT=35863]="UNSIGNED_NORMALIZED_EXT",e[e.UNSIGNED_INT_24_8_WEBGL=34042]="UNSIGNED_INT_24_8_WEBGL",e[e.HALF_FLOAT_OES=36193]="HALF_FLOAT_OES",e[e.SRGB_EXT=35904]="SRGB_EXT",e[e.SRGB_ALPHA_EXT=35906]="SRGB_ALPHA_EXT",e[e.SRGB8_ALPHA8_EXT=35907]="SRGB8_ALPHA8_EXT",e[e.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",e[e.COMPRESSED_SRGB_S3TC_DXT1_EXT=35916]="COMPRESSED_SRGB_S3TC_DXT1_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT=35917]="COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT=35918]="COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT=35919]="COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT",e[e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",e[e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG=35841]="COMPRESSED_RGB_PVRTC_2BPPV1_IMG",e[e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",e[e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG=35843]="COMPRESSED_RGBA_PVRTC_2BPPV1_IMG",e[e.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",e[e.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC",e[e.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC",e[e.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC",e[e.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC",e[e.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",e[e.COMPRESSED_SRGB8_ETC2=37493]="COMPRESSED_SRGB8_ETC2",e[e.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37494]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37495]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC",e[e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37497]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC",e[e.COMPRESSED_RGBA_ASTC_4x4_KHR=37808]="COMPRESSED_RGBA_ASTC_4x4_KHR",e[e.COMPRESSED_RGBA_ASTC_5x4_KHR=37809]="COMPRESSED_RGBA_ASTC_5x4_KHR",e[e.COMPRESSED_RGBA_ASTC_5x5_KHR=37810]="COMPRESSED_RGBA_ASTC_5x5_KHR",e[e.COMPRESSED_RGBA_ASTC_6x5_KHR=37811]="COMPRESSED_RGBA_ASTC_6x5_KHR",e[e.COMPRESSED_RGBA_ASTC_6x6_KHR=37812]="COMPRESSED_RGBA_ASTC_6x6_KHR",e[e.COMPRESSED_RGBA_ASTC_8x5_KHR=37813]="COMPRESSED_RGBA_ASTC_8x5_KHR",e[e.COMPRESSED_RGBA_ASTC_8x6_KHR=37814]="COMPRESSED_RGBA_ASTC_8x6_KHR",e[e.COMPRESSED_RGBA_ASTC_8x8_KHR=37815]="COMPRESSED_RGBA_ASTC_8x8_KHR",e[e.COMPRESSED_RGBA_ASTC_10x5_KHR=37816]="COMPRESSED_RGBA_ASTC_10x5_KHR",e[e.COMPRESSED_RGBA_ASTC_10x6_KHR=37817]="COMPRESSED_RGBA_ASTC_10x6_KHR",e[e.COMPRESSED_RGBA_ASTC_10x8_KHR=37818]="COMPRESSED_RGBA_ASTC_10x8_KHR",e[e.COMPRESSED_RGBA_ASTC_10x10_KHR=37819]="COMPRESSED_RGBA_ASTC_10x10_KHR",e[e.COMPRESSED_RGBA_ASTC_12x10_KHR=37820]="COMPRESSED_RGBA_ASTC_12x10_KHR",e[e.COMPRESSED_RGBA_ASTC_12x12_KHR=37821]="COMPRESSED_RGBA_ASTC_12x12_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR=37840]="COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR=37841]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR=37842]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR=37843]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR=37844]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR=37845]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR=37846]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR=37847]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR=37848]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR=37849]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR=37850]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR=37851]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR=37852]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR=37853]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR"}(h4||(h4={}));class p4{static get instance(){return p4._instance}static setInstance(e){p4._instance=e}}function f4(e,t){switch(e){case ti.R8:return t.UNSIGNED_BYTE;case ti.R8SN:return t.BYTE;case ti.R8UI:return t.UNSIGNED_BYTE;case ti.R8I:return t.BYTE;case ti.R16F:return h4.HALF_FLOAT_OES;case ti.R16UI:return t.UNSIGNED_SHORT;case ti.R16I:return t.SHORT;case ti.R32F:return t.FLOAT;case ti.R32UI:return t.UNSIGNED_INT;case ti.R32I:return t.INT;case ti.RG8:return t.UNSIGNED_BYTE;case ti.RG8SN:return t.BYTE;case ti.RG8UI:return t.UNSIGNED_BYTE;case ti.RG8I:return t.BYTE;case ti.RG16F:return h4.HALF_FLOAT_OES;case ti.RG16UI:return t.UNSIGNED_SHORT;case ti.RG16I:return t.SHORT;case ti.RG32F:return t.FLOAT;case ti.RG32UI:return t.UNSIGNED_INT;case ti.RG32I:return t.INT;case ti.RGB8:case ti.SRGB8:return t.UNSIGNED_BYTE;case ti.RGB8SN:return t.BYTE;case ti.RGB8UI:return t.UNSIGNED_BYTE;case ti.RGB8I:return t.BYTE;case ti.RGB16F:return h4.HALF_FLOAT_OES;case ti.RGB16UI:return t.UNSIGNED_SHORT;case ti.RGB16I:return t.SHORT;case ti.RGB32F:return t.FLOAT;case ti.RGB32UI:return t.UNSIGNED_INT;case ti.RGB32I:return t.INT;case ti.BGRA8:case ti.RGBA8:case ti.SRGB8_A8:return t.UNSIGNED_BYTE;case ti.RGBA8SN:return t.BYTE;case ti.RGBA8UI:return t.UNSIGNED_BYTE;case ti.RGBA8I:return t.BYTE;case ti.RGBA16F:return h4.HALF_FLOAT_OES;case ti.RGBA16UI:return t.UNSIGNED_SHORT;case ti.RGBA16I:return t.SHORT;case ti.RGBA32F:return t.FLOAT;case ti.RGBA32UI:return t.UNSIGNED_INT;case ti.RGBA32I:return t.INT;case ti.R5G6B5:return t.UNSIGNED_SHORT_5_6_5;case ti.R11G11B10F:return t.FLOAT;case ti.RGB5A1:return t.UNSIGNED_SHORT_5_5_5_1;case ti.RGBA4:return t.UNSIGNED_SHORT_4_4_4_4;case ti.RGB10A2:return t.UNSIGNED_BYTE;case ti.RGB10A2UI:return t.UNSIGNED_INT;case ti.RGB9E5:return t.UNSIGNED_BYTE;case ti.DEPTH:return t.UNSIGNED_INT;case ti.DEPTH_STENCIL:return h4.UNSIGNED_INT_24_8_WEBGL;case ti.BC1:case ti.BC1_SRGB:case ti.BC2:case ti.BC2_SRGB:case ti.BC3:case ti.BC3_SRGB:case ti.BC4:return t.UNSIGNED_BYTE;case ti.BC4_SNORM:return t.BYTE;case ti.BC5:return t.UNSIGNED_BYTE;case ti.BC5_SNORM:return t.BYTE;case ti.BC6H_SF16:case ti.BC6H_UF16:return t.FLOAT;case ti.BC7:case ti.BC7_SRGB:case ti.ETC_RGB8:case ti.ETC2_RGB8:case ti.ETC2_SRGB8:case ti.ETC2_RGB8_A1:case ti.ETC2_SRGB8_A1:case ti.EAC_R11:return t.UNSIGNED_BYTE;case ti.EAC_R11SN:return t.BYTE;case ti.EAC_RG11:return t.UNSIGNED_BYTE;case ti.EAC_RG11SN:return t.BYTE;case ti.PVRTC_RGB2:case ti.PVRTC_RGBA2:case ti.PVRTC_RGB4:case ti.PVRTC_RGBA4:case ti.PVRTC2_2BPP:case ti.PVRTC2_4BPP:return t.UNSIGNED_BYTE;case ti.ASTC_RGBA_4X4:case ti.ASTC_RGBA_5X4:case ti.ASTC_RGBA_5X5:case ti.ASTC_RGBA_6X5:case ti.ASTC_RGBA_6X6:case ti.ASTC_RGBA_8X5:case ti.ASTC_RGBA_8X6:case ti.ASTC_RGBA_8X8:case ti.ASTC_RGBA_10X5:case ti.ASTC_RGBA_10X6:case ti.ASTC_RGBA_10X8:case ti.ASTC_RGBA_10X10:case ti.ASTC_RGBA_12X10:case ti.ASTC_RGBA_12X12:case ti.ASTC_SRGBA_4X4:case ti.ASTC_SRGBA_5X4:case ti.ASTC_SRGBA_5X5:case ti.ASTC_SRGBA_6X5:case ti.ASTC_SRGBA_6X6:case ti.ASTC_SRGBA_8X5:case ti.ASTC_SRGBA_8X6:case ti.ASTC_SRGBA_8X8:case ti.ASTC_SRGBA_10X5:case ti.ASTC_SRGBA_10X6:case ti.ASTC_SRGBA_10X8:case ti.ASTC_SRGBA_10X10:case ti.ASTC_SRGBA_12X10:case ti.ASTC_SRGBA_12X12:default:return t.UNSIGNED_BYTE}}function m4(e,t){switch(e){case ii.BOOL:return t.BOOL;case ii.BOOL2:return t.BOOL_VEC2;case ii.BOOL3:return t.BOOL_VEC3;case ii.BOOL4:return t.BOOL_VEC4;case ii.INT:return t.INT;case ii.INT2:return t.INT_VEC2;case ii.INT3:return t.INT_VEC3;case ii.INT4:return t.INT_VEC4;case ii.UINT:return t.UNSIGNED_INT;case ii.FLOAT:return t.FLOAT;case ii.FLOAT2:return t.FLOAT_VEC2;case ii.FLOAT3:return t.FLOAT_VEC3;case ii.FLOAT4:return t.FLOAT_VEC4;case ii.MAT2:return t.FLOAT_MAT2;case ii.MAT3:return t.FLOAT_MAT3;case ii.MAT4:return t.FLOAT_MAT4;case ii.SAMPLER2D:return t.SAMPLER_2D;case ii.SAMPLER_CUBE:return t.SAMPLER_CUBE;default:return console.error("Unsupported GLType, convert to GL type failed."),ii.UNKNOWN}}function g4(e){switch(e){case ii.BOOL:case ii.BOOL2:case ii.BOOL3:case ii.BOOL4:case ii.INT:case ii.INT2:case ii.INT3:case ii.INT4:case ii.UINT:return Int32Array;case ii.FLOAT:case ii.FLOAT2:case ii.FLOAT3:case ii.FLOAT4:case ii.MAT2:case ii.MAT3:case ii.MAT4:return Float32Array;default:return console.error("Unsupported GLType, convert to TypedArrayConstructor failed."),Float32Array}}function v4(e,t){switch(e){case t.BOOL:return ii.BOOL;case t.BOOL_VEC2:return ii.BOOL2;case t.BOOL_VEC3:return ii.BOOL3;case t.BOOL_VEC4:return ii.BOOL4;case t.INT:return ii.INT;case t.INT_VEC2:return ii.INT2;case t.INT_VEC3:return ii.INT3;case t.INT_VEC4:return ii.INT4;case t.UNSIGNED_INT:return ii.UINT;case t.FLOAT:return ii.FLOAT;case t.FLOAT_VEC2:return ii.FLOAT2;case t.FLOAT_VEC3:return ii.FLOAT3;case t.FLOAT_VEC4:return ii.FLOAT4;case t.FLOAT_MAT2:return ii.MAT2;case t.FLOAT_MAT3:return ii.MAT3;case t.FLOAT_MAT4:return ii.MAT4;case t.SAMPLER_2D:return ii.SAMPLER2D;case t.SAMPLER_CUBE:return ii.SAMPLER_CUBE;default:return console.error("Unsupported GLType, convert to Type failed."),ii.UNKNOWN}}function y4(e,t){switch(e){case t.BOOL:return 4;case t.BOOL_VEC2:return 8;case t.BOOL_VEC3:return 12;case t.BOOL_VEC4:return 16;case t.INT:return 4;case t.INT_VEC2:return 8;case t.INT_VEC3:return 12;case t.INT_VEC4:return 16;case t.UNSIGNED_INT:case t.FLOAT:return 4;case t.FLOAT_VEC2:return 8;case t.FLOAT_VEC3:return 12;case t.FLOAT_VEC4:case t.FLOAT_MAT2:return 16;case t.FLOAT_MAT3:return 36;case t.FLOAT_MAT4:return 64;case t.SAMPLER_2D:case t.SAMPLER_CUBE:return 4;default:return console.error("Unsupported GLType, get type failed."),0}}function x4(e,t){switch(e){case t.FLOAT_MAT2:return 2;case t.FLOAT_MAT3:return 3;case t.FLOAT_MAT4:return 4;default:return 1}}p4._instance=null;const S4=[512,513,514,515,516,517,518,519],C4=[0,7680,7681,7682,7683,5386,34055,34056],E4=[32774,32778,32779,32775,32776],T4=[0,1,770,772,771,773,768,774,769,775,776,32769,32770,32771,32772];let b4;!function(e){e[e.BEGIN_RENDER_PASS=0]="BEGIN_RENDER_PASS",e[e.END_RENDER_PASS=1]="END_RENDER_PASS",e[e.BIND_STATES=2]="BIND_STATES",e[e.DRAW=3]="DRAW",e[e.UPDATE_BUFFER=4]="UPDATE_BUFFER",e[e.COPY_BUFFER_TO_TEXTURE=5]="COPY_BUFFER_TO_TEXTURE",e[e.COUNT=6]="COUNT"}(b4||(b4={}));class A4{constructor(e){this.cmdType=void 0,this.refCount=0,this.cmdType=e}}class P4 extends A4{constructor(){super(b4.BEGIN_RENDER_PASS),this.gpuRenderPass=null,this.gpuFramebuffer=null,this.renderArea=new Hi,this.clearFlag=Fi.NONE,this.clearColors=[],this.clearDepth=1,this.clearStencil=0}clear(){this.gpuFramebuffer=null,this.clearColors.length=0}}class w4 extends A4{constructor(){super(b4.BIND_STATES),this.gpuPipelineState=null,this.gpuInputAssembler=null,this.gpuDescriptorSets=[],this.dynamicOffsets=[],this.dynamicStates=new Gs}clear(){this.gpuPipelineState=null,this.gpuDescriptorSets.length=0,this.gpuInputAssembler=null,this.dynamicOffsets.length=0}}class I4 extends A4{constructor(){super(b4.DRAW),this.drawInfo=new is}clear(){}}class R4 extends A4{constructor(){super(b4.UPDATE_BUFFER),this.gpuBuffer=null,this.buffer=null,this.offset=0,this.size=0}clear(){this.gpuBuffer=null,this.buffer=null}}class D4 extends A4{constructor(){super(b4.COPY_BUFFER_TO_TEXTURE),this.gpuTexture=null,this.buffers=[],this.regions=[]}clear(){this.gpuTexture=null,this.buffers.length=0,this.regions.length=0}}class O4{constructor(){this.cmds=new zl(1),this.beginRenderPassCmds=new zl(1),this.bindStatesCmds=new zl(1),this.drawCmds=new zl(1),this.updateBufferCmds=new zl(1),this.copyBufferToTextureCmds=new zl(1)}clearCmds(e){this.beginRenderPassCmds.length&&(e.beginRenderPassCmdPool.freeCmds(this.beginRenderPassCmds),this.beginRenderPassCmds.clear()),this.bindStatesCmds.length&&(e.bindStatesCmdPool.freeCmds(this.bindStatesCmds),this.bindStatesCmds.clear()),this.drawCmds.length&&(e.drawCmdPool.freeCmds(this.drawCmds),this.drawCmds.clear()),this.updateBufferCmds.length&&(e.updateBufferCmdPool.freeCmds(this.updateBufferCmds),this.updateBufferCmds.clear()),this.copyBufferToTextureCmds.length&&(e.copyBufferToTextureCmdPool.freeCmds(this.copyBufferToTextureCmds),this.copyBufferToTextureCmds.clear()),this.cmds.clear()}}function N4(e,t,n,i,s){if(t.usage&si.UNIFORM)ArrayBuffer.isView(n)?t.vf32.set(n,i/Float32Array.BYTES_PER_ELEMENT):t.vf32.set(new Float32Array(n),i/Float32Array.BYTES_PER_ELEMENT);else if(t.usage&si.INDIRECT){t.indirects.clearDraws();const e=n.drawInfos;for(let n=0;n<e.length;++n)t.indirects.setDrawInfo(i+n,e[n])}else{const o=n,{gl:r}=e,a=e.stateCache;switch(t.glTarget){case r.ARRAY_BUFFER:e.extensions.useVAO&&a.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),a.glVAO=null),M4.gpuInputAssembler=null,e.stateCache.glArrayBuffer!==t.glBuffer&&(r.bindBuffer(r.ARRAY_BUFFER,t.glBuffer),e.stateCache.glArrayBuffer=t.glBuffer);break;case r.ELEMENT_ARRAY_BUFFER:e.extensions.useVAO&&a.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),a.glVAO=null),M4.gpuInputAssembler=null,e.stateCache.glElementArrayBuffer!==t.glBuffer&&(r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.glBuffer),e.stateCache.glElementArrayBuffer=t.glBuffer);break;default:return void console.error("Unsupported BufferType, update buffer failed.")}s===o.byteLength?r.bufferSubData(t.glTarget,i,o):r.bufferSubData(t.glTarget,i,o.slice(0,s))}}const M4={gpuPipelineState:null,gpuInputAssembler:null,glPrimitive:0},L4=new Hi;function B4(e,t,n,i,s,o,r){const{gl:a}=e,c=e.stateCache;let l=0;if(n&&(L4.x=i.x<<n.lodLevel,L4.y=i.y<<n.lodLevel,L4.width=i.width<<n.lodLevel,L4.height=i.height<<n.lodLevel),n&&t){c.glFramebuffer!==n.glFramebuffer&&(a.bindFramebuffer(a.FRAMEBUFFER,n.glFramebuffer),c.glFramebuffer=n.glFramebuffer),c.viewport.left===L4.x&&c.viewport.top===L4.y&&c.viewport.width===L4.width&&c.viewport.height===L4.height||(a.viewport(L4.x,L4.y,L4.width,L4.height),c.viewport.left=L4.x,c.viewport.top=L4.y,c.viewport.width=L4.width,c.viewport.height=L4.height),c.scissorRect.x===L4.x&&c.scissorRect.y===L4.y&&c.scissorRect.width===L4.width&&c.scissorRect.height===L4.height||(a.scissor(L4.x,L4.y,L4.width,L4.height),c.scissorRect.x=L4.x,c.scissorRect.y=L4.y,c.scissorRect.width=L4.width,c.scissorRect.height=L4.height);let i=s.length;e.extensions.WEBGL_draw_buffers||(i=1);for(let e=0;e<i;++e){const n=t.colorAttachments[e];if(n.format!==ti.UNKNOWN)switch(n.loadOp){case Ci.LOAD:break;case Ci.CLEAR:{c.bs.targets[0].blendColorMask!==xi.ALL&&a.colorMask(!0,!0,!0,!0);const e=s[0];a.clearColor(e.x,e.y,e.z,e.w),l|=a.COLOR_BUFFER_BIT;break}case Ci.DISCARD:}}if(t.depthStencilAttachment&&t.depthStencilAttachment.format!==ti.UNKNOWN){switch(t.depthStencilAttachment.depthLoadOp){case Ci.LOAD:break;case Ci.CLEAR:c.dss.depthWrite||a.depthMask(!0),a.clearDepth(o),l|=a.DEPTH_BUFFER_BIT;break;case Ci.DISCARD:}if(Hs[t.depthStencilAttachment.format].hasStencil)switch(t.depthStencilAttachment.stencilLoadOp){case Ci.LOAD:break;case Ci.CLEAR:c.dss.stencilWriteMaskFront||a.stencilMaskSeparate(a.FRONT,65535),c.dss.stencilWriteMaskBack||a.stencilMaskSeparate(a.BACK,65535),a.clearStencil(r),l|=a.STENCIL_BUFFER_BIT;break;case Ci.DISCARD:}}if(l&&a.clear(l),l&a.COLOR_BUFFER_BIT){const e=c.bs.targets[0].blendColorMask;if(e!==xi.ALL){const t=(e&xi.R)!==xi.NONE,n=(e&xi.G)!==xi.NONE,i=(e&xi.B)!==xi.NONE,s=(e&xi.A)!==xi.NONE;a.colorMask(t,n,i,s)}}l&a.DEPTH_BUFFER_BIT&&!c.dss.depthWrite&&a.depthMask(!1),l&a.STENCIL_BUFFER_BIT&&(c.dss.stencilWriteMaskFront||a.stencilMaskSeparate(a.FRONT,0),c.dss.stencilWriteMaskBack||a.stencilMaskSeparate(a.BACK,0))}}function F4(e,t,n,i,s,o){const{gl:r}=e,a=e.stateCache,c=t&&t.gpuShader;let l,h,u,_=!1;if(t&&M4.gpuPipelineState!==t){if(M4.gpuPipelineState=t,M4.glPrimitive=t.glPrimitive,t.gpuShader){const{glProgram:e}=t.gpuShader;a.glProgram!==e&&(r.useProgram(e),a.glProgram=e,_=!0)}const{rs:e}=t;if(e){if(a.rs.cullMode!==e.cullMode){switch(e.cullMode){case Ri.NONE:r.disable(r.CULL_FACE);break;case Ri.FRONT:r.enable(r.CULL_FACE),r.cullFace(r.FRONT);break;case Ri.BACK:r.enable(r.CULL_FACE),r.cullFace(r.BACK)}a.rs.cullMode=e.cullMode}const t=e.isFrontFaceCCW;a.rs.isFrontFaceCCW!==t&&(r.frontFace(t?r.CCW:r.CW),a.rs.isFrontFaceCCW=t),a.rs.depthBias===e.depthBias&&a.rs.depthBiasSlop===e.depthBiasSlop||(r.polygonOffset(e.depthBias,e.depthBiasSlop),a.rs.depthBias=e.depthBias,a.rs.depthBiasSlop=e.depthBiasSlop),a.rs.lineWidth!==e.lineWidth&&(r.lineWidth(e.lineWidth),a.rs.lineWidth=e.lineWidth)}const{dss:n}=t;n&&(a.dss.depthTest!==n.depthTest&&(n.depthTest?r.enable(r.DEPTH_TEST):r.disable(r.DEPTH_TEST),a.dss.depthTest=n.depthTest),a.dss.depthWrite!==n.depthWrite&&(r.depthMask(n.depthWrite),a.dss.depthWrite=n.depthWrite),a.dss.depthFunc!==n.depthFunc&&(r.depthFunc(S4[n.depthFunc]),a.dss.depthFunc=n.depthFunc),a.dss.stencilTestFront===n.stencilTestFront&&a.dss.stencilTestBack===n.stencilTestBack||(n.stencilTestFront||n.stencilTestBack?r.enable(r.STENCIL_TEST):r.disable(r.STENCIL_TEST),a.dss.stencilTestFront=n.stencilTestFront,a.dss.stencilTestBack=n.stencilTestBack),a.dss.stencilFuncFront===n.stencilFuncFront&&a.dss.stencilRefFront===n.stencilRefFront&&a.dss.stencilReadMaskFront===n.stencilReadMaskFront||(r.stencilFuncSeparate(r.FRONT,S4[n.stencilFuncFront],n.stencilRefFront,n.stencilReadMaskFront),a.dss.stencilFuncFront=n.stencilFuncFront,a.dss.stencilRefFront=n.stencilRefFront,a.dss.stencilReadMaskFront=n.stencilReadMaskFront),a.dss.stencilFailOpFront===n.stencilFailOpFront&&a.dss.stencilZFailOpFront===n.stencilZFailOpFront&&a.dss.stencilPassOpFront===n.stencilPassOpFront||(r.stencilOpSeparate(r.FRONT,C4[n.stencilFailOpFront],C4[n.stencilZFailOpFront],C4[n.stencilPassOpFront]),a.dss.stencilFailOpFront=n.stencilFailOpFront,a.dss.stencilZFailOpFront=n.stencilZFailOpFront,a.dss.stencilPassOpFront=n.stencilPassOpFront),a.dss.stencilWriteMaskFront!==n.stencilWriteMaskFront&&(r.stencilMaskSeparate(r.FRONT,n.stencilWriteMaskFront),a.dss.stencilWriteMaskFront=n.stencilWriteMaskFront),a.dss.stencilFuncBack===n.stencilFuncBack&&a.dss.stencilRefBack===n.stencilRefBack&&a.dss.stencilReadMaskBack===n.stencilReadMaskBack||(r.stencilFuncSeparate(r.BACK,S4[n.stencilFuncBack],n.stencilRefBack,n.stencilReadMaskBack),a.dss.stencilFuncBack=n.stencilFuncBack,a.dss.stencilRefBack=n.stencilRefBack,a.dss.stencilReadMaskBack=n.stencilReadMaskBack),a.dss.stencilFailOpBack===n.stencilFailOpBack&&a.dss.stencilZFailOpBack===n.stencilZFailOpBack&&a.dss.stencilPassOpBack===n.stencilPassOpBack||(r.stencilOpSeparate(r.BACK,C4[n.stencilFailOpBack],C4[n.stencilZFailOpBack],C4[n.stencilPassOpBack]),a.dss.stencilFailOpBack=n.stencilFailOpBack,a.dss.stencilZFailOpBack=n.stencilZFailOpBack,a.dss.stencilPassOpBack=n.stencilPassOpBack),a.dss.stencilWriteMaskBack!==n.stencilWriteMaskBack&&(r.stencilMaskSeparate(r.BACK,n.stencilWriteMaskBack),a.dss.stencilWriteMaskBack=n.stencilWriteMaskBack));const{bs:i}=t;if(i){a.bs.isA2C!==i.isA2C&&(i.isA2C?r.enable(r.SAMPLE_ALPHA_TO_COVERAGE):r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),a.bs.isA2C=i.isA2C),a.bs.blendColor.x===i.blendColor.x&&a.bs.blendColor.y===i.blendColor.y&&a.bs.blendColor.z===i.blendColor.z&&a.bs.blendColor.w===i.blendColor.w||(r.blendColor(i.blendColor.x,i.blendColor.y,i.blendColor.z,i.blendColor.w),a.bs.blendColor.x=i.blendColor.x,a.bs.blendColor.y=i.blendColor.y,a.bs.blendColor.z=i.blendColor.z,a.bs.blendColor.w=i.blendColor.w);const e=i.targets[0],t=a.bs.targets[0];t.blend!==e.blend&&(e.blend?r.enable(r.BLEND):r.disable(r.BLEND),t.blend=e.blend),t.blendEq===e.blendEq&&t.blendAlphaEq===e.blendAlphaEq||(r.blendEquationSeparate(E4[e.blendEq],E4[e.blendAlphaEq]),t.blendEq=e.blendEq,t.blendAlphaEq=e.blendAlphaEq),t.blendSrc===e.blendSrc&&t.blendDst===e.blendDst&&t.blendSrcAlpha===e.blendSrcAlpha&&t.blendDstAlpha===e.blendDstAlpha||(r.blendFuncSeparate(T4[e.blendSrc],T4[e.blendDst],T4[e.blendSrcAlpha],T4[e.blendDstAlpha]),t.blendSrc=e.blendSrc,t.blendDst=e.blendDst,t.blendSrcAlpha=e.blendSrcAlpha,t.blendDstAlpha=e.blendDstAlpha),t.blendColorMask!==e.blendColorMask&&(r.colorMask((e.blendColorMask&xi.R)!==xi.NONE,(e.blendColorMask&xi.G)!==xi.NONE,(e.blendColorMask&xi.B)!==xi.NONE,(e.blendColorMask&xi.A)!==xi.NONE),t.blendColorMask=e.blendColorMask)}}if(t&&t.gpuPipelineLayout&&c){const n=c.glBlocks.length,{dynamicOffsetIndices:o}=t.gpuPipelineLayout;for(let e=0;e<n;e++){const t=c.glBlocks[e],n=i[t.set],a=n&&n.descriptorIndices[t.binding],l=a>=0&&n.gpuDescriptors[a];let h=null,u=0;if(l&&l.gpuBuffer){const{gpuBuffer:e}=l,n=o[t.set],i=n&&n[t.binding];i>=0&&(u=s[i]),"vf32"in e?h=e.vf32:(u+=e.offset,h=e.gpuBuffer.vf32),u>>=2}if(!h){C(`Buffer binding '${t.name}' at set ${t.set} binding ${t.binding} is not bounded`);continue}const _=t.glActiveUniforms.length;for(let e=0;e<_;e++){const n=t.glActiveUniforms[e];switch(n.glType){case r.BOOL:case r.INT:for(let e=0;e<n.array.length;++e){const t=n.offset+u+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];r.uniform1iv(n.glLoc,n.array);break}}break;case r.BOOL_VEC2:case r.INT_VEC2:for(let e=0;e<n.array.length;++e){const t=n.offset+u+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];r.uniform2iv(n.glLoc,n.array);break}}break;case r.BOOL_VEC3:case r.INT_VEC3:for(let e=0;e<n.array.length;++e){const t=n.offset+u+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];r.uniform3iv(n.glLoc,n.array);break}}break;case r.BOOL_VEC4:case r.INT_VEC4:for(let e=0;e<n.array.length;++e){const t=n.offset+u+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];r.uniform4iv(n.glLoc,n.array);break}}break;case r.FLOAT:for(let e=0;e<n.array.length;++e){const t=n.offset+u+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];r.uniform1fv(n.glLoc,n.array);break}}break;case r.FLOAT_VEC2:for(let e=0;e<n.array.length;++e){const t=n.offset+u+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];r.uniform2fv(n.glLoc,n.array);break}}break;case r.FLOAT_VEC3:for(let e=0;e<n.array.length;++e){const t=n.offset+u+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];r.uniform3fv(n.glLoc,n.array);break}}break;case r.FLOAT_VEC4:for(let e=0;e<n.array.length;++e){const t=n.offset+u+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];r.uniform4fv(n.glLoc,n.array);break}}break;case r.FLOAT_MAT2:for(let e=0;e<n.array.length;++e){const t=n.offset+u+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];r.uniformMatrix2fv(n.glLoc,!1,n.array);break}}break;case r.FLOAT_MAT3:for(let e=0;e<n.array.length;++e){const t=n.offset+u+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];r.uniformMatrix3fv(n.glLoc,!1,n.array);break}}break;case r.FLOAT_MAT4:for(let e=0;e<n.array.length;++e){const t=n.offset+u+e;if(h[t]!==n.array[e]){for(let i=e,s=t;i<n.array.length;++i,++s)n.array[i]=h[s];r.uniformMatrix4fv(n.glLoc,!1,n.array);break}}}}}const _=c.glSamplerTextures.length;for(let t=0;t<_;t++){const n=c.glSamplerTextures[t],s=i[n.set];let o=s&&s.descriptorIndices[n.binding],_=o>=0&&s.gpuDescriptors[o];const d=n.units.length;for(let t=0;t<d;t++){const i=n.units[t];if(_&&_.gpuSampler){if(_.gpuTexture&&_.gpuTexture.size>0){const{gpuTexture:t}=_,n=a.glTexUnits[i];n.glTexture!==t.glTexture&&(a.texUnit!==i&&(r.activeTexture(r.TEXTURE0+i),a.texUnit=i),t.glTexture?r.bindTexture(t.glTarget,t.glTexture):r.bindTexture(t.glTarget,e.nullTex2D.gpuTexture.glTexture),n.glTexture=t.glTexture);const{gpuSampler:s}=_;t.isPowerOf2?(l=s.glWrapS,h=s.glWrapT):(l=r.CLAMP_TO_EDGE,h=r.CLAMP_TO_EDGE),u=t.isPowerOf2?t.mipLevel<=1&&(s.glMinFilter===r.LINEAR_MIPMAP_NEAREST||s.glMinFilter===r.LINEAR_MIPMAP_LINEAR)?r.LINEAR:s.glMinFilter:s.glMinFilter===r.LINEAR||s.glMinFilter===r.LINEAR_MIPMAP_NEAREST||s.glMinFilter===r.LINEAR_MIPMAP_LINEAR?r.LINEAR:r.NEAREST,t.glWrapS!==l&&(a.texUnit!==i&&(r.activeTexture(r.TEXTURE0+i),a.texUnit=i),r.texParameteri(t.glTarget,r.TEXTURE_WRAP_S,l),t.glWrapS=l),t.glWrapT!==h&&(a.texUnit!==i&&(r.activeTexture(r.TEXTURE0+i),a.texUnit=i),r.texParameteri(t.glTarget,r.TEXTURE_WRAP_T,h),t.glWrapT=h),t.glMinFilter!==u&&(a.texUnit!==i&&(r.activeTexture(r.TEXTURE0+i),a.texUnit=i),r.texParameteri(t.glTarget,r.TEXTURE_MIN_FILTER,u),t.glMinFilter=u),t.glMagFilter!==s.glMagFilter&&(a.texUnit!==i&&(r.activeTexture(r.TEXTURE0+i),a.texUnit=i),r.texParameteri(t.glTarget,r.TEXTURE_MAG_FILTER,s.glMagFilter),t.glMagFilter=s.glMagFilter)}_=s.gpuDescriptors[++o]}else C(`Sampler binding '${n.name}' at set ${n.set} binding ${n.binding} index ${t} is not bounded`)}}}if(n&&c&&(_||M4.gpuInputAssembler!==n)){M4.gpuInputAssembler=n;const t=e.extensions.ANGLE_instanced_arrays;if(e.extensions.useVAO){const i=e.extensions.OES_vertex_array_object;let s=n.glVAOs.get(c.glProgram);if(!s){let e;s=i.createVertexArrayOES(),n.glVAOs.set(c.glProgram,s),i.bindVertexArrayOES(s),r.bindBuffer(r.ARRAY_BUFFER,null),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,null),a.glArrayBuffer=null,a.glElementArrayBuffer=null;const o=c.glInputs.length;for(let i=0;i<o;i++){const s=c.glInputs[i];e=null;const o=n.glAttribs.length;for(let t=0;t<o;t++){const i=n.glAttribs[t];if(i.name===s.name){e=i;break}}if(e){a.glArrayBuffer!==e.glBuffer&&(r.bindBuffer(r.ARRAY_BUFFER,e.glBuffer),a.glArrayBuffer=e.glBuffer);for(let n=0;n<e.componentCount;++n){const i=s.glLoc+n,o=e.offset+e.size*n;r.enableVertexAttribArray(i),a.glCurrentAttribLocs[i]=!0,r.vertexAttribPointer(i,e.count,e.glType,e.isNormalized,e.stride,o),t&&t.vertexAttribDivisorANGLE(i,e.isInstanced?1:0)}}}const l=n.gpuIndexBuffer;l&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,l.glBuffer),i.bindVertexArrayOES(null),r.bindBuffer(r.ARRAY_BUFFER,null),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,null),a.glArrayBuffer=null,a.glElementArrayBuffer=null}a.glVAO!==s&&(i.bindVertexArrayOES(s),a.glVAO=s)}else{for(let t=0;t<e.capabilities.maxVertexAttributes;++t)a.glCurrentAttribLocs[t]=!1;const i=c.glInputs.length;for(let e=0;e<i;e++){const i=c.glInputs[e];let s=null;const o=n.glAttribs.length;for(let e=0;e<o;e++){const t=n.glAttribs[e];if(t.name===i.name){s=t;break}}if(s){a.glArrayBuffer!==s.glBuffer&&(r.bindBuffer(r.ARRAY_BUFFER,s.glBuffer),a.glArrayBuffer=s.glBuffer);for(let e=0;e<s.componentCount;++e){const n=i.glLoc+e,o=s.offset+s.size*e;!a.glEnabledAttribLocs[n]&&n>=0&&(r.enableVertexAttribArray(n),a.glEnabledAttribLocs[n]=!0),a.glCurrentAttribLocs[n]=!0,r.vertexAttribPointer(n,s.count,s.glType,s.isNormalized,s.stride,o),t&&t.vertexAttribDivisorANGLE(n,s.isInstanced?1:0)}}}const s=n.gpuIndexBuffer;s&&a.glElementArrayBuffer!==s.glBuffer&&(r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,s.glBuffer),a.glElementArrayBuffer=s.glBuffer);for(let t=0;t<e.capabilities.maxVertexAttributes;++t)a.glEnabledAttribLocs[t]!==a.glCurrentAttribLocs[t]&&(r.disableVertexAttribArray(t),a.glEnabledAttribLocs[t]=!1)}}if(t&&t.dynamicStates.length){const e=t.dynamicStates.length;for(let n=0;n<e;n++)switch(t.dynamicStates[n]){case Di.LINE_WIDTH:a.rs.lineWidth!==o.lineWidth&&(r.lineWidth(o.lineWidth),a.rs.lineWidth=o.lineWidth);break;case Di.DEPTH_BIAS:a.rs.depthBias===o.depthBiasConstant&&a.rs.depthBiasSlop===o.depthBiasSlope||(r.polygonOffset(o.depthBiasConstant,o.depthBiasSlope),a.rs.depthBias=o.depthBiasConstant,a.rs.depthBiasSlop=o.depthBiasSlope);break;case Di.BLEND_CONSTANTS:{const e=o.blendConstant;a.bs.blendColor.x===e.x&&a.bs.blendColor.y===e.y&&a.bs.blendColor.z===e.z&&a.bs.blendColor.w===e.w||(r.blendColor(e.x,e.y,e.z,e.w),a.bs.blendColor.copy(e));break}case Di.STENCIL_WRITE_MASK:{const e=o.stencilStatesFront,t=o.stencilStatesBack;a.dss.stencilWriteMaskFront!==e.writeMask&&(r.stencilMaskSeparate(r.FRONT,e.writeMask),a.dss.stencilWriteMaskFront=e.writeMask),a.dss.stencilWriteMaskBack!==t.writeMask&&(r.stencilMaskSeparate(r.BACK,t.writeMask),a.dss.stencilWriteMaskBack=t.writeMask);break}case Di.STENCIL_COMPARE_MASK:{const e=o.stencilStatesFront,t=o.stencilStatesBack;a.dss.stencilRefFront===e.reference&&a.dss.stencilReadMaskFront===e.compareMask||(r.stencilFuncSeparate(r.FRONT,S4[a.dss.stencilFuncFront],e.reference,e.compareMask),a.dss.stencilRefFront=e.reference,a.dss.stencilReadMaskFront=e.compareMask),a.dss.stencilRefBack===t.reference&&a.dss.stencilReadMaskBack===t.compareMask||(r.stencilFuncSeparate(r.BACK,S4[a.dss.stencilFuncBack],t.reference,t.compareMask),a.dss.stencilRefBack=t.reference,a.dss.stencilReadMaskBack=t.compareMask);break}}}}function z4(e,t){const{gl:n}=e,{ANGLE_instanced_arrays:i,WEBGL_multi_draw:s}=e.extensions,{gpuInputAssembler:o,glPrimitive:r}=M4;if(o){const e=o.gpuIndexBuffer;if(o.gpuIndirectBuffer){const t=o.gpuIndirectBuffer.indirects;if(t.drawByIndex){for(let n=0;n<t.drawCount;n++)t.byteOffsets[n]=t.offsets[n]*e.stride;if(s)t.instancedDraw?s.multiDrawElementsInstancedWEBGL(r,t.counts,0,o.glIndexType,t.byteOffsets,0,t.instances,0,t.drawCount):s.multiDrawElementsWEBGL(r,t.counts,0,o.glIndexType,t.byteOffsets,0,t.drawCount);else for(let e=0;e<t.drawCount;e++)t.instances[e]&&i?i.drawElementsInstancedANGLE(r,t.counts[e],o.glIndexType,t.byteOffsets[e],t.instances[e]):n.drawElements(r,t.counts[e],o.glIndexType,t.byteOffsets[e])}else if(s)t.instancedDraw?s.multiDrawArraysInstancedWEBGL(r,t.offsets,0,t.counts,0,t.instances,0,t.drawCount):s.multiDrawArraysWEBGL(r,t.offsets,0,t.counts,0,t.drawCount);else for(let e=0;e<t.drawCount;e++)t.instances[e]&&i?i.drawArraysInstancedANGLE(r,t.offsets[e],t.counts[e],t.instances[e]):n.drawArrays(r,t.offsets[e],t.counts[e])}else if(t.instanceCount&&i)if(e){if(t.indexCount>0){const n=t.firstIndex*e.stride;i.drawElementsInstancedANGLE(r,t.indexCount,o.glIndexType,n,t.instanceCount)}}else t.vertexCount>0&&i.drawArraysInstancedANGLE(r,t.firstVertex,t.vertexCount,t.instanceCount);else if(e){if(t.indexCount>0){const i=t.firstIndex*e.stride;n.drawElements(r,t.indexCount,o.glIndexType,i)}}else t.vertexCount>0&&n.drawArrays(r,t.firstVertex,t.vertexCount)}}const U4=new Array(b4.COUNT);function G4(e,t){U4.fill(0);for(let n=0;n<t.cmds.length;++n){const i=t.cmds.array[n],s=U4[i]++;switch(i){case b4.BEGIN_RENDER_PASS:{const n=t.beginRenderPassCmds.array[s];B4(e,n.gpuRenderPass,n.gpuFramebuffer,n.renderArea,n.clearColors,n.clearDepth,n.clearStencil);break}case b4.BIND_STATES:{const n=t.bindStatesCmds.array[s];F4(e,n.gpuPipelineState,n.gpuInputAssembler,n.gpuDescriptorSets,n.dynamicOffsets,n.dynamicStates);break}case b4.DRAW:z4(e,t.drawCmds.array[s].drawInfo);break;case b4.UPDATE_BUFFER:{const n=t.updateBufferCmds.array[s];N4(e,n.gpuBuffer,n.buffer,n.offset,n.size);break}case b4.COPY_BUFFER_TO_TEXTURE:{const n=t.copyBufferToTextureCmds.array[s];V4(e,n.buffers,n.gpuTexture,n.regions);break}}}}function V4(e,t,n,i){const{gl:s}=e,o=e.stateCache.glTexUnits[e.stateCache.texUnit];o.glTexture!==n.glTexture&&(s.bindTexture(n.glTarget,n.glTexture),o.glTexture=n.glTexture);let r=0,a=1,c=1,l=0;const h=Hs[n.format],{isCompressed:u}=h;switch(n.glTarget){case s.TEXTURE_2D:for(let o=0;o<i.length;o++){const l=i[o];a=l.texExtent.width,c=l.texExtent.height;const h=t[r++];u?n.glInternalFmt===h4.COMPRESSED_RGB_ETC1_WEBGL||e.extensions.noCompressedTexSubImage2D?s.compressedTexImage2D(s.TEXTURE_2D,l.texSubres.mipLevel,n.glInternalFmt,a,c,0,h):s.compressedTexSubImage2D(s.TEXTURE_2D,l.texSubres.mipLevel,l.texOffset.x,l.texOffset.y,a,c,n.glFormat,h):s.texSubImage2D(s.TEXTURE_2D,l.texSubres.mipLevel,l.texOffset.x,l.texOffset.y,a,c,n.glFormat,n.glType,h)}break;case s.TEXTURE_CUBE_MAP:for(let o=0;o<i.length;o++){const h=i[o],_=h.texSubres.baseArrayLayer+h.texSubres.layerCount;for(l=h.texSubres.baseArrayLayer;l<_;++l){a=h.texExtent.width,c=h.texExtent.height;const i=t[r++];u?n.glInternalFmt===h4.COMPRESSED_RGB_ETC1_WEBGL||e.extensions.noCompressedTexSubImage2D?s.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+l,h.texSubres.mipLevel,n.glInternalFmt,a,c,0,i):s.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+l,h.texSubres.mipLevel,h.texOffset.x,h.texOffset.y,a,c,n.glFormat,i):s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+l,h.texSubres.mipLevel,h.texOffset.x,h.texOffset.y,a,c,n.glFormat,n.glType,i)}}break;default:console.error("Unsupported GL texture type, copy buffer to texture failed.")}n.flags&hi.GEN_MIPMAP&&s.generateMipmap(n.glTarget)}class H4{constructor(){this.counts=void 0,this.offsets=void 0,this.instances=void 0,this.drawCount=0,this.drawByIndex=!1,this.instancedDraw=!1,this.byteOffsets=void 0,this._capacity=4,this.counts=new Int32Array(this._capacity),this.offsets=new Int32Array(this._capacity),this.instances=new Int32Array(this._capacity),this.byteOffsets=new Int32Array(this._capacity)}clearDraws(){this.drawCount=0,this.drawByIndex=!1,this.instancedDraw=!1}setDrawInfo(e,t){this._ensureCapacity(e),this.drawByIndex=t.indexCount>0,this.instancedDraw=!!t.instanceCount,this.drawCount=Math.max(e+1,this.drawCount),this.drawByIndex?(this.counts[e]=t.indexCount,this.offsets[e]=t.firstIndex):(this.counts[e]=t.vertexCount,this.offsets[e]=t.firstVertex),this.instances[e]=Math.max(1,t.instanceCount)}_ensureCapacity(e){if(this._capacity>e)return;this._capacity=a(e);const t=new Int32Array(this._capacity),n=new Int32Array(this._capacity),i=new Int32Array(this._capacity);this.byteOffsets=new Int32Array(this._capacity),t.set(this.counts),n.set(this.offsets),i.set(this.instances),this.counts=t,this.offsets=n,this.instances=i}}class k4 extends ao{constructor(...e){super(...e),this._gpuBuffer=null,this._gpuBufferView=null,this._uniformBuffer=null}get gpuBuffer(){return this._gpuBuffer}get gpuBufferView(){return this._gpuBufferView}initialize(e){if("buffer"in e){this._isBufferView=!0;const t=e.buffer;this._usage=t.usage,this._memUsage=t.memUsage,this._size=this._stride=e.range,this._count=1,this._flags=t.flags,this._gpuBufferView={gpuBuffer:t.gpuBuffer,offset:e.offset,range:e.range}}else this._usage=e.usage,this._memUsage=e.memUsage,this._size=e.size,this._stride=Math.max(e.stride||this._size,1),this._count=this._size/this._stride,this._flags=e.flags,this._usage&si.UNIFORM&&this._size>0&&(this._uniformBuffer=new Uint8Array(this._size)),this._gpuBuffer={usage:this._usage,memUsage:this._memUsage,size:this._size,stride:this._stride,buffer:null,vf32:null,indirects:new H4,glTarget:0,glBuffer:null},this._usage&si.UNIFORM&&(this._gpuBuffer.buffer=this._uniformBuffer),function(e,t){const{gl:n}=e,i=e.stateCache,s=t.memUsage&ai.HOST?n.DYNAMIC_DRAW:n.STATIC_DRAW;if(t.usage&si.VERTEX){t.glTarget=n.ARRAY_BUFFER;const o=n.createBuffer();o&&(t.glBuffer=o,t.size>0&&(e.extensions.useVAO&&i.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),i.glVAO=null),M4.gpuInputAssembler=null,e.stateCache.glArrayBuffer!==t.glBuffer&&(n.bindBuffer(n.ARRAY_BUFFER,t.glBuffer),e.stateCache.glArrayBuffer=t.glBuffer),n.bufferData(n.ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ARRAY_BUFFER,null),e.stateCache.glArrayBuffer=null))}else if(t.usage&si.INDEX){t.glTarget=n.ELEMENT_ARRAY_BUFFER;const o=n.createBuffer();o&&(t.glBuffer=o,t.size>0&&(e.extensions.useVAO&&i.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),i.glVAO=null),M4.gpuInputAssembler=null,e.stateCache.glElementArrayBuffer!==t.glBuffer&&(n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.glBuffer),e.stateCache.glElementArrayBuffer=t.glBuffer),n.bufferData(n.ELEMENT_ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),e.stateCache.glElementArrayBuffer=null))}else t.usage&si.UNIFORM?(t.glTarget=n.NONE,t.buffer&&(t.vf32=new Float32Array(t.buffer.buffer))):(t.usage&si.INDIRECT||t.usage&si.TRANSFER_DST||t.usage&si.TRANSFER_SRC||console.error("Unsupported BufferType, create buffer failed."),t.glTarget=n.NONE)}(p4.instance,this._gpuBuffer),p4.instance.memoryStatus.bufferSize+=this._size}destroy(){this._gpuBuffer&&(function(e,t){const{gl:n}=e,i=e.stateCache;if(t.glBuffer){switch(t.glTarget){case n.ARRAY_BUFFER:e.extensions.useVAO&&i.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),e.stateCache.glVAO=null),M4.gpuInputAssembler=null,n.bindBuffer(n.ARRAY_BUFFER,null),e.stateCache.glArrayBuffer=null;break;case n.ELEMENT_ARRAY_BUFFER:e.extensions.useVAO&&i.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),e.stateCache.glVAO=null),M4.gpuInputAssembler=null,n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),e.stateCache.glElementArrayBuffer=null}n.deleteBuffer(t.glBuffer),t.glBuffer=null}}(p4.instance,this._gpuBuffer),p4.instance.memoryStatus.bufferSize-=this._size,this._gpuBuffer=null),this._gpuBufferView&&(this._gpuBufferView=null)}resize(e){if(this._isBufferView)return void console.warn("cannot resize buffer views!");const t=this._size;t!==e&&(this._size=e,this._count=this._size/this._stride,this._uniformBuffer&&(this._uniformBuffer=new Uint8Array(e)),this._gpuBuffer&&(this._uniformBuffer&&(this._gpuBuffer.buffer=this._uniformBuffer),this._gpuBuffer.size=e,e>0&&(function(e,t){const{gl:n}=e,i=e.stateCache,s=t.memUsage&ai.HOST?n.DYNAMIC_DRAW:n.STATIC_DRAW;t.usage&si.VERTEX?(e.extensions.useVAO&&i.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),i.glVAO=null),M4.gpuInputAssembler=null,e.stateCache.glArrayBuffer!==t.glBuffer&&n.bindBuffer(n.ARRAY_BUFFER,t.glBuffer),t.buffer?n.bufferData(n.ARRAY_BUFFER,t.buffer,s):n.bufferData(n.ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ARRAY_BUFFER,null),e.stateCache.glArrayBuffer=null):t.usage&si.INDEX?(e.extensions.useVAO&&i.glVAO&&(e.extensions.OES_vertex_array_object.bindVertexArrayOES(null),i.glVAO=null),M4.gpuInputAssembler=null,e.stateCache.glElementArrayBuffer!==t.glBuffer&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.glBuffer),t.buffer?n.bufferData(n.ELEMENT_ARRAY_BUFFER,t.buffer,s):n.bufferData(n.ELEMENT_ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),e.stateCache.glElementArrayBuffer=null):t.usage&si.UNIFORM?t.buffer&&(t.vf32=new Float32Array(t.buffer.buffer)):(t.usage&si.INDIRECT||t.usage&si.TRANSFER_DST||t.usage&si.TRANSFER_SRC||console.error("Unsupported BufferType, create buffer failed."),t.glTarget=n.NONE)}(p4.instance,this._gpuBuffer),p4.instance.memoryStatus.bufferSize-=t,p4.instance.memoryStatus.bufferSize+=e)))}update(e,t){if(this._isBufferView)return void console.warn("cannot update through buffer views!");let n;n=void 0!==t?t:this._usage&si.INDIRECT?0:e.byteLength,N4(p4.instance,this._gpuBuffer,e,0,n)}}class j4{constructor(e,t){this._frees=void 0,this._freeIdx=0,this._freeCmds=void 0,this._frees=new Array(t),this._freeCmds=new zl(t);for(let n=0;n<t;++n)this._frees[n]=new e;this._freeIdx=t-1}alloc(e){if(this._freeIdx<0){const t=2*this._frees.length,n=this._frees;this._frees=new Array(t);const i=t-n.length;for(let t=0;t<i;++t)this._frees[t]=new e;for(let e=i,s=0;e<t;++e,++s)this._frees[e]=n[s];this._freeIdx+=i}const t=this._frees[this._freeIdx];return this._frees[this._freeIdx--]=null,++t.refCount,t}free(e){0==--e.refCount&&this._freeCmds.push(e)}freeCmds(e){for(let t=0;t<e.length;++t)0==--e.array[t].refCount&&this._freeCmds.push(e.array[t])}release(){for(let e=0;e<this._freeCmds.length;++e){const t=this._freeCmds.array[e];t.clear(),this._frees[++this._freeIdx]=t}this._freeCmds.clear()}}class W4{constructor(){this.beginRenderPassCmdPool=void 0,this.bindStatesCmdPool=void 0,this.drawCmdPool=void 0,this.updateBufferCmdPool=void 0,this.copyBufferToTextureCmdPool=void 0,this.beginRenderPassCmdPool=new j4(P4,1),this.bindStatesCmdPool=new j4(w4,1),this.drawCmdPool=new j4(I4,1),this.updateBufferCmdPool=new j4(R4,1),this.copyBufferToTextureCmdPool=new j4(D4,1)}clearCmds(e){e.beginRenderPassCmds.length&&(this.beginRenderPassCmdPool.freeCmds(e.beginRenderPassCmds),e.beginRenderPassCmds.clear()),e.bindStatesCmds.length&&(this.bindStatesCmdPool.freeCmds(e.bindStatesCmds),e.bindStatesCmds.clear()),e.drawCmds.length&&(this.drawCmdPool.freeCmds(e.drawCmds),e.drawCmds.clear()),e.updateBufferCmds.length&&(this.updateBufferCmdPool.freeCmds(e.updateBufferCmds),e.updateBufferCmds.clear()),e.copyBufferToTextureCmds.length&&(this.copyBufferToTextureCmdPool.freeCmds(e.copyBufferToTextureCmds),e.copyBufferToTextureCmds.clear()),e.cmds.clear()}releaseCmds(){this.beginRenderPassCmdPool.release(),this.bindStatesCmdPool.release(),this.drawCmdPool.release(),this.updateBufferCmdPool.release(),this.copyBufferToTextureCmdPool.release()}}class q4 extends co{constructor(...e){super(...e),this.cmdPackage=new O4,this._cmdAllocator=new W4,this._isInRenderPass=!1,this._curGPUPipelineState=null,this._curGPUInputAssembler=null,this._curGPUDescriptorSets=[],this._curDynamicOffsets=Array(8).fill(0),this._curDynamicStates=new Gs,this._isStateInvalied=!1}initialize(e){this._type=e.type,this._queue=e.queue;const t=p4.instance.bindingMappings.blockOffsets.length;for(let e=0;e<t;e++)this._curGPUDescriptorSets.push(null)}destroy(){this._cmdAllocator.clearCmds(this.cmdPackage)}begin(e,t=0,n){this._cmdAllocator.clearCmds(this.cmdPackage),this._curGPUPipelineState=null,this._curGPUInputAssembler=null,this._curGPUDescriptorSets.length=0,this._numDrawCalls=0,this._numInstances=0,this._numTris=0}end(){this._isStateInvalied&&this.bindStates(),this._isInRenderPass=!1}beginRenderPass(e,t,n,i,s,o){const r=this._cmdAllocator.beginRenderPassCmdPool.alloc(P4);r.gpuRenderPass=e.gpuRenderPass,r.gpuFramebuffer=t.gpuFramebuffer,r.renderArea.copy(n),r.clearColors.length=i.length;for(let e=0;e<i.length;++e)r.clearColors[e]=i[e];r.clearDepth=s,r.clearStencil=o,this.cmdPackage.beginRenderPassCmds.push(r),this.cmdPackage.cmds.push(b4.BEGIN_RENDER_PASS),this._isInRenderPass=!0}endRenderPass(){this._isInRenderPass=!1}bindPipelineState(e){const t=e.gpuPipelineState;t!==this._curGPUPipelineState&&(this._curGPUPipelineState=t,this._isStateInvalied=!0)}bindDescriptorSet(e,t,n){const i=t.gpuDescriptorSet;if(i!==this._curGPUDescriptorSets[e]&&(this._curGPUDescriptorSets[e]=i,this._isStateInvalied=!0),n){var s;const t=null===(s=this._curGPUPipelineState)||void 0===s?void 0:s.gpuPipelineLayout;if(t){const i=this._curDynamicOffsets,s=t.dynamicOffsetOffsets[e];for(let e=0;e<n.length;e++)i[s+e]=n[e];this._isStateInvalied=!0}}}bindInputAssembler(e){const t=e.gpuInputAssembler;this._curGPUInputAssembler=t,this._isStateInvalied=!0}setViewport(e){const t=this._curDynamicStates.viewport;t.left===e.left&&t.top===e.top&&t.width===e.width&&t.height===e.height&&t.minDepth===e.minDepth&&t.maxDepth===e.maxDepth||(t.left=e.left,t.top=e.top,t.width=e.width,t.height=e.height,t.minDepth=e.minDepth,t.maxDepth=e.maxDepth,this._isStateInvalied=!0)}setScissor(e){const t=this._curDynamicStates.scissor;t.x===e.x&&t.y===e.y&&t.width===e.width&&t.height===e.height||(t.x=e.x,t.y=e.y,t.width=e.width,t.height=e.height,this._isStateInvalied=!0)}setLineWidth(e){this._curDynamicStates.lineWidth!==e&&(this._curDynamicStates.lineWidth=e,this._isStateInvalied=!0)}setDepthBias(e,t,n){const i=this._curDynamicStates;i.depthBiasConstant===e&&i.depthBiasClamp===t&&i.depthBiasSlope===n||(i.depthBiasConstant=e,i.depthBiasClamp=t,i.depthBiasSlope=n,this._isStateInvalied=!0)}setBlendConstants(e){const t=this._curDynamicStates.blendConstant;t.x===e.x&&t.y===e.y&&t.z===e.z&&t.w===e.w||(t.copy(e),this._isStateInvalied=!0)}setDepthBound(e,t){const n=this._curDynamicStates;n.depthMinBounds===e&&n.depthMaxBounds===t||(n.depthMinBounds=e,n.depthMaxBounds=t,this._isStateInvalied=!0)}setStencilWriteMask(e,t){const n=this._curDynamicStates.stencilStatesFront,i=this._curDynamicStates.stencilStatesBack;e&Oi.FRONT&&n.writeMask!==t&&(n.writeMask=t,this._isStateInvalied=!0),e&Oi.BACK&&i.writeMask!==t&&(i.writeMask=t,this._isStateInvalied=!0)}setStencilCompareMask(e,t,n){const i=this._curDynamicStates.stencilStatesFront,s=this._curDynamicStates.stencilStatesBack;e&Oi.FRONT&&(i.compareMask===n&&i.reference===t||(i.reference=t,i.compareMask=n,this._isStateInvalied=!0)),e&Oi.BACK&&(s.compareMask===n&&s.reference===t||(s.reference=t,s.compareMask=n,this._isStateInvalied=!0))}draw(e){if(this._type===Bi.PRIMARY&&this._isInRenderPass||this._type===Bi.SECONDARY){this._isStateInvalied&&this.bindStates();const t="drawInfo"in e?e.drawInfo:e,n=this._cmdAllocator.drawCmdPool.alloc(I4);n.drawInfo.copy(t),this.cmdPackage.drawCmds.push(n),this.cmdPackage.cmds.push(b4.DRAW),++this._numDrawCalls,this._numInstances+=t.instanceCount;const i=t.indexCount||t.vertexCount;if(this._curGPUPipelineState)switch(this._curGPUPipelineState.glPrimitive){case 4:this._numTris+=i/3*Math.max(t.instanceCount,1);break;case 5:case 6:this._numTris+=(i-2)*Math.max(t.instanceCount,1)}}else console.error("Command 'draw' must be recorded inside a render pass.")}updateBuffer(e,t,n){if(this._type===Bi.PRIMARY&&!this._isInRenderPass||this._type===Bi.SECONDARY){const i=e.gpuBuffer;if(i){const s=this._cmdAllocator.updateBufferCmdPool.alloc(R4);let o=0,r=null;e.usage&si.INDIRECT||(o=void 0!==n?n:t.byteLength),r=t,s.gpuBuffer=i,s.buffer=r,s.offset=0,s.size=o,this.cmdPackage.updateBufferCmds.push(s),this.cmdPackage.cmds.push(b4.UPDATE_BUFFER)}}else console.error("Command 'updateBuffer' must be recorded outside a render pass.")}copyBuffersToTexture(e,t,n){if(this._type===Bi.PRIMARY&&!this._isInRenderPass||this._type===Bi.SECONDARY){const i=t.gpuTexture;if(i){const t=this._cmdAllocator.copyBufferToTextureCmdPool.alloc(D4);t&&(t.gpuTexture=i,t.regions=n,t.buffers=e,this.cmdPackage.copyBufferToTextureCmds.push(t),this.cmdPackage.cmds.push(b4.COPY_BUFFER_TO_TEXTURE))}}else console.error("Command 'copyBufferToTexture' must be recorded outside a render pass.")}execute(e,t){for(let n=0;n<t;++n){const t=e[n];for(let e=0;e<t.cmdPackage.beginRenderPassCmds.length;++e){const n=t.cmdPackage.beginRenderPassCmds.array[e];++n.refCount,this.cmdPackage.beginRenderPassCmds.push(n)}for(let e=0;e<t.cmdPackage.bindStatesCmds.length;++e){const n=t.cmdPackage.bindStatesCmds.array[e];++n.refCount,this.cmdPackage.bindStatesCmds.push(n)}for(let e=0;e<t.cmdPackage.drawCmds.length;++e){const n=t.cmdPackage.drawCmds.array[e];++n.refCount,this.cmdPackage.drawCmds.push(n)}for(let e=0;e<t.cmdPackage.updateBufferCmds.length;++e){const n=t.cmdPackage.updateBufferCmds.array[e];++n.refCount,this.cmdPackage.updateBufferCmds.push(n)}for(let e=0;e<t.cmdPackage.copyBufferToTextureCmds.length;++e){const n=t.cmdPackage.copyBufferToTextureCmds.array[e];++n.refCount,this.cmdPackage.copyBufferToTextureCmds.push(n)}this.cmdPackage.cmds.concat(t.cmdPackage.cmds.array),this._numDrawCalls+=t._numDrawCalls,this._numInstances+=t._numInstances,this._numTris+=t._numTris}}pipelineBarrier(e,t,n){}bindStates(){const e=this._cmdAllocator.bindStatesCmdPool.alloc(w4);e&&(e.gpuPipelineState=this._curGPUPipelineState,Array.prototype.push.apply(e.gpuDescriptorSets,this._curGPUDescriptorSets),Array.prototype.push.apply(e.dynamicOffsets,this._curDynamicOffsets),e.gpuInputAssembler=this._curGPUInputAssembler,e.dynamicStates.copy(this._curDynamicStates),this.cmdPackage.bindStatesCmds.push(e),this.cmdPackage.cmds.push(b4.BIND_STATES),this._isStateInvalied=!1)}}class X4 extends uo{constructor(...e){super(...e),this._gpuFramebuffer=null}get gpuFramebuffer(){return this._gpuFramebuffer}initialize(e){this._renderPass=e.renderPass,this._colorTextures=e.colorTextures||[],this._depthStencilTexture=e.depthStencilTexture||null;let t=0;const n=[];for(let i=0;i<e.colorTextures.length;++i){const s=e.colorTextures[i];s&&(n.push(s.gpuTexture),t=s.lodLevel)}let i=null;e.depthStencilTexture&&(i=e.depthStencilTexture.gpuTexture,t=e.depthStencilTexture.lodLevel);let s=Number.MAX_SAFE_INTEGER,o=Number.MAX_SAFE_INTEGER;this._gpuFramebuffer={gpuRenderPass:e.renderPass.gpuRenderPass,gpuColorTextures:n,gpuDepthStencilTexture:i,glFramebuffer:null,isOffscreen:!0,get width(){return this.isOffscreen?s:this.gpuColorTextures[0].width},set width(e){s=e},get height(){return this.isOffscreen?o:this.gpuColorTextures[0].height},set height(e){o=e},lodLevel:t},function(e,t){for(let e=0;e<t.gpuColorTextures.length;++e)if(t.gpuColorTextures[e].isSwapchainTexture)return void(t.isOffscreen=!1);const{gl:n}=e,i=[],s=n.createFramebuffer();if(s){t.glFramebuffer=s,e.stateCache.glFramebuffer!==t.glFramebuffer&&n.bindFramebuffer(n.FRAMEBUFFER,t.glFramebuffer);for(let e=0;e<t.gpuColorTextures.length;++e){const s=t.gpuColorTextures[e];s&&(s.glTexture?n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+e,s.glTarget,s.glTexture,0):n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+e,n.RENDERBUFFER,s.glRenderbuffer),i.push(n.COLOR_ATTACHMENT0+e),t.width=Math.min(t.width,s.width),t.height=Math.min(t.height,s.height))}const o=t.gpuDepthStencilTexture;if(o){const e=Hs[o.format].hasStencil?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;o.glTexture?n.framebufferTexture2D(n.FRAMEBUFFER,e,o.glTarget,o.glTexture,0):n.framebufferRenderbuffer(n.FRAMEBUFFER,e,n.RENDERBUFFER,o.glRenderbuffer),t.width=Math.min(t.width,o.width),t.height=Math.min(t.height,o.height)}e.extensions.WEBGL_draw_buffers&&e.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(i);const r=n.checkFramebufferStatus(n.FRAMEBUFFER);if(r!==n.FRAMEBUFFER_COMPLETE)switch(r){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_ATTACHMENT");break;case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");break;case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_DIMENSIONS");break;case n.FRAMEBUFFER_UNSUPPORTED:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_UNSUPPORTED")}e.stateCache.glFramebuffer!==t.glFramebuffer&&n.bindFramebuffer(n.FRAMEBUFFER,e.stateCache.glFramebuffer)}}(p4.instance,this._gpuFramebuffer)}destroy(){var e,t;this._gpuFramebuffer&&(e=p4.instance,(t=this._gpuFramebuffer).glFramebuffer&&(e.gl.deleteFramebuffer(t.glFramebuffer),e.stateCache.glFramebuffer===t.glFramebuffer&&(e.gl.bindFramebuffer(e.gl.FRAMEBUFFER,null),e.stateCache.glFramebuffer=null),t.glFramebuffer=null),this._gpuFramebuffer=null)}}class Y4 extends mo{constructor(...e){super(...e),this._gpuInputAssembler=null}get gpuInputAssembler(){return this._gpuInputAssembler}initialize(e){if(0===e.vertexBuffers.length)return void console.error("InputAssemblerInfo.vertexBuffers is null.");if(this._attributes=e.attributes,this._attributesHash=this.computeAttributesHash(),this._vertexBuffers=e.vertexBuffers,e.indexBuffer)this._indexBuffer=e.indexBuffer,this._drawInfo.indexCount=this._indexBuffer.size/this._indexBuffer.stride,this._drawInfo.firstIndex=0;else{const e=this._vertexBuffers[0];this._drawInfo.vertexCount=e.size/e.stride,this._drawInfo.firstVertex=0,this._drawInfo.vertexOffset=0}this._drawInfo.instanceCount=0,this._drawInfo.firstInstance=0,this._indirectBuffer=e.indirectBuffer||null;const t=new Array(e.vertexBuffers.length);for(let n=0;n<e.vertexBuffers.length;++n){const i=e.vertexBuffers[n];i.gpuBuffer&&(t[n]=i.gpuBuffer)}let n=null,i=0;if(e.indexBuffer&&(n=e.indexBuffer.gpuBuffer,n))switch(n.stride){case 1:i=5121;break;case 2:i=5123;break;case 4:i=5125;break;default:console.error("Error index buffer stride.")}let s=null;e.indirectBuffer&&(s=e.indirectBuffer.gpuBuffer),this._gpuInputAssembler={attributes:e.attributes,gpuVertexBuffers:t,gpuIndexBuffer:n,gpuIndirectBuffer:s,glAttribs:[],glIndexType:i,glVAOs:new Map},function(e,t){const{gl:n}=e;t.glAttribs=new Array(t.attributes.length);const i=[0,0,0,0,0,0,0,0];for(let e=0;e<t.attributes.length;++e){const s=t.attributes[e],o=void 0!==s.stream?s.stream:0,r=t.gpuVertexBuffers[o],a=f4(s.format,n),{size:c}=Hs[s.format];t.glAttribs[e]={name:s.name,glBuffer:r.glBuffer,glType:a,size:c,count:Hs[s.format].count,stride:r.stride,componentCount:x4(a,n),isNormalized:void 0!==s.isNormalized&&s.isNormalized,isInstanced:void 0!==s.isInstanced&&s.isInstanced,offset:i[o]},i[o]+=c}}(p4.instance,this._gpuInputAssembler)}destroy(){const e=p4.instance;this._gpuInputAssembler&&e.extensions.useVAO&&function(e,t){const n=t.glVAOs.values();let i=n.next();const s=e.extensions.OES_vertex_array_object;let o=e.stateCache.glVAO;for(;!i.done;)s.deleteVertexArrayOES(i.value),o===i.value&&(s.bindVertexArrayOES(null),o=null),i=n.next();e.stateCache.glVAO=o,t.glVAOs.clear()}(e,this._gpuInputAssembler),this._gpuInputAssembler=null}}class K4 extends go{constructor(...e){super(...e),this._gpuDescriptorSetLayout=null}get gpuDescriptorSetLayout(){return this._gpuDescriptorSetLayout}initialize(e){Array.prototype.push.apply(this._bindings,e.bindings);let t=0,n=-1;const i=[];for(let e=0;e<this._bindings.length;e++){const s=this._bindings[e];i.push(t),t+=s.count,s.binding>n&&(n=s.binding)}this._bindingIndices=Array(n+1).fill(-1);const s=this._descriptorIndices=Array(n+1).fill(-1);for(let e=0;e<this._bindings.length;e++){const t=this._bindings[e];this._bindingIndices[t.binding]=e,s[t.binding]=i[e]}const o=[];for(let e=0;e<this._bindings.length;e++){const t=this._bindings[e];if(t.descriptorType&Ws)for(let e=0;e<t.count;e++)o.push(t.binding)}this._gpuDescriptorSetLayout={bindings:this._bindings,dynamicBindings:o,descriptorIndices:s,descriptorCount:t}}destroy(){this._bindings.length=0}}class $4 extends vo{constructor(...e){super(...e),this._gpuPipelineLayout=null}get gpuPipelineLayout(){return this._gpuPipelineLayout}initialize(e){Array.prototype.push.apply(this._setLayouts,e.setLayouts);const t=[],n=[];let i=0;const s=[];for(let e=0;e<this._setLayouts.length;e++){const o=this._setLayouts[e],r=o.gpuDescriptorSetLayout.dynamicBindings,a=Array(o.bindingIndices.length).fill(-1);for(let e=0;e<r.length;e++){const t=r[e];a[t]<0&&(a[t]=i+e)}n.push(o.gpuDescriptorSetLayout),t.push(a),s.push(i),i+=r.length}this._gpuPipelineLayout={gpuSetLayouts:n,dynamicOffsetIndices:t,dynamicOffsetCount:i,dynamicOffsetOffsets:s}}destroy(){this._setLayouts.length=0}}class Q4{get native(){return this}constructor(e=!1,t=wi.FILL,n=Ii.GOURAND,i=Ri.BACK,s=!0,o=!1,r=0,a=0,c=0,l=!0,h=!1,u=1){this.isDiscard=e,this.polygonMode=t,this.shadeModel=n,this.cullMode=i,this.isFrontFaceCCW=s,this.depthBiasEnabled=o,this.depthBias=r,this.depthBiasClamp=a,this.depthBiasSlop=c,this.isDepthClip=l,this.isMultisample=h,this.lineWidth=u}reset(){this.isDiscard=!1,this.polygonMode=wi.FILL,this.shadeModel=Ii.GOURAND,this.cullMode=Ri.BACK,this.isFrontFaceCCW=!0,this.depthBiasEnabled=!1,this.depthBias=0,this.depthBiasClamp=0,this.depthBiasSlop=0,this.isDepthClip=!0,this.isMultisample=!1,this.lineWidth=1}assign(e){Object.assign(this,e)}destroy(){}}class J4{get native(){return this}constructor(e=!0,t=!0,n=mi.LESS,i=!1,s=mi.ALWAYS,o=65535,r=65535,a=gi.KEEP,c=gi.KEEP,l=gi.KEEP,h=1,u=!1,_=mi.ALWAYS,d=65535,p=65535,f=gi.KEEP,m=gi.KEEP,g=gi.KEEP,v=1){this.depthTest=e,this.depthWrite=t,this.depthFunc=n,this.stencilTestFront=i,this.stencilFuncFront=s,this.stencilReadMaskFront=o,this.stencilWriteMaskFront=r,this.stencilFailOpFront=a,this.stencilZFailOpFront=c,this.stencilPassOpFront=l,this.stencilRefFront=h,this.stencilTestBack=u,this.stencilFuncBack=_,this.stencilReadMaskBack=d,this.stencilWriteMaskBack=p,this.stencilFailOpBack=f,this.stencilZFailOpBack=m,this.stencilPassOpBack=g,this.stencilRefBack=v}reset(){this.depthTest=!0,this.depthWrite=!0,this.depthFunc=mi.LESS,this.stencilTestFront=!1,this.stencilFuncFront=mi.ALWAYS,this.stencilReadMaskFront=65535,this.stencilWriteMaskFront=65535,this.stencilFailOpFront=gi.KEEP,this.stencilZFailOpFront=gi.KEEP,this.stencilPassOpFront=gi.KEEP,this.stencilRefFront=1,this.stencilTestBack=!1,this.stencilFuncBack=mi.ALWAYS,this.stencilReadMaskBack=65535,this.stencilWriteMaskBack=65535,this.stencilFailOpBack=gi.KEEP,this.stencilZFailOpBack=gi.KEEP,this.stencilPassOpBack=gi.KEEP,this.stencilRefBack=1}assign(e){Object.assign(this,e)}destroy(){}}class Z4{constructor(e=!1,t=vi.ONE,n=vi.ZERO,i=yi.ADD,s=vi.ONE,o=vi.ZERO,r=yi.ADD,a=xi.ALL){this.blend=e,this.blendSrc=t,this.blendDst=n,this.blendEq=i,this.blendSrcAlpha=s,this.blendDstAlpha=o,this.blendAlphaEq=r,this.blendColorMask=a}reset(){this.blend=!1,this.blendSrc=vi.ONE,this.blendDst=vi.ZERO,this.blendEq=yi.ADD,this.blendSrcAlpha=vi.ONE,this.blendDstAlpha=vi.ZERO,this.blendAlphaEq=yi.ADD,this.blendColorMask=xi.ALL}assign(e){Object.assign(this,e)}destroy(){}}class e3{get native(){return this}constructor(e=!1,t=!1,n=new $i,i=[new Z4]){this.isA2C=e,this.isIndepend=t,this.blendColor=n,this.targets=i}setTarget(e,t){let n=this.targets[e];n||(n=this.targets[e]=new Z4),Object.assign(n,t)}reset(){this.isA2C=!1,this.isIndepend=!1,this.blendColor.x=0,this.blendColor.y=0,this.blendColor.z=0,this.blendColor.w=0,this.targets.length=1,this.targets[0].reset()}destroy(){}}class t3 extends Vs{get shader(){return this._shader}get pipelineLayout(){return this._pipelineLayout}get primitive(){return this._primitive}get rasterizerState(){return this._rs}get depthStencilState(){return this._dss}get blendState(){return this._bs}get inputState(){return this._is}get dynamicStates(){return this._dynamicStates}get renderPass(){return this._renderPass}constructor(){super($n.PIPELINE_STATE),this._shader=null,this._pipelineLayout=null,this._primitive=Pi.TRIANGLE_LIST,this._is=null,this._rs=new Q4,this._dss=new J4,this._bs=new e3,this._dynamicStates=Di.NONE,this._renderPass=null}}const n3=[0,1,3,2,0,0,0,4,5,6,0,0,0,0];class i3 extends t3{constructor(...e){super(...e),this._gpuPipelineState=null}get gpuPipelineState(){return this._gpuPipelineState}initialize(e){this._primitive=e.primitive,this._shader=e.shader,this._pipelineLayout=e.pipelineLayout;const t=this._bs;if(e.blendState){const n=e.blendState,{targets:i}=n;i&&i.forEach(((e,n)=>{t.setTarget(n,e)})),void 0!==n.isA2C&&(t.isA2C=n.isA2C),void 0!==n.isIndepend&&(t.isIndepend=n.isIndepend),void 0!==n.blendColor&&(t.blendColor=n.blendColor)}Object.assign(this._rs,e.rasterizerState),Object.assign(this._dss,e.depthStencilState),this._is=e.inputState,this._renderPass=e.renderPass,this._dynamicStates=e.dynamicStates;const n=[];for(let e=0;e<31;e++)this._dynamicStates&1<<e&&n.push(1<<e);this._gpuPipelineState={glPrimitive:n3[e.primitive],gpuShader:e.shader.gpuShader,gpuPipelineLayout:e.pipelineLayout.gpuPipelineLayout,rs:e.rasterizerState,dss:e.depthStencilState,bs:e.blendState,gpuRenderPass:e.renderPass.gpuRenderPass,dynamicStates:n}}destroy(){this._gpuPipelineState=null}}class s3 extends q4{beginRenderPass(e,t,n,i,s,o){B4(p4.instance,e.gpuRenderPass,t.gpuFramebuffer,n,i,s,o),this._isInRenderPass=!0}draw(e){if(this._isInRenderPass){this._isStateInvalied&&this.bindStates();const t="drawInfo"in e?e.drawInfo:e;z4(p4.instance,t),++this._numDrawCalls,this._numInstances+=t.instanceCount;const n=t.indexCount||t.vertexCount;if(this._curGPUPipelineState)switch(this._curGPUPipelineState.glPrimitive){case 4:this._numTris+=n/3*Math.max(t.instanceCount,1);break;case 5:case 6:this._numTris+=(n-2)*Math.max(t.instanceCount,1)}}else console.error("Command 'draw' must be recorded inside a render pass.")}setViewport(e){const{stateCache:t,gl:n}=p4.instance;t.viewport.left===e.left&&t.viewport.top===e.top&&t.viewport.width===e.width&&t.viewport.height===e.height||(n.viewport(e.left,e.top,e.width,e.height),t.viewport.left=e.left,t.viewport.top=e.top,t.viewport.width=e.width,t.viewport.height=e.height)}setScissor(e){const{stateCache:t,gl:n}=p4.instance;t.scissorRect.x===e.x&&t.scissorRect.y===e.y&&t.scissorRect.width===e.width&&t.scissorRect.height===e.height||(n.scissor(e.x,e.y,e.width,e.height),t.scissorRect.x=e.x,t.scissorRect.y=e.y,t.scissorRect.width=e.width,t.scissorRect.height=e.height)}updateBuffer(e,t,n){if(this._isInRenderPass)console.error("Command 'updateBuffer' must be recorded outside a render pass.");else{const i=e.gpuBuffer;if(i){let s;s=void 0!==n?n:e.usage&si.INDIRECT?0:t.byteLength,N4(p4.instance,i,t,0,s)}}}copyBuffersToTexture(e,t,n){if(this._isInRenderPass)console.error("Command 'copyBufferToTexture' must be recorded outside a render pass.");else{const i=t.gpuTexture;i&&V4(p4.instance,e,i,n)}}execute(e,t){for(let n=0;n<t;++n){const t=e[n];G4(p4.instance,t.cmdPackage),this._numDrawCalls+=t._numDrawCalls,this._numInstances+=t._numInstances,this._numTris+=t._numTris}}bindStates(){F4(p4.instance,this._curGPUPipelineState,this._curGPUInputAssembler,this._curGPUDescriptorSets,this._curDynamicOffsets,this._curDynamicStates),this._isStateInvalied=!1}}class o3 extends yo{constructor(...e){super(...e),this.numDrawCalls=0,this.numInstances=0,this.numTris=0}initialize(e){this._type=e.type}destroy(){}submit(e){const t=e.length;for(let n=0;n<t;n++){const t=e[n];this.numDrawCalls+=t.numDrawCalls,this.numInstances+=t.numInstances,this.numTris+=t.numTris}}clear(){this.numDrawCalls=0,this.numInstances=0,this.numTris=0}}class r3 extends xo{constructor(...e){super(...e),this._gpuRenderPass=null}get gpuRenderPass(){return this._gpuRenderPass}initialize(e){this._colorInfos=e.colorAttachments,this._depthStencilInfo=e.depthStencilAttachment,this._subpasses=e.subpasses,this._gpuRenderPass={colorAttachments:this._colorInfos,depthStencilAttachment:this._depthStencilInfo},this._hash=this.computeHash()}destroy(){this._gpuRenderPass=null}}const a3=[10497,33648,33071,33071];class c3 extends Eo{get gpuSampler(){return this._gpuSampler}constructor(e,t){super(e,t),this._gpuSampler=null;let n=0,i=0;const s=this._info.minFilter,o=this._info.magFilter,r=this._info.mipFilter;n=s===pi.LINEAR||s===pi.ANISOTROPIC?r===pi.LINEAR||r===pi.ANISOTROPIC?9987:r===pi.POINT?9985:9729:r===pi.LINEAR||r===pi.ANISOTROPIC?9986:r===pi.POINT?9984:9728,i=o===pi.LINEAR||o===pi.ANISOTROPIC?9729:9728;const a=a3[this._info.addressU],c=a3[this._info.addressV],l=a3[this._info.addressW];this._gpuSampler={glMinFilter:n,glMagFilter:i,glWrapS:a,glWrapT:c,glWrapR:l}}}class l3 extends So{constructor(...e){super(...e),this._gpuShader=null}get gpuShader(){return this._gpuShader}initialize(e){this._name=e.name,this._stages=e.stages,this._attributes=e.attributes,this._blocks=e.blocks,this._samplers=e.samplers,this._gpuShader={name:e.name,blocks:e.blocks.slice(),samplerTextures:e.samplerTextures.slice(),subpassInputs:e.subpassInputs.slice(),gpuStages:new Array(e.stages.length),glProgram:null,glInputs:[],glUniforms:[],glBlocks:[],glSamplerTextures:[]};for(let t=0;t<e.stages.length;++t){const n=e.stages[t];this._gpuShader.gpuStages[t]={type:n.stage,source:n.source,glShader:null}}!function(e,t){const{gl:n}=e;for(let e=0;e<t.gpuStages.length;e++){const i=t.gpuStages[e];let s=0,o="",r=1;switch(i.type){case Si.VERTEX:o="VertexShader",s=n.VERTEX_SHADER;break;case Si.FRAGMENT:o="FragmentShader",s=n.FRAGMENT_SHADER;break;default:return void console.error("Unsupported ShaderType.")}const a=n.createShader(s);if(a&&(i.glShader=a,n.shaderSource(i.glShader,i.source),n.compileShader(i.glShader),!n.getShaderParameter(i.glShader,n.COMPILE_STATUS))){console.error(`${o} in '${t.name}' compilation failed.`),console.error("Shader source dump:",i.source.replace(/^|\n/g,(()=>`\n${r++} `))),console.error(n.getShaderInfoLog(i.glShader));for(let i=0;i<t.gpuStages.length;i++){const i=t.gpuStages[e];i.glShader&&(n.deleteShader(i.glShader),i.glShader=null)}return}}const i=n.createProgram();if(!i)return;t.glProgram=i;for(let e=0;e<t.gpuStages.length;e++){const i=t.gpuStages[e];n.attachShader(t.glProgram,i.glShader)}if(n.linkProgram(t.glProgram),e.extensions.destroyShadersImmediately)for(let e=0;e<t.gpuStages.length;e++){const i=t.gpuStages[e];i.glShader&&(n.detachShader(t.glProgram,i.glShader),n.deleteShader(i.glShader),i.glShader=null)}if(!n.getProgramParameter(t.glProgram,n.LINK_STATUS))return console.error(`Failed to link shader '${t.name}'.`),void console.error(n.getProgramInfoLog(t.glProgram));T(`Shader '${t.name}' compilation succeeded.`);const s=n.getProgramParameter(t.glProgram,n.ACTIVE_ATTRIBUTES);t.glInputs=new Array(s);for(let e=0;e<s;++e){const i=n.getActiveAttrib(t.glProgram,e);if(i){let s;const o=i.name.indexOf("[");s=-1!==o?i.name.substr(0,o):i.name;const r=n.getAttribLocation(t.glProgram,s),a=v4(i.type,n),c=y4(i.type,n);t.glInputs[e]={binding:r,name:s,type:a,stride:c,count:i.size,size:c*i.size,glType:i.type,glLoc:r}}}if(t.blocks.length>0){t.glBlocks=new Array(t.blocks.length);for(let e=0;e<t.blocks.length;++e){const i=t.blocks[e],s={set:i.set,binding:i.binding,name:i.name,size:0,glUniforms:new Array(i.members.length),glActiveUniforms:[]};t.glBlocks[e]=s;for(let e=0;e<i.members.length;++e){const t=i.members[e],o=m4(t.type,n),r=y4(o,n),a=r*t.count;s.glUniforms[e]={binding:-1,name:t.name,type:t.type,stride:r,count:t.count,size:a,offset:0,glType:o,glLoc:null,array:null}}}}for(let e=0;e<t.subpassInputs.length;++e){const n=t.subpassInputs[e];t.samplerTextures.push(new us(n.set,n.binding,n.name,ii.SAMPLER2D,n.count))}if(t.samplerTextures.length>0){t.glSamplerTextures=new Array(t.samplerTextures.length);for(let e=0;e<t.samplerTextures.length;++e){const i=t.samplerTextures[e];t.glSamplerTextures[e]={set:i.set,binding:i.binding,name:i.name,type:i.type,count:i.count,units:[],glUnits:null,glType:m4(i.type,n),glLoc:null}}}const o=n.getProgramParameter(t.glProgram,n.ACTIVE_UNIFORMS);for(let i=0;i<o;++i){const s=n.getActiveUniform(t.glProgram,i);if(s&&s.type!==n.SAMPLER_2D&&s.type!==n.SAMPLER_CUBE){const i=n.getUniformLocation(t.glProgram,s.name);if(e.extensions.isLocationActive(i)){let e;const n=s.name.indexOf("[");e=-1!==n?s.name.substr(0,n):s.name;for(let n=0;n<t.glBlocks.length;n++){const o=t.glBlocks[n];for(let t=0;t<o.glUniforms.length;t++){const n=o.glUniforms[t];if(n.name===e){n.glLoc=i,n.count=s.size,n.size=n.stride*n.count,n.array=new(g4(n.type))(n.size/4),o.glActiveUniforms.push(n);break}}}}}}for(let e=0;e<t.glBlocks.length;e++){const n=t.glBlocks[e];for(let e=0;e<n.glUniforms.length;e++){const t=n.glUniforms[e];t.offset=n.size/4,n.size+=t.size}}const r=[],a=[],{bindingMappings:c}=e,{texUnitCacheMap:l}=e.stateCache;let h=0;for(let e=0;e<t.blocks.length;++e)t.blocks[e].set===c.flexibleSet&&h++;let u=0;for(let i=0;i<t.samplerTextures.length;++i){const s=t.samplerTextures[i],o=n.getUniformLocation(t.glProgram,s.name);if(e.extensions.isLocationActive(o)&&(r.push(t.glSamplerTextures[i]),a.push(o)),void 0===l[s.name]){let t=s.binding+c.samplerTextureOffsets[s.set]+u;s.set===c.flexibleSet&&(t-=h),l[s.name]=t%e.capabilities.maxTextureUnits,u+=s.count-1}}if(r.length){const i=[];for(let t=0;t<r.length;++t){const n=r[t];let s=l[n.name];if(void 0!==s){n.glLoc=a[t];for(let t=0;t<n.count;++t){for(;i[s];)s=(s+1)%e.capabilities.maxTextureUnits;n.units.push(s),i[s]=!0}}}let s=0;for(let t=0;t<r.length;++t){const n=r[t];if(!e.extensions.isLocationActive(n.glLoc)){n.glLoc=a[t];for(let t=0;t<n.count;++t){for(;i[s];)s=(s+1)%e.capabilities.maxTextureUnits;void 0===l[n.name]&&(l[n.name]=s),n.units.push(s),i[s]=!0}}}e.stateCache.glProgram!==t.glProgram&&n.useProgram(t.glProgram);for(let e=0;e<r.length;e++){const t=r[e];t.glUnits=new Int32Array(t.units),n.uniform1iv(t.glLoc,t.glUnits)}e.stateCache.glProgram!==t.glProgram&&n.useProgram(e.stateCache.glProgram)}for(let e=0;e<t.glBlocks.length;)t.glBlocks[e].glActiveUniforms.length?e++:(t.glBlocks[e]=t.glBlocks[t.glBlocks.length-1],t.glBlocks.length--);t.glSamplerTextures=r}(p4.instance,this._gpuShader)}destroy(){this._gpuShader&&(function(e,t){if(t.glProgram){const{gl:n}=e;if(!e.extensions.destroyShadersImmediately)for(let e=0;e<t.gpuStages.length;e++){const i=t.gpuStages[e];i.glShader&&(n.detachShader(t.glProgram,i.glShader),n.deleteShader(i.glShader),i.glShader=null)}n.deleteProgram(t.glProgram),e.stateCache.glProgram===t.glProgram&&(e.gl.useProgram(null),e.stateCache.glProgram=null),t.glProgram=null}}(p4.instance,this._gpuShader),this._gpuShader=null)}}class h3{constructor(){this.glArrayBuffer=null,this.glElementArrayBuffer=null,this.glVAO=null,this.texUnit=0,this.glTexUnits=[],this.glRenderbuffer=null,this.glFramebuffer=null,this.viewport=new Ki,this.scissorRect=new Hi(0,0,0,0),this.rs=new Q4,this.dss=new J4,this.bs=new e3,this.glProgram=null,this.glEnabledAttribLocs=[],this.glCurrentAttribLocs=[],this.texUnitCacheMap={}}initialize(e,t){for(let t=0;t<e;++t)this.glTexUnits.push({glTexture:null});this.glEnabledAttribLocs.length=t,this.glEnabledAttribLocs.fill(!1),this.glCurrentAttribLocs.length=t,this.glCurrentAttribLocs.fill(!1)}}class u3 extends Co{constructor(...e){super(...e),this._gpuTexture=null,this._lodLevel=0}get gpuTexture(){return this._gpuTexture}get lodLevel(){return this._lodLevel}initialize(e,t){let n=e;const i=e;"texture"in e&&(n=i.texture.info,this._isTextureView=!0),this._info.copy(n),this._isPowerOf2=Xs(this._info.width)&&Xs(this._info.height),this._size=Ks(this._info.format,this.width,this.height,this.depth,this._info.levelCount)*this._info.layerCount,this._isTextureView?(this._viewInfo.copy(i),this._lodLevel=i.baseLevel,this._gpuTexture=i.texture._gpuTexture):(this._gpuTexture={type:n.type,format:n.format,usage:n.usage,width:n.width,height:n.height,depth:n.depth,size:this._size,arrayLayer:n.layerCount,mipLevel:n.levelCount,samples:n.samples,flags:n.flags,isPowerOf2:this._isPowerOf2,glTarget:0,glInternalFmt:0,glFormat:0,glType:0,glUsage:0,glTexture:null,glRenderbuffer:null,glWrapS:0,glWrapT:0,glMinFilter:0,glMagFilter:0,isSwapchainTexture:t||!1},function(e,t){const{gl:n}=e;t.glFormat=t.glInternalFmt=function(e,t){switch(e){case ti.A8:return t.ALPHA;case ti.L8:return t.LUMINANCE;case ti.LA8:return t.LUMINANCE_ALPHA;case ti.RGB8:case ti.RGB16F:case ti.RGB32F:return t.RGB;case ti.BGRA8:case ti.RGBA8:case ti.SRGB8_A8:case ti.RGBA16F:case ti.RGBA32F:return t.RGBA;case ti.R5G6B5:return t.RGB;case ti.RGB5A1:case ti.RGBA4:return t.RGBA;case ti.DEPTH:return t.DEPTH_COMPONENT;case ti.DEPTH_STENCIL:return t.DEPTH_STENCIL;case ti.BC1:return h4.COMPRESSED_RGB_S3TC_DXT1_EXT;case ti.BC1_ALPHA:return h4.COMPRESSED_RGBA_S3TC_DXT1_EXT;case ti.BC1_SRGB:return h4.COMPRESSED_SRGB_S3TC_DXT1_EXT;case ti.BC1_SRGB_ALPHA:return h4.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;case ti.BC2:return h4.COMPRESSED_RGBA_S3TC_DXT3_EXT;case ti.BC2_SRGB:return h4.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;case ti.BC3:return h4.COMPRESSED_RGBA_S3TC_DXT5_EXT;case ti.BC3_SRGB:return h4.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;case ti.ETC_RGB8:return h4.COMPRESSED_RGB_ETC1_WEBGL;case ti.ETC2_RGB8:return h4.COMPRESSED_RGB8_ETC2;case ti.ETC2_SRGB8:return h4.COMPRESSED_SRGB8_ETC2;case ti.ETC2_RGB8_A1:return h4.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;case ti.ETC2_SRGB8_A1:return h4.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;case ti.ETC2_RGBA8:return h4.COMPRESSED_RGBA8_ETC2_EAC;case ti.ETC2_SRGB8_A8:return h4.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;case ti.EAC_R11:return h4.COMPRESSED_R11_EAC;case ti.EAC_R11SN:return h4.COMPRESSED_SIGNED_R11_EAC;case ti.EAC_RG11:return h4.COMPRESSED_RG11_EAC;case ti.EAC_RG11SN:return h4.COMPRESSED_SIGNED_RG11_EAC;case ti.PVRTC_RGB2:return h4.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;case ti.PVRTC_RGBA2:return h4.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;case ti.PVRTC_RGB4:return h4.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;case ti.PVRTC_RGBA4:return h4.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;case ti.ASTC_RGBA_4X4:return h4.COMPRESSED_RGBA_ASTC_4x4_KHR;case ti.ASTC_RGBA_5X4:return h4.COMPRESSED_RGBA_ASTC_5x4_KHR;case ti.ASTC_RGBA_5X5:return h4.COMPRESSED_RGBA_ASTC_5x5_KHR;case ti.ASTC_RGBA_6X5:return h4.COMPRESSED_RGBA_ASTC_6x5_KHR;case ti.ASTC_RGBA_6X6:return h4.COMPRESSED_RGBA_ASTC_6x6_KHR;case ti.ASTC_RGBA_8X5:return h4.COMPRESSED_RGBA_ASTC_8x5_KHR;case ti.ASTC_RGBA_8X6:return h4.COMPRESSED_RGBA_ASTC_8x6_KHR;case ti.ASTC_RGBA_8X8:return h4.COMPRESSED_RGBA_ASTC_8x8_KHR;case ti.ASTC_RGBA_10X5:return h4.COMPRESSED_RGBA_ASTC_10x5_KHR;case ti.ASTC_RGBA_10X6:return h4.COMPRESSED_RGBA_ASTC_10x6_KHR;case ti.ASTC_RGBA_10X8:return h4.COMPRESSED_RGBA_ASTC_10x8_KHR;case ti.ASTC_RGBA_10X10:return h4.COMPRESSED_RGBA_ASTC_10x10_KHR;case ti.ASTC_RGBA_12X10:return h4.COMPRESSED_RGBA_ASTC_12x10_KHR;case ti.ASTC_RGBA_12X12:return h4.COMPRESSED_RGBA_ASTC_12x12_KHR;case ti.ASTC_SRGBA_4X4:return h4.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;case ti.ASTC_SRGBA_5X4:return h4.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR;case ti.ASTC_SRGBA_5X5:return h4.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR;case ti.ASTC_SRGBA_6X5:return h4.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR;case ti.ASTC_SRGBA_6X6:return h4.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;case ti.ASTC_SRGBA_8X5:return h4.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR;case ti.ASTC_SRGBA_8X6:return h4.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR;case ti.ASTC_SRGBA_8X8:return h4.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;case ti.ASTC_SRGBA_10X5:return h4.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR;case ti.ASTC_SRGBA_10X6:return h4.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR;case ti.ASTC_SRGBA_10X8:return h4.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR;case ti.ASTC_SRGBA_10X10:return h4.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;case ti.ASTC_SRGBA_12X10:return h4.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR;case ti.ASTC_SRGBA_12X12:return h4.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;default:return console.error("Unsupported Format, convert to WebGL format failed."),t.RGBA}}(t.format,n),t.glType=f4(t.format,n);let i=t.width,s=t.height;switch(t.type){case ci.TEX2D:{if(t.glTarget=n.TEXTURE_2D,t.isSwapchainTexture)break;const o=Math.max(i,s);if(o>e.capabilities.maxTextureSize&&N(9100,o,e.capabilities.maxTextureSize),e.textureExclusive[t.format]||e.extensions.WEBGL_depth_texture||!Hs[t.format].hasDepth){if(t.glTexture=n.createTexture(),t.size>0){const o=e.stateCache.glTexUnits[e.stateCache.texUnit];if(o.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_2D,t.glTexture),o.glTexture=t.glTexture),Hs[t.format].isCompressed)for(let e=0;e<t.mipLevel;++e){const o=Ys(t.format,i,s,1),r=new Uint8Array(o);n.compressedTexImage2D(n.TEXTURE_2D,e,t.glInternalFmt,i,s,0,r),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}else for(let e=0;e<t.mipLevel;++e)n.texImage2D(n.TEXTURE_2D,e,t.glInternalFmt,i,s,0,t.glFormat,t.glType,null),i=Math.max(1,i>>1),s=Math.max(1,s>>1);t.isPowerOf2?(t.glWrapS=n.REPEAT,t.glWrapT=n.REPEAT):(t.glWrapS=n.CLAMP_TO_EDGE,t.glWrapT=n.CLAMP_TO_EDGE),t.glMinFilter=n.LINEAR,t.glMagFilter=n.LINEAR,n.texParameteri(t.glTarget,n.TEXTURE_WRAP_S,t.glWrapS),n.texParameteri(t.glTarget,n.TEXTURE_WRAP_T,t.glWrapT),n.texParameteri(t.glTarget,n.TEXTURE_MIN_FILTER,t.glMinFilter),n.texParameteri(t.glTarget,n.TEXTURE_MAG_FILTER,t.glMagFilter)}}else t.glInternalFmt=function(e,t){switch(e){case ti.R5G6B5:return t.RGB565;case ti.RGB5A1:return t.RGB5_A1;case ti.RGBA4:return t.RGBA4;case ti.RGBA16F:return h4.RGBA16F_EXT;case ti.RGBA32F:return h4.RGBA32F_EXT;case ti.SRGB8_A8:return h4.SRGB8_ALPHA8_EXT;case ti.DEPTH:return t.DEPTH_COMPONENT16;case ti.DEPTH_STENCIL:return t.DEPTH_STENCIL;default:return console.error("Unsupported Format, convert to WebGL internal format failed."),t.RGBA}}(t.format,n),t.glRenderbuffer=n.createRenderbuffer(),t.size>0&&(e.stateCache.glRenderbuffer!==t.glRenderbuffer&&(n.bindRenderbuffer(n.RENDERBUFFER,t.glRenderbuffer),e.stateCache.glRenderbuffer=t.glRenderbuffer),n.renderbufferStorage(n.RENDERBUFFER,t.glInternalFmt,i,s));break}case ci.CUBE:{t.glTarget=n.TEXTURE_CUBE_MAP;const o=Math.max(i,s);if(o>e.capabilities.maxCubeMapTextureSize&&N(9100,o,e.capabilities.maxTextureSize),t.glTexture=n.createTexture(),t.size>0){const o=e.stateCache.glTexUnits[e.stateCache.texUnit];if(o.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_CUBE_MAP,t.glTexture),o.glTexture=t.glTexture),Hs[t.format].isCompressed)for(let e=0;e<6;++e){i=t.width,s=t.height;for(let o=0;o<t.mipLevel;++o){const r=Ys(t.format,i,s,1),a=new Uint8Array(r);n.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+e,o,t.glInternalFmt,i,s,0,a),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}}else for(let e=0;e<6;++e){i=t.width,s=t.height;for(let o=0;o<t.mipLevel;++o)n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+e,o,t.glInternalFmt,i,s,0,t.glFormat,t.glType,null),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}t.isPowerOf2?(t.glWrapS=n.REPEAT,t.glWrapT=n.REPEAT):(t.glWrapS=n.CLAMP_TO_EDGE,t.glWrapT=n.CLAMP_TO_EDGE),t.glMinFilter=n.LINEAR,t.glMagFilter=n.LINEAR,n.texParameteri(t.glTarget,n.TEXTURE_WRAP_S,t.glWrapS),n.texParameteri(t.glTarget,n.TEXTURE_WRAP_T,t.glWrapT),n.texParameteri(t.glTarget,n.TEXTURE_MIN_FILTER,t.glMinFilter),n.texParameteri(t.glTarget,n.TEXTURE_MAG_FILTER,t.glMagFilter)}break}default:console.error("Unsupported TextureType, create texture failed."),t.type=ci.TEX2D,t.glTarget=n.TEXTURE_2D}}(p4.instance,this._gpuTexture),p4.instance.memoryStatus.textureSize+=this._size,this._viewInfo.texture=this,this._viewInfo.type=e.type,this._viewInfo.format=e.format,this._viewInfo.baseLevel=0,this._viewInfo.levelCount=e.levelCount,this._viewInfo.baseLayer=0,this._viewInfo.layerCount=e.layerCount)}destroy(){!this._isTextureView&&this._gpuTexture&&(function(e,t){const{gl:n}=e;if(t.glTexture){const i=e.stateCache.glTexUnits;let s=e.stateCache.texUnit;n.deleteTexture(t.glTexture);for(let e=0;e<i.length;e++)i[e].glTexture===t.glTexture&&(n.activeTexture(n.TEXTURE0+e),s=e,n.bindTexture(t.glTarget,null),i[e].glTexture=null);e.stateCache.texUnit=s,t.glTexture=null}if(t.glRenderbuffer){let i=e.stateCache.glRenderbuffer;n.deleteRenderbuffer(t.glRenderbuffer),i===t.glRenderbuffer&&(n.bindRenderbuffer(n.RENDERBUFFER,null),i=null),t.glRenderbuffer=null}}(p4.instance,this._gpuTexture),p4.instance.memoryStatus.textureSize-=this._size,this._gpuTexture=null)}resize(e,t){if(this._info.width===e&&this._info.height===t)return;this._info.levelCount===u3.getLevelCount(this._info.width,this._info.height)?this._info.levelCount=u3.getLevelCount(e,t):this._info.levelCount>1&&(this._info.levelCount=Math.min(this._info.levelCount,u3.getLevelCount(e,t)));const n=this._size;this._info.width=e,this._info.height=t,this._size=Ks(this._info.format,this.width,this.height,this.depth,this._info.levelCount)*this._info.layerCount,!this._isTextureView&&this._gpuTexture&&(this._gpuTexture.width=e,this._gpuTexture.height=t,this._gpuTexture.size=this._size,function(e,t){if(!t.size)return;const{gl:n}=e;let i=t.width,s=t.height;switch(t.type){case ci.TEX2D:{t.glTarget=n.TEXTURE_2D;const o=Math.max(i,s);if(o>e.capabilities.maxTextureSize&&N(9100,o,e.capabilities.maxTextureSize),t.glRenderbuffer)e.stateCache.glRenderbuffer!==t.glRenderbuffer&&(n.bindRenderbuffer(n.RENDERBUFFER,t.glRenderbuffer),e.stateCache.glRenderbuffer=t.glRenderbuffer),n.renderbufferStorage(n.RENDERBUFFER,t.glInternalFmt,i,s);else if(t.glTexture){const o=e.stateCache.glTexUnits[e.stateCache.texUnit];if(o.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_2D,t.glTexture),o.glTexture=t.glTexture),Hs[t.format].isCompressed)for(let e=0;e<t.mipLevel;++e){const o=Ys(t.format,i,s,1),r=new Uint8Array(o);n.compressedTexImage2D(n.TEXTURE_2D,e,t.glInternalFmt,i,s,0,r),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}else for(let e=0;e<t.mipLevel;++e)n.texImage2D(n.TEXTURE_2D,e,t.glInternalFmt,i,s,0,t.glFormat,t.glType,null),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}break}case ci.CUBE:{t.glTarget=n.TEXTURE_CUBE_MAP;const o=Math.max(i,s);o>e.capabilities.maxCubeMapTextureSize&&N(9100,o,e.capabilities.maxTextureSize);const r=e.stateCache.glTexUnits[e.stateCache.texUnit];if(r.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_CUBE_MAP,t.glTexture),r.glTexture=t.glTexture),Hs[t.format].isCompressed)for(let e=0;e<6;++e){i=t.width,s=t.height;for(let o=0;o<t.mipLevel;++o){const r=Ys(t.format,i,s,1),a=new Uint8Array(r);n.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+e,o,t.glInternalFmt,i,s,0,a),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}}else for(let e=0;e<6;++e){i=t.width,s=t.height;for(let o=0;o<t.mipLevel;++o)n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+e,o,t.glInternalFmt,i,s,0,t.glFormat,t.glType,null),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}break}default:console.error("Unsupported TextureType, create texture failed."),t.type=ci.TEX2D,t.glTarget=n.TEXTURE_2D}}(p4.instance,this._gpuTexture),p4.instance.memoryStatus.textureSize-=n,p4.instance.memoryStatus.textureSize+=this._size)}initAsSwapchainTexture(e){const t=new rs;t.format=e.format,t.usage=Hs[e.format].hasDepth?li.DEPTH_STENCIL_ATTACHMENT:li.COLOR_ATTACHMENT,t.width=e.width,t.height=e.height,this.initialize(t,!0)}}const _3="webglcontextlost";function d3(e,t){const n=["","WEBKIT_","MOZ_"];for(let i=0;i<n.length;++i){const s=e.getExtension(n[i]+t);if(s)return s}return null}function p3(e){const t={EXT_texture_filter_anisotropic:d3(e,"EXT_texture_filter_anisotropic"),EXT_blend_minmax:d3(e,"EXT_blend_minmax"),EXT_frag_depth:d3(e,"EXT_frag_depth"),EXT_shader_texture_lod:d3(e,"EXT_shader_texture_lod"),EXT_sRGB:d3(e,"EXT_sRGB"),OES_vertex_array_object:d3(e,"OES_vertex_array_object"),EXT_color_buffer_half_float:d3(e,"EXT_color_buffer_half_float"),WEBGL_color_buffer_float:d3(e,"WEBGL_color_buffer_float"),WEBGL_compressed_texture_etc1:d3(e,"WEBGL_compressed_texture_etc1"),WEBGL_compressed_texture_etc:d3(e,"WEBGL_compressed_texture_etc"),WEBGL_compressed_texture_pvrtc:d3(e,"WEBGL_compressed_texture_pvrtc"),WEBGL_compressed_texture_s3tc:d3(e,"WEBGL_compressed_texture_s3tc"),WEBGL_compressed_texture_s3tc_srgb:d3(e,"WEBGL_compressed_texture_s3tc_srgb"),WEBGL_debug_shaders:d3(e,"WEBGL_debug_shaders"),WEBGL_draw_buffers:d3(e,"WEBGL_draw_buffers"),WEBGL_lose_context:d3(e,"WEBGL_lose_context"),WEBGL_depth_texture:d3(e,"WEBGL_depth_texture"),OES_texture_half_float:d3(e,"OES_texture_half_float"),OES_texture_half_float_linear:d3(e,"OES_texture_half_float_linear"),OES_texture_float:d3(e,"OES_texture_float"),OES_texture_float_linear:d3(e,"OES_texture_float_linear"),OES_standard_derivatives:d3(e,"OES_standard_derivatives"),OES_element_index_uint:d3(e,"OES_element_index_uint"),ANGLE_instanced_arrays:d3(e,"ANGLE_instanced_arrays"),WEBGL_debug_renderer_info:d3(e,"WEBGL_debug_renderer_info"),WEBGL_multi_draw:null,WEBGL_compressed_texture_astc:null,destroyShadersImmediately:!0,noCompressedTexSubImage2D:!1,isLocationActive:e=>!!e,useVAO:!1};return nh.os===Ql.IOS&&14===nh.osMainVersion&&nh.isBrowser||(t.WEBGL_compressed_texture_astc=d3(e,"WEBGL_compressed_texture_astc")),nh.os!==Ql.ANDROID&&nh.os!==Ql.IOS&&(t.WEBGL_multi_draw=d3(e,"WEBGL_multi_draw")),nh.browserType===Yl.UC&&(t.ANGLE_instanced_arrays=null),nh.os===Ql.IOS&&nh.osMainVersion<=10&&(t.destroyShadersImmediately=!1),t.OES_vertex_array_object&&(t.useVAO=!0),t}class f3 extends ho{constructor(...e){super(...e),this.stateCache=new h3,this.cmdAllocator=new W4,this.nullTex2D=null,this.nullTexCube=null,this._canvas=null,this._webGLContextLostHandler=null,this._extensions=null}get extensions(){return this._extensions}initialize(e){this._canvas=e.windowHandle,this._webGLContextLostHandler=this._onWebGLContextLost.bind(this),this._canvas.addEventListener(_3,this._onWebGLContextLost);const t=p4.instance.gl;this.stateCache.initialize(p4.instance.capabilities.maxTextureUnits,p4.instance.capabilities.maxVertexAttributes),this._extensions=p3(t),function(e){e.activeTexture(e.TEXTURE0),e.pixelStorei(e.PACK_ALIGNMENT,1),e.pixelStorei(e.UNPACK_ALIGNMENT,1),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!1),e.bindFramebuffer(e.FRAMEBUFFER,null),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),e.frontFace(e.CCW),e.disable(e.POLYGON_OFFSET_FILL),e.polygonOffset(0,0),e.enable(e.DEPTH_TEST),e.depthMask(!0),e.depthFunc(e.LESS),e.depthRange(0,1),e.stencilFuncSeparate(e.FRONT,e.ALWAYS,1,65535),e.stencilOpSeparate(e.FRONT,e.KEEP,e.KEEP,e.KEEP),e.stencilMaskSeparate(e.FRONT,65535),e.stencilFuncSeparate(e.BACK,e.ALWAYS,1,65535),e.stencilOpSeparate(e.BACK,e.KEEP,e.KEEP,e.KEEP),e.stencilMaskSeparate(e.BACK,65535),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.disable(e.BLEND),e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.colorMask(!0,!0,!0,!0),e.blendColor(0,0,0,0)}(t);const n=ti.RGBA8;let i=ti.DEPTH_STENCIL,s=t.getParameter(t.DEPTH_BITS);const o=t.getParameter(t.STENCIL_BITS);s&&o?i=ti.DEPTH_STENCIL:s&&(i=ti.DEPTH),this._colorTexture=new u3,this._colorTexture.initAsSwapchainTexture({swapchain:this,format:n,width:e.width,height:e.height}),this._depthStencilTexture=new u3,this._depthStencilTexture.initAsSwapchainTexture({swapchain:this,format:i,width:e.width,height:e.height}),this.nullTex2D=p4.instance.createTexture(new rs(ci.TEX2D,li.SAMPLED,ti.RGBA8,2,2,hi.GEN_MIPMAP)),this.nullTexCube=p4.instance.createTexture(new rs(ci.CUBE,li.SAMPLED,ti.RGBA8,2,2,hi.GEN_MIPMAP,6));const r=new Yi;r.texExtent.width=2,r.texExtent.height=2;const a=new Uint8Array(this.nullTex2D.size);a.fill(0),p4.instance.copyBuffersToTexture([a],this.nullTex2D,[r]),r.texSubres.layerCount=6,p4.instance.copyBuffersToTexture([a,a,a,a,a,a],this.nullTexCube,[r])}destroy(){this._canvas&&this._webGLContextLostHandler&&(this._canvas.removeEventListener(_3,this._webGLContextLostHandler),this._webGLContextLostHandler=null),this.nullTex2D&&(this.nullTex2D.destroy(),this.nullTex2D=null),this.nullTexCube&&(this.nullTexCube.destroy(),this.nullTexCube=null),this._extensions=null,this._canvas=null}resize(e,t,n){this._colorTexture.width===e&&this._colorTexture.height===t||(T(`Resizing swapchain: ${e}x${t}`),this._canvas.width=e,this._canvas.height=t,this._colorTexture.resize(e,t),this._depthStencilTexture.resize(e,t))}_onWebGLContextLost(e){D(11e3),S(e)}}class m3 extends lo{constructor(...e){super(...e),this._swapchain=null,this._context=null,this._bindingMappings=null,this._textureExclusive=new Array(ti.COUNT)}get gl(){return this._context}get extensions(){return this._swapchain.extensions}get stateCache(){return this._swapchain.stateCache}get nullTex2D(){return this._swapchain.nullTex2D}get nullTexCube(){return this._swapchain.nullTexCube}get textureExclusive(){return this._textureExclusive}get bindingMappings(){return this._bindingMappings}initialize(e){p4.setInstance(this),this._gfxAPI=Jn.WEBGL;const t=this._bindingMappingInfo=e.bindingMappingInfo,n=[],i=[],s=t.setIndices[0];n[s]=0,i[s]=0;for(let e=1;e<t.setIndices.length;++e){const s=t.setIndices[e],o=t.setIndices[e-1];n[s]=t.maxBlockCounts[o]+n[o],i[s]=t.maxSamplerTextureCounts[o]+i[o]}for(let e=0;e<t.setIndices.length;++e){const n=t.setIndices[e];i[n]-=t.maxBlockCounts[n]}this._bindingMappings={blockOffsets:n,samplerTextureOffsets:i,flexibleSet:t.setIndices[t.setIndices.length-1]};const o=this._context=function(e){let t=null;try{const n={alpha:Qe.ENABLE_TRANSPARENT_CANVAS,antialias:Qe.ENABLE_WEBGL_ANTIALIAS,depth:!0,stencil:!0,premultipliedAlpha:!1,preserveDrawingBuffer:!1,powerPreference:"default",failIfMajorPerformanceCaveat:!1};t=e.getContext("webgl",n)}catch(e){return null}return t}(lo.canvas);if(!o)return console.error("This device does not support WebGL."),!1;this._queue=this.createQueue(new Ls(Mi.GRAPHICS)),this._cmdBuff=this.createCommandBuffer(new Ms(this._queue)),this._caps.maxVertexAttributes=o.getParameter(o.MAX_VERTEX_ATTRIBS),this._caps.maxVertexUniformVectors=o.getParameter(o.MAX_VERTEX_UNIFORM_VECTORS),this._caps.maxFragmentUniformVectors=o.getParameter(o.MAX_FRAGMENT_UNIFORM_VECTORS),this._caps.maxTextureUnits=o.getParameter(o.MAX_TEXTURE_IMAGE_UNITS),this._caps.maxVertexTextureUnits=o.getParameter(o.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this._caps.maxTextureSize=o.getParameter(o.MAX_TEXTURE_SIZE),this._caps.maxCubeMapTextureSize=o.getParameter(o.MAX_CUBE_MAP_TEXTURE_SIZE),this._caps.maxUniformBufferBindings=16;const r=o.getSupportedExtensions();let a="";if(r)for(const e of r)a+=`${e} `;const c=p3(o);c.WEBGL_debug_renderer_info?(this._renderer=o.getParameter(c.WEBGL_debug_renderer_info.UNMASKED_RENDERER_WEBGL),this._vendor=o.getParameter(c.WEBGL_debug_renderer_info.UNMASKED_VENDOR_WEBGL)):(this._renderer=o.getParameter(o.RENDERER),this._vendor=o.getParameter(o.VENDOR));const l=o.getParameter(o.VERSION);this._features.fill(!1),this.initFormatFeatures(c),c.EXT_blend_minmax&&(this._features[ei.BLEND_MINMAX]=!0),c.OES_element_index_uint&&(this._features[ei.ELEMENT_INDEX_UINT]=!0),c.ANGLE_instanced_arrays&&(this._features[ei.INSTANCED_ARRAYS]=!0),c.WEBGL_draw_buffers&&(this._features[ei.MULTIPLE_RENDER_TARGETS]=!0);let h="";return this.getFormatFeatures(ti.ETC_RGB8)&&(h+="etc1 "),this.getFormatFeatures(ti.ETC2_RGB8)&&(h+="etc2 "),this.getFormatFeatures(ti.BC1)&&(h+="dxt "),this.getFormatFeatures(ti.PVRTC_RGB2)&&(h+="pvrtc "),this.getFormatFeatures(ti.ASTC_RGBA_4X4)&&(h+="astc "),T("WebGL device initialized."),T(`RENDERER: ${this._renderer}`),T(`VENDOR: ${this._vendor}`),T(`VERSION: ${l}`),T(`COMPRESSED_FORMAT: ${h}`),T(`EXTENSIONS: ${a}`),!0}destroy(){this._queue&&(this._queue.destroy(),this._queue=null),this._cmdBuff&&(this._cmdBuff.destroy(),this._cmdBuff=null)}flushCommands(e){}acquire(e){}present(){const e=this._queue;this._numDrawCalls=e.numDrawCalls,this._numInstances=e.numInstances,this._numTris=e.numTris,e.clear()}initFormatFeatures(e){this._formatFeatures.fill(ui.NONE),this._textureExclusive.fill(!0);const t=ui.RENDER_TARGET|ui.SAMPLED_TEXTURE|ui.LINEAR_FILTER;this._formatFeatures[ti.RGB8]=t,this._formatFeatures[ti.R5G6B5]=t,this._textureExclusive[ti.R5G6B5]=!1,this._formatFeatures[ti.RGBA8]=t,this._formatFeatures[ti.RGBA4]=t,this._textureExclusive[ti.RGBA4]=!1,this._formatFeatures[ti.RGB5A1]=t,this._textureExclusive[ti.RGB5A1]=!1,this._formatFeatures[ti.DEPTH]=ui.RENDER_TARGET,this._textureExclusive[ti.DEPTH]=!1,this._formatFeatures[ti.DEPTH_STENCIL]=ui.RENDER_TARGET,this._textureExclusive[ti.DEPTH_STENCIL]=!1,this._formatFeatures[ti.R8I]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RG8I]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RGB8I]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RGBA8I]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.R8UI]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RG8UI]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RGB8UI]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RGBA8UI]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.R8I]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RG8I]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RGB8I]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RGBA8I]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.R8UI]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RG8UI]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RGB8UI]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RGBA8UI]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.R32F]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RG32F]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RGB32F]|=ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.RGBA32F]|=ui.VERTEX_ATTRIBUTE,e.EXT_sRGB&&(this._formatFeatures[ti.SRGB8]=t,this._formatFeatures[ti.SRGB8_A8]=t,this._textureExclusive[ti.SRGB8_A8]=!1),e.WEBGL_depth_texture&&(this._formatFeatures[ti.DEPTH]|=t,this._formatFeatures[ti.DEPTH_STENCIL]|=t),e.WEBGL_color_buffer_float&&(this._formatFeatures[ti.RGB32F]|=ui.RENDER_TARGET,this._formatFeatures[ti.RGBA32F]|=ui.RENDER_TARGET,this._textureExclusive[ti.RGB32F]=!1,this._textureExclusive[ti.RGBA32F]=!1),e.EXT_color_buffer_half_float&&(this._formatFeatures[ti.RGB16F]|=ui.RENDER_TARGET,this._formatFeatures[ti.RGBA16F]|=ui.RENDER_TARGET,this._textureExclusive[ti.RGB16F]=!1,this._textureExclusive[ti.RGBA16F]=!1),e.OES_texture_float&&(this._formatFeatures[ti.RGB32F]|=ui.RENDER_TARGET|ui.SAMPLED_TEXTURE,this._formatFeatures[ti.RGBA32F]|=ui.RENDER_TARGET|ui.SAMPLED_TEXTURE),e.OES_texture_half_float&&(this._formatFeatures[ti.RGB16F]|=ui.RENDER_TARGET|ui.SAMPLED_TEXTURE,this._formatFeatures[ti.RGBA16F]|=ui.RENDER_TARGET|ui.SAMPLED_TEXTURE),e.OES_texture_float_linear&&(this._formatFeatures[ti.RGB32F]|=ui.LINEAR_FILTER,this._formatFeatures[ti.RGBA32F]|=ui.LINEAR_FILTER),e.OES_texture_half_float_linear&&(this._formatFeatures[ti.RGB16F]|=ui.LINEAR_FILTER,this._formatFeatures[ti.RGBA16F]|=ui.LINEAR_FILTER);const n=ui.SAMPLED_TEXTURE|ui.LINEAR_FILTER;e.WEBGL_compressed_texture_etc1&&(this._formatFeatures[ti.ETC_RGB8]=n),e.WEBGL_compressed_texture_etc&&(this._formatFeatures[ti.ETC2_RGB8]=n,this._formatFeatures[ti.ETC2_RGBA8]=n,this._formatFeatures[ti.ETC2_SRGB8]=n,this._formatFeatures[ti.ETC2_SRGB8_A8]=n,this._formatFeatures[ti.ETC2_RGB8_A1]=n,this._formatFeatures[ti.ETC2_SRGB8_A1]=n),e.WEBGL_compressed_texture_s3tc&&(this._formatFeatures[ti.BC1]=n,this._formatFeatures[ti.BC1_ALPHA]=n,this._formatFeatures[ti.BC1_SRGB]=n,this._formatFeatures[ti.BC1_SRGB_ALPHA]=n,this._formatFeatures[ti.BC2]=n,this._formatFeatures[ti.BC2_SRGB]=n,this._formatFeatures[ti.BC3]=n,this._formatFeatures[ti.BC3_SRGB]=n),e.WEBGL_compressed_texture_pvrtc&&(this._formatFeatures[ti.PVRTC_RGB2]|=n,this._formatFeatures[ti.PVRTC_RGBA2]|=n,this._formatFeatures[ti.PVRTC_RGB4]|=n,this._formatFeatures[ti.PVRTC_RGBA4]|=n),e.WEBGL_compressed_texture_astc&&(this._formatFeatures[ti.ASTC_RGBA_4X4]|=n,this._formatFeatures[ti.ASTC_RGBA_5X4]|=n,this._formatFeatures[ti.ASTC_RGBA_5X5]|=n,this._formatFeatures[ti.ASTC_RGBA_6X5]|=n,this._formatFeatures[ti.ASTC_RGBA_6X6]|=n,this._formatFeatures[ti.ASTC_RGBA_8X5]|=n,this._formatFeatures[ti.ASTC_RGBA_8X6]|=n,this._formatFeatures[ti.ASTC_RGBA_8X8]|=n,this._formatFeatures[ti.ASTC_RGBA_10X5]|=n,this._formatFeatures[ti.ASTC_RGBA_10X6]|=n,this._formatFeatures[ti.ASTC_RGBA_10X8]|=n,this._formatFeatures[ti.ASTC_RGBA_10X10]|=n,this._formatFeatures[ti.ASTC_RGBA_12X10]|=n,this._formatFeatures[ti.ASTC_RGBA_12X12]|=n,this._formatFeatures[ti.ASTC_SRGBA_4X4]|=n,this._formatFeatures[ti.ASTC_SRGBA_5X4]|=n,this._formatFeatures[ti.ASTC_SRGBA_5X5]|=n,this._formatFeatures[ti.ASTC_SRGBA_6X5]|=n,this._formatFeatures[ti.ASTC_SRGBA_6X6]|=n,this._formatFeatures[ti.ASTC_SRGBA_8X5]|=n,this._formatFeatures[ti.ASTC_SRGBA_8X6]|=n,this._formatFeatures[ti.ASTC_SRGBA_8X8]|=n,this._formatFeatures[ti.ASTC_SRGBA_10X5]|=n,this._formatFeatures[ti.ASTC_SRGBA_10X6]|=n,this._formatFeatures[ti.ASTC_SRGBA_10X8]|=n,this._formatFeatures[ti.ASTC_SRGBA_10X10]|=n,this._formatFeatures[ti.ASTC_SRGBA_12X10]|=n,this._formatFeatures[ti.ASTC_SRGBA_12X12]|=n)}createCommandBuffer(e){const t=new(e.type===Bi.PRIMARY?s3:q4);return t.initialize(e),t}createSwapchain(e){const t=new f3;return this._swapchain=t,t.initialize(e),t}createBuffer(e){const t=new k4;return t.initialize(e),t}createTexture(e){const t=new u3;return t.initialize(e),t}createDescriptorSet(e){const t=new d4;return t.initialize(e),t}createShader(e){const t=new l3;return t.initialize(e),t}createInputAssembler(e){const t=new Y4;return t.initialize(e),t}createRenderPass(e){const t=new r3;return t.initialize(e),t}createFramebuffer(e){const t=new X4;return t.initialize(e),t}createDescriptorSetLayout(e){const t=new K4;return t.initialize(e),t}createPipelineLayout(e){const t=new $4;return t.initialize(e),t}createPipelineState(e){const t=new i3;return t.initialize(e),t}createQueue(e){const t=new o3;return t.initialize(e),t}getSampler(e){const t=Eo.computeHash(e);return this._samplers.has(t)||this._samplers.set(t,new c3(e,t)),this._samplers.get(t)}getGeneralBarrier(e){const t=To.computeHash(e);return this._generalBarrierss.has(t)||this._generalBarrierss.set(t,new To(e,t)),this._generalBarrierss.get(t)}getTextureBarrier(e){const t=bo.computeHash(e);return this._textureBarriers.has(t)||this._textureBarriers.set(t,new bo(e,t)),this._textureBarriers.get(t)}copyBuffersToTexture(e,t,n){V4(this,e,t.gpuTexture,n)}copyTextureToBuffers(e,t,n){!function(e,t,n,i){const{gl:s}=e,o=e.stateCache,r=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,r);let a=0,c=0,l=1,h=1;switch(t.glTarget){case s.TEXTURE_2D:for(let e=0;e<i.length;e++){const o=i[e];s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,t.glTarget,t.glTexture,o.texSubres.mipLevel),a=o.texOffset.x,c=o.texOffset.y,l=o.texExtent.width,h=o.texExtent.height,s.readPixels(a,c,l,h,t.glFormat,t.glType,n[e])}break;default:console.error("Unsupported GL texture type, copy texture to buffers failed.")}s.bindFramebuffer(s.FRAMEBUFFER,null),o.glFramebuffer=null,s.deleteFramebuffer(r)}(this,e.gpuTexture,t,n)}copyTexImagesToTexture(e,t,n){!function(e,t,n,i){const{gl:s}=e,o=e.stateCache.glTexUnits[e.stateCache.texUnit];o.glTexture!==n.glTexture&&(s.bindTexture(n.glTarget,n.glTexture),o.glTexture=n.glTexture);let r=0,a=0;switch(n.glTarget){case s.TEXTURE_2D:for(let e=0;e<i.length;e++){const o=i[e];s.texSubImage2D(s.TEXTURE_2D,o.texSubres.mipLevel,o.texOffset.x,o.texOffset.y,n.glFormat,n.glType,t[r++])}break;case s.TEXTURE_CUBE_MAP:for(let e=0;e<i.length;e++){const o=i[e],c=o.texSubres.baseArrayLayer+o.texSubres.layerCount;for(a=o.texSubres.baseArrayLayer;a<c;++a)s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,o.texSubres.mipLevel,o.texOffset.x,o.texOffset.y,n.glFormat,n.glType,t[r++])}break;default:console.error("Unsupported GL texture type, copy buffer to texture failed.")}n.flags&hi.GEN_MIPMAP&&n.isPowerOf2&&s.generateMipmap(n.glTarget)}(this,e,t.gpuTexture,n)}}e("WebGLDevice",m3),u.WebGLDevice=m3;class g3 extends ro{constructor(...e){super(...e),this._gpuDescriptorSet=null}get gpuDescriptorSet(){return this._gpuDescriptorSet}initialize(e){this._layout=e.layout;const{bindings:t,descriptorIndices:n,descriptorCount:i}=e.layout.gpuDescriptorSetLayout;this._buffers=Array(i).fill(null),this._textures=Array(i).fill(null),this._samplers=Array(i).fill(null);const s=[];this._gpuDescriptorSet={gpuDescriptors:s,descriptorIndices:n};for(let e=0;e<t.length;++e){const n=t[e];for(let e=0;e<n.count;e++)s.push({type:n.descriptorType,gpuBuffer:null,gpuTextureView:null,gpuSampler:null})}}destroy(){this._layout=null,this._gpuDescriptorSet=null}update(){if(this._isDirty&&this._gpuDescriptorSet){const e=this._gpuDescriptorSet.gpuDescriptors;for(let t=0;t<e.length;++t)e[t].type&ks?this._buffers[t]&&(e[t].gpuBuffer=this._buffers[t].gpuBuffer):e[t].type&js&&(this._textures[t]&&(e[t].gpuTextureView=this._textures[t].gpuTextureView),this._samplers[t]&&(e[t].gpuSampler=this._samplers[t].gpuSampler));this._isDirty=!1}}}let v3;!function(e){e[e.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT",e[e.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",e[e.COMPRESSED_SRGB_S3TC_DXT1_EXT=35916]="COMPRESSED_SRGB_S3TC_DXT1_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT=35917]="COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT=35918]="COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT",e[e.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT=35919]="COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT",e[e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG=35840]="COMPRESSED_RGB_PVRTC_4BPPV1_IMG",e[e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG=35841]="COMPRESSED_RGB_PVRTC_2BPPV1_IMG",e[e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG=35842]="COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",e[e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG=35843]="COMPRESSED_RGBA_PVRTC_2BPPV1_IMG",e[e.COMPRESSED_RGB_ETC1_WEBGL=36196]="COMPRESSED_RGB_ETC1_WEBGL",e[e.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC",e[e.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC",e[e.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC",e[e.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC",e[e.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",e[e.COMPRESSED_SRGB8_ETC2=37493]="COMPRESSED_SRGB8_ETC2",e[e.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37494]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37495]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",e[e.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC",e[e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37497]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC",e[e.COMPRESSED_RGBA_ASTC_4x4_KHR=37808]="COMPRESSED_RGBA_ASTC_4x4_KHR",e[e.COMPRESSED_RGBA_ASTC_5x4_KHR=37809]="COMPRESSED_RGBA_ASTC_5x4_KHR",e[e.COMPRESSED_RGBA_ASTC_5x5_KHR=37810]="COMPRESSED_RGBA_ASTC_5x5_KHR",e[e.COMPRESSED_RGBA_ASTC_6x5_KHR=37811]="COMPRESSED_RGBA_ASTC_6x5_KHR",e[e.COMPRESSED_RGBA_ASTC_6x6_KHR=37812]="COMPRESSED_RGBA_ASTC_6x6_KHR",e[e.COMPRESSED_RGBA_ASTC_8x5_KHR=37813]="COMPRESSED_RGBA_ASTC_8x5_KHR",e[e.COMPRESSED_RGBA_ASTC_8x6_KHR=37814]="COMPRESSED_RGBA_ASTC_8x6_KHR",e[e.COMPRESSED_RGBA_ASTC_8x8_KHR=37815]="COMPRESSED_RGBA_ASTC_8x8_KHR",e[e.COMPRESSED_RGBA_ASTC_10x5_KHR=37816]="COMPRESSED_RGBA_ASTC_10x5_KHR",e[e.COMPRESSED_RGBA_ASTC_10x6_KHR=37817]="COMPRESSED_RGBA_ASTC_10x6_KHR",e[e.COMPRESSED_RGBA_ASTC_10x8_KHR=37818]="COMPRESSED_RGBA_ASTC_10x8_KHR",e[e.COMPRESSED_RGBA_ASTC_10x10_KHR=37819]="COMPRESSED_RGBA_ASTC_10x10_KHR",e[e.COMPRESSED_RGBA_ASTC_12x10_KHR=37820]="COMPRESSED_RGBA_ASTC_12x10_KHR",e[e.COMPRESSED_RGBA_ASTC_12x12_KHR=37821]="COMPRESSED_RGBA_ASTC_12x12_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR=37840]="COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR=37841]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR=37842]="COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR=37843]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR=37844]="COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR=37845]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR=37846]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR=37847]="COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR=37848]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR=37849]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR=37850]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR=37851]="COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR=37852]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR",e[e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR=37853]="COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR"}(v3||(v3={}));class y3{static get instance(){return y3._instance}static setInstance(e){y3._instance=e}}y3._instance=null;const x3=[10497,33648,33071,33071],S3=new Float32Array(4);function C3(e,t){switch(e){case ti.R8:return t.UNSIGNED_BYTE;case ti.R8SN:return t.BYTE;case ti.R8UI:return t.UNSIGNED_BYTE;case ti.R8I:return t.BYTE;case ti.R16F:return t.HALF_FLOAT;case ti.R16UI:return t.UNSIGNED_SHORT;case ti.R16I:return t.SHORT;case ti.R32F:return t.FLOAT;case ti.R32UI:return t.UNSIGNED_INT;case ti.R32I:return t.INT;case ti.RG8:return t.UNSIGNED_BYTE;case ti.RG8SN:return t.BYTE;case ti.RG8UI:return t.UNSIGNED_BYTE;case ti.RG8I:return t.BYTE;case ti.RG16F:return t.HALF_FLOAT;case ti.RG16UI:return t.UNSIGNED_SHORT;case ti.RG16I:return t.SHORT;case ti.RG32F:return t.FLOAT;case ti.RG32UI:return t.UNSIGNED_INT;case ti.RG32I:return t.INT;case ti.RGB8:case ti.SRGB8:return t.UNSIGNED_BYTE;case ti.RGB8SN:return t.BYTE;case ti.RGB8UI:return t.UNSIGNED_BYTE;case ti.RGB8I:return t.BYTE;case ti.RGB16F:return t.HALF_FLOAT;case ti.RGB16UI:return t.UNSIGNED_SHORT;case ti.RGB16I:return t.SHORT;case ti.RGB32F:return t.FLOAT;case ti.RGB32UI:return t.UNSIGNED_INT;case ti.RGB32I:return t.INT;case ti.BGRA8:case ti.RGBA8:case ti.SRGB8_A8:return t.UNSIGNED_BYTE;case ti.RGBA8SN:return t.BYTE;case ti.RGBA8UI:return t.UNSIGNED_BYTE;case ti.RGBA8I:return t.BYTE;case ti.RGBA16F:return t.HALF_FLOAT;case ti.RGBA16UI:return t.UNSIGNED_SHORT;case ti.RGBA16I:return t.SHORT;case ti.RGBA32F:return t.FLOAT;case ti.RGBA32UI:return t.UNSIGNED_INT;case ti.RGBA32I:return t.INT;case ti.R5G6B5:return t.UNSIGNED_SHORT_5_6_5;case ti.R11G11B10F:return t.UNSIGNED_INT_10F_11F_11F_REV;case ti.RGB5A1:return t.UNSIGNED_SHORT_5_5_5_1;case ti.RGBA4:return t.UNSIGNED_SHORT_4_4_4_4;case ti.RGB10A2:case ti.RGB10A2UI:return t.UNSIGNED_INT_2_10_10_10_REV;case ti.RGB9E5:case ti.DEPTH:return t.FLOAT;case ti.DEPTH_STENCIL:return t.UNSIGNED_INT_24_8;case ti.BC1:case ti.BC1_SRGB:case ti.BC2:case ti.BC2_SRGB:case ti.BC3:case ti.BC3_SRGB:case ti.BC4:return t.UNSIGNED_BYTE;case ti.BC4_SNORM:return t.BYTE;case ti.BC5:return t.UNSIGNED_BYTE;case ti.BC5_SNORM:return t.BYTE;case ti.BC6H_SF16:case ti.BC6H_UF16:return t.FLOAT;case ti.BC7:case ti.BC7_SRGB:case ti.ETC_RGB8:case ti.ETC2_RGB8:case ti.ETC2_SRGB8:case ti.ETC2_RGB8_A1:case ti.ETC2_SRGB8_A1:case ti.EAC_R11:return t.UNSIGNED_BYTE;case ti.EAC_R11SN:return t.BYTE;case ti.EAC_RG11:return t.UNSIGNED_BYTE;case ti.EAC_RG11SN:return t.BYTE;case ti.PVRTC_RGB2:case ti.PVRTC_RGBA2:case ti.PVRTC_RGB4:case ti.PVRTC_RGBA4:case ti.PVRTC2_2BPP:case ti.PVRTC2_4BPP:return t.UNSIGNED_BYTE;case ti.ASTC_RGBA_4X4:case ti.ASTC_RGBA_5X4:case ti.ASTC_RGBA_5X5:case ti.ASTC_RGBA_6X5:case ti.ASTC_RGBA_6X6:case ti.ASTC_RGBA_8X5:case ti.ASTC_RGBA_8X6:case ti.ASTC_RGBA_8X8:case ti.ASTC_RGBA_10X5:case ti.ASTC_RGBA_10X6:case ti.ASTC_RGBA_10X8:case ti.ASTC_RGBA_10X10:case ti.ASTC_RGBA_12X10:case ti.ASTC_RGBA_12X12:case ti.ASTC_SRGBA_4X4:case ti.ASTC_SRGBA_5X4:case ti.ASTC_SRGBA_5X5:case ti.ASTC_SRGBA_6X5:case ti.ASTC_SRGBA_6X6:case ti.ASTC_SRGBA_8X5:case ti.ASTC_SRGBA_8X6:case ti.ASTC_SRGBA_8X8:case ti.ASTC_SRGBA_10X5:case ti.ASTC_SRGBA_10X6:case ti.ASTC_SRGBA_10X8:case ti.ASTC_SRGBA_10X10:case ti.ASTC_SRGBA_12X10:case ti.ASTC_SRGBA_12X12:default:return t.UNSIGNED_BYTE}}function E3(e,t){switch(e){case ii.BOOL:return t.BOOL;case ii.BOOL2:return t.BOOL_VEC2;case ii.BOOL3:return t.BOOL_VEC3;case ii.BOOL4:return t.BOOL_VEC4;case ii.INT:return t.INT;case ii.INT2:return t.INT_VEC2;case ii.INT3:return t.INT_VEC3;case ii.INT4:return t.INT_VEC4;case ii.UINT:return t.UNSIGNED_INT;case ii.FLOAT:return t.FLOAT;case ii.FLOAT2:return t.FLOAT_VEC2;case ii.FLOAT3:return t.FLOAT_VEC3;case ii.FLOAT4:return t.FLOAT_VEC4;case ii.MAT2:return t.FLOAT_MAT2;case ii.MAT2X3:return t.FLOAT_MAT2x3;case ii.MAT2X4:return t.FLOAT_MAT2x4;case ii.MAT3X2:return t.FLOAT_MAT3x2;case ii.MAT3:return t.FLOAT_MAT3;case ii.MAT3X4:return t.FLOAT_MAT3x4;case ii.MAT4X2:return t.FLOAT_MAT4x2;case ii.MAT4X3:return t.FLOAT_MAT4x3;case ii.MAT4:return t.FLOAT_MAT4;case ii.SAMPLER2D:return t.SAMPLER_2D;case ii.SAMPLER2D_ARRAY:return t.SAMPLER_2D_ARRAY;case ii.SAMPLER3D:return t.SAMPLER_3D;case ii.SAMPLER_CUBE:return t.SAMPLER_CUBE;default:return console.error("Unsupported GLType, convert to GL type failed."),ii.UNKNOWN}}function T3(e,t){switch(e){case t.BOOL:return ii.BOOL;case t.BOOL_VEC2:return ii.BOOL2;case t.BOOL_VEC3:return ii.BOOL3;case t.BOOL_VEC4:return ii.BOOL4;case t.INT:return ii.INT;case t.INT_VEC2:return ii.INT2;case t.INT_VEC3:return ii.INT3;case t.INT_VEC4:return ii.INT4;case t.UNSIGNED_INT:return ii.UINT;case t.UNSIGNED_INT_VEC2:return ii.UINT2;case t.UNSIGNED_INT_VEC3:return ii.UINT3;case t.UNSIGNED_INT_VEC4:return ii.UINT4;case t.FLOAT:return ii.FLOAT;case t.FLOAT_VEC2:return ii.FLOAT2;case t.FLOAT_VEC3:return ii.FLOAT3;case t.FLOAT_VEC4:return ii.FLOAT4;case t.FLOAT_MAT2:return ii.MAT2;case t.FLOAT_MAT2x3:return ii.MAT2X3;case t.FLOAT_MAT2x4:return ii.MAT2X4;case t.FLOAT_MAT3x2:return ii.MAT3X2;case t.FLOAT_MAT3:return ii.MAT3;case t.FLOAT_MAT3x4:return ii.MAT3X4;case t.FLOAT_MAT4x2:return ii.MAT4X2;case t.FLOAT_MAT4x3:return ii.MAT4X3;case t.FLOAT_MAT4:return ii.MAT4;case t.SAMPLER_2D:return ii.SAMPLER2D;case t.SAMPLER_2D_ARRAY:return ii.SAMPLER2D_ARRAY;case t.SAMPLER_3D:return ii.SAMPLER3D;case t.SAMPLER_CUBE:return ii.SAMPLER_CUBE;default:return console.error("Unsupported GLType, convert to Type failed."),ii.UNKNOWN}}function b3(e,t){switch(e){case t.BOOL:return 4;case t.BOOL_VEC2:return 8;case t.BOOL_VEC3:return 12;case t.BOOL_VEC4:return 16;case t.INT:return 4;case t.INT_VEC2:return 8;case t.INT_VEC3:return 12;case t.INT_VEC4:return 16;case t.UNSIGNED_INT:return 4;case t.UNSIGNED_INT_VEC2:return 8;case t.UNSIGNED_INT_VEC3:return 12;case t.UNSIGNED_INT_VEC4:return 16;case t.FLOAT:return 4;case t.FLOAT_VEC2:return 8;case t.FLOAT_VEC3:return 12;case t.FLOAT_VEC4:case t.FLOAT_MAT2:return 16;case t.FLOAT_MAT2x3:return 24;case t.FLOAT_MAT2x4:return 32;case t.FLOAT_MAT3x2:return 24;case t.FLOAT_MAT3:return 36;case t.FLOAT_MAT3x4:return 48;case t.FLOAT_MAT4x2:return 32;case t.FLOAT_MAT4x3:return 48;case t.FLOAT_MAT4:return 64;case t.SAMPLER_2D:case t.SAMPLER_2D_ARRAY:case t.SAMPLER_2D_ARRAY_SHADOW:case t.SAMPLER_3D:case t.SAMPLER_CUBE:case t.INT_SAMPLER_2D:case t.INT_SAMPLER_2D_ARRAY:case t.INT_SAMPLER_3D:case t.INT_SAMPLER_CUBE:case t.UNSIGNED_INT_SAMPLER_2D:case t.UNSIGNED_INT_SAMPLER_2D_ARRAY:case t.UNSIGNED_INT_SAMPLER_3D:case t.UNSIGNED_INT_SAMPLER_CUBE:return 4;default:return console.error("Unsupported GLType, get type failed."),0}}function A3(e,t){switch(e){case t.FLOAT_MAT2:case t.FLOAT_MAT2x3:case t.FLOAT_MAT2x4:return 2;case t.FLOAT_MAT3x2:case t.FLOAT_MAT3:case t.FLOAT_MAT3x4:return 3;case t.FLOAT_MAT4x2:case t.FLOAT_MAT4x3:case t.FLOAT_MAT4:return 4;default:return 1}}const P3=[512,513,514,515,516,517,518,519],w3=[0,7680,7681,7682,7683,5386,34055,34056],I3=[32774,32778,32779,32775,32776],R3=[0,1,770,772,771,773,768,774,769,775,776,32769,32770,32771,32772];let D3;!function(e){e[e.BEGIN_RENDER_PASS=0]="BEGIN_RENDER_PASS",e[e.END_RENDER_PASS=1]="END_RENDER_PASS",e[e.BIND_STATES=2]="BIND_STATES",e[e.DRAW=3]="DRAW",e[e.UPDATE_BUFFER=4]="UPDATE_BUFFER",e[e.COPY_BUFFER_TO_TEXTURE=5]="COPY_BUFFER_TO_TEXTURE",e[e.COUNT=6]="COUNT"}(D3||(D3={}));class O3{constructor(e){this.cmdType=void 0,this.refCount=0,this.cmdType=e}}class N3 extends O3{constructor(){super(D3.BEGIN_RENDER_PASS),this.gpuRenderPass=null,this.gpuFramebuffer=null,this.renderArea=new Hi,this.clearColors=[],this.clearDepth=1,this.clearStencil=0}clear(){this.gpuFramebuffer=null,this.clearColors.length=0}}class M3 extends O3{constructor(){super(D3.BIND_STATES),this.gpuPipelineState=null,this.gpuInputAssembler=null,this.gpuDescriptorSets=[],this.dynamicOffsets=[],this.dynamicStates=new Gs}clear(){this.gpuPipelineState=null,this.gpuInputAssembler=null,this.gpuDescriptorSets.length=0,this.dynamicOffsets.length=0}}class L3 extends O3{constructor(){super(D3.DRAW),this.drawInfo=new is}clear(){}}class B3 extends O3{constructor(){super(D3.UPDATE_BUFFER),this.gpuBuffer=null,this.buffer=null,this.offset=0,this.size=0}clear(){this.gpuBuffer=null,this.buffer=null}}class F3 extends O3{constructor(){super(D3.COPY_BUFFER_TO_TEXTURE),this.gpuTexture=null,this.buffers=[],this.regions=[]}clear(){this.gpuTexture=null,this.buffers.length=0,this.regions.length=0}}class z3{constructor(){this.cmds=new zl(1),this.beginRenderPassCmds=new zl(1),this.bindStatesCmds=new zl(1),this.drawCmds=new zl(1),this.updateBufferCmds=new zl(1),this.copyBufferToTextureCmds=new zl(1)}clearCmds(e){this.beginRenderPassCmds.length&&(e.beginRenderPassCmdPool.freeCmds(this.beginRenderPassCmds),this.beginRenderPassCmds.clear()),this.bindStatesCmds.length&&(e.bindStatesCmdPool.freeCmds(this.bindStatesCmds),this.bindStatesCmds.clear()),this.drawCmds.length&&(e.drawCmdPool.freeCmds(this.drawCmds),this.drawCmds.clear()),this.updateBufferCmds.length&&(e.updateBufferCmdPool.freeCmds(this.updateBufferCmds),this.updateBufferCmds.clear()),this.copyBufferToTextureCmds.length&&(e.copyBufferToTextureCmdPool.freeCmds(this.copyBufferToTextureCmds),this.copyBufferToTextureCmds.clear()),this.cmds.clear()}}function U3(e,t,n,i,s){if(t.usage&si.INDIRECT){t.indirects.clearDraws();const e=n.drawInfos;for(let n=0;n<e.length;++n)t.indirects.setDrawInfo(i+n,e[n])}else{const o=n,{gl:r}=e,a=e.stateCache;switch(t.glTarget){case r.ARRAY_BUFFER:e.extensions.useVAO&&a.glVAO&&(r.bindVertexArray(null),a.glVAO=null),H3.gpuInputAssembler=null,a.glArrayBuffer!==t.glBuffer&&(r.bindBuffer(r.ARRAY_BUFFER,t.glBuffer),a.glArrayBuffer=t.glBuffer),s===o.byteLength?r.bufferSubData(t.glTarget,i,o):r.bufferSubData(t.glTarget,i,o.slice(0,s));break;case r.ELEMENT_ARRAY_BUFFER:e.extensions.useVAO&&a.glVAO&&(r.bindVertexArray(null),a.glVAO=null),H3.gpuInputAssembler=null,a.glElementArrayBuffer!==t.glBuffer&&(r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.glBuffer),a.glElementArrayBuffer=t.glBuffer),s===o.byteLength?r.bufferSubData(t.glTarget,i,o):r.bufferSubData(t.glTarget,i,o.slice(0,s));break;case r.UNIFORM_BUFFER:a.glUniformBuffer!==t.glBuffer&&(r.bindBuffer(r.UNIFORM_BUFFER,t.glBuffer),a.glUniformBuffer=t.glBuffer),s===o.byteLength?r.bufferSubData(t.glTarget,i,o):r.bufferSubData(t.glTarget,i,new Float32Array(o,0,s/4));break;default:console.error("Unsupported BufferType, update buffer failed.")}}}function G3(e,t){const{gl:n}=e;t.glInternalFmt=function(e,t){switch(e){case ti.A8:return t.ALPHA;case ti.L8:return t.LUMINANCE;case ti.LA8:return t.LUMINANCE_ALPHA;case ti.R8:return t.R8;case ti.R8SN:return t.R8_SNORM;case ti.R8UI:return t.R8UI;case ti.R8I:return t.R8I;case ti.RG8:return t.RG8;case ti.RG8SN:return t.RG8_SNORM;case ti.RG8UI:return t.RG8UI;case ti.RG8I:return t.RG8I;case ti.RGB8:return t.RGB8;case ti.RGB8SN:return t.RGB8_SNORM;case ti.RGB8UI:return t.RGB8UI;case ti.RGB8I:return t.RGB8I;case ti.BGRA8:case ti.RGBA8:return t.RGBA8;case ti.RGBA8SN:return t.RGBA8_SNORM;case ti.RGBA8UI:return t.RGBA8UI;case ti.RGBA8I:return t.RGBA8I;case ti.R16I:return t.R16I;case ti.R16UI:return t.R16UI;case ti.R16F:return t.R16F;case ti.RG16I:return t.RG16I;case ti.RG16UI:return t.RG16UI;case ti.RG16F:return t.RG16F;case ti.RGB16I:return t.RGB16I;case ti.RGB16UI:return t.RGB16UI;case ti.RGB16F:return t.RGB16F;case ti.RGBA16I:return t.RGBA16I;case ti.RGBA16UI:return t.RGBA16UI;case ti.RGBA16F:return t.RGBA16F;case ti.R32I:return t.R32I;case ti.R32UI:return t.R32UI;case ti.R32F:return t.R32F;case ti.RG32I:return t.RG32I;case ti.RG32UI:return t.RG32UI;case ti.RG32F:return t.RG32F;case ti.RGB32I:return t.RGB32I;case ti.RGB32UI:return t.RGB32UI;case ti.RGB32F:return t.RGB32F;case ti.RGBA32I:return t.RGBA32I;case ti.RGBA32UI:return t.RGBA32UI;case ti.RGBA32F:return t.RGBA32F;case ti.R5G6B5:return t.RGB565;case ti.RGB5A1:return t.RGB5_A1;case ti.RGBA4:return t.RGBA4;case ti.SRGB8:return t.SRGB8;case ti.SRGB8_A8:return t.SRGB8_ALPHA8;case ti.RGB10A2:return t.RGB10_A2;case ti.RGB10A2UI:return t.RGB10_A2UI;case ti.R11G11B10F:return t.R11F_G11F_B10F;case ti.DEPTH:return t.DEPTH_COMPONENT32F;case ti.DEPTH_STENCIL:return t.DEPTH24_STENCIL8;case ti.BC1:return v3.COMPRESSED_RGB_S3TC_DXT1_EXT;case ti.BC1_ALPHA:return v3.COMPRESSED_RGBA_S3TC_DXT1_EXT;case ti.BC1_SRGB:return v3.COMPRESSED_SRGB_S3TC_DXT1_EXT;case ti.BC1_SRGB_ALPHA:return v3.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;case ti.BC2:return v3.COMPRESSED_RGBA_S3TC_DXT3_EXT;case ti.BC2_SRGB:return v3.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;case ti.BC3:return v3.COMPRESSED_RGBA_S3TC_DXT5_EXT;case ti.BC3_SRGB:return v3.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;case ti.ETC_RGB8:return v3.COMPRESSED_RGB_ETC1_WEBGL;case ti.ETC2_RGB8:return v3.COMPRESSED_RGB8_ETC2;case ti.ETC2_SRGB8:return v3.COMPRESSED_SRGB8_ETC2;case ti.ETC2_RGB8_A1:return v3.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;case ti.ETC2_SRGB8_A1:return v3.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;case ti.ETC2_RGBA8:return v3.COMPRESSED_RGBA8_ETC2_EAC;case ti.ETC2_SRGB8_A8:return v3.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;case ti.EAC_R11:return v3.COMPRESSED_R11_EAC;case ti.EAC_R11SN:return v3.COMPRESSED_SIGNED_R11_EAC;case ti.EAC_RG11:return v3.COMPRESSED_RG11_EAC;case ti.EAC_RG11SN:return v3.COMPRESSED_SIGNED_RG11_EAC;case ti.PVRTC_RGB2:return v3.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;case ti.PVRTC_RGBA2:return v3.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;case ti.PVRTC_RGB4:return v3.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;case ti.PVRTC_RGBA4:return v3.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;case ti.ASTC_RGBA_4X4:return v3.COMPRESSED_RGBA_ASTC_4x4_KHR;case ti.ASTC_RGBA_5X4:return v3.COMPRESSED_RGBA_ASTC_5x4_KHR;case ti.ASTC_RGBA_5X5:return v3.COMPRESSED_RGBA_ASTC_5x5_KHR;case ti.ASTC_RGBA_6X5:return v3.COMPRESSED_RGBA_ASTC_6x5_KHR;case ti.ASTC_RGBA_6X6:return v3.COMPRESSED_RGBA_ASTC_6x6_KHR;case ti.ASTC_RGBA_8X5:return v3.COMPRESSED_RGBA_ASTC_8x5_KHR;case ti.ASTC_RGBA_8X6:return v3.COMPRESSED_RGBA_ASTC_8x6_KHR;case ti.ASTC_RGBA_8X8:return v3.COMPRESSED_RGBA_ASTC_8x8_KHR;case ti.ASTC_RGBA_10X5:return v3.COMPRESSED_RGBA_ASTC_10x5_KHR;case ti.ASTC_RGBA_10X6:return v3.COMPRESSED_RGBA_ASTC_10x6_KHR;case ti.ASTC_RGBA_10X8:return v3.COMPRESSED_RGBA_ASTC_10x8_KHR;case ti.ASTC_RGBA_10X10:return v3.COMPRESSED_RGBA_ASTC_10x10_KHR;case ti.ASTC_RGBA_12X10:return v3.COMPRESSED_RGBA_ASTC_12x10_KHR;case ti.ASTC_RGBA_12X12:return v3.COMPRESSED_RGBA_ASTC_12x12_KHR;case ti.ASTC_SRGBA_4X4:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;case ti.ASTC_SRGBA_5X4:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR;case ti.ASTC_SRGBA_5X5:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR;case ti.ASTC_SRGBA_6X5:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR;case ti.ASTC_SRGBA_6X6:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;case ti.ASTC_SRGBA_8X5:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR;case ti.ASTC_SRGBA_8X6:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR;case ti.ASTC_SRGBA_8X8:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;case ti.ASTC_SRGBA_10X5:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR;case ti.ASTC_SRGBA_10X6:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR;case ti.ASTC_SRGBA_10X8:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR;case ti.ASTC_SRGBA_10X10:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;case ti.ASTC_SRGBA_12X10:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR;case ti.ASTC_SRGBA_12X12:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;default:return console.error("Unsupported Format, convert to WebGL internal format failed."),t.RGBA}}(t.format,n),t.glFormat=function(e,t){switch(e){case ti.A8:return t.ALPHA;case ti.L8:return t.LUMINANCE;case ti.LA8:return t.LUMINANCE_ALPHA;case ti.R8:case ti.R8SN:return t.RED;case ti.R8UI:case ti.R8I:return t.RED;case ti.RG8:case ti.RG8SN:case ti.RG8UI:case ti.RG8I:return t.RG;case ti.RGB8:case ti.RGB8SN:case ti.RGB8UI:case ti.RGB8I:return t.RGB;case ti.BGRA8:case ti.RGBA8:case ti.RGBA8SN:case ti.RGBA8UI:case ti.RGBA8I:return t.RGBA;case ti.R16UI:case ti.R16I:case ti.R16F:return t.RED;case ti.RG16UI:case ti.RG16I:case ti.RG16F:return t.RG;case ti.RGB16UI:case ti.RGB16I:case ti.RGB16F:return t.RGB;case ti.RGBA16UI:case ti.RGBA16I:case ti.RGBA16F:return t.RGBA;case ti.R32UI:case ti.R32I:case ti.R32F:return t.RED;case ti.RG32UI:case ti.RG32I:case ti.RG32F:return t.RG;case ti.RGB32UI:case ti.RGB32I:case ti.RGB32F:return t.RGB;case ti.RGBA32UI:case ti.RGBA32I:case ti.RGBA32F:case ti.RGB10A2:return t.RGBA;case ti.R11G11B10F:case ti.R5G6B5:return t.RGB;case ti.RGB5A1:case ti.RGBA4:return t.RGBA;case ti.SRGB8:return t.RGB;case ti.SRGB8_A8:return t.RGBA;case ti.DEPTH:return t.DEPTH_COMPONENT;case ti.DEPTH_STENCIL:return t.DEPTH_STENCIL;case ti.BC1:return v3.COMPRESSED_RGB_S3TC_DXT1_EXT;case ti.BC1_ALPHA:return v3.COMPRESSED_RGBA_S3TC_DXT1_EXT;case ti.BC1_SRGB:return v3.COMPRESSED_SRGB_S3TC_DXT1_EXT;case ti.BC1_SRGB_ALPHA:return v3.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;case ti.BC2:return v3.COMPRESSED_RGBA_S3TC_DXT3_EXT;case ti.BC2_SRGB:return v3.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;case ti.BC3:return v3.COMPRESSED_RGBA_S3TC_DXT5_EXT;case ti.BC3_SRGB:return v3.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;case ti.ETC_RGB8:return v3.COMPRESSED_RGB_ETC1_WEBGL;case ti.ETC2_RGB8:return v3.COMPRESSED_RGB8_ETC2;case ti.ETC2_SRGB8:return v3.COMPRESSED_SRGB8_ETC2;case ti.ETC2_RGB8_A1:return v3.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;case ti.ETC2_SRGB8_A1:return v3.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;case ti.ETC2_RGBA8:return v3.COMPRESSED_RGBA8_ETC2_EAC;case ti.ETC2_SRGB8_A8:return v3.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;case ti.EAC_R11:return v3.COMPRESSED_R11_EAC;case ti.EAC_R11SN:return v3.COMPRESSED_SIGNED_R11_EAC;case ti.EAC_RG11:return v3.COMPRESSED_RG11_EAC;case ti.EAC_RG11SN:return v3.COMPRESSED_SIGNED_RG11_EAC;case ti.PVRTC_RGB2:return v3.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;case ti.PVRTC_RGBA2:return v3.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;case ti.PVRTC_RGB4:return v3.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;case ti.PVRTC_RGBA4:return v3.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;case ti.ASTC_RGBA_4X4:return v3.COMPRESSED_RGBA_ASTC_4x4_KHR;case ti.ASTC_RGBA_5X4:return v3.COMPRESSED_RGBA_ASTC_5x4_KHR;case ti.ASTC_RGBA_5X5:return v3.COMPRESSED_RGBA_ASTC_5x5_KHR;case ti.ASTC_RGBA_6X5:return v3.COMPRESSED_RGBA_ASTC_6x5_KHR;case ti.ASTC_RGBA_6X6:return v3.COMPRESSED_RGBA_ASTC_6x6_KHR;case ti.ASTC_RGBA_8X5:return v3.COMPRESSED_RGBA_ASTC_8x5_KHR;case ti.ASTC_RGBA_8X6:return v3.COMPRESSED_RGBA_ASTC_8x6_KHR;case ti.ASTC_RGBA_8X8:return v3.COMPRESSED_RGBA_ASTC_8x8_KHR;case ti.ASTC_RGBA_10X5:return v3.COMPRESSED_RGBA_ASTC_10x5_KHR;case ti.ASTC_RGBA_10X6:return v3.COMPRESSED_RGBA_ASTC_10x6_KHR;case ti.ASTC_RGBA_10X8:return v3.COMPRESSED_RGBA_ASTC_10x8_KHR;case ti.ASTC_RGBA_10X10:return v3.COMPRESSED_RGBA_ASTC_10x10_KHR;case ti.ASTC_RGBA_12X10:return v3.COMPRESSED_RGBA_ASTC_12x10_KHR;case ti.ASTC_RGBA_12X12:return v3.COMPRESSED_RGBA_ASTC_12x12_KHR;case ti.ASTC_SRGBA_4X4:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;case ti.ASTC_SRGBA_5X4:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR;case ti.ASTC_SRGBA_5X5:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR;case ti.ASTC_SRGBA_6X5:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR;case ti.ASTC_SRGBA_6X6:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;case ti.ASTC_SRGBA_8X5:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR;case ti.ASTC_SRGBA_8X6:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR;case ti.ASTC_SRGBA_8X8:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;case ti.ASTC_SRGBA_10X5:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR;case ti.ASTC_SRGBA_10X6:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR;case ti.ASTC_SRGBA_10X8:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR;case ti.ASTC_SRGBA_10X10:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;case ti.ASTC_SRGBA_12X10:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR;case ti.ASTC_SRGBA_12X12:return v3.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;default:return console.error("Unsupported Format, convert to WebGL format failed."),t.RGBA}}(t.format,n),t.glType=C3(t.format,n);let i=t.width,s=t.height;switch(t.type){case ci.TEX2D:{if(t.glTarget=n.TEXTURE_2D,t.isSwapchainTexture)break;const o=Math.max(i,s);if(o>e.capabilities.maxTextureSize&&N(9100,o,e.capabilities.maxTextureSize),t.samples===_i.ONE){if(t.glTexture=n.createTexture(),t.size>0){const o=e.stateCache.glTexUnits[e.stateCache.texUnit];if(o.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_2D,t.glTexture),o.glTexture=t.glTexture),Hs[t.format].isCompressed)for(let e=0;e<t.mipLevel;++e){const o=Ys(t.format,i,s,1),r=new Uint8Array(o);n.compressedTexImage2D(n.TEXTURE_2D,e,t.glInternalFmt,i,s,0,r),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}else n.texStorage2D(n.TEXTURE_2D,t.mipLevel,t.glInternalFmt,i,s)}}else t.glRenderbuffer=n.createRenderbuffer(),t.size>0&&(e.stateCache.glRenderbuffer!==t.glRenderbuffer&&(n.bindRenderbuffer(n.RENDERBUFFER,t.glRenderbuffer),e.stateCache.glRenderbuffer=t.glRenderbuffer),n.renderbufferStorageMultisample(n.RENDERBUFFER,t.samples,t.glInternalFmt,t.width,t.height));break}case ci.CUBE:{t.glTarget=n.TEXTURE_CUBE_MAP;const o=Math.max(i,s);if(o>e.capabilities.maxCubeMapTextureSize&&N(9100,o,e.capabilities.maxTextureSize),t.glTexture=n.createTexture(),t.size>0){const o=e.stateCache.glTexUnits[e.stateCache.texUnit];if(o.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_CUBE_MAP,t.glTexture),o.glTexture=t.glTexture),Hs[t.format].isCompressed)for(let e=0;e<t.mipLevel;++e){const o=Ys(t.format,i,s,1),r=new Uint8Array(o);for(let o=0;o<6;++o)n.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+o,e,t.glInternalFmt,i,s,0,r);i=Math.max(1,i>>1),s=Math.max(1,s>>1)}else n.texStorage2D(n.TEXTURE_CUBE_MAP,t.mipLevel,t.glInternalFmt,i,s)}break}default:console.error("Unsupported TextureType, create texture failed."),t.type=ci.TEX2D,t.glTarget=n.TEXTURE_2D}}function V3(e,t){const{gl:n}=e;if(t.glTexture){const i=e.stateCache.glTexUnits;let s=e.stateCache.texUnit;n.deleteTexture(t.glTexture);for(let e=0;e<i.length;++e)i[e].glTexture===t.glTexture&&(n.activeTexture(n.TEXTURE0+e),s=e,n.bindTexture(t.glTarget,null),i[e].glTexture=null);e.stateCache.texUnit=s,t.glTexture=null}if(t.glRenderbuffer){let i=e.stateCache.glRenderbuffer;n.deleteRenderbuffer(t.glRenderbuffer),i===t.glRenderbuffer&&(n.bindRenderbuffer(n.RENDERBUFFER,null),i=null),t.glRenderbuffer=null}}const H3={gpuPipelineState:null,gpuInputAssembler:null,glPrimitive:0,invalidateAttachments:[]};function k3(e,t,n,i,s,o,r){const{gl:a}=e,c=e.stateCache;let l=0;if(n&&t){c.glFramebuffer!==n.glFramebuffer&&(a.bindFramebuffer(a.FRAMEBUFFER,n.glFramebuffer),c.glFramebuffer=n.glFramebuffer),c.viewport.left===i.x&&c.viewport.top===i.y&&c.viewport.width===i.width&&c.viewport.height===i.height||(a.viewport(i.x,i.y,i.width,i.height),c.viewport.left=i.x,c.viewport.top=i.y,c.viewport.width=i.width,c.viewport.height=i.height),c.scissorRect.x===i.x&&c.scissorRect.y===i.y&&c.scissorRect.width===i.width&&c.scissorRect.height===i.height||(a.scissor(i.x,i.y,i.width,i.height),c.scissorRect.x=i.x,c.scissorRect.y=i.y,c.scissorRect.width=i.width,c.scissorRect.height=i.height),H3.invalidateAttachments.length=0;for(let e=0;e<s.length;++e){const i=t.colorAttachments[e];if(i.format!==ti.UNKNOWN)switch(i.loadOp){case Ci.LOAD:break;case Ci.CLEAR:if(c.bs.targets[0].blendColorMask!==xi.ALL&&a.colorMask(!0,!0,!0,!0),n.isOffscreen)S3[0]=s[e].x,S3[1]=s[e].y,S3[2]=s[e].z,S3[3]=s[e].w,a.clearBufferfv(a.COLOR,e,S3);else{const e=s[0];a.clearColor(e.x,e.y,e.z,e.w),l|=a.COLOR_BUFFER_BIT}break;case Ci.DISCARD:H3.invalidateAttachments.push(a.COLOR_ATTACHMENT0+e)}}if(t.depthStencilAttachment&&t.depthStencilAttachment.format!==ti.UNKNOWN){switch(t.depthStencilAttachment.depthLoadOp){case Ci.LOAD:break;case Ci.CLEAR:c.dss.depthWrite||a.depthMask(!0),a.clearDepth(o),l|=a.DEPTH_BUFFER_BIT;break;case Ci.DISCARD:H3.invalidateAttachments.push(a.DEPTH_ATTACHMENT)}if(Hs[t.depthStencilAttachment.format].hasStencil)switch(t.depthStencilAttachment.stencilLoadOp){case Ci.LOAD:break;case Ci.CLEAR:c.dss.stencilWriteMaskFront||a.stencilMaskSeparate(a.FRONT,65535),c.dss.stencilWriteMaskBack||a.stencilMaskSeparate(a.BACK,65535),a.clearStencil(r),l|=a.STENCIL_BUFFER_BIT;break;case Ci.DISCARD:H3.invalidateAttachments.push(a.STENCIL_ATTACHMENT)}}if(n.glFramebuffer&&H3.invalidateAttachments.length&&a.invalidateFramebuffer(a.FRAMEBUFFER,H3.invalidateAttachments),l&&a.clear(l),l&a.COLOR_BUFFER_BIT){const e=c.bs.targets[0].blendColorMask;if(e!==xi.ALL){const t=(e&xi.R)!==xi.NONE,n=(e&xi.G)!==xi.NONE,i=(e&xi.B)!==xi.NONE,s=(e&xi.A)!==xi.NONE;a.colorMask(t,n,i,s)}}l&a.DEPTH_BUFFER_BIT&&!c.dss.depthWrite&&a.depthMask(!1),l&a.STENCIL_BUFFER_BIT&&(c.dss.stencilWriteMaskFront||a.stencilMaskSeparate(a.FRONT,0),c.dss.stencilWriteMaskBack||a.stencilMaskSeparate(a.BACK,0))}}function j3(e,t,n,i,s,o){const{gl:r}=e,a=e.stateCache,c=t&&t.gpuShader;let l=!1;if(t&&H3.gpuPipelineState!==t){if(H3.gpuPipelineState=t,H3.glPrimitive=t.glPrimitive,c){const{glProgram:e}=c;a.glProgram!==e&&(r.useProgram(e),a.glProgram=e,l=!0)}const{rs:n}=t;if(n){if(a.rs.cullMode!==n.cullMode){switch(n.cullMode){case Ri.NONE:r.disable(r.CULL_FACE);break;case Ri.FRONT:r.enable(r.CULL_FACE),r.cullFace(r.FRONT);break;case Ri.BACK:r.enable(r.CULL_FACE),r.cullFace(r.BACK)}e.stateCache.rs.cullMode=n.cullMode}const t=n.isFrontFaceCCW;e.stateCache.rs.isFrontFaceCCW!==t&&(r.frontFace(t?r.CCW:r.CW),e.stateCache.rs.isFrontFaceCCW=t),e.stateCache.rs.depthBias===n.depthBias&&e.stateCache.rs.depthBiasSlop===n.depthBiasSlop||(r.polygonOffset(n.depthBias,n.depthBiasSlop),e.stateCache.rs.depthBias=n.depthBias,e.stateCache.rs.depthBiasSlop=n.depthBiasSlop),e.stateCache.rs.lineWidth!==n.lineWidth&&(r.lineWidth(n.lineWidth),e.stateCache.rs.lineWidth=n.lineWidth)}const{dss:i}=t;i&&(a.dss.depthTest!==i.depthTest&&(i.depthTest?r.enable(r.DEPTH_TEST):r.disable(r.DEPTH_TEST),a.dss.depthTest=i.depthTest),a.dss.depthWrite!==i.depthWrite&&(r.depthMask(i.depthWrite),a.dss.depthWrite=i.depthWrite),a.dss.depthFunc!==i.depthFunc&&(r.depthFunc(P3[i.depthFunc]),a.dss.depthFunc=i.depthFunc),a.dss.stencilTestFront===i.stencilTestFront&&a.dss.stencilTestBack===i.stencilTestBack||(i.stencilTestFront||i.stencilTestBack?r.enable(r.STENCIL_TEST):r.disable(r.STENCIL_TEST),a.dss.stencilTestFront=i.stencilTestFront,a.dss.stencilTestBack=i.stencilTestBack),a.dss.stencilFuncFront===i.stencilFuncFront&&a.dss.stencilRefFront===i.stencilRefFront&&a.dss.stencilReadMaskFront===i.stencilReadMaskFront||(r.stencilFuncSeparate(r.FRONT,P3[i.stencilFuncFront],i.stencilRefFront,i.stencilReadMaskFront),a.dss.stencilFuncFront=i.stencilFuncFront,a.dss.stencilRefFront=i.stencilRefFront,a.dss.stencilReadMaskFront=i.stencilReadMaskFront),a.dss.stencilFailOpFront===i.stencilFailOpFront&&a.dss.stencilZFailOpFront===i.stencilZFailOpFront&&a.dss.stencilPassOpFront===i.stencilPassOpFront||(r.stencilOpSeparate(r.FRONT,w3[i.stencilFailOpFront],w3[i.stencilZFailOpFront],w3[i.stencilPassOpFront]),a.dss.stencilFailOpFront=i.stencilFailOpFront,a.dss.stencilZFailOpFront=i.stencilZFailOpFront,a.dss.stencilPassOpFront=i.stencilPassOpFront),a.dss.stencilWriteMaskFront!==i.stencilWriteMaskFront&&(r.stencilMaskSeparate(r.FRONT,i.stencilWriteMaskFront),a.dss.stencilWriteMaskFront=i.stencilWriteMaskFront),a.dss.stencilFuncBack===i.stencilFuncBack&&a.dss.stencilRefBack===i.stencilRefBack&&a.dss.stencilReadMaskBack===i.stencilReadMaskBack||(r.stencilFuncSeparate(r.BACK,P3[i.stencilFuncBack],i.stencilRefBack,i.stencilReadMaskBack),a.dss.stencilFuncBack=i.stencilFuncBack,a.dss.stencilRefBack=i.stencilRefBack,a.dss.stencilReadMaskBack=i.stencilReadMaskBack),a.dss.stencilFailOpBack===i.stencilFailOpBack&&a.dss.stencilZFailOpBack===i.stencilZFailOpBack&&a.dss.stencilPassOpBack===i.stencilPassOpBack||(r.stencilOpSeparate(r.BACK,w3[i.stencilFailOpBack],w3[i.stencilZFailOpBack],w3[i.stencilPassOpBack]),a.dss.stencilFailOpBack=i.stencilFailOpBack,a.dss.stencilZFailOpBack=i.stencilZFailOpBack,a.dss.stencilPassOpBack=i.stencilPassOpBack),a.dss.stencilWriteMaskBack!==i.stencilWriteMaskBack&&(r.stencilMaskSeparate(r.BACK,i.stencilWriteMaskBack),a.dss.stencilWriteMaskBack=i.stencilWriteMaskBack));const{bs:s}=t;if(s){a.bs.isA2C!==s.isA2C&&(s.isA2C?r.enable(r.SAMPLE_ALPHA_TO_COVERAGE):r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),a.bs.isA2C=s.isA2C),a.bs.blendColor.x===s.blendColor.x&&a.bs.blendColor.y===s.blendColor.y&&a.bs.blendColor.z===s.blendColor.z&&a.bs.blendColor.w===s.blendColor.w||(r.blendColor(s.blendColor.x,s.blendColor.y,s.blendColor.z,s.blendColor.w),a.bs.blendColor.x=s.blendColor.x,a.bs.blendColor.y=s.blendColor.y,a.bs.blendColor.z=s.blendColor.z,a.bs.blendColor.w=s.blendColor.w);const e=s.targets[0],t=a.bs.targets[0];t.blend!==e.blend&&(e.blend?r.enable(r.BLEND):r.disable(r.BLEND),t.blend=e.blend),t.blendEq===e.blendEq&&t.blendAlphaEq===e.blendAlphaEq||(r.blendEquationSeparate(I3[e.blendEq],I3[e.blendAlphaEq]),t.blendEq=e.blendEq,t.blendAlphaEq=e.blendAlphaEq),t.blendSrc===e.blendSrc&&t.blendDst===e.blendDst&&t.blendSrcAlpha===e.blendSrcAlpha&&t.blendDstAlpha===e.blendDstAlpha||(r.blendFuncSeparate(R3[e.blendSrc],R3[e.blendDst],R3[e.blendSrcAlpha],R3[e.blendDstAlpha]),t.blendSrc=e.blendSrc,t.blendDst=e.blendDst,t.blendSrcAlpha=e.blendSrcAlpha,t.blendDstAlpha=e.blendDstAlpha),t.blendColorMask!==e.blendColorMask&&(r.colorMask((e.blendColorMask&xi.R)!==xi.NONE,(e.blendColorMask&xi.G)!==xi.NONE,(e.blendColorMask&xi.B)!==xi.NONE,(e.blendColorMask&xi.A)!==xi.NONE),t.blendColorMask=e.blendColorMask)}}if(t&&t.gpuPipelineLayout&&c){const n=c.glBlocks.length,{dynamicOffsetIndices:o}=t.gpuPipelineLayout;for(let e=0;e<n;e++){const t=c.glBlocks[e],n=i[t.set],l=n&&n.descriptorIndices[t.binding],h=l>=0&&n.gpuDescriptors[l];if(!h||!h.gpuBuffer){C(`Buffer binding '${t.name}' at set ${t.set} binding ${t.binding} is not bounded`);continue}const u=o[t.set],_=u&&u[t.binding];let d=h.gpuBuffer.glOffset;_>=0&&(d+=s[_]),a.glBindUBOs[t.glBinding]===h.gpuBuffer.glBuffer&&a.glBindUBOOffsets[t.glBinding]===d||(d?r.bindBufferRange(r.UNIFORM_BUFFER,t.glBinding,h.gpuBuffer.glBuffer,d,h.gpuBuffer.size):r.bindBufferBase(r.UNIFORM_BUFFER,t.glBinding,h.gpuBuffer.glBuffer),a.glUniformBuffer=a.glBindUBOs[t.glBinding]=h.gpuBuffer.glBuffer,a.glBindUBOOffsets[t.glBinding]=d)}const l=c.glSamplerTextures.length;for(let t=0;t<l;t++){const n=c.glSamplerTextures[t],s=i[n.set];let o=s&&s.descriptorIndices[n.binding],l=o>=0&&s.gpuDescriptors[o];for(let t=0;t<n.units.length;t++){const i=n.units[t],c=a.glTexUnits[i];if(!(l&&l.gpuTextureView&&l.gpuTextureView.gpuTexture&&l.gpuSampler)){C(`Sampler binding '${n.name}' at set ${n.set} binding ${n.binding} index ${t} is not bounded`);continue}const h=l.gpuTextureView,u=h.gpuTexture,_=h.baseLevel,d=_+h.levelCount;if(u.size>0){c.glTexture!==u.glTexture&&(a.texUnit!==i&&(r.activeTexture(r.TEXTURE0+i),a.texUnit=i),u.glTexture?r.bindTexture(u.glTarget,u.glTexture):r.bindTexture(u.glTarget,e.nullTex2D.gpuTexture.glTexture),c.glTexture=u.glTexture);const{gpuSampler:t}=l,n=t.getGLSampler(e,_,d);a.glSamplerUnits[i]!==n&&(r.bindSampler(i,n),a.glSamplerUnits[i]=n)}l=s.gpuDescriptors[++o]}}}if(n&&c&&(l||H3.gpuInputAssembler!==n))if(H3.gpuInputAssembler=n,e.extensions.useVAO){let e=n.glVAOs.get(c.glProgram);if(!e){let t;e=r.createVertexArray(),n.glVAOs.set(c.glProgram,e),r.bindVertexArray(e),r.bindBuffer(r.ARRAY_BUFFER,null),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,null),a.glArrayBuffer=null,a.glElementArrayBuffer=null;for(let e=0;e<c.glInputs.length;e++){const i=c.glInputs[e];t=null;for(let e=0;e<n.glAttribs.length;e++){const s=n.glAttribs[e];if(s.name===i.name){t=s;break}}if(t){a.glArrayBuffer!==t.glBuffer&&(r.bindBuffer(r.ARRAY_BUFFER,t.glBuffer),a.glArrayBuffer=t.glBuffer);for(let e=0;e<t.componentCount;++e){const n=i.glLoc+e,s=t.offset+t.size*e;r.enableVertexAttribArray(n),a.glCurrentAttribLocs[n]=!0,r.vertexAttribPointer(n,t.count,t.glType,t.isNormalized,t.stride,s),r.vertexAttribDivisor(n,t.isInstanced?1:0)}}}const i=n.gpuIndexBuffer;i&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,i.glBuffer),r.bindVertexArray(null),r.bindBuffer(r.ARRAY_BUFFER,null),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,null),a.glArrayBuffer=null,a.glElementArrayBuffer=null}a.glVAO!==e&&(r.bindVertexArray(e),a.glVAO=e)}else{for(let t=0;t<e.capabilities.maxVertexAttributes;++t)a.glCurrentAttribLocs[t]=!1;for(let e=0;e<c.glInputs.length;e++){const t=c.glInputs[e];let i=null;for(let e=0;e<n.glAttribs.length;e++){const s=n.glAttribs[e];if(s.name===t.name){i=s;break}}if(i){a.glArrayBuffer!==i.glBuffer&&(r.bindBuffer(r.ARRAY_BUFFER,i.glBuffer),a.glArrayBuffer=i.glBuffer);for(let e=0;e<i.componentCount;++e){const n=t.glLoc+e,s=i.offset+i.size*e;!a.glEnabledAttribLocs[n]&&n>=0&&(r.enableVertexAttribArray(n),a.glEnabledAttribLocs[n]=!0),a.glCurrentAttribLocs[n]=!0,r.vertexAttribPointer(n,i.count,i.glType,i.isNormalized,i.stride,s),r.vertexAttribDivisor(n,i.isInstanced?1:0)}}}const t=n.gpuIndexBuffer;t&&a.glElementArrayBuffer!==t.glBuffer&&(r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.glBuffer),a.glElementArrayBuffer=t.glBuffer);for(let t=0;t<e.capabilities.maxVertexAttributes;++t)a.glEnabledAttribLocs[t]!==a.glCurrentAttribLocs[t]&&(r.disableVertexAttribArray(t),a.glEnabledAttribLocs[t]=!1)}if(t&&t.dynamicStates.length){const e=t.dynamicStates.length;for(let n=0;n<e;n++)switch(t.dynamicStates[n]){case Di.LINE_WIDTH:a.rs.lineWidth!==o.lineWidth&&(r.lineWidth(o.lineWidth),a.rs.lineWidth=o.lineWidth);break;case Di.DEPTH_BIAS:a.rs.depthBias===o.depthBiasConstant&&a.rs.depthBiasSlop===o.depthBiasSlope||(r.polygonOffset(o.depthBiasConstant,o.depthBiasSlope),a.rs.depthBias=o.depthBiasConstant,a.rs.depthBiasSlop=o.depthBiasSlope);break;case Di.BLEND_CONSTANTS:{const e=o.blendConstant;a.bs.blendColor.x===e.x&&a.bs.blendColor.y===e.y&&a.bs.blendColor.z===e.z&&a.bs.blendColor.w===e.w||(r.blendColor(e.x,e.y,e.z,e.w),a.bs.blendColor.copy(e));break}case Di.STENCIL_WRITE_MASK:{const e=o.stencilStatesFront,t=o.stencilStatesBack;a.dss.stencilWriteMaskFront!==e.writeMask&&(r.stencilMaskSeparate(r.FRONT,e.writeMask),a.dss.stencilWriteMaskFront=e.writeMask),a.dss.stencilWriteMaskBack!==t.writeMask&&(r.stencilMaskSeparate(r.BACK,t.writeMask),a.dss.stencilWriteMaskBack=t.writeMask);break}case Di.STENCIL_COMPARE_MASK:{const e=o.stencilStatesFront,t=o.stencilStatesBack;a.dss.stencilRefFront===e.reference&&a.dss.stencilReadMaskFront===e.compareMask||(r.stencilFuncSeparate(r.FRONT,P3[a.dss.stencilFuncFront],e.reference,e.compareMask),a.dss.stencilRefFront=e.reference,a.dss.stencilReadMaskFront=e.compareMask),a.dss.stencilRefBack===t.reference&&a.dss.stencilReadMaskBack===t.compareMask||(r.stencilFuncSeparate(r.BACK,P3[a.dss.stencilFuncBack],t.reference,t.compareMask),a.dss.stencilRefBack=t.reference,a.dss.stencilReadMaskBack=t.compareMask);break}}}}function W3(e,t){const{gl:n}=e,{gpuInputAssembler:i,glPrimitive:s}=H3,o=e.extensions.WEBGL_multi_draw;if(i){const e=i.gpuIndexBuffer;if(i.gpuIndirectBuffer){const{indirects:t}=i.gpuIndirectBuffer;if(t.drawByIndex){for(let n=0;n<t.drawCount;n++)t.byteOffsets[n]=t.offsets[n]*e.stride;if(o)t.instancedDraw?o.multiDrawElementsInstancedWEBGL(s,t.counts,0,i.glIndexType,t.byteOffsets,0,t.instances,0,t.drawCount):o.multiDrawElementsWEBGL(s,t.counts,0,i.glIndexType,t.byteOffsets,0,t.drawCount);else for(let e=0;e<t.drawCount;e++)t.instances[e]?n.drawElementsInstanced(s,t.counts[e],i.glIndexType,t.byteOffsets[e],t.instances[e]):n.drawElements(s,t.counts[e],i.glIndexType,t.byteOffsets[e])}else if(o)t.instancedDraw?o.multiDrawArraysInstancedWEBGL(s,t.offsets,0,t.counts,0,t.instances,0,t.drawCount):o.multiDrawArraysWEBGL(s,t.offsets,0,t.counts,0,t.drawCount);else for(let e=0;e<t.drawCount;e++)t.instances[e]?n.drawArraysInstanced(s,t.offsets[e],t.counts[e],t.instances[e]):n.drawArrays(s,t.offsets[e],t.counts[e])}else if(t.instanceCount)if(e){if(t.indexCount>0){const o=t.firstIndex*e.stride;n.drawElementsInstanced(s,t.indexCount,i.glIndexType,o,t.instanceCount)}}else t.vertexCount>0&&n.drawArraysInstanced(s,t.firstVertex,t.vertexCount,t.instanceCount);else if(e){if(t.indexCount>0){const o=t.firstIndex*e.stride;n.drawElements(s,t.indexCount,i.glIndexType,o)}}else t.vertexCount>0&&n.drawArrays(s,t.firstVertex,t.vertexCount)}}const q3=new Array(D3.COUNT);function X3(e,t){q3.fill(0);for(let n=0;n<t.cmds.length;++n){const i=t.cmds.array[n],s=q3[i]++;switch(i){case D3.BEGIN_RENDER_PASS:{const n=t.beginRenderPassCmds.array[s];k3(e,n.gpuRenderPass,n.gpuFramebuffer,n.renderArea,n.clearColors,n.clearDepth,n.clearStencil);break}case D3.BIND_STATES:{const n=t.bindStatesCmds.array[s];j3(e,n.gpuPipelineState,n.gpuInputAssembler,n.gpuDescriptorSets,n.dynamicOffsets,n.dynamicStates);break}case D3.DRAW:W3(e,t.drawCmds.array[s].drawInfo);break;case D3.UPDATE_BUFFER:{const n=t.updateBufferCmds.array[s];U3(e,n.gpuBuffer,n.buffer,n.offset,n.size);break}case D3.COPY_BUFFER_TO_TEXTURE:{const n=t.copyBufferToTextureCmds.array[s];Y3(e,n.buffers,n.gpuTexture,n.regions);break}}}}function Y3(e,t,n,i){const{gl:s}=e,o=e.stateCache.glTexUnits[e.stateCache.texUnit];o.glTexture!==n.glTexture&&(s.bindTexture(n.glTarget,n.glTexture),o.glTexture=n.glTexture);let r=0,a=1,c=1,l=0;const h=Hs[n.format],{isCompressed:u}=h;switch(n.glTarget){case s.TEXTURE_2D:for(let e=0;e<i.length;e++){const o=i[e];a=o.texExtent.width,c=o.texExtent.height;const l=t[r++];u?n.glInternalFmt!==v3.COMPRESSED_RGB_ETC1_WEBGL?s.compressedTexSubImage2D(s.TEXTURE_2D,o.texSubres.mipLevel,o.texOffset.x,o.texOffset.y,a,c,n.glFormat,l):s.compressedTexImage2D(s.TEXTURE_2D,o.texSubres.mipLevel,n.glInternalFmt,a,c,0,l):s.texSubImage2D(s.TEXTURE_2D,o.texSubres.mipLevel,o.texOffset.x,o.texOffset.y,a,c,n.glFormat,n.glType,l)}break;case s.TEXTURE_CUBE_MAP:for(let e=0;e<i.length;e++){const o=i[e],h=o.texSubres.baseArrayLayer+o.texSubres.layerCount;for(l=o.texSubres.baseArrayLayer;l<h;++l){a=o.texExtent.width,c=o.texExtent.height;const e=t[r++];u?n.glInternalFmt!==v3.COMPRESSED_RGB_ETC1_WEBGL?s.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+l,o.texSubres.mipLevel,o.texOffset.x,o.texOffset.y,a,c,n.glFormat,e):s.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+l,o.texSubres.mipLevel,n.glInternalFmt,a,c,0,e):s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+l,o.texSubres.mipLevel,o.texOffset.x,o.texOffset.y,a,c,n.glFormat,n.glType,e)}}break;default:console.error("Unsupported GL texture type, copy buffer to texture failed.")}n.flags&hi.GEN_MIPMAP&&s.generateMipmap(n.glTarget)}class K3{constructor(){this.counts=void 0,this.offsets=void 0,this.instances=void 0,this.drawCount=0,this.drawByIndex=!1,this.instancedDraw=!1,this.byteOffsets=void 0,this._capacity=4,this.counts=new Int32Array(this._capacity),this.offsets=new Int32Array(this._capacity),this.instances=new Int32Array(this._capacity),this.byteOffsets=new Int32Array(this._capacity)}clearDraws(){this.drawCount=0,this.drawByIndex=!1,this.instancedDraw=!1}setDrawInfo(e,t){this._ensureCapacity(e),this.drawByIndex=t.indexCount>0,this.instancedDraw=!!t.instanceCount,this.drawCount=Math.max(e+1,this.drawCount),this.drawByIndex?(this.counts[e]=t.indexCount,this.offsets[e]=t.firstIndex):(this.counts[e]=t.vertexCount,this.offsets[e]=t.firstVertex),this.instances[e]=Math.max(1,t.instanceCount)}_ensureCapacity(e){if(this._capacity>e)return;this._capacity=a(e);const t=new Int32Array(this._capacity),n=new Int32Array(this._capacity),i=new Int32Array(this._capacity);this.byteOffsets=new Int32Array(this._capacity),t.set(this.counts),n.set(this.offsets),i.set(this.instances),this.counts=t,this.offsets=n,this.instances=i}}class $3 extends ao{constructor(...e){super(...e),this._gpuBuffer=null}get gpuBuffer(){return this._gpuBuffer}initialize(e){if("buffer"in e){this._isBufferView=!0;const t=e.buffer;this._usage=t.usage,this._memUsage=t.memUsage,this._size=this._stride=e.range,this._count=1,this._flags=t.flags,this._gpuBuffer={usage:this._usage,memUsage:this._memUsage,size:this._size,stride:this._stride,buffer:null,indirects:t.gpuBuffer.indirects,glTarget:t.gpuBuffer.glTarget,glBuffer:t.gpuBuffer.glBuffer,glOffset:e.offset}}else this._usage=e.usage,this._memUsage=e.memUsage,this._size=e.size,this._stride=Math.max(e.stride||this._size,1),this._count=this._size/this._stride,this._flags=e.flags,this._gpuBuffer={usage:this._usage,memUsage:this._memUsage,size:this._size,stride:this._stride,buffer:null,indirects:new K3,glTarget:0,glBuffer:null,glOffset:0},function(e,t){const{gl:n}=e,i=e.stateCache,s=t.memUsage&ai.HOST?n.DYNAMIC_DRAW:n.STATIC_DRAW;if(t.usage&si.VERTEX){t.glTarget=n.ARRAY_BUFFER;const o=n.createBuffer();o&&(t.glBuffer=o,t.size>0&&(e.extensions.useVAO&&i.glVAO&&(n.bindVertexArray(null),i.glVAO=null),H3.gpuInputAssembler=null,e.stateCache.glArrayBuffer!==t.glBuffer&&(n.bindBuffer(n.ARRAY_BUFFER,t.glBuffer),e.stateCache.glArrayBuffer=t.glBuffer),n.bufferData(n.ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ARRAY_BUFFER,null),e.stateCache.glArrayBuffer=null))}else if(t.usage&si.INDEX){t.glTarget=n.ELEMENT_ARRAY_BUFFER;const o=n.createBuffer();o&&(t.glBuffer=o,t.size>0&&(e.extensions.useVAO&&i.glVAO&&(n.bindVertexArray(null),i.glVAO=null),H3.gpuInputAssembler=null,e.stateCache.glElementArrayBuffer!==t.glBuffer&&(n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.glBuffer),e.stateCache.glElementArrayBuffer=t.glBuffer),n.bufferData(n.ELEMENT_ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),e.stateCache.glElementArrayBuffer=null))}else if(t.usage&si.UNIFORM){t.glTarget=n.UNIFORM_BUFFER;const i=n.createBuffer();i&&t.size>0&&(t.glBuffer=i,e.stateCache.glUniformBuffer!==t.glBuffer&&(n.bindBuffer(n.UNIFORM_BUFFER,t.glBuffer),e.stateCache.glUniformBuffer=t.glBuffer),n.bufferData(n.UNIFORM_BUFFER,t.size,s),n.bindBuffer(n.UNIFORM_BUFFER,null),e.stateCache.glUniformBuffer=null)}else t.usage&si.INDIRECT||t.usage&si.TRANSFER_DST||t.usage&si.TRANSFER_SRC||console.error("Unsupported BufferType, create buffer failed."),t.glTarget=n.NONE}(y3.instance,this._gpuBuffer),y3.instance.memoryStatus.bufferSize+=this._size}destroy(){this._gpuBuffer&&(this._isBufferView||(function(e,t){const{gl:n}=e,i=e.stateCache;if(t.glBuffer){switch(t.glTarget){case n.ARRAY_BUFFER:e.extensions.useVAO&&i.glVAO&&(n.bindVertexArray(null),e.stateCache.glVAO=null),H3.gpuInputAssembler=null,n.bindBuffer(n.ARRAY_BUFFER,null),e.stateCache.glArrayBuffer=null;break;case n.ELEMENT_ARRAY_BUFFER:e.extensions.useVAO&&i.glVAO&&(n.bindVertexArray(null),e.stateCache.glVAO=null),H3.gpuInputAssembler=null,n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),e.stateCache.glElementArrayBuffer=null;break;case n.UNIFORM_BUFFER:n.bindBuffer(n.UNIFORM_BUFFER,null),e.stateCache.glUniformBuffer=null}n.deleteBuffer(t.glBuffer),t.glBuffer=null}}(y3.instance,this._gpuBuffer),y3.instance.memoryStatus.bufferSize-=this._size),this._gpuBuffer=null)}resize(e){if(this._isBufferView)return void console.warn("cannot resize buffer views!");const t=this._size;t!==e&&(this._size=e,this._count=this._size/this._stride,this._gpuBuffer&&(this._gpuBuffer.size=e,e>0&&(function(e,t){const{gl:n}=e,i=e.stateCache,s=t.memUsage&ai.HOST?n.DYNAMIC_DRAW:n.STATIC_DRAW;t.usage&si.VERTEX?(e.extensions.useVAO&&i.glVAO&&(n.bindVertexArray(null),i.glVAO=null),H3.gpuInputAssembler=null,i.glArrayBuffer!==t.glBuffer&&n.bindBuffer(n.ARRAY_BUFFER,t.glBuffer),t.buffer?n.bufferData(n.ARRAY_BUFFER,t.buffer,s):n.bufferData(n.ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ARRAY_BUFFER,null),i.glArrayBuffer=null):t.usage&si.INDEX?(e.extensions.useVAO&&i.glVAO&&(n.bindVertexArray(null),i.glVAO=null),H3.gpuInputAssembler=null,e.stateCache.glElementArrayBuffer!==t.glBuffer&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.glBuffer),t.buffer?n.bufferData(n.ELEMENT_ARRAY_BUFFER,t.buffer,s):n.bufferData(n.ELEMENT_ARRAY_BUFFER,t.size,s),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),e.stateCache.glElementArrayBuffer=null):t.usage&si.UNIFORM?(e.stateCache.glUniformBuffer!==t.glBuffer&&n.bindBuffer(n.UNIFORM_BUFFER,t.glBuffer),n.bufferData(n.UNIFORM_BUFFER,t.size,s),n.bindBuffer(n.UNIFORM_BUFFER,null),e.stateCache.glUniformBuffer=null):(t.usage&si.INDIRECT||t.usage&si.TRANSFER_DST||t.usage&si.TRANSFER_SRC||console.error("Unsupported BufferType, create buffer failed."),t.glTarget=n.NONE)}(y3.instance,this._gpuBuffer),y3.instance.memoryStatus.bufferSize-=t,y3.instance.memoryStatus.bufferSize+=e)))}update(e,t){if(this._isBufferView)return void console.warn("cannot update through buffer views!");let n;n=void 0!==t?t:this._usage&si.INDIRECT?0:e.byteLength,U3(y3.instance,this._gpuBuffer,e,0,n)}}class Q3{constructor(e,t){this._frees=void 0,this._freeIdx=0,this._freeCmds=void 0,this._frees=new Array(t),this._freeCmds=new zl(t);for(let n=0;n<t;++n)this._frees[n]=new e;this._freeIdx=t-1}alloc(e){if(this._freeIdx<0){const t=2*this._frees.length,n=this._frees;this._frees=new Array(t);const i=t-n.length;for(let t=0;t<i;++t)this._frees[t]=new e;for(let e=i,s=0;e<t;++e,++s)this._frees[e]=n[s];this._freeIdx+=i}const t=this._frees[this._freeIdx];return this._frees[this._freeIdx--]=null,++t.refCount,t}free(e){0==--e.refCount&&this._freeCmds.push(e)}freeCmds(e){for(let t=0;t<e.length;++t)0==--e.array[t].refCount&&this._freeCmds.push(e.array[t])}release(){for(let e=0;e<this._freeCmds.length;++e){const t=this._freeCmds.array[e];t.clear(),this._frees[++this._freeIdx]=t}this._freeCmds.clear()}}class J3{constructor(){this.beginRenderPassCmdPool=void 0,this.bindStatesCmdPool=void 0,this.drawCmdPool=void 0,this.updateBufferCmdPool=void 0,this.copyBufferToTextureCmdPool=void 0,this.beginRenderPassCmdPool=new Q3(N3,1),this.bindStatesCmdPool=new Q3(M3,1),this.drawCmdPool=new Q3(L3,1),this.updateBufferCmdPool=new Q3(B3,1),this.copyBufferToTextureCmdPool=new Q3(F3,1)}clearCmds(e){e.beginRenderPassCmds.length&&(this.beginRenderPassCmdPool.freeCmds(e.beginRenderPassCmds),e.beginRenderPassCmds.clear()),e.bindStatesCmds.length&&(this.bindStatesCmdPool.freeCmds(e.bindStatesCmds),e.bindStatesCmds.clear()),e.drawCmds.length&&(this.drawCmdPool.freeCmds(e.drawCmds),e.drawCmds.clear()),e.updateBufferCmds.length&&(this.updateBufferCmdPool.freeCmds(e.updateBufferCmds),e.updateBufferCmds.clear()),e.copyBufferToTextureCmds.length&&(this.copyBufferToTextureCmdPool.freeCmds(e.copyBufferToTextureCmds),e.copyBufferToTextureCmds.clear()),e.cmds.clear()}releaseCmds(){this.beginRenderPassCmdPool.release(),this.bindStatesCmdPool.release(),this.drawCmdPool.release(),this.updateBufferCmdPool.release(),this.copyBufferToTextureCmdPool.release()}}class Z3 extends co{constructor(...e){super(...e),this.cmdPackage=new z3,this._cmdAllocator=new J3,this._isInRenderPass=!1,this._curGPUPipelineState=null,this._curGPUDescriptorSets=[],this._curGPUInputAssembler=null,this._curDynamicOffsets=Array(8).fill(0),this._curDynamicStates=new Gs,this._isStateInvalied=!1}initialize(e){this._type=e.type,this._queue=e.queue;const t=y3.instance.bindingMappings.blockOffsets.length;for(let e=0;e<t;e++)this._curGPUDescriptorSets.push(null)}destroy(){this._cmdAllocator.clearCmds(this.cmdPackage)}begin(e,t=0,n){this._cmdAllocator.clearCmds(this.cmdPackage),this._curGPUPipelineState=null,this._curGPUInputAssembler=null,this._curGPUDescriptorSets.length=0,this._numDrawCalls=0,this._numInstances=0,this._numTris=0}end(){this._isStateInvalied&&this.bindStates(),this._isInRenderPass=!1}beginRenderPass(e,t,n,i,s,o){const r=this._cmdAllocator.beginRenderPassCmdPool.alloc(N3);r.gpuRenderPass=e.gpuRenderPass,r.gpuFramebuffer=t.gpuFramebuffer,r.renderArea.copy(n);for(let e=0;e<i.length;++e)r.clearColors[e]=i[e];r.clearDepth=s,r.clearStencil=o,this.cmdPackage.beginRenderPassCmds.push(r),this.cmdPackage.cmds.push(D3.BEGIN_RENDER_PASS),this._isInRenderPass=!0}endRenderPass(){this._isInRenderPass=!1}bindPipelineState(e){const t=e.gpuPipelineState;t!==this._curGPUPipelineState&&(this._curGPUPipelineState=t,this._isStateInvalied=!0)}bindDescriptorSet(e,t,n){const i=t.gpuDescriptorSet;if(i!==this._curGPUDescriptorSets[e]&&(this._curGPUDescriptorSets[e]=i,this._isStateInvalied=!0),n){var s;const t=null===(s=this._curGPUPipelineState)||void 0===s?void 0:s.gpuPipelineLayout;if(t){const i=this._curDynamicOffsets,s=t.dynamicOffsetOffsets[e];for(let e=0;e<n.length;e++)i[s+e]=n[e];this._isStateInvalied=!0}}}bindInputAssembler(e){const t=e.gpuInputAssembler;this._curGPUInputAssembler=t,this._isStateInvalied=!0}setViewport(e){const t=this._curDynamicStates.viewport;t.left===e.left&&t.top===e.top&&t.width===e.width&&t.height===e.height&&t.minDepth===e.minDepth&&t.maxDepth===e.maxDepth||(t.left=e.left,t.top=e.top,t.width=e.width,t.height=e.height,t.minDepth=e.minDepth,t.maxDepth=e.maxDepth,this._isStateInvalied=!0)}setScissor(e){const t=this._curDynamicStates.scissor;t.x===e.x&&t.y===e.y&&t.width===e.width&&t.height===e.height||(t.x=e.x,t.y=e.y,t.width=e.width,t.height=e.height,this._isStateInvalied=!0)}setLineWidth(e){this._curDynamicStates.lineWidth!==e&&(this._curDynamicStates.lineWidth=e,this._isStateInvalied=!0)}setDepthBias(e,t,n){const i=this._curDynamicStates;i.depthBiasConstant===e&&i.depthBiasClamp===t&&i.depthBiasSlope===n||(i.depthBiasConstant=e,i.depthBiasClamp=t,i.depthBiasSlope=n,this._isStateInvalied=!0)}setBlendConstants(e){const t=this._curDynamicStates.blendConstant;t.x===e.x&&t.y===e.y&&t.z===e.z&&t.w===e.w||(t.copy(e),this._isStateInvalied=!0)}setDepthBound(e,t){const n=this._curDynamicStates;n.depthMinBounds===e&&n.depthMaxBounds===t||(n.depthMinBounds=e,n.depthMaxBounds=t,this._isStateInvalied=!0)}setStencilWriteMask(e,t){const n=this._curDynamicStates.stencilStatesFront,i=this._curDynamicStates.stencilStatesBack;e&Oi.FRONT&&n.writeMask!==t&&(n.writeMask=t,this._isStateInvalied=!0),e&Oi.BACK&&i.writeMask!==t&&(i.writeMask=t,this._isStateInvalied=!0)}setStencilCompareMask(e,t,n){const i=this._curDynamicStates.stencilStatesFront,s=this._curDynamicStates.stencilStatesBack;e&Oi.FRONT&&(i.compareMask===n&&i.reference===t||(i.reference=t,i.compareMask=n,this._isStateInvalied=!0)),e&Oi.BACK&&(s.compareMask===n&&s.reference===t||(s.reference=t,s.compareMask=n,this._isStateInvalied=!0))}draw(e){if(this._type===Bi.PRIMARY&&this._isInRenderPass||this._type===Bi.SECONDARY){this._isStateInvalied&&this.bindStates();const t="drawInfo"in e?e.drawInfo:e,n=this._cmdAllocator.drawCmdPool.alloc(L3);n.drawInfo.copy(t),this.cmdPackage.drawCmds.push(n),this.cmdPackage.cmds.push(D3.DRAW),++this._numDrawCalls,this._numInstances+=t.instanceCount;const i=t.indexCount||t.vertexCount;if(this._curGPUPipelineState)switch(this._curGPUPipelineState.glPrimitive){case 4:this._numTris+=i/3*Math.max(t.instanceCount,1);break;case 5:case 6:this._numTris+=(i-2)*Math.max(t.instanceCount,1)}}else console.error("Command 'draw' must be recorded inside a render pass.")}updateBuffer(e,t,n){if(this._type===Bi.PRIMARY&&!this._isInRenderPass||this._type===Bi.SECONDARY){const i=e.gpuBuffer;if(i){const s=this._cmdAllocator.updateBufferCmdPool.alloc(B3);let o=0,r=null;e.usage&si.INDIRECT||(o=void 0!==n?n:t.byteLength),r=t,s.gpuBuffer=i,s.buffer=r,s.offset=0,s.size=o,this.cmdPackage.updateBufferCmds.push(s),this.cmdPackage.cmds.push(D3.UPDATE_BUFFER)}}else console.error("Command 'updateBuffer' must be recorded outside a render pass.")}copyBuffersToTexture(e,t,n){if(this._type===Bi.PRIMARY&&!this._isInRenderPass||this._type===Bi.SECONDARY){const i=t.gpuTexture;if(i){const t=this._cmdAllocator.copyBufferToTextureCmdPool.alloc(F3);t.gpuTexture=i,t.regions=n,t.buffers=e,this.cmdPackage.copyBufferToTextureCmds.push(t),this.cmdPackage.cmds.push(D3.COPY_BUFFER_TO_TEXTURE)}}else console.error("Command 'copyBufferToTexture' must be recorded outside a render pass.")}execute(e,t){for(let n=0;n<t;++n){const t=e[n];for(let e=0;e<t.cmdPackage.beginRenderPassCmds.length;++e){const n=t.cmdPackage.beginRenderPassCmds.array[e];++n.refCount,this.cmdPackage.beginRenderPassCmds.push(n)}for(let e=0;e<t.cmdPackage.bindStatesCmds.length;++e){const n=t.cmdPackage.bindStatesCmds.array[e];++n.refCount,this.cmdPackage.bindStatesCmds.push(n)}for(let e=0;e<t.cmdPackage.drawCmds.length;++e){const n=t.cmdPackage.drawCmds.array[e];++n.refCount,this.cmdPackage.drawCmds.push(n)}for(let e=0;e<t.cmdPackage.updateBufferCmds.length;++e){const n=t.cmdPackage.updateBufferCmds.array[e];++n.refCount,this.cmdPackage.updateBufferCmds.push(n)}for(let e=0;e<t.cmdPackage.copyBufferToTextureCmds.length;++e){const n=t.cmdPackage.copyBufferToTextureCmds.array[e];++n.refCount,this.cmdPackage.copyBufferToTextureCmds.push(n)}this.cmdPackage.cmds.concat(t.cmdPackage.cmds.array),this._numDrawCalls+=t._numDrawCalls,this._numInstances+=t._numInstances,this._numTris+=t._numTris}}pipelineBarrier(e,t,n){}bindStates(){const e=this._cmdAllocator.bindStatesCmdPool.alloc(M3);e.gpuPipelineState=this._curGPUPipelineState,Array.prototype.push.apply(e.gpuDescriptorSets,this._curGPUDescriptorSets),Array.prototype.push.apply(e.dynamicOffsets,this._curDynamicOffsets),e.gpuInputAssembler=this._curGPUInputAssembler,e.dynamicStates=this._curDynamicStates,this.cmdPackage.bindStatesCmds.push(e),this.cmdPackage.cmds.push(D3.BIND_STATES),this._isStateInvalied=!1}}class e5 extends uo{constructor(...e){super(...e),this._gpuFramebuffer=null}get gpuFramebuffer(){return this._gpuFramebuffer}initialize(e){this._renderPass=e.renderPass,this._colorTextures=e.colorTextures||[],this._depthStencilTexture=e.depthStencilTexture||null;const t=[];for(let n=0;n<e.colorTextures.length;n++){const i=e.colorTextures[n];i&&t.push(i.gpuTextureView)}let n=null;e.depthStencilTexture&&(n=e.depthStencilTexture.gpuTextureView);let i=Number.MAX_SAFE_INTEGER;this._gpuFramebuffer={gpuRenderPass:e.renderPass.gpuRenderPass,gpuColorViews:t,gpuDepthStencilView:n,glFramebuffer:null,isOffscreen:!0,get width(){return this.isOffscreen?i:this.gpuColorViews.length>0?this.gpuColorViews[0].gpuTexture.width:this.gpuDepthStencilView.gpuTexture.width},set width(e){i=e},get height(){return this.isOffscreen?i:this.gpuColorViews.length>0?this.gpuColorViews[0].gpuTexture.height:this.gpuDepthStencilView.gpuTexture.height},set height(e){}},function(e,t){for(let e=0;e<t.gpuColorViews.length;++e)if(t.gpuColorViews[e].gpuTexture.isSwapchainTexture)return void(t.isOffscreen=!1);const{gl:n}=e,i=[],s=n.createFramebuffer();if(s){t.glFramebuffer=s,e.stateCache.glFramebuffer!==t.glFramebuffer&&n.bindFramebuffer(n.FRAMEBUFFER,t.glFramebuffer);for(let e=0;e<t.gpuColorViews.length;++e){const s=t.gpuColorViews[e],o=s.gpuTexture;o&&(o.glTexture?n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+e,o.glTarget,o.glTexture,s.baseLevel):n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+e,n.RENDERBUFFER,o.glRenderbuffer),i.push(n.COLOR_ATTACHMENT0+e),t.width=Math.min(t.width,o.width>>s.baseLevel),t.height=Math.min(t.height,o.height>>s.baseLevel))}const o=t.gpuDepthStencilView;if(o){const e=o.gpuTexture,i=Hs[e.format].hasStencil?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;e.glTexture?n.framebufferTexture2D(n.FRAMEBUFFER,i,e.glTarget,e.glTexture,t.gpuDepthStencilView.baseLevel):n.framebufferRenderbuffer(n.FRAMEBUFFER,i,n.RENDERBUFFER,e.glRenderbuffer),t.width=Math.min(t.width,e.width>>o.baseLevel),t.height=Math.min(t.height,e.height>>o.baseLevel)}n.drawBuffers(i);const r=n.checkFramebufferStatus(n.FRAMEBUFFER);if(r!==n.FRAMEBUFFER_COMPLETE)switch(r){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_ATTACHMENT");break;case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");break;case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_INCOMPLETE_DIMENSIONS");break;case n.FRAMEBUFFER_UNSUPPORTED:console.error("glCheckFramebufferStatus() - FRAMEBUFFER_UNSUPPORTED")}e.stateCache.glFramebuffer!==t.glFramebuffer&&n.bindFramebuffer(n.FRAMEBUFFER,e.stateCache.glFramebuffer)}}(y3.instance,this._gpuFramebuffer)}destroy(){var e,t;this._gpuFramebuffer&&(e=y3.instance,(t=this._gpuFramebuffer).glFramebuffer&&(e.gl.deleteFramebuffer(t.glFramebuffer),e.stateCache.glFramebuffer===t.glFramebuffer&&(e.gl.bindFramebuffer(e.gl.FRAMEBUFFER,null),e.stateCache.glFramebuffer=null),t.glFramebuffer=null),this._gpuFramebuffer=null)}}class t5 extends mo{constructor(...e){super(...e),this._gpuInputAssembler=null}get gpuInputAssembler(){return this._gpuInputAssembler}initialize(e){if(0===e.vertexBuffers.length)return void console.error("InputAssemblerInfo.vertexBuffers is null.");if(this._attributes=e.attributes,this._attributesHash=this.computeAttributesHash(),this._vertexBuffers=e.vertexBuffers,e.indexBuffer)this._indexBuffer=e.indexBuffer,this._drawInfo.indexCount=this._indexBuffer.size/this._indexBuffer.stride,this._drawInfo.firstIndex=0;else{const e=this._vertexBuffers[0];this._drawInfo.vertexCount=e.size/e.stride,this._drawInfo.firstVertex=0,this._drawInfo.vertexOffset=0}this._drawInfo.instanceCount=0,this._drawInfo.firstInstance=0,this._indirectBuffer=e.indirectBuffer||null;const t=new Array(e.vertexBuffers.length);for(let n=0;n<e.vertexBuffers.length;++n){const i=e.vertexBuffers[n];i.gpuBuffer&&(t[n]=i.gpuBuffer)}let n=null,i=0;if(e.indexBuffer&&(n=e.indexBuffer.gpuBuffer,n))switch(n.stride){case 1:i=5121;break;case 2:i=5123;break;case 4:i=5125;break;default:console.error("Illegal index buffer stride.")}let s=null;e.indirectBuffer&&(s=e.indirectBuffer.gpuBuffer),this._gpuInputAssembler={attributes:e.attributes,gpuVertexBuffers:t,gpuIndexBuffer:n,gpuIndirectBuffer:s,glAttribs:[],glIndexType:i,glVAOs:new Map},function(e,t){const{gl:n}=e;t.glAttribs=new Array(t.attributes.length);const i=[0,0,0,0,0,0,0,0];for(let e=0;e<t.attributes.length;++e){const s=t.attributes[e],o=void 0!==s.stream?s.stream:0,r=t.gpuVertexBuffers[o],a=C3(s.format,n),{size:c}=Hs[s.format];t.glAttribs[e]={name:s.name,glBuffer:r.glBuffer,glType:a,size:c,count:Hs[s.format].count,stride:r.stride,componentCount:A3(a,n),isNormalized:void 0!==s.isNormalized&&s.isNormalized,isInstanced:void 0!==s.isInstanced&&s.isInstanced,offset:i[o]},i[o]+=c}}(y3.instance,this._gpuInputAssembler)}destroy(){const e=y3.instance;this._gpuInputAssembler&&e.extensions.useVAO&&function(e,t){const n=t.glVAOs.values();let i=n.next();const{gl:s}=e;let o=e.stateCache.glVAO;for(;!i.done;)s.deleteVertexArray(i.value),o===i.value&&(s.bindVertexArray(null),o=null),i=n.next();e.stateCache.glVAO=o,t.glVAOs.clear()}(e,this._gpuInputAssembler),this._gpuInputAssembler=null}}class n5 extends go{constructor(...e){super(...e),this._gpuDescriptorSetLayout=null}get gpuDescriptorSetLayout(){return this._gpuDescriptorSetLayout}initialize(e){Array.prototype.push.apply(this._bindings,e.bindings);let t=0,n=-1;const i=[];for(let e=0;e<this._bindings.length;e++){const s=this._bindings[e];i.push(t),t+=s.count,s.binding>n&&(n=s.binding)}this._bindingIndices=Array(n+1).fill(-1);const s=this._descriptorIndices=Array(n+1).fill(-1);for(let e=0;e<this._bindings.length;e++){const t=this._bindings[e];this._bindingIndices[t.binding]=e,s[t.binding]=i[e]}const o=[];for(let e=0;e<this._bindings.length;e++){const t=this._bindings[e];if(t.descriptorType&Ws)for(let e=0;e<t.count;e++)o.push(t.binding)}this._gpuDescriptorSetLayout={bindings:this._bindings,dynamicBindings:o,descriptorIndices:s,descriptorCount:t}}destroy(){this._bindings.length=0}}class i5 extends vo{constructor(...e){super(...e),this._gpuPipelineLayout=null}get gpuPipelineLayout(){return this._gpuPipelineLayout}initialize(e){Array.prototype.push.apply(this._setLayouts,e.setLayouts);const t=[],n=[];let i=0;const s=[];for(let e=0;e<this._setLayouts.length;e++){const o=this._setLayouts[e],r=o.gpuDescriptorSetLayout.dynamicBindings,a=Array(o.bindingIndices.length).fill(-1);for(let e=0;e<r.length;e++){const t=r[e];a[t]<0&&(a[t]=i+e)}n.push(o.gpuDescriptorSetLayout),t.push(a),s.push(i),i+=r.length}this._gpuPipelineLayout={gpuSetLayouts:n,dynamicOffsetIndices:t,dynamicOffsetCount:i,dynamicOffsetOffsets:s}}destroy(){this._setLayouts.length=0}}const s5=[0,1,3,2,0,0,0,4,5,6,0,0,0,0];class o5 extends t3{constructor(...e){super(...e),this._gpuPipelineState=null}get gpuPipelineState(){return this._gpuPipelineState}initialize(e){this._primitive=e.primitive,this._shader=e.shader,this._pipelineLayout=e.pipelineLayout;const t=this._bs;if(e.blendState){const n=e.blendState,{targets:i}=n;i&&i.forEach(((e,n)=>{t.setTarget(n,e)})),void 0!==n.isA2C&&(t.isA2C=n.isA2C),void 0!==n.isIndepend&&(t.isIndepend=n.isIndepend),void 0!==n.blendColor&&(t.blendColor=n.blendColor)}Object.assign(this._rs,e.rasterizerState),Object.assign(this._dss,e.depthStencilState),this._is=e.inputState,this._renderPass=e.renderPass,this._dynamicStates=e.dynamicStates;const n=[];for(let e=0;e<31;e++)this._dynamicStates&1<<e&&n.push(1<<e);this._gpuPipelineState={glPrimitive:s5[e.primitive],gpuShader:e.shader.gpuShader,gpuPipelineLayout:e.pipelineLayout.gpuPipelineLayout,rs:e.rasterizerState,dss:e.depthStencilState,bs:e.blendState,gpuRenderPass:e.renderPass.gpuRenderPass,dynamicStates:n}}destroy(){this._gpuPipelineState=null}}class r5 extends Z3{beginRenderPass(e,t,n,i,s,o){k3(y3.instance,e.gpuRenderPass,t.gpuFramebuffer,n,i,s,o),this._isInRenderPass=!0}draw(e){if(this._isInRenderPass){this._isStateInvalied&&this.bindStates();const t="drawInfo"in e?e.drawInfo:e;W3(y3.instance,t),++this._numDrawCalls,this._numInstances+=t.instanceCount;const n=t.indexCount||t.vertexCount;if(this._curGPUPipelineState)switch(this._curGPUPipelineState.glPrimitive){case 4:this._numTris+=n/3*Math.max(t.instanceCount,1);break;case 5:case 6:this._numTris+=(n-2)*Math.max(t.instanceCount,1)}}else console.error("Command 'draw' must be recorded inside a render pass.")}setViewport(e){const{stateCache:t,gl:n}=y3.instance;t.viewport.left===e.left&&t.viewport.top===e.top&&t.viewport.width===e.width&&t.viewport.height===e.height||(n.viewport(e.left,e.top,e.width,e.height),t.viewport.left=e.left,t.viewport.top=e.top,t.viewport.width=e.width,t.viewport.height=e.height)}setScissor(e){const{stateCache:t,gl:n}=y3.instance;t.scissorRect.x===e.x&&t.scissorRect.y===e.y&&t.scissorRect.width===e.width&&t.scissorRect.height===e.height||(n.scissor(e.x,e.y,e.width,e.height),t.scissorRect.x=e.x,t.scissorRect.y=e.y,t.scissorRect.width=e.width,t.scissorRect.height=e.height)}updateBuffer(e,t,n){if(this._isInRenderPass)console.error("Command 'updateBuffer' must be recorded outside a render pass.");else{const i=e.gpuBuffer;if(i){let s;s=void 0!==n?n:e.usage&si.INDIRECT?0:t.byteLength,U3(y3.instance,i,t,0,s)}}}copyBuffersToTexture(e,t,n){if(this._isInRenderPass)console.error("Command 'copyBufferToTexture' must be recorded outside a render pass.");else{const i=t.gpuTexture;i&&Y3(y3.instance,e,i,n)}}execute(e,t){for(let n=0;n<t;++n){const t=e[n];X3(y3.instance,t.cmdPackage),this._numDrawCalls+=t._numDrawCalls,this._numInstances+=t._numInstances,this._numTris+=t._numTris}}bindStates(){j3(y3.instance,this._curGPUPipelineState,this._curGPUInputAssembler,this._curGPUDescriptorSets,this._curDynamicOffsets,this._curDynamicStates),this._isStateInvalied=!1}}class a5 extends yo{constructor(...e){super(...e),this.numDrawCalls=0,this.numInstances=0,this.numTris=0}initialize(e){this._type=e.type}destroy(){}submit(e){for(let t=0;t<e.length;t++){const n=e[t];this.numDrawCalls+=n.numDrawCalls,this.numInstances+=n.numInstances,this.numTris+=n.numTris}}clear(){this.numDrawCalls=0,this.numInstances=0,this.numTris=0}}class c5 extends xo{constructor(...e){super(...e),this._gpuRenderPass=null}get gpuRenderPass(){return this._gpuRenderPass}initialize(e){this._colorInfos=e.colorAttachments,this._depthStencilInfo=e.depthStencilAttachment,this._subpasses=e.subpasses,this._gpuRenderPass={colorAttachments:this._colorInfos,depthStencilAttachment:this._depthStencilInfo},this._hash=this.computeHash()}destroy(){this._gpuRenderPass=null}}class l5 extends Eo{get gpuSampler(){return this._gpuSampler}constructor(e,t){super(e,t),this._gpuSampler=null,this._gpuSampler={glSamplers:new Map,minFilter:this._info.minFilter,magFilter:this._info.magFilter,mipFilter:this._info.mipFilter,addressU:this._info.addressU,addressV:this._info.addressV,addressW:this._info.addressW,glMinFilter:0,glMagFilter:0,glWrapS:0,glWrapT:0,glWrapR:0,getGLSampler(e,t,n){const{gl:i}=e,s=t<<16|n;if(!this.glSamplers.has(s)){const e=i.createSampler();e&&(this.glSamplers.set(s,e),i.samplerParameteri(e,i.TEXTURE_MIN_FILTER,this.glMinFilter),i.samplerParameteri(e,i.TEXTURE_MAG_FILTER,this.glMagFilter),i.samplerParameteri(e,i.TEXTURE_WRAP_S,this.glWrapS),i.samplerParameteri(e,i.TEXTURE_WRAP_T,this.glWrapT),i.samplerParameteri(e,i.TEXTURE_WRAP_R,this.glWrapR),i.samplerParameterf(e,i.TEXTURE_MIN_LOD,t),i.samplerParameterf(e,i.TEXTURE_MAX_LOD,n))}return this.glSamplers.get(s)}},function(e,t){const{gl:n}=e;t.minFilter===pi.LINEAR||t.minFilter===pi.ANISOTROPIC?t.mipFilter===pi.LINEAR||t.mipFilter===pi.ANISOTROPIC?t.glMinFilter=n.LINEAR_MIPMAP_LINEAR:t.mipFilter===pi.POINT?t.glMinFilter=n.LINEAR_MIPMAP_NEAREST:t.glMinFilter=n.LINEAR:t.mipFilter===pi.LINEAR||t.mipFilter===pi.ANISOTROPIC?t.glMinFilter=n.NEAREST_MIPMAP_LINEAR:t.mipFilter===pi.POINT?t.glMinFilter=n.NEAREST_MIPMAP_NEAREST:t.glMinFilter=n.NEAREST,t.magFilter===pi.LINEAR||t.magFilter===pi.ANISOTROPIC?t.glMagFilter=n.LINEAR:t.glMagFilter=n.NEAREST,t.glWrapS=x3[t.addressU],t.glWrapT=x3[t.addressV],t.glWrapR=x3[t.addressW]}(y3.instance,this._gpuSampler)}destroy(){this._gpuSampler&&(function(e,t){const{gl:n}=e,i=t.glSamplers.values().next();for(;!i.done;){n.deleteSampler(i.value);const t=e.stateCache.glSamplerUnits;for(let e=0;e<t.length;++e)t[e]===i.value&&(n.bindSampler(e,null),t[e]=null)}t.glSamplers.clear()}(y3.instance,this._gpuSampler),this._gpuSampler=null)}}class h5 extends So{constructor(...e){super(...e),this._gpuShader=null}get gpuShader(){return this._gpuShader}initialize(e){this._name=e.name,this._stages=e.stages,this._attributes=e.attributes,this._blocks=e.blocks,this._samplers=e.samplers,this._gpuShader={name:e.name,blocks:e.blocks.slice(),samplerTextures:e.samplerTextures.slice(),subpassInputs:e.subpassInputs.slice(),gpuStages:new Array(e.stages.length),glProgram:null,glInputs:[],glUniforms:[],glBlocks:[],glSamplerTextures:[]};for(let t=0;t<e.stages.length;++t){const n=e.stages[t];this._gpuShader.gpuStages[t]={type:n.stage,source:n.source,glShader:null}}!function(e,t){const{gl:n}=e;for(let e=0;e<t.gpuStages.length;e++){const i=t.gpuStages[e];let s=0,o="",r=1;switch(i.type){case Si.VERTEX:o="VertexShader",s=n.VERTEX_SHADER;break;case Si.FRAGMENT:o="FragmentShader",s=n.FRAGMENT_SHADER;break;default:return void console.error("Unsupported ShaderType.")}const a=n.createShader(s);if(a&&(i.glShader=a,n.shaderSource(i.glShader,`#version 300 es\n${i.source}`),n.compileShader(i.glShader),!n.getShaderParameter(i.glShader,n.COMPILE_STATUS))){console.error(`${o} in '${t.name}' compilation failed.`),console.error("Shader source dump:",i.source.replace(/^|\n/g,(()=>`\n${r++} `))),console.error(n.getShaderInfoLog(i.glShader));for(let i=0;i<t.gpuStages.length;i++){const i=t.gpuStages[e];i.glShader&&(n.deleteShader(i.glShader),i.glShader=null)}return}}const i=n.createProgram();if(!i)return;t.glProgram=i;for(let e=0;e<t.gpuStages.length;e++){const i=t.gpuStages[e];n.attachShader(t.glProgram,i.glShader)}n.linkProgram(t.glProgram);for(let e=0;e<t.gpuStages.length;e++){const i=t.gpuStages[e];i.glShader&&(n.detachShader(t.glProgram,i.glShader),n.deleteShader(i.glShader),i.glShader=null)}if(!n.getProgramParameter(t.glProgram,n.LINK_STATUS))return console.error(`Failed to link shader '${t.name}'.`),void console.error(n.getProgramInfoLog(t.glProgram));T(`Shader '${t.name}' compilation succeeded.`);const s=n.getProgramParameter(t.glProgram,n.ACTIVE_ATTRIBUTES);t.glInputs=new Array(s);for(let e=0;e<s;++e){const i=n.getActiveAttrib(t.glProgram,e);if(i){let s;const o=i.name.indexOf("[");s=-1!==o?i.name.substr(0,o):i.name;const r=n.getAttribLocation(t.glProgram,s),a=T3(i.type,n),c=b3(i.type,n);t.glInputs[e]={name:s,type:a,stride:c,count:i.size,size:c*i.size,glType:i.type,glLoc:r}}}const o=n.getProgramParameter(t.glProgram,n.ACTIVE_UNIFORM_BLOCKS);let r,a,c,l;if(o){t.glBlocks=new Array(o);for(let i=0;i<o;++i){r=n.getActiveUniformBlockName(t.glProgram,i);const s=r.indexOf("[");-1!==s&&(r=r.substr(0,s)),l=null;for(let e=0;e<t.blocks.length;e++)if(t.blocks[e].name===r){l=t.blocks[e];break}if(l){a=i,c=n.getActiveUniformBlockParameter(t.glProgram,a,n.UNIFORM_BLOCK_DATA_SIZE);const s=l.binding+(e.bindingMappings.blockOffsets[l.set]||0);n.uniformBlockBinding(t.glProgram,a,s),t.glBlocks[i]={set:l.set,binding:l.binding,idx:a,name:r,size:c,glBinding:s}}else C(`Block '${r}' does not bound`)}}for(let e=0;e<t.subpassInputs.length;++e){const n=t.subpassInputs[e];t.samplerTextures.push(new us(n.set,n.binding,n.name,ii.SAMPLER2D,n.count))}if(t.samplerTextures.length>0){t.glSamplerTextures=new Array(t.samplerTextures.length);for(let e=0;e<t.samplerTextures.length;++e){const i=t.samplerTextures[e];t.glSamplerTextures[e]={set:i.set,binding:i.binding,name:i.name,type:i.type,count:i.count,units:[],glUnits:null,glType:E3(i.type,n),glLoc:null}}}const h=[],u=[],_=e.stateCache.texUnitCacheMap;let d=0;for(let n=0;n<t.blocks.length;++n)t.blocks[n].set===e.bindingMappings.flexibleSet&&d++;let p=0;for(let i=0;i<t.samplerTextures.length;++i){const s=t.samplerTextures[i],o=n.getUniformLocation(t.glProgram,s.name);if(o&&-1!==o.id&&(h.push(t.glSamplerTextures[i]),u.push(o)),void 0===_[s.name]){let t=s.binding+e.bindingMappings.samplerTextureOffsets[s.set]+p;s.set===e.bindingMappings.flexibleSet&&(t-=d),_[s.name]=t%e.capabilities.maxTextureUnits,p+=s.count-1}}if(h.length){const i=[];for(let t=0;t<h.length;++t){const n=h[t];let s=_[n.name];if(void 0!==s){n.glLoc=u[t];for(let t=0;t<n.count;++t){for(;i[s];)s=(s+1)%e.capabilities.maxTextureUnits;n.units.push(s),i[s]=!0}}}let s=0;for(let t=0;t<h.length;++t){const n=h[t];if(!n.glLoc){for(n.glLoc=u[t];i[s];)s++;for(let t=0;t<n.count;++t){for(;i[s];)s=(s+1)%e.capabilities.maxTextureUnits;void 0===_[n.name]&&(_[n.name]=s),n.units.push(s),i[s]=!0}}}e.stateCache.glProgram!==t.glProgram&&n.useProgram(t.glProgram);for(let e=0;e<h.length;e++){const t=h[e];t.glUnits=new Int32Array(t.units),n.uniform1iv(t.glLoc,t.glUnits)}e.stateCache.glProgram!==t.glProgram&&n.useProgram(e.stateCache.glProgram)}t.glSamplerTextures=h}(y3.instance,this._gpuShader)}destroy(){var e,t;this._gpuShader&&(e=y3.instance,(t=this._gpuShader).glProgram&&(e.gl.deleteProgram(t.glProgram),e.stateCache.glProgram===t.glProgram&&(e.gl.useProgram(null),e.stateCache.glProgram=null),t.glProgram=null),this._gpuShader=null)}}class u5{constructor(){this.glArrayBuffer=null,this.glElementArrayBuffer=null,this.glUniformBuffer=null,this.glBindUBOs=[],this.glBindUBOOffsets=[],this.glVAO=null,this.texUnit=0,this.glTexUnits=[],this.glSamplerUnits=[],this.glRenderbuffer=null,this.glFramebuffer=null,this.glReadFramebuffer=null,this.viewport=new Ki,this.scissorRect=new Hi(0,0,0,0),this.rs=new Q4,this.dss=new J4,this.bs=new e3,this.glProgram=null,this.glEnabledAttribLocs=[],this.glCurrentAttribLocs=[],this.texUnitCacheMap={}}initialize(e,t,n){for(let t=0;t<e;++t)this.glTexUnits.push({glTexture:null});this.glSamplerUnits.length=e,this.glSamplerUnits.fill(null),this.glBindUBOs.length=t,this.glBindUBOs.fill(null),this.glBindUBOOffsets.length=t,this.glBindUBOOffsets.fill(0),this.glEnabledAttribLocs.length=n,this.glEnabledAttribLocs.fill(!1),this.glCurrentAttribLocs.length=n,this.glCurrentAttribLocs.fill(!1)}}class _5 extends Co{constructor(...e){super(...e),this._gpuTexture=null,this._gpuTextureView=null}get gpuTexture(){return this._gpuTexture}get gpuTextureView(){return this._gpuTextureView}initialize(e,t){let n=e;const i=e;if("texture"in e&&(n=i.texture.info,this._isTextureView=!0),this._info.copy(n),this._isPowerOf2=Xs(this._info.width)&&Xs(this._info.height),this._size=Ks(this._info.format,this.width,this.height,this.depth,this._info.levelCount)*this._info.layerCount,this._isTextureView){var s;if(this._viewInfo.copy(i),this._gpuTexture=i.texture._gpuTexture,(null===(s=this._gpuTexture)||void 0===s?void 0:s.format)!==n.format)return void console.log("GPU memory alias is not supported");this._gpuTextureView={gpuTexture:this._gpuTexture,type:i.type,format:i.format,baseLevel:i.baseLevel,levelCount:i.levelCount}}else this._gpuTexture={type:n.type,format:n.format,usage:n.usage,width:n.width,height:n.height,depth:n.depth,size:this._size,arrayLayer:n.layerCount,mipLevel:n.levelCount,samples:n.samples,flags:n.flags,isPowerOf2:this._isPowerOf2,glTarget:0,glInternalFmt:0,glFormat:0,glType:0,glUsage:0,glTexture:null,glRenderbuffer:null,glWrapS:0,glWrapT:0,glMinFilter:0,glMagFilter:0,isSwapchainTexture:t||!1},G3(y3.instance,this._gpuTexture),y3.instance.memoryStatus.textureSize+=this._size,this._viewInfo.texture=this,this._viewInfo.type=e.type,this._viewInfo.format=e.format,this._viewInfo.baseLevel=0,this._viewInfo.levelCount=e.levelCount,this._viewInfo.baseLayer=0,this._viewInfo.layerCount=e.layerCount,this._gpuTextureView={gpuTexture:this._gpuTexture,type:this._viewInfo.type,format:this._viewInfo.format,baseLevel:this._viewInfo.baseLevel,levelCount:this._viewInfo.levelCount}}destroy(){!this._isTextureView&&this._gpuTexture&&(V3(y3.instance,this._gpuTexture),y3.instance.memoryStatus.textureSize-=this._size,this._gpuTexture=null)}resize(e,t){if(this._info.width===e&&this._info.height===t)return;this._info.levelCount===_5.getLevelCount(this._info.width,this._info.height)?this._info.levelCount=_5.getLevelCount(e,t):this._info.levelCount>1&&(this._info.levelCount=Math.min(this._info.levelCount,_5.getLevelCount(e,t)));const n=this._size;this._info.width=e,this._info.height=t,this._size=Ks(this._info.format,this.width,this.height,this.depth,this._info.levelCount)*this._info.layerCount,!this._isTextureView&&this._gpuTexture&&(this._gpuTexture.width=e,this._gpuTexture.height=t,this._gpuTexture.size=this._size,function(e,t){if(!t.size)return;const{gl:n}=e;let i=t.width,s=t.height;switch(t.type){case ci.TEX2D:{t.glTarget=n.TEXTURE_2D;const o=Math.max(i,s);if(o>e.capabilities.maxTextureSize&&N(9100,o,e.capabilities.maxTextureSize),t.samples===_i.ONE){const o=e.stateCache.glTexUnits[e.stateCache.texUnit];if(o.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_2D,t.glTexture),o.glTexture=t.glTexture),Hs[t.format].isCompressed)for(let e=0;e<t.mipLevel;++e){const o=Ys(t.format,i,s,1),r=new Uint8Array(o);n.compressedTexImage2D(n.TEXTURE_2D,e,t.glInternalFmt,i,s,0,r),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}else V3(e,t),G3(e,t)}else t.glRenderbuffer&&(e.stateCache.glRenderbuffer!==t.glRenderbuffer&&(n.bindRenderbuffer(n.RENDERBUFFER,t.glRenderbuffer),e.stateCache.glRenderbuffer=t.glRenderbuffer),n.renderbufferStorageMultisample(n.RENDERBUFFER,t.samples,t.glInternalFmt,t.width,t.height));break}case ci.CUBE:{t.type=ci.CUBE,t.glTarget=n.TEXTURE_CUBE_MAP;const o=Math.max(i,s);o>e.capabilities.maxCubeMapTextureSize&&N(9100,o,e.capabilities.maxTextureSize);const r=e.stateCache.glTexUnits[e.stateCache.texUnit];if(r.glTexture!==t.glTexture&&(n.bindTexture(n.TEXTURE_CUBE_MAP,t.glTexture),r.glTexture=t.glTexture),Hs[t.format].isCompressed)for(let e=0;e<6;++e){i=t.width,s=t.height;for(let o=0;o<t.mipLevel;++o){const r=Ys(t.format,i,s,1),a=new Uint8Array(r);n.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+e,o,t.glInternalFmt,i,s,0,a),i=Math.max(1,i>>1),s=Math.max(1,s>>1)}}else V3(e,t),G3(e,t);break}default:console.error("Unsupported TextureType, create texture failed."),t.type=ci.TEX2D,t.glTarget=n.TEXTURE_2D}}(y3.instance,this._gpuTexture),y3.instance.memoryStatus.textureSize-=n,y3.instance.memoryStatus.textureSize+=this._size)}initAsSwapchainTexture(e){const t=new rs;t.format=e.format,t.usage=Hs[e.format].hasDepth?li.DEPTH_STENCIL_ATTACHMENT:li.COLOR_ATTACHMENT,t.width=e.width,t.height=e.height,this.initialize(t,!0)}}const d5="webglcontextlost";function p5(e,t){const n=["","WEBKIT_","MOZ_"];for(let i=0;i<n.length;++i){const s=e.getExtension(n[i]+t);if(s)return s}return null}function f5(e){const t={EXT_texture_filter_anisotropic:p5(e,"EXT_texture_filter_anisotropic"),EXT_color_buffer_half_float:p5(e,"EXT_color_buffer_half_float"),EXT_color_buffer_float:p5(e,"EXT_color_buffer_float"),WEBGL_compressed_texture_etc1:p5(e,"WEBGL_compressed_texture_etc1"),WEBGL_compressed_texture_etc:p5(e,"WEBGL_compressed_texture_etc"),WEBGL_compressed_texture_pvrtc:p5(e,"WEBGL_compressed_texture_pvrtc"),WEBGL_compressed_texture_astc:p5(e,"WEBGL_compressed_texture_astc"),WEBGL_compressed_texture_s3tc:p5(e,"WEBGL_compressed_texture_s3tc"),WEBGL_compressed_texture_s3tc_srgb:p5(e,"WEBGL_compressed_texture_s3tc_srgb"),WEBGL_debug_shaders:p5(e,"WEBGL_debug_shaders"),WEBGL_lose_context:p5(e,"WEBGL_lose_context"),WEBGL_debug_renderer_info:p5(e,"WEBGL_debug_renderer_info"),OES_texture_half_float_linear:p5(e,"OES_texture_half_float_linear"),OES_texture_float_linear:p5(e,"OES_texture_float_linear"),WEBGL_multi_draw:null,useVAO:!0};return nh.os!==Ql.ANDROID&&nh.os!==Ql.IOS&&(t.WEBGL_multi_draw=p5(e,"WEBGL_multi_draw")),t}class m5 extends ho{constructor(...e){super(...e),this.stateCache=new u5,this.nullTex2D=null,this.nullTexCube=null,this._canvas=null,this._webGL2ContextLostHandler=null,this._extensions=null}get extensions(){return this._extensions}initialize(e){this._canvas=e.windowHandle,this._webGL2ContextLostHandler=this._onWebGLContextLost.bind(this),this._canvas.addEventListener(d5,this._onWebGLContextLost);const t=y3.instance.gl;this.stateCache.initialize(y3.instance.capabilities.maxTextureUnits,y3.instance.capabilities.maxUniformBufferBindings,y3.instance.capabilities.maxVertexAttributes),this._extensions=f5(t),function(e){e.activeTexture(e.TEXTURE0),e.pixelStorei(e.PACK_ALIGNMENT,1),e.pixelStorei(e.UNPACK_ALIGNMENT,1),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!1),e.bindFramebuffer(e.FRAMEBUFFER,null),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.enable(e.DEPTH_TEST),e.depthMask(!0),e.depthFunc(e.LESS),e.stencilFuncSeparate(e.FRONT,e.ALWAYS,1,65535),e.stencilOpSeparate(e.FRONT,e.KEEP,e.KEEP,e.KEEP),e.stencilMaskSeparate(e.FRONT,65535),e.stencilFuncSeparate(e.BACK,e.ALWAYS,1,65535),e.stencilOpSeparate(e.BACK,e.KEEP,e.KEEP,e.KEEP),e.stencilMaskSeparate(e.BACK,65535),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.disable(e.BLEND),e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.colorMask(!0,!0,!0,!0),e.blendColor(0,0,0,0)}(t);const n=ti.RGBA8;let i=ti.DEPTH_STENCIL;const s=t.getParameter(t.DEPTH_BITS),o=t.getParameter(t.STENCIL_BITS);s&&o?i=ti.DEPTH_STENCIL:s&&(i=ti.DEPTH),this._colorTexture=new _5,this._colorTexture.initAsSwapchainTexture({swapchain:this,format:n,width:e.width,height:e.height}),this._depthStencilTexture=new _5,this._depthStencilTexture.initAsSwapchainTexture({swapchain:this,format:i,width:e.width,height:e.height}),this.nullTex2D=y3.instance.createTexture(new rs(ci.TEX2D,li.SAMPLED,ti.RGBA8,2,2,hi.NONE)),this.nullTexCube=y3.instance.createTexture(new rs(ci.CUBE,li.SAMPLED,ti.RGBA8,2,2,hi.NONE,6));const r=new Yi;r.texExtent.width=2,r.texExtent.height=2;const a=new Uint8Array(this.nullTex2D.size);a.fill(0),y3.instance.copyBuffersToTexture([a],this.nullTex2D,[r]),r.texSubres.layerCount=6,y3.instance.copyBuffersToTexture([a,a,a,a,a,a],this.nullTexCube,[r])}destroy(){this._canvas&&this._webGL2ContextLostHandler&&(this._canvas.removeEventListener(d5,this._webGL2ContextLostHandler),this._webGL2ContextLostHandler=null),this.nullTex2D&&(this.nullTex2D.destroy(),this.nullTex2D=null),this.nullTexCube&&(this.nullTexCube.destroy(),this.nullTexCube=null),this._extensions=null,this._canvas=null}resize(e,t,n){this._colorTexture.width===e&&this._colorTexture.height===t||(T(`Resizing swapchain: ${e}x${t}`),this._canvas.width=e,this._canvas.height=t,this._colorTexture.resize(e,t),this._depthStencilTexture.resize(e,t))}_onWebGLContextLost(e){D(11e3),S(e)}}class g5 extends lo{constructor(...e){super(...e),this._swapchain=null,this._context=null,this._bindingMappings=null,this._textureExclusive=new Array(ti.COUNT)}get gl(){return this._context}get extensions(){return this._swapchain.extensions}get stateCache(){return this._swapchain.stateCache}get nullTex2D(){return this._swapchain.nullTex2D}get nullTexCube(){return this._swapchain.nullTexCube}get textureExclusive(){return this._textureExclusive}get bindingMappings(){return this._bindingMappings}initialize(e){y3.setInstance(this),this._gfxAPI=Jn.WEBGL2;const t=this._bindingMappingInfo=e.bindingMappingInfo,n=[],i=[],s=t.setIndices[0];n[s]=0,i[s]=0;for(let e=1;e<t.setIndices.length;++e){const s=t.setIndices[e],o=t.setIndices[e-1];n[s]=t.maxBlockCounts[o]+n[o],i[s]=t.maxSamplerTextureCounts[o]+i[o]}for(let e=0;e<t.setIndices.length;++e){const n=t.setIndices[e];i[n]-=t.maxBlockCounts[n]}this._bindingMappings={blockOffsets:n,samplerTextureOffsets:i,flexibleSet:t.setIndices[t.setIndices.length-1]};const o=this._context=function(e){let t=null;try{const n={alpha:Qe.ENABLE_TRANSPARENT_CANVAS,antialias:Qe.ENABLE_WEBGL_ANTIALIAS,depth:!0,stencil:!0,premultipliedAlpha:!1,preserveDrawingBuffer:!1,powerPreference:"default",failIfMajorPerformanceCaveat:!1};t=e.getContext("webgl2",n)}catch(e){return null}return t}(lo.canvas);if(!o)return console.error("This device does not support WebGL."),!1;this._queue=this.createQueue(new Ls(Mi.GRAPHICS)),this._cmdBuff=this.createCommandBuffer(new Ms(this._queue)),this._caps.maxVertexAttributes=o.getParameter(o.MAX_VERTEX_ATTRIBS),this._caps.maxVertexUniformVectors=o.getParameter(o.MAX_VERTEX_UNIFORM_VECTORS),this._caps.maxFragmentUniformVectors=o.getParameter(o.MAX_FRAGMENT_UNIFORM_VECTORS),this._caps.maxTextureUnits=o.getParameter(o.MAX_TEXTURE_IMAGE_UNITS),this._caps.maxVertexTextureUnits=o.getParameter(o.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this._caps.maxUniformBufferBindings=o.getParameter(o.MAX_UNIFORM_BUFFER_BINDINGS),this._caps.maxUniformBlockSize=o.getParameter(o.MAX_UNIFORM_BLOCK_SIZE),this._caps.maxTextureSize=o.getParameter(o.MAX_TEXTURE_SIZE),this._caps.maxCubeMapTextureSize=o.getParameter(o.MAX_CUBE_MAP_TEXTURE_SIZE),this._caps.uboOffsetAlignment=o.getParameter(o.UNIFORM_BUFFER_OFFSET_ALIGNMENT);const r=o.getSupportedExtensions();let a="";if(r)for(const e of r)a+=`${e} `;const c=f5(o);c.WEBGL_debug_renderer_info?(this._renderer=o.getParameter(c.WEBGL_debug_renderer_info.UNMASKED_RENDERER_WEBGL),this._vendor=o.getParameter(c.WEBGL_debug_renderer_info.UNMASKED_VENDOR_WEBGL)):(this._renderer=o.getParameter(o.RENDERER),this._vendor=o.getParameter(o.VENDOR));const l=o.getParameter(o.VERSION);this._features.fill(!1),this.initFormatFeatures(c),this._features[ei.ELEMENT_INDEX_UINT]=!0,this._features[ei.INSTANCED_ARRAYS]=!0,this._features[ei.MULTIPLE_RENDER_TARGETS]=!0,this._features[ei.BLEND_MINMAX]=!0;let h="";return this.getFormatFeatures(ti.ETC_RGB8)&&(h+="etc1 "),this.getFormatFeatures(ti.ETC2_RGB8)&&(h+="etc2 "),this.getFormatFeatures(ti.BC1)&&(h+="dxt "),this.getFormatFeatures(ti.PVRTC_RGB2)&&(h+="pvrtc "),this.getFormatFeatures(ti.ASTC_RGBA_4X4)&&(h+="astc "),T("WebGL2 device initialized."),T(`RENDERER: ${this._renderer}`),T(`VENDOR: ${this._vendor}`),T(`VERSION: ${l}`),T(`COMPRESSED_FORMAT: ${h}`),T(`EXTENSIONS: ${a}`),!0}destroy(){this._queue&&(this._queue.destroy(),this._queue=null),this._cmdBuff&&(this._cmdBuff.destroy(),this._cmdBuff=null);const e=this._samplers.values();let t=e.next();for(;!t.done;)t.value.destroy(),t=e.next();this._swapchain=null}flushCommands(e){}acquire(e){}present(){const e=this._queue;this._numDrawCalls=e.numDrawCalls,this._numInstances=e.numInstances,this._numTris=e.numTris,e.clear()}initFormatFeatures(e){this._formatFeatures.fill(ui.NONE),this._textureExclusive.fill(!0);let t=ui.RENDER_TARGET|ui.SAMPLED_TEXTURE|ui.STORAGE_TEXTURE|ui.LINEAR_FILTER|ui.VERTEX_ATTRIBUTE;this._formatFeatures[ti.R8]=t,this._formatFeatures[ti.RG8]=t,this._formatFeatures[ti.RGB8]=t,this._formatFeatures[ti.RGBA8]=t,t=ui.RENDER_TARGET|ui.SAMPLED_TEXTURE|ui.STORAGE_TEXTURE|ui.LINEAR_FILTER,this._formatFeatures[ti.R8SN]=t,this._formatFeatures[ti.RG8SN]=t,this._formatFeatures[ti.RGB8SN]=t,this._formatFeatures[ti.RGBA8SN]=t,this._formatFeatures[ti.R5G6B5]=t,this._formatFeatures[ti.RGBA4]=t,this._formatFeatures[ti.RGB5A1]=t,this._formatFeatures[ti.RGB10A2]=t,this._formatFeatures[ti.SRGB8]=t,this._formatFeatures[ti.SRGB8_A8]=t,this._formatFeatures[ti.R11G11B10F]=t,this._formatFeatures[ti.RGB9E5]=t,this._formatFeatures[ti.DEPTH]=t,this._formatFeatures[ti.DEPTH_STENCIL]=t,this._formatFeatures[ti.RGB10A2UI]=ui.RENDER_TARGET|ui.STORAGE_TEXTURE|ui.SAMPLED_TEXTURE|ui.LINEAR_FILTER,t=ui.RENDER_TARGET|ui.SAMPLED_TEXTURE|ui.STORAGE_TEXTURE|ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.R16F]=t,this._formatFeatures[ti.RG16F]=t,this._formatFeatures[ti.RGB16F]=t,this._formatFeatures[ti.RGBA16F]=t,t=ui.STORAGE_TEXTURE|ui.SAMPLED_TEXTURE|ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.R32F]=t,this._formatFeatures[ti.RG32F]=t,this._formatFeatures[ti.RGB32F]=t,this._formatFeatures[ti.RGBA32F]=t,this._formatFeatures[ti.RGB10A2UI]=ui.RENDER_TARGET|ui.STORAGE_TEXTURE|ui.SAMPLED_TEXTURE|ui.LINEAR_FILTER,t=ui.RENDER_TARGET|ui.STORAGE_TEXTURE|ui.SAMPLED_TEXTURE|ui.LINEAR_FILTER|ui.VERTEX_ATTRIBUTE,this._formatFeatures[ti.R8I]=t,this._formatFeatures[ti.R8UI]=t,this._formatFeatures[ti.R16I]=t,this._formatFeatures[ti.R16UI]=t,this._formatFeatures[ti.R32I]=t,this._formatFeatures[ti.R32UI]=t,this._formatFeatures[ti.RG8I]=t,this._formatFeatures[ti.RG8UI]=t,this._formatFeatures[ti.RG16I]=t,this._formatFeatures[ti.RG16UI]=t,this._formatFeatures[ti.RG32I]=t,this._formatFeatures[ti.RG32UI]=t,this._formatFeatures[ti.RGB8I]=t,this._formatFeatures[ti.RGB8UI]=t,this._formatFeatures[ti.RGB16I]=t,this._formatFeatures[ti.RGB16UI]=t,this._formatFeatures[ti.RGB32I]=t,this._formatFeatures[ti.RGB32UI]=t,this._formatFeatures[ti.RGBA8I]=t,this._formatFeatures[ti.RGBA8UI]=t,this._formatFeatures[ti.RGBA16I]=t,this._formatFeatures[ti.RGBA16UI]=t,this._formatFeatures[ti.RGBA32I]=t,this._formatFeatures[ti.RGBA32UI]=t,this._textureExclusive[ti.R8]=!1,this._textureExclusive[ti.RG8]=!1,this._textureExclusive[ti.RGB8]=!1,this._textureExclusive[ti.R5G6B5]=!1,this._textureExclusive[ti.RGBA4]=!1,this._textureExclusive[ti.RGB5A1]=!1,this._textureExclusive[ti.RGBA8]=!1,this._textureExclusive[ti.RGB10A2]=!1,this._textureExclusive[ti.RGB10A2UI]=!1,this._textureExclusive[ti.SRGB8_A8]=!1,this._textureExclusive[ti.R8I]=!1,this._textureExclusive[ti.R8UI]=!1,this._textureExclusive[ti.R16I]=!1,this._textureExclusive[ti.R16UI]=!1,this._textureExclusive[ti.R32I]=!1,this._textureExclusive[ti.R32UI]=!1,this._textureExclusive[ti.RG8I]=!1,this._textureExclusive[ti.RG8UI]=!1,this._textureExclusive[ti.RG16I]=!1,this._textureExclusive[ti.RG16UI]=!1,this._textureExclusive[ti.RG32I]=!1,this._textureExclusive[ti.RG32UI]=!1,this._textureExclusive[ti.RGBA8I]=!1,this._textureExclusive[ti.RGBA8UI]=!1,this._textureExclusive[ti.RGBA16I]=!1,this._textureExclusive[ti.RGBA16UI]=!1,this._textureExclusive[ti.RGBA32I]=!1,this._textureExclusive[ti.RGBA32UI]=!1,this._textureExclusive[ti.DEPTH]=!1,this._textureExclusive[ti.DEPTH_STENCIL]=!1,e.EXT_color_buffer_float&&(this._formatFeatures[ti.R32F]|=ui.RENDER_TARGET,this._formatFeatures[ti.RG32F]|=ui.RENDER_TARGET,this._formatFeatures[ti.RGBA32F]|=ui.RENDER_TARGET,this._textureExclusive[ti.R32F]=!1,this._textureExclusive[ti.RG32F]=!1,this._textureExclusive[ti.RGBA32F]=!1),e.EXT_color_buffer_half_float&&(this._textureExclusive[ti.R16F]=!1,this._textureExclusive[ti.RG16F]=!1,this._textureExclusive[ti.RGBA16F]=!1),e.OES_texture_float_linear&&(this._formatFeatures[ti.RGB32F]|=ui.LINEAR_FILTER,this._formatFeatures[ti.RGBA32F]|=ui.LINEAR_FILTER,this._formatFeatures[ti.R32F]|=ui.LINEAR_FILTER,this._formatFeatures[ti.RG32F]|=ui.LINEAR_FILTER),e.OES_texture_half_float_linear&&(this._formatFeatures[ti.RGB16F]|=ui.LINEAR_FILTER,this._formatFeatures[ti.RGBA16F]|=ui.LINEAR_FILTER,this._formatFeatures[ti.R16F]|=ui.LINEAR_FILTER,this._formatFeatures[ti.RG16F]|=ui.LINEAR_FILTER);const n=ui.SAMPLED_TEXTURE|ui.LINEAR_FILTER;e.WEBGL_compressed_texture_etc1&&(this._formatFeatures[ti.ETC_RGB8]=n),e.WEBGL_compressed_texture_etc&&(this._formatFeatures[ti.ETC2_RGB8]=n,this._formatFeatures[ti.ETC2_RGBA8]=n,this._formatFeatures[ti.ETC2_SRGB8]=n,this._formatFeatures[ti.ETC2_SRGB8_A8]=n,this._formatFeatures[ti.ETC2_RGB8_A1]=n,this._formatFeatures[ti.ETC2_SRGB8_A1]=n),e.WEBGL_compressed_texture_s3tc&&(this._formatFeatures[ti.BC1]=n,this._formatFeatures[ti.BC1_ALPHA]=n,this._formatFeatures[ti.BC1_SRGB]=n,this._formatFeatures[ti.BC1_SRGB_ALPHA]=n,this._formatFeatures[ti.BC2]=n,this._formatFeatures[ti.BC2_SRGB]=n,this._formatFeatures[ti.BC3]=n,this._formatFeatures[ti.BC3_SRGB]=n),e.WEBGL_compressed_texture_pvrtc&&(this._formatFeatures[ti.PVRTC_RGB2]=n,this._formatFeatures[ti.PVRTC_RGBA2]=n,this._formatFeatures[ti.PVRTC_RGB4]=n,this._formatFeatures[ti.PVRTC_RGBA4]=n),e.WEBGL_compressed_texture_astc&&(this._formatFeatures[ti.ASTC_RGBA_4X4]=n,this._formatFeatures[ti.ASTC_RGBA_5X4]=n,this._formatFeatures[ti.ASTC_RGBA_5X5]=n,this._formatFeatures[ti.ASTC_RGBA_6X5]=n,this._formatFeatures[ti.ASTC_RGBA_6X6]=n,this._formatFeatures[ti.ASTC_RGBA_8X5]=n,this._formatFeatures[ti.ASTC_RGBA_8X6]=n,this._formatFeatures[ti.ASTC_RGBA_8X8]=n,this._formatFeatures[ti.ASTC_RGBA_10X5]=n,this._formatFeatures[ti.ASTC_RGBA_10X6]=n,this._formatFeatures[ti.ASTC_RGBA_10X8]=n,this._formatFeatures[ti.ASTC_RGBA_10X10]=n,this._formatFeatures[ti.ASTC_RGBA_12X10]=n,this._formatFeatures[ti.ASTC_RGBA_12X12]=n,this._formatFeatures[ti.ASTC_SRGBA_4X4]=n,this._formatFeatures[ti.ASTC_SRGBA_5X4]=n,this._formatFeatures[ti.ASTC_SRGBA_5X5]=n,this._formatFeatures[ti.ASTC_SRGBA_6X5]=n,this._formatFeatures[ti.ASTC_SRGBA_6X6]=n,this._formatFeatures[ti.ASTC_SRGBA_8X5]=n,this._formatFeatures[ti.ASTC_SRGBA_8X6]=n,this._formatFeatures[ti.ASTC_SRGBA_8X8]=n,this._formatFeatures[ti.ASTC_SRGBA_10X5]=n,this._formatFeatures[ti.ASTC_SRGBA_10X6]=n,this._formatFeatures[ti.ASTC_SRGBA_10X8]=n,this._formatFeatures[ti.ASTC_SRGBA_10X10]=n,this._formatFeatures[ti.ASTC_SRGBA_12X10]=n,this._formatFeatures[ti.ASTC_SRGBA_12X12]=n)}createCommandBuffer(e){const t=new(e.type===Bi.PRIMARY?r5:Z3);return t.initialize(e),t}createSwapchain(e){const t=new m5;return this._swapchain=t,t.initialize(e),t}createBuffer(e){const t=new $3;return t.initialize(e),t}createTexture(e){const t=new _5;return t.initialize(e),t}createDescriptorSet(e){const t=new g3;return t.initialize(e),t}createShader(e){const t=new h5;return t.initialize(e),t}createInputAssembler(e){const t=new t5;return t.initialize(e),t}createRenderPass(e){const t=new c5;return t.initialize(e),t}createFramebuffer(e){const t=new e5;return t.initialize(e),t}createDescriptorSetLayout(e){const t=new n5;return t.initialize(e),t}createPipelineLayout(e){const t=new i5;return t.initialize(e),t}createPipelineState(e){const t=new o5;return t.initialize(e),t}createQueue(e){const t=new a5;return t.initialize(e),t}getSampler(e){const t=Eo.computeHash(e);return this._samplers.has(t)||this._samplers.set(t,new l5(e,t)),this._samplers.get(t)}getGeneralBarrier(e){const t=To.computeHash(e);return this._generalBarrierss.has(t)||this._generalBarrierss.set(t,new To(e,t)),this._generalBarrierss.get(t)}getTextureBarrier(e){const t=bo.computeHash(e);return this._textureBarriers.has(t)||this._textureBarriers.set(t,new bo(e,t)),this._textureBarriers.get(t)}copyBuffersToTexture(e,t,n){Y3(this,e,t.gpuTexture,n)}copyTextureToBuffers(e,t,n){!function(e,t,n,i){const{gl:s}=e,o=e.stateCache,r=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,r);let a=0,c=0,l=1,h=1;switch(t.glTarget){case s.TEXTURE_2D:for(let e=0;e<i.length;e++){const o=i[e];s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,t.glTarget,t.glTexture,o.texSubres.mipLevel),a=o.texOffset.x,c=o.texOffset.y,l=o.texExtent.width,h=o.texExtent.height,s.readPixels(a,c,l,h,t.glFormat,t.glType,n[e])}break;default:console.error("Unsupported GL texture type, copy texture to buffers failed.")}s.bindFramebuffer(s.FRAMEBUFFER,null),o.glFramebuffer=null,s.deleteFramebuffer(r)}(this,e.gpuTexture,t,n)}copyTexImagesToTexture(e,t,n){!function(e,t,n,i){const{gl:s}=e,o=e.stateCache.glTexUnits[e.stateCache.texUnit];o.glTexture!==n.glTexture&&(s.bindTexture(n.glTarget,n.glTexture),o.glTexture=n.glTexture);let r=0,a=0;switch(n.glTarget){case s.TEXTURE_2D:for(let e=0;e<i.length;e++){const o=i[e];s.texSubImage2D(s.TEXTURE_2D,o.texSubres.mipLevel,o.texOffset.x,o.texOffset.y,n.glFormat,n.glType,t[r++])}break;case s.TEXTURE_CUBE_MAP:for(let e=0;e<i.length;e++){const o=i[e],c=o.texSubres.baseArrayLayer+o.texSubres.layerCount;for(a=o.texSubres.baseArrayLayer;a<c;++a)s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,o.texSubres.mipLevel,o.texOffset.x,o.texOffset.y,n.glFormat,n.glType,t[r++])}break;default:console.error("Unsupported GL texture type, copy buffer to texture failed.")}n.flags&hi.GEN_MIPMAP&&s.generateMipmap(n.glTarget)}(this,e,t.gpuTexture,n)}}var v5,y5,x5,S5,C5,E5,T5,b5,A5,P5,w5,I5,R5,D5,O5;e("WebGL2Device",g5),u.WebGL2Device=g5;let N5=function(t){return e({Billboard:t,BillboardComponent:t}),t}((v5=mc("cc.Billboard"),y5=Mc(),x5=Rc(),S5=Zc(bm),C5=Zc(bm),E5=Uc(),T5=Uc(),b5=Uc(),A5=Uc(),v5(P5=y5(P5=x5(P5=Ic((I5=ac((w5=class extends Gh{get texture(){return this._texture}set texture(e){this._texture=e,this._material&&this._material.setProperty("mainTexture",e)}get height(){return this._height}set height(e){this._height=e,this._material&&(this._uniform.y=e,this._material.setProperty("cc_size_rotation",this._uniform))}get width(){return this._width}set width(e){this._width=e,this._material&&(this._uniform.x=e,this._material.setProperty("cc_size_rotation",this._uniform))}get rotation(){return Math.round(100*Qt(this._rotation))/100}set rotation(e){this._rotation=$t(e),this._material&&(this._uniform.z=this._rotation,this._material.setProperty("cc_size_rotation",this._uniform))}constructor(){super(),rc(this,"_texture",I5,this),rc(this,"_height",R5,this),rc(this,"_width",D5,this),rc(this,"_rotation",O5,this),this._model=null,this._mesh=null,this._material=null,this._uniform=new Gn(1,1,0,0)}onLoad(){this.createModel()}onEnable(){this.attachToScene(),this._model.enabled=!0,this.width=this._width,this.height=this._height,this.rotation=this.rotation,this.texture=this.texture}onDisable(){this.detachFromScene()}attachToScene(){this._model&&this.node&&this.node.scene&&(this._model.scene&&this.detachFromScene(),this._getRenderScene().addModel(this._model))}detachFromScene(){this._model&&this._model.scene&&this._model.scene.removeModel(this._model)}createModel(){this._mesh=fk({primitiveMode:Pi.TRIANGLE_LIST,positions:[0,0,0,0,0,0,0,0,0,0,0,0],uvs:[0,0,1,0,0,1,1,1],colors:[dn.WHITE.r,dn.WHITE.g,dn.WHITE.b,dn.WHITE.a,dn.WHITE.r,dn.WHITE.g,dn.WHITE.b,dn.WHITE.a,dn.WHITE.r,dn.WHITE.g,dn.WHITE.b,dn.WHITE.a,dn.WHITE.r,dn.WHITE.g,dn.WHITE.b,dn.WHITE.a],attributes:[new vs(zi.ATTR_POSITION,ti.RGB32F),new vs(zi.ATTR_TEX_COORD,ti.RG32F),new vs(zi.ATTR_COLOR,ti.RGBA8UI,!0)],indices:[0,1,2,1,2,3]},void 0,{calculateBounds:!1});const e=this._model=u.director.root.createModel(fv,this.node);e.node=e.transform=this.node,null==this._material&&(this._material=new lg,this._material.copy(Fm.get("default-billboard-material"))),e.initSubModel(0,this._mesh.renderingSubMeshes[0],this._material)}}).prototype,"_texture",[S5],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(w5.prototype,"texture",[C5,E5],Object.getOwnPropertyDescriptor(w5.prototype,"texture"),w5.prototype),R5=ac(w5.prototype,"_height",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ac(w5.prototype,"height",[T5],Object.getOwnPropertyDescriptor(w5.prototype,"height"),w5.prototype),D5=ac(w5.prototype,"_width",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ac(w5.prototype,"width",[b5],Object.getOwnPropertyDescriptor(w5.prototype,"width"),w5.prototype),O5=ac(w5.prototype,"_rotation",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ac(w5.prototype,"rotation",[A5],Object.getOwnPropertyDescriptor(w5.prototype,"rotation"),w5.prototype),P5=w5))||P5)||P5)||P5)||P5));const M5=[new vs(zi.ATTR_POSITION,ti.RGB32F),new vs(zi.ATTR_TEX_COORD,ti.RGBA32F),new vs(zi.ATTR_TEX_COORD1,ti.RGB32F),new vs(zi.ATTR_COLOR,ti.RGBA8,!0)],L5=new gn,B5=new gn;class F5 extends fv{constructor(){super(),this._capacity=void 0,this._vertSize=0,this._vBuffer=null,this._vertAttrsFloatCount=0,this._vdataF32=null,this._vdataUint32=null,this._iaInfo=void 0,this._iaInfoBuffer=void 0,this._subMeshData=null,this._vertCount=0,this._indexCount=0,this._material=null,this.type=_v.LINE,this._capacity=100,this._iaInfo=new os([new is]),this._iaInfoBuffer=this._device.createBuffer(new es(si.INDIRECT,ai.DEVICE,qs,qs))}setCapacity(e){this._capacity=e,this.createBuffer()}createBuffer(){this._vertSize=0;for(const e of M5)e.offset=this._vertSize,this._vertSize+=Hs[e.format].size;this._vertAttrsFloatCount=this._vertSize/4,this._vBuffer=this.createSubMeshData(),this._vdataF32=new Float32Array(this._vBuffer),this._vdataUint32=new Uint32Array(this._vBuffer)}updateMaterial(e){this._material=e,super.setSubModelMaterial(0,e)}createSubMeshData(){this._subMeshData&&this.destroySubMeshData(),this._vertCount=2,this._indexCount=6;const e=this._device.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.DEVICE,this._vertSize*this._capacity*this._vertCount,this._vertSize)),t=new ArrayBuffer(this._vertSize*this._capacity*this._vertCount);e.update(t);const n=new Uint16Array((this._capacity-1)*this._indexCount);let i=0;for(let e=0;e<this._capacity-1;++e){const t=2*e;n[i++]=t,n[i++]=t+1,n[i++]=t+2,n[i++]=t+3,n[i++]=t+2,n[i++]=t+1}const s=this._device.createBuffer(new es(si.INDEX|si.TRANSFER_DST,ai.DEVICE,(this._capacity-1)*this._indexCount*Uint16Array.BYTES_PER_ELEMENT,Uint16Array.BYTES_PER_ELEMENT));return s.update(n),this._iaInfo.drawInfos[0].vertexCount=this._capacity*this._vertCount,this._iaInfo.drawInfos[0].indexCount=(this._capacity-1)*this._indexCount,this._iaInfoBuffer.update(this._iaInfo),this._subMeshData=new yE([e],M5,Pi.TRIANGLE_LIST,s,this._iaInfoBuffer),this.initSubModel(0,this._subMeshData,this._material),t}addLineVertexData(e,t,n){if(e.length>1){let i=0;gn.subtract(L5,e[1],e[0]),this._vdataF32[i++]=e[0].x,this._vdataF32[i++]=e[0].y,this._vdataF32[i++]=e[0].z,this._vdataF32[i++]=0,this._vdataF32[i++]=t.evaluate(0,1),this._vdataF32[i++]=0,this._vdataF32[i++]=0,this._vdataF32[i++]=L5.x,this._vdataF32[i++]=L5.y,this._vdataF32[i++]=L5.z,this._vdataUint32[i++]=n.evaluate(0,1)._val,this._vdataF32[i++]=e[0].x,this._vdataF32[i++]=e[0].y,this._vdataF32[i++]=e[0].z,this._vdataF32[i++]=1,this._vdataF32[i++]=t.evaluate(0,1),this._vdataF32[i++]=0,this._vdataF32[i++]=1,this._vdataF32[i++]=L5.x,this._vdataF32[i++]=L5.y,this._vdataF32[i++]=L5.z,this._vdataUint32[i++]=n.evaluate(0,1)._val;for(let s=1;s<e.length-1;s++){gn.subtract(L5,e[s-1],e[s]),gn.subtract(B5,e[s+1],e[s]),gn.subtract(B5,B5,L5);const o=s/e.length;this._vdataF32[i++]=e[s].x,this._vdataF32[i++]=e[s].y,this._vdataF32[i++]=e[s].z,this._vdataF32[i++]=0,this._vdataF32[i++]=t.evaluate(o,1),this._vdataF32[i++]=o,this._vdataF32[i++]=0,this._vdataF32[i++]=B5.x,this._vdataF32[i++]=B5.y,this._vdataF32[i++]=B5.z,this._vdataUint32[i++]=n.evaluate(o,1)._val,this._vdataF32[i++]=e[s].x,this._vdataF32[i++]=e[s].y,this._vdataF32[i++]=e[s].z,this._vdataF32[i++]=1,this._vdataF32[i++]=t.evaluate(o,1),this._vdataF32[i++]=o,this._vdataF32[i++]=1,this._vdataF32[i++]=B5.x,this._vdataF32[i++]=B5.y,this._vdataF32[i++]=B5.z,this._vdataUint32[i++]=n.evaluate(o,1)._val}gn.subtract(L5,e[e.length-1],e[e.length-2]),this._vdataF32[i++]=e[e.length-1].x,this._vdataF32[i++]=e[e.length-1].y,this._vdataF32[i++]=e[e.length-1].z,this._vdataF32[i++]=0,this._vdataF32[i++]=t.evaluate(1,1),this._vdataF32[i++]=1,this._vdataF32[i++]=0,this._vdataF32[i++]=L5.x,this._vdataF32[i++]=L5.y,this._vdataF32[i++]=L5.z,this._vdataUint32[i++]=n.evaluate(1,1)._val,this._vdataF32[i++]=e[e.length-1].x,this._vdataF32[i++]=e[e.length-1].y,this._vdataF32[i++]=e[e.length-1].z,this._vdataF32[i++]=1,this._vdataF32[i++]=t.evaluate(1,1),this._vdataF32[i++]=1,this._vdataF32[i++]=1,this._vdataF32[i++]=L5.x,this._vdataF32[i++]=L5.y,this._vdataF32[i++]=L5.z,this._vdataUint32[i++]=n.evaluate(1,1)._val}this.updateIA(Math.max(0,e.length-1))}updateIA(e){this._subModels[0].inputAssembler.vertexBuffers[0].update(this._vdataF32),this._iaInfo.drawInfos[0].firstIndex=0,this._iaInfo.drawInfos[0].indexCount=this._indexCount*e,this._iaInfoBuffer.update(this._iaInfo)}destroySubMeshData(){this._subMeshData&&(this._subMeshData.destroy(),this._subMeshData=null)}}var z5,U5,G5;const V5=zt.Attr.setClassAttr,H5=[["mode","constant","multiplier"],["mode","spline","multiplier"],["mode","splineMin","splineMax","multiplier"],["mode","constantMin","constantMax","multiplier"]],k5=qe({Constant:0,Curve:1,TwoCurves:2,TwoConstants:3});let j5=e("CurveRange",mc("cc.CurveRange")((G5=U5=class{get curve(){var e;return null!==(e=this._curve)&&void 0!==e?e:this._curve=new qd(this.spline)}set curve(e){this._curve=e,this.spline=e._internalCurve}get curveMin(){var e;return null!==(e=this._curveMin)&&void 0!==e?e:this._curveMin=new qd(this.splineMin)}set curveMin(e){this._curveMin=e,this.splineMin=e._internalCurve}get curveMax(){var e;return null!==(e=this._curveMax)&&void 0!==e?e:this._curveMax=new qd(this.splineMax)}set curveMax(e){this._curveMax=e,this.splineMax=e._internalCurve}constructor(){this.mode=k5.Constant,this.spline=Kd(),this.splineMin=Kd(),this.splineMax=Kd(),this.constant=0,this.constantMin=0,this.constantMax=0,this.multiplier=1}evaluate(e,t){switch(this.mode){default:case k5.Constant:return this.constant;case k5.Curve:return this.spline.evaluate(e)*this.multiplier;case k5.TwoCurves:return Kt(this.splineMin.evaluate(e),this.splineMax.evaluate(e),t)*this.multiplier;case k5.TwoConstants:return Kt(this.constantMin,this.constantMax,t)}}getMax(){switch(this.mode){default:case k5.Constant:return this.constant;case k5.Curve:return this.multiplier;case k5.TwoConstants:return this.constantMax;case k5.TwoCurves:return this.multiplier}}_onBeforeSerialize(e){return H5[this.mode]}},U5.Mode=k5,z5=G5))||z5);function W5(e,t,n){switch(e.mode){case k5.Constant:return e.constant;case k5.Curve:return e.spline.evaluate(t)*e.multiplier;case k5.TwoCurves:return 0===n?e.splineMin.evaluate(t)*e.multiplier:e.splineMax.evaluate(t)*e.multiplier;case k5.TwoConstants:return 0===n?e.constantMin:e.constantMax;default:return 0}}function q5(e){switch(e.mode){case k5.TwoConstants:case k5.TwoCurves:return 2;default:return 1}}function X5(e,t,n){const i=new hm({width:t,height:n,_data:e,_compressed:!1,format:Vf.RGBA32F}),s=new bm;return s.setFilters(kf.NEAREST,kf.NEAREST),s.setMipFilter(kf.NONE),s.setWrapMode(Hf.CLAMP_TO_EDGE,Hf.CLAMP_TO_EDGE,Hf.CLAMP_TO_EDGE),s.image=i,s}function Y5(e,t,n,i,s){const o=Math.max(q5(t),q5(n),q5(i)),r=new Float32Array(e*o*4),a=[t,n,i],c=1/(e-1);for(let t=0;t<o;t++)for(let n=0;n<3;n++){const i=a[n];let o=0,l=0;for(let a=0;a<e;a++){const e=W5(i,c*a,t);s?l=e:(o+=e,l=o/(a+1)),r[4*a+n]=l}}return X5(r,e,o)}zt.fastDefine("cc.CurveRange",j5,{multiplier:1,constantMax:0,constantMin:0,constant:0,mode:k5.Constant,splineMax:Object.freeze(Kd()),splineMin:Object.freeze(Kd()),spline:Object.freeze(Kd())}),V5(j5,"multiplier","visible",!0),V5(j5,"constantMax","visible",!0),V5(j5,"constantMin","visible",!0),V5(j5,"constant","visible",!0),V5(j5,"mode","type","Enum"),V5(j5,"mode","enumList",qe.getList(k5)),V5(j5,"mode","visible",!0),V5(j5,"splineMax","type","Object"),V5(j5,"splineMax","ctor",K_),V5(j5,"splineMax","visible",!0),V5(j5,"splineMin","type","Object"),V5(j5,"splineMin","ctor",K_),V5(j5,"splineMin","visible",!0),V5(j5,"spline","type","Object"),V5(j5,"spline","ctor",K_),V5(j5,"spline","visible",!0);const K5=qe({Blend:0,Fixed:1});class $5{constructor(){this.color=dn.WHITE.clone(),this.time=0}}e("ColorKey",$5),zt.fastDefine("cc.ColorKey",$5,{color:dn.WHITE.clone(),time:0}),zt.Attr.setClassAttr($5,"color","visible",!0),zt.Attr.setClassAttr($5,"time","visible",!0);class Q5{constructor(){this.alpha=1,this.time=0}}e("AlphaKey",Q5),zt.fastDefine("cc.AlphaKey",Q5,{alpha:1,time:0}),zt.Attr.setClassAttr(Q5,"alpha","visible",!0),zt.Attr.setClassAttr(Q5,"time","visible",!0);class J5{constructor(){this.colorKeys=new Array,this.alphaKeys=new Array,this.mode=K5.Blend,this._color=void 0,this._color=dn.WHITE.clone()}setKeys(e,t){this.colorKeys=e,this.alphaKeys=t}sortKeys(){this.colorKeys.length>1&&this.colorKeys.sort(((e,t)=>e.time-t.time)),this.alphaKeys.length>1&&this.alphaKeys.sort(((e,t)=>e.time-t.time))}evaluate(e){return this.getRGB(e),this._color._set_a_unsafe(this.getAlpha(e)),this._color}randomColor(){const e=this.colorKeys[Math.trunc(Math.random()*this.colorKeys.length)],t=this.alphaKeys[Math.trunc(Math.random()*this.alphaKeys.length)];return this._color.set(e.color),this._color._set_a_unsafe(t.alpha),this._color}getRGB(e){if(this.colorKeys.length>1){e=rn(e,1);for(let t=1;t<this.colorKeys.length;++t){const n=this.colorKeys[t-1].time,i=this.colorKeys[t].time;if(e>=n&&e<i){if(this.mode===K5.Fixed)return this.colorKeys[t].color;const s=(e-n)/(i-n);return dn.lerp(this._color,this.colorKeys[t-1].color,this.colorKeys[t].color,s),this._color}}const t=this.colorKeys.length-1;return e<this.colorKeys[0].time?dn.lerp(this._color,dn.BLACK,this.colorKeys[0].color,e/this.colorKeys[0].time):e>this.colorKeys[t].time&&dn.lerp(this._color,this.colorKeys[t].color,dn.BLACK,(e-this.colorKeys[t].time)/(1-this.colorKeys[t].time)),this._color}return 1===this.colorKeys.length?(this._color.set(this.colorKeys[0].color),this._color):(this._color.set(dn.WHITE),this._color)}getAlpha(e){if(this.alphaKeys.length>1){e=rn(e,1);for(let t=1;t<this.alphaKeys.length;++t){const n=this.alphaKeys[t-1].time,i=this.alphaKeys[t].time;if(e>=n&&e<i){if(this.mode===K5.Fixed)return this.alphaKeys[t].alpha;const s=(e-n)/(i-n);return Kt(this.alphaKeys[t-1].alpha,this.alphaKeys[t].alpha,s)}}const t=this.alphaKeys.length-1;return e<this.alphaKeys[0].time?Kt(0,this.alphaKeys[0].alpha,e/this.alphaKeys[0].time):e>this.alphaKeys[t].time?Kt(this.alphaKeys[t].alpha,0,(e-this.alphaKeys[t].time)/(1-this.alphaKeys[t].time)):255}return 1===this.alphaKeys.length?this.alphaKeys[0].alpha:255}}var Z5,e6,t6,n6,i6,s6,o6,r6,a6,c6,l6,h6,u6,_6,d6,p6,f6;e("Gradient",J5),J5.Mode=K5,zt.fastDefine("cc.Gradient",J5,{colorKeys:[],alphaKeys:[],mode:K5.Blend}),zt.Attr.setClassAttr(J5,"colorKeys","visible",!0),zt.Attr.setClassAttr(J5,"alphaKeys","visible",!0),zt.Attr.setClassAttr(J5,"mode","visible",!0);const m6=qe({Color:0,Gradient:1,TwoColors:2,TwoGradients:3,RandomColor:4});let g6=e("GradientRange",(Z5=mc("cc.GradientRange"),e6=Zc(m6),t6=Zc(J5),n6=Zc(J5),i6=Zc(J5),s6=Zc(m6),Z5((f6=p6=class{constructor(){rc(this,"color",a6,this),rc(this,"colorMin",c6,this),rc(this,"colorMax",l6,this),rc(this,"gradient",h6,this),rc(this,"gradientMin",u6,this),rc(this,"gradientMax",_6,this),rc(this,"_mode",d6,this),this._color=dn.WHITE.clone()}get mode(){return this._mode}set mode(e){this._mode=e}evaluate(e,t){switch(this._mode){case m6.Color:return this.color;case m6.TwoColors:return dn.lerp(this._color,this.colorMin,this.colorMax,t),this._color;case m6.RandomColor:return this.gradient.randomColor();case m6.Gradient:return this.gradient.evaluate(e);case m6.TwoGradients:return dn.lerp(this._color,this.gradientMin.evaluate(e),this.gradientMax.evaluate(e),t),this._color;default:return this.color}}_onBeforeSerialize(e){return(!1)[this._mode]}},p6.Mode=m6,ac((r6=f6).prototype,"mode",[e6],Object.getOwnPropertyDescriptor(r6.prototype,"mode"),r6.prototype),a6=ac(r6.prototype,"color",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return dn.WHITE.clone()}}),c6=ac(r6.prototype,"colorMin",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return dn.WHITE.clone()}}),l6=ac(r6.prototype,"colorMax",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return dn.WHITE.clone()}}),h6=ac(r6.prototype,"gradient",[t6],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new J5}}),u6=ac(r6.prototype,"gradientMin",[n6],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new J5}}),_6=ac(r6.prototype,"gradientMax",[i6],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new J5}}),d6=ac(r6.prototype,"_mode",[s6],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return m6.Color}}),o6=r6))||o6));function v6(e,t,n){switch(e.mode){case m6.Color:return e.color;case m6.TwoColors:return 0===n?e.colorMin:e.colorMax;case m6.RandomColor:return e.gradient.randomColor();case m6.Gradient:return e.gradient.evaluate(t);case m6.TwoGradients:return 0===n?e.gradientMin.evaluate(t):e.gradientMax.evaluate(t);default:return e.color}}var y6,x6,S6,C6,E6,T6,b6,A6,P6,w6,I6,R6,D6,O6,N6,M6,L6,B6,F6,z6,U6,G6,V6,H6,k6,j6,W6,q6,X6,Y6,K6,$6,Q6,J6,Z6,e8,t8;const n8={parent:null,owner:null,subModelIdx:0},i8={CC_USE_WORLD_SPACE:!1};let s8=function(t){return e({Line:t,LineComponent:t}),t}((y6=mc("cc.Line"),x6=Mc(),S6=Rc(),C6=Zc(bm),E6=Zc(bm),T6=Wc(),b6=Uc(),A6=Wc(),P6=Uc(),w6=Zc([gn]),I6=Zc([gn]),R6=Wc(),D6=Uc(),O6=Zc(j5),N6=Zc(j5),M6=Gc(),L6=Wc(),B6=Uc(),F6=Zc(Bn),z6=Wc(),U6=Uc(),G6=Zc(Bn),V6=Wc(),H6=Uc(),k6=Zc(g6),j6=Zc(g6),W6=Wc(),q6=Uc(),y6(X6=x6(X6=S6(X6=Ic((K6=ac((Y6=class extends Gh{get texture(){return this._texture}set texture(e){this._texture=e,this._materialInstance&&this._materialInstance.setProperty("mainTexture",e)}get worldSpace(){return this._worldSpace}set worldSpace(e){this._worldSpace=e,this._materialInstance&&(i8.CC_USE_WORLD_SPACE=this.worldSpace,this._materialInstance.recompileShaders(i8),this._model&&this._model.setSubModelMaterial(0,this._materialInstance))}get positions(){return this._positions}set positions(e){this._positions=e,this._model&&this._model.addLineVertexData(this._positions,this._width,this._color)}get width(){return this._width}set width(e){this._width=e,this._model&&this._model.addLineVertexData(this._positions,this._width,this._color)}get tile(){return this._tile}set tile(e){this._tile.set(e),this._materialInstance&&(this._tile_offset.x=this._tile.x,this._tile_offset.y=this._tile.y,this._materialInstance.setProperty("mainTiling_Offset",this._tile_offset))}get offset(){return this._offset}set offset(e){this._offset.set(e),this._materialInstance&&(this._tile_offset.z=this._offset.x,this._tile_offset.w=this._offset.y,this._materialInstance.setProperty("mainTiling_Offset",this._tile_offset))}get color(){return this._color}set color(e){this._color=e,this._model&&this._model.addLineVertexData(this._positions,this._width,this._color)}constructor(){super(),rc(this,"_texture",K6,this),this._material=null,this._materialInstance=null,rc(this,"_worldSpace",$6,this),rc(this,"_positions",Q6,this),rc(this,"_width",J6,this),rc(this,"_tile",Z6,this),rc(this,"_offset",e8,this),rc(this,"_color",t8,this),this._model=null,this._tile_offset=new Gn}onLoad(){const e=this._model=u.director.root.createModel(F5);e.node=e.transform=this.node,null===this._material&&(this._material=new lg,this._material.copy(Fm.get("default-trail-material")),i8.CC_USE_WORLD_SPACE=this.worldSpace,n8.parent=this._material,n8.subModelIdx=0,this._materialInstance=new vv(n8),n8.parent=null,n8.subModelIdx=0,this._materialInstance.recompileShaders(i8)),e.updateMaterial(this._materialInstance),e.setCapacity(100)}onEnable(){this._model&&(this._attachToScene(),this.texture=this._texture,this.tile=this._tile,this.offset=this._offset,this._model.addLineVertexData(this._positions,this._width,this._color))}onDisable(){this._model&&this._detachFromScene()}_attachToScene(){this._model&&this.node&&this.node.scene&&(this._model.scene&&this._detachFromScene(),this._getRenderScene().addModel(this._model))}_detachFromScene(){this._model&&this._model.scene&&this._model.scene.removeModel(this._model)}}).prototype,"_texture",[C6],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(Y6.prototype,"texture",[E6,T6,b6],Object.getOwnPropertyDescriptor(Y6.prototype,"texture"),Y6.prototype),$6=ac(Y6.prototype,"_worldSpace",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ac(Y6.prototype,"worldSpace",[A6,P6],Object.getOwnPropertyDescriptor(Y6.prototype,"worldSpace"),Y6.prototype),Q6=ac(Y6.prototype,"_positions",[w6],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),ac(Y6.prototype,"positions",[I6,R6,D6],Object.getOwnPropertyDescriptor(Y6.prototype,"positions"),Y6.prototype),J6=ac(Y6.prototype,"_width",[O6],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),ac(Y6.prototype,"width",[N6,M6,L6,B6],Object.getOwnPropertyDescriptor(Y6.prototype,"width"),Y6.prototype),Z6=ac(Y6.prototype,"_tile",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Bn(1,1)}}),ac(Y6.prototype,"tile",[F6,z6,U6],Object.getOwnPropertyDescriptor(Y6.prototype,"tile"),Y6.prototype),e8=ac(Y6.prototype,"_offset",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Bn(0,0)}}),ac(Y6.prototype,"offset",[G6,V6,H6],Object.getOwnPropertyDescriptor(Y6.prototype,"offset"),Y6.prototype),t8=ac(Y6.prototype,"_color",[k6],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new g6}}),ac(Y6.prototype,"color",[j6,W6,q6],Object.getOwnPropertyDescriptor(Y6.prototype,"color"),Y6.prototype),X6=Y6))||X6)||X6)||X6)||X6));class o8{constructor(e){this.particleSystem=void 0,this.position=void 0,this.velocity=void 0,this.animatedVelocity=void 0,this.ultimateVelocity=void 0,this.angularVelocity=void 0,this.axisOfRotation=void 0,this.rotation=void 0,this.startEuler=void 0,this.startRotation=void 0,this.startRotated=void 0,this.deltaQuat=void 0,this.deltaMat=void 0,this.localMat=void 0,this.startSize=void 0,this.size=void 0,this.startColor=void 0,this.color=void 0,this.randomSeed=void 0,this.remainingLifetime=void 0,this.loopCount=void 0,this.lastLoop=void 0,this.trailDelay=void 0,this.startLifetime=void 0,this.emitAccumulator0=void 0,this.emitAccumulator1=void 0,this.frameIndex=void 0,this.startRow=void 0,this.particleSystem=e,this.position=new gn(0,0,0),this.velocity=new gn(0,0,0),this.animatedVelocity=new gn(0,0,0),this.ultimateVelocity=new gn(0,0,0),this.angularVelocity=new gn(0,0,0),this.axisOfRotation=new gn(0,0,0),this.rotation=new gn(0,0,0),this.startEuler=new gn(0,0,0),this.startRotation=new Tn,this.startRotated=!1,this.deltaQuat=new Tn,this.deltaMat=new On,this.localMat=new On,this.startSize=new gn(0,0,0),this.size=new gn(0,0,0),this.startColor=dn.WHITE.clone(),this.color=dn.WHITE.clone(),this.randomSeed=0,this.remainingLifetime=0,this.loopCount=0,this.lastLoop=0,this.trailDelay=0,this.startLifetime=0,this.emitAccumulator0=0,this.emitAccumulator1=0,this.frameIndex=0,this.startRow=0}reset(){this.rotation.set(0,0,0),this.startEuler.set(0,0,0),this.startRotation.set(0,0,0,1),this.startRotated=!1,this.deltaQuat.set(0,0,0,1),this.deltaMat.identity(),this.localMat.identity()}}o8.INDENTIFY_NEG_QUAT=10,o8.R2D=180/Math.PI;const r8=["sizeModule","colorModule","forceModule","velocityModule","limitModule","rotationModule","textureModule"],a8=["_colorOverLifetimeModule","_shapeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule","_trailModule"];class c8{constructor(){this.target=null,this.needUpdate=!1,this.needAnimate=!0,this.name=void 0}bindTarget(e){this.target=e}update(e,t){}}const l8=qe({World:0,Local:1,Custom:2}),h8=qe({Pause:0,PauseAndCatchup:1,AlwaysSimulate:2}),u8=qe({World:0,Local:1,View:2}),_8=qe({Billboard:0,StrecthedBillboard:1,HorizontalBillboard:2,VerticalBillboard:3,Mesh:4}),d8=qe({Box:0,Circle:1,Cone:2,Sphere:3,Hemisphere:4}),p8=qe({Base:0,Edge:1,Shell:2,Volume:3}),f8=qe({Random:0,Loop:1,PingPong:2}),m8=qe({Particles:0}),g8=qe({Stretch:0});var v8,y8,x8,S8,C8,E8,T8,b8;let A8=(v8=mc("cc.ColorOvertimeModule"),y8=Wc(),x8=Zc(g6),S8=Wc(),v8((T8=ac((E8=class extends c8{constructor(...e){super(...e),rc(this,"_enable",T8,this),rc(this,"color",b8,this),this.name="colorModule"}get enable(){return this._enable}set enable(e){this._enable!==e&&(this._enable=e,this.target&&this.target.enableModule(this.name,e,this))}animate(e){e.color.set(e.startColor),e.color.multiply(this.color.evaluate(1-e.remainingLifetime/e.startLifetime,tn(e.randomSeed+91041)))}}).prototype,"_enable",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ac(E8.prototype,"enable",[y8],Object.getOwnPropertyDescriptor(E8.prototype,"enable"),E8.prototype),b8=ac(E8.prototype,"color",[x8,Tc,S8],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new g6}}),C8=E8))||C8);const P8=new gn(0,0,-1);function w8(e,t,n,i){return t!==e?(e===l8.World||On.invert(n,n),On.getRotation(i,n),!0):(Tn.set(i,0,0,0,1),!1)}function I8(e,t){Bn.set(e,Math.cos(t),Math.sin(t))}function R8(e){const t=Zt(-1,1),n=Zt(0,2*Math.PI),i=Math.sqrt(1-t*t),s=i*Math.cos(n),o=i*Math.sin(n);gn.set(e,s,o,t)}function D8(e,t,n){R8(e),gn.multiplyScalar(e,e,t+(n-t)*Jt())}function O8(e,t,n,i){I8(e,i),e.z=0,gn.multiplyScalar(e,e,t+(n-t)*Jt())}function N8(e){for(let t=0;t<e.length;t++){const n=t+en(0,e.length-t),i=e[n];e[n]=e[t],e[t]=i}}function M8(){let e=Zt(-1,1);return 0===e&&e++,i(e)}var L8,B8,F8,z8,U8,G8,V8,H8,k8,j8,W8,q8,X8,Y8,K8,$8,Q8,J8,Z8,e7,t7,n7,i7,s7;const o7=212165,r7=new gn;let a7=(L8=mc("cc.ForceOvertimeModule"),B8=Wc(),F8=Zc(j5),z8=Gc(),U8=Wc(),G8=Uc(),V8=Zc(j5),H8=Gc(),k8=Wc(),j8=Uc(),W8=Zc(j5),q8=Gc(),X8=Wc(),Y8=Uc(),K8=Zc(l8),$8=Wc(),Q8=Uc(),L8((e7=ac((Z8=class extends c8{get enable(){return this._enable}set enable(e){this._enable!==e&&(this._enable=e,this.target&&this.target.enableModule(this.name,e,this))}constructor(){super(),rc(this,"_enable",e7,this),rc(this,"x",t7,this),rc(this,"y",n7,this),rc(this,"z",i7,this),rc(this,"space",s7,this),this.randomized=!1,this.rotation=void 0,this.needTransform=void 0,this.name="forceModule",this.rotation=new Tn,this.needTransform=!1,this.needUpdate=!0}update(e,t){this.needTransform=w8(e,this.space,t,this.rotation)}animate(e,t){const n=1-e.remainingLifetime/e.startLifetime,i=gn.set(r7,this.x.evaluate(n,tn(e.randomSeed+o7)),this.y.evaluate(n,tn(e.randomSeed+o7)),this.z.evaluate(n,tn(e.randomSeed+o7)));this.needTransform&&gn.transformQuat(i,i,this.rotation),gn.scaleAndAdd(e.velocity,e.velocity,i,t),gn.copy(e.ultimateVelocity,e.velocity)}}).prototype,"_enable",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ac(Z8.prototype,"enable",[B8],Object.getOwnPropertyDescriptor(Z8.prototype,"enable"),Z8.prototype),t7=ac(Z8.prototype,"x",[F8,Tc,z8,U8,G8],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),n7=ac(Z8.prototype,"y",[V8,Tc,H8,k8,j8],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),i7=ac(Z8.prototype,"z",[W8,Tc,q8,X8,Y8],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),s7=ac(Z8.prototype,"space",[K8,Tc,$8,Q8],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return l8.Local}}),J8=Z8))||J8);var c7,l7,h7,u7,_7,d7,p7,f7,m7,g7,v7,y7,x7,S7,C7,E7,T7,b7,A7,P7,w7,I7,R7,D7,O7,N7,M7,L7,B7,F7,z7,U7,G7,V7,H7;const k7=23541,j7=new gn,W7=new gn;let q7=(c7=mc("cc.LimitVelocityOvertimeModule"),l7=Wc(),h7=Zc(j5),u7=Gc(),_7=Wc(),d7=Uc(),p7=Zc(j5),f7=Gc(),m7=Wc(),g7=Uc(),v7=Zc(j5),y7=Gc(),x7=Wc(),S7=Uc(),C7=Zc(j5),E7=Gc(),T7=Wc(),b7=Uc(),A7=Wc(),P7=Uc(),w7=Wc(),I7=Uc(),R7=Zc(l8),D7=Wc(),O7=Uc(),c7((L7=ac((M7=class extends c8{get enable(){return this._enable}set enable(e){this._enable!==e&&(this._enable=e,this.target&&this.target.enableModule(this.name,e,this))}constructor(){super(),rc(this,"_enable",L7,this),rc(this,"limitX",B7,this),rc(this,"limitY",F7,this),rc(this,"limitZ",z7,this),rc(this,"limit",U7,this),rc(this,"dampen",G7,this),rc(this,"separateAxes",V7,this),rc(this,"space",H7,this),this.drag=null,this.multiplyDragByParticleSize=!1,this.multiplyDragByParticleVelocity=!1,this.name="limitModule",this.rotation=void 0,this.needTransform=void 0,this.rotation=new Tn,this.needTransform=!1,this.needUpdate=!0}update(e,t){this.needTransform=w8(e,this.space,t,this.rotation)}animate(e,t){const n=1-e.remainingLifetime/e.startLifetime,i=j7;this.separateAxes?(gn.set(W7,this.limitX.evaluate(n,tn(e.randomSeed+k7)),this.limitY.evaluate(n,tn(e.randomSeed+k7)),this.limitZ.evaluate(n,tn(e.randomSeed+k7))),this.needTransform&&gn.transformQuat(W7,W7,this.rotation),gn.set(i,X7(e.ultimateVelocity.x,W7.x,this.dampen),X7(e.ultimateVelocity.y,W7.y,this.dampen),X7(e.ultimateVelocity.z,W7.z,this.dampen))):(gn.normalize(i,e.ultimateVelocity),gn.multiplyScalar(i,i,X7(e.ultimateVelocity.length(),this.limit.evaluate(n,tn(e.randomSeed+k7)),this.dampen))),gn.copy(e.ultimateVelocity,i)}}).prototype,"_enable",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ac(M7.prototype,"enable",[l7],Object.getOwnPropertyDescriptor(M7.prototype,"enable"),M7.prototype),B7=ac(M7.prototype,"limitX",[h7,Tc,u7,_7,d7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),F7=ac(M7.prototype,"limitY",[p7,Tc,f7,m7,g7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),z7=ac(M7.prototype,"limitZ",[v7,Tc,y7,x7,S7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),U7=ac(M7.prototype,"limit",[C7,Tc,E7,T7,b7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),G7=ac(M7.prototype,"dampen",[Tc,A7,P7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 3}}),V7=ac(M7.prototype,"separateAxes",[Tc,w7,I7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),H7=ac(M7.prototype,"space",[R7,Tc,D7,O7],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return l8.Local}}),N7=M7))||N7);function X7(e,t,n){const i=Math.sign(e);let s=Math.abs(e);return s>t&&(s=Kt(s,t,n)),s*i}var Y7,K7,$7,Q7,J7,Z7,e9,t9,n9,i9,s9,o9,r9,a9,c9,l9,h9,u9,_9,d9,p9,f9,m9;let g9=(Y7=mc("cc.RotationOvertimeModule"),K7=Wc(),$7=Wc(),Q7=Uc(),J7=Zc(j5),Z7=Gc(),e9=Wc(),t9=Uc(),n9=Zc(j5),i9=Gc(),s9=Wc(),o9=Uc(),r9=Zc(j5),a9=Gc(),c9=Wc(),l9=Uc(),Y7((_9=ac((u9=class extends c8{constructor(...e){super(...e),rc(this,"_enable",_9,this),rc(this,"_separateAxes",d9,this),rc(this,"x",p9,this),rc(this,"y",f9,this),rc(this,"z",m9,this),this.name="rotationModule",this._startMat=new On,this._matRot=new On,this._quatRot=new Tn,this._otherEuler=new gn}get enable(){return this._enable}set enable(e){this._enable!==e&&(this._enable=e,this.target&&this.target.enableModule(this.name,e,this))}get separateAxes(){return this._separateAxes}set separateAxes(e){this._separateAxes=e}_processRotation(e,t){const n=e.particleSystem.processor.getInfo().renderMode;n!==_8.Mesh&&n===_8.StrecthedBillboard&&this._quatRot.set(0,0,0,1),Tn.normalize(this._quatRot,this._quatRot),this._quatRot.w<0&&(this._quatRot.x+=o8.INDENTIFY_NEG_QUAT)}animate(e,t){const n=1-e.remainingLifetime/e.startLifetime,i=tn(e.randomSeed+125292),s=e.particleSystem.processor.getInfo().renderMode;this._separateAxes&&s!==_8.VerticalBillboard&&s!==_8.HorizontalBillboard?Tn.fromEuler(e.deltaQuat,this.x.evaluate(n,i)*t*o8.R2D,this.y.evaluate(n,i)*t*o8.R2D,this.z.evaluate(n,i)*t*o8.R2D):Tn.fromEuler(e.deltaQuat,0,0,this.z.evaluate(n,i)*t*o8.R2D),e.deltaMat=On.fromQuat(e.deltaMat,e.deltaQuat),e.localMat=e.localMat.multiply(e.deltaMat),e.startRotated||(s!==_8.Mesh&&(s===_8.StrecthedBillboard?e.startEuler.set(0,0,0):s!==_8.Billboard&&e.startEuler.set(0,0,e.startEuler.z)),Tn.fromEuler(e.startRotation,e.startEuler.x*o8.R2D,e.startEuler.y*o8.R2D,e.startEuler.z*o8.R2D),e.startRotated=!0),this._startMat=On.fromQuat(this._startMat,e.startRotation),this._matRot=this._startMat.multiply(e.localMat),On.getRotation(this._quatRot,this._matRot),this._processRotation(e,o8.R2D),e.rotation.set(this._quatRot.x,this._quatRot.y,this._quatRot.z)}}).prototype,"_enable",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ac(u9.prototype,"enable",[K7],Object.getOwnPropertyDescriptor(u9.prototype,"enable"),u9.prototype),d9=ac(u9.prototype,"_separateAxes",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ac(u9.prototype,"separateAxes",[$7,Q7],Object.getOwnPropertyDescriptor(u9.prototype,"separateAxes"),u9.prototype),p9=ac(u9.prototype,"x",[J7,Tc,Z7,qc,e9,t9],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),f9=ac(u9.prototype,"y",[n9,Tc,i9,qc,s9,o9],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),m9=ac(u9.prototype,"z",[r9,Tc,a9,qc,c9,l9],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),h9=u9))||h9);var v9,y9,x9,S9,C9,E9,T9,b9,A9,P9,w9,I9,R9,D9,O9,N9,M9,L9,B9,F9,z9,U9,G9,V9,H9,k9,j9,W9;let q9=(v9=mc("cc.SizeOvertimeModule"),y9=Wc(),x9=Wc(),S9=Uc(),C9=Zc(j5),E9=Gc(),T9=Wc(),b9=Uc(),A9=Zc(j5),P9=Gc(),w9=Wc(),I9=Uc(),R9=Zc(j5),D9=Gc(),O9=Wc(),N9=Uc(),M9=Zc(j5),L9=Gc(),B9=Wc(),F9=Uc(),v9((G9=ac((U9=class extends c8{constructor(...e){super(...e),rc(this,"_enable",G9,this),rc(this,"separateAxes",V9,this),rc(this,"size",H9,this),rc(this,"x",k9,this),rc(this,"y",j9,this),rc(this,"z",W9,this),this.name="sizeModule"}get enable(){return this._enable}set enable(e){this._enable!==e&&(this._enable=e,this.target&&this.target.enableModule(this.name,e,this))}animate(e,t){if(this.separateAxes){const t=1-e.remainingLifetime/e.startLifetime,n=tn(e.randomSeed+39825);e.size.x=e.startSize.x*this.x.evaluate(t,n),e.size.y=e.startSize.y*this.y.evaluate(t,n),e.size.z=e.startSize.z*this.z.evaluate(t,n)}else gn.multiplyScalar(e.size,e.startSize,this.size.evaluate(1-e.remainingLifetime/e.startLifetime,tn(e.randomSeed+39825)))}}).prototype,"_enable",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ac(U9.prototype,"enable",[y9],Object.getOwnPropertyDescriptor(U9.prototype,"enable"),U9.prototype),V9=ac(U9.prototype,"separateAxes",[Tc,x9,S9],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),H9=ac(U9.prototype,"size",[C9,Tc,E9,T9,b9],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),k9=ac(U9.prototype,"x",[A9,Tc,P9,w9,I9],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),j9=ac(U9.prototype,"y",[R9,Tc,D9,O9,N9],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),W9=ac(U9.prototype,"z",[M9,Tc,L9,B9,F9],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),z9=U9))||z9);var X9,Y9,K9,$9,Q9,J9,Z9,eee,tee,nee,iee,see,oee,ree,aee,cee,lee,hee,uee,_ee,dee,pee,fee,mee,gee,vee,yee,xee,See,Cee,Eee,Tee,bee,Aee,Pee,wee,Iee,Ree,Dee,Oee,Nee,Mee,Lee,Bee;const Fee=90794,zee=qe({Grid:0}),Uee=qe({WholeSheet:0,SingleRow:1});let Gee=(X9=mc("cc.TextureAnimationModule"),Y9=bc("numTilesX"),K9=bc("numTilesY"),$9=Wc(),Q9=Zc(zee),J9=Zc(zee),Z9=Wc(),eee=Uc(),tee=Wc(),nee=Uc(),iee=Wc(),see=Uc(),oee=Zc(Uee),ree=Wc(),aee=Uc(),cee=Zc(j5),lee=Gc(),hee=Wc(),uee=Uc(),_ee=Zc(j5),dee=Gc(),pee=Wc(),fee=Uc(),mee=Wc(),gee=Uc(),vee=Wc(),yee=Uc(),xee=Wc(),See=Uc(),X9((Tee=ac((Eee=class extends c8{constructor(...e){super(...e),rc(this,"_enable",Tee,this),rc(this,"_numTilesX",bee,this),rc(this,"_numTilesY",Aee,this),rc(this,"_mode",Pee,this),rc(this,"animation",wee,this),rc(this,"frameOverTime",Iee,this),rc(this,"startFrame",Ree,this),rc(this,"cycleCount",Dee,this),rc(this,"_flipU",Oee,this),rc(this,"_flipV",Nee,this),rc(this,"_uvChannelMask",Mee,this),rc(this,"randomRow",Lee,this),rc(this,"rowIndex",Bee,this),this.name="textureModule"}get enable(){return this._enable}set enable(e){this._enable!==e&&(this._enable=e,this.target&&(this.target.updateMaterialParams(),this.target.enableModule(this.name,e,this)))}get mode(){return this._mode}set mode(e){e!==zee.Grid&&console.error("particle texture animation's sprites is not supported!")}get numTilesX(){return this._numTilesX}set numTilesX(e){this._numTilesX!==e&&(this._numTilesX=e,this.target.updateMaterialParams())}get numTilesY(){return this._numTilesY}set numTilesY(e){this._numTilesY!==e&&(this._numTilesY=e,this.target.updateMaterialParams())}get flipU(){return this._flipU}set flipU(e){console.error("particle texture animation's flipU is not supported!")}get flipV(){return this._flipV}set flipV(e){console.error("particle texture animation's flipV is not supported!")}get uvChannelMask(){return this._uvChannelMask}set uvChannelMask(e){console.error("particle texture animation's uvChannelMask is not supported!")}init(e){e.startRow=Math.floor(Math.random()*this.numTilesY)}animate(e,t){const n=1-e.remainingLifetime/e.startLifetime,i=this.startFrame.evaluate(n,tn(e.randomSeed+Fee))/(this.numTilesX*this.numTilesY);if(this.animation===Uee.WholeSheet)e.frameIndex=rn(this.cycleCount*(this.frameOverTime.evaluate(n,tn(e.randomSeed+Fee))+i),1);else if(this.animation===Uee.SingleRow){const t=1/this.numTilesY;if(this.randomRow){const s=rn(this.cycleCount*(this.frameOverTime.evaluate(n,tn(e.randomSeed+Fee))+i),1),o=e.startRow*t,r=o+t;e.frameIndex=Kt(o,r,s)}else{const s=this.rowIndex*t,o=s+t;e.frameIndex=Kt(s,o,rn(this.cycleCount*(this.frameOverTime.evaluate(n,tn(e.randomSeed+Fee))+i),1))}}}}).prototype,"_enable",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),bee=ac(Eee.prototype,"_numTilesX",[Y9],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Aee=ac(Eee.prototype,"_numTilesY",[K9],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ac(Eee.prototype,"enable",[$9],Object.getOwnPropertyDescriptor(Eee.prototype,"enable"),Eee.prototype),Pee=ac(Eee.prototype,"_mode",[Q9],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return zee.Grid}}),ac(Eee.prototype,"mode",[J9,Z9,eee],Object.getOwnPropertyDescriptor(Eee.prototype,"mode"),Eee.prototype),ac(Eee.prototype,"numTilesX",[tee,nee],Object.getOwnPropertyDescriptor(Eee.prototype,"numTilesX"),Eee.prototype),ac(Eee.prototype,"numTilesY",[iee,see],Object.getOwnPropertyDescriptor(Eee.prototype,"numTilesY"),Eee.prototype),wee=ac(Eee.prototype,"animation",[oee,Tc,ree,aee],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Uee.WholeSheet}}),Iee=ac(Eee.prototype,"frameOverTime",[cee,Tc,lee,hee,uee],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),Ree=ac(Eee.prototype,"startFrame",[_ee,Tc,dee,pee,fee],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),Dee=ac(Eee.prototype,"cycleCount",[Tc,mee,gee],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Oee=ac(Eee.prototype,"_flipU",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Nee=ac(Eee.prototype,"_flipV",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Mee=ac(Eee.prototype,"_uvChannelMask",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return-1}}),Lee=ac(Eee.prototype,"randomRow",[Tc,vee,yee],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Bee=ac(Eee.prototype,"rowIndex",[Tc,xee,See],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Cee=Eee))||Cee);var Vee,Hee,kee,jee,Wee,qee,Xee,Yee,Kee,$ee,Qee,Jee,Zee,ete,tte,nte,ite,ste,ote,rte,ate,cte,lte,hte,ute,_te,dte,pte,fte;const mte=197866,gte=new gn;let vte=(Vee=mc("cc.VelocityOvertimeModule"),Hee=Wc(),kee=Zc(j5),jee=Gc(),Wee=Wc(),qee=Uc(),Xee=Zc(j5),Yee=Gc(),Kee=Wc(),$ee=Uc(),Qee=Zc(j5),Jee=Gc(),Zee=Wc(),ete=Uc(),tte=Zc(j5),nte=Gc(),ite=Wc(),ste=Uc(),ote=Zc(l8),rte=Wc(),ate=Uc(),Vee((hte=ac((lte=class extends c8{get enable(){return this._enable}set enable(e){this._enable!==e&&(this._enable=e,this.target&&this.target.enableModule(this.name,e,this))}constructor(){super(),rc(this,"_enable",hte,this),rc(this,"x",ute,this),rc(this,"y",_te,this),rc(this,"z",dte,this),rc(this,"speedModifier",pte,this),rc(this,"space",fte,this),this.rotation=void 0,this.needTransform=void 0,this.name="velocityModule",this.rotation=new Tn,this.speedModifier.constant=1,this.needTransform=!1,this.needUpdate=!0}update(e,t){this.needTransform=w8(e,this.space,t,this.rotation)}animate(e,t){const n=1-e.remainingLifetime/e.startLifetime,i=gn.set(gte,this.x.evaluate(n,tn(e.randomSeed^mte)),this.y.evaluate(n,tn(156497^e.randomSeed)),this.z.evaluate(n,tn(984136^e.randomSeed)));this.needTransform&&gn.transformQuat(i,i,this.rotation),gn.add(e.animatedVelocity,e.animatedVelocity,i),gn.add(e.ultimateVelocity,e.velocity,e.animatedVelocity),gn.multiplyScalar(e.ultimateVelocity,e.ultimateVelocity,this.speedModifier.evaluate(1-e.remainingLifetime/e.startLifetime,tn(e.randomSeed+mte)))}}).prototype,"_enable",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ac(lte.prototype,"enable",[Hee],Object.getOwnPropertyDescriptor(lte.prototype,"enable"),lte.prototype),ute=ac(lte.prototype,"x",[kee,Tc,jee,Wee,qee],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),_te=ac(lte.prototype,"y",[Xee,Tc,Yee,Kee,$ee],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),dte=ac(lte.prototype,"z",[Qee,Tc,Jee,Zee,ete],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),pte=ac(lte.prototype,"speedModifier",[tte,Tc,nte,ite,ste],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),fte=ac(lte.prototype,"space",[ote,Tc,rte,ate],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return l8.Local}}),cte=lte))||cte);var yte,xte,Ste,Cte,Ete,Tte,bte,Ate,Pte;let wte=e("Burst",(yte=mc("cc.Burst"),xte=Zc(j5),Ste=Gc(),yte((Tte=ac((Ete=class{get time(){return this._time}set time(e){this._time=e,this._curTime=e}get repeatCount(){return this._repeatCount}set repeatCount(e){this._repeatCount=e,this._remainingCount=e}constructor(){rc(this,"_time",Tte,this),rc(this,"_repeatCount",bte,this),rc(this,"repeatInterval",Ate,this),rc(this,"count",Pte,this),this._remainingCount=void 0,this._curTime=void 0,this._remainingCount=0,this._curTime=0}update(e,t){if(0===this._remainingCount&&(this._remainingCount=this._repeatCount,this._curTime=this._time),this._remainingCount>0){let n=rn(e._time-e.startDelay.evaluate(0,1),e.duration)-t;n=n>0?n:0;const i=rn(e.time-e.startDelay.evaluate(0,1),e.duration);this._curTime>=n&&this._curTime<i&&(e.emit(this.count.evaluate(this._curTime/e.duration,1),t-(i-this._curTime)),this._curTime+=this.repeatInterval,--this._remainingCount)}}reset(){this._remainingCount=0,this._curTime=0}getMaxCount(e){return this.count.getMax()*Math.min(Math.ceil(e.duration/this.repeatInterval),this.repeatCount)}}).prototype,"_time",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ac(Ete.prototype,"time",[Lc],Object.getOwnPropertyDescriptor(Ete.prototype,"time"),Ete.prototype),bte=ac(Ete.prototype,"_repeatCount",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),ac(Ete.prototype,"repeatCount",[Lc],Object.getOwnPropertyDescriptor(Ete.prototype,"repeatCount"),Ete.prototype),Ate=ac(Ete.prototype,"repeatInterval",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Pte=ac(Ete.prototype,"count",[xte,Tc,Ste],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),Cte=Ete))||Cte));var Ite,Rte,Dte,Ote,Nte,Mte,Lte,Bte,Fte,zte,Ute,Gte,Vte,Hte,kte,jte,Wte,qte,Xte,Yte,Kte,$te,Qte,Jte,Zte,ene,tne,nne,ine,sne,one,rne,ane,cne,lne,hne,une,_ne,dne,pne,fne,mne,gne,vne,yne,xne,Sne,Cne,Ene,Tne,bne,Ane,Pne,wne,Ine,Rne,Dne,One,Nne,Mne,Lne,Bne,Fne,zne,Une,Gne,Vne,Hne;const kne=new gn(0,0,0),jne=[],Wne=new gn(.5,.5,.5);let qne=(Ite=mc("cc.ShapeModule"),Rte=Wc(),Dte=Uc(),Ote=Wc(),Nte=Uc(),Mte=Wc(),Lte=Uc(),Bte=Wc(),Fte=Uc(),zte=Wc(),Ute=Uc(),Gte=Wc(),Vte=Zc(d8),Hte=bc("shapeType"),kte=Wc(),jte=Zc(d8),Wte=Uc(),qte=Zc(p8),Xte=Wc(),Yte=Uc(),Kte=Wc(),$te=Uc(),Qte=Wc(),Jte=Uc(),Zte=Wc(),ene=Uc(),tne=Wc(),nne=Uc(),ine=Wc(),sne=Uc(),one=Wc(),rne=Uc(),ane=Zc(f8),cne=Wc(),lne=Uc(),hne=Bc(),une=Wc(),_ne=Uc(),dne=Zc(j5),pne=Bc(),fne=Gc(),mne=Wc(),gne=Uc(),vne=Wc(),yne=Uc(),xne=Wc(),Sne=Uc(),Ite((ac((Ene=class{get position(){return this._position}set position(e){this._position=e,this.constructMat()}get rotation(){return this._rotation}set rotation(e){this._rotation=e,this.constructMat()}get scale(){return this._scale}set scale(e){this._scale=e,this.constructMat()}get arc(){return Qt(this._arc)}set arc(e){this._arc=$t(e)}get angle(){return Math.round(100*Qt(this._angle))/100}set angle(e){this._angle=$t(e)}get enable(){return this._enable}set enable(e){this._enable=e}get shapeType(){return this._shapeType}set shapeType(e){switch(this._shapeType=e,this._shapeType){case d8.Box:this.emitFrom===p8.Base&&(this.emitFrom=p8.Volume);break;case d8.Cone:this.emitFrom===p8.Edge&&(this.emitFrom=p8.Base);break;case d8.Sphere:case d8.Hemisphere:this.emitFrom!==p8.Base&&this.emitFrom!==p8.Edge||(this.emitFrom=p8.Volume)}}constructor(){rc(this,"_enable",Tne,this),rc(this,"_shapeType",bne,this),rc(this,"emitFrom",Ane,this),rc(this,"alignToDirection",Pne,this),rc(this,"randomDirectionAmount",wne,this),rc(this,"sphericalDirectionAmount",Ine,this),rc(this,"randomPositionAmount",Rne,this),rc(this,"radius",Dne,this),rc(this,"radiusThickness",One,this),rc(this,"arcMode",Nne,this),rc(this,"arcSpread",Mne,this),rc(this,"arcSpeed",Lne,this),rc(this,"length",Bne,this),rc(this,"boxThickness",Fne,this),rc(this,"_position",zne,this),rc(this,"_rotation",Une,this),rc(this,"_scale",Gne,this),rc(this,"_arc",Vne,this),rc(this,"_angle",Hne,this),this.mat=void 0,this.quat=void 0,this.particleSystem=void 0,this.lastTime=void 0,this.totalAngle=void 0,this.mat=new On,this.quat=new Tn,this.particleSystem=null,this.lastTime=0,this.totalAngle=0}onInit(e){this.particleSystem=e,this.constructMat(),this.lastTime=this.particleSystem._time}emit(e){switch(this.shapeType){case d8.Box:!function(e,t,n,i){switch(e){case p8.Volume:s=n,o=Wne,gn.set(s,Zt(-o.x,o.x),Zt(-o.y,o.y),Zt(-o.z,o.z));break;case p8.Shell:jne.splice(0,jne.length),jne.push(Zt(-.5,.5)),jne.push(Zt(-.5,.5)),jne.push(.5*M8()),N8(jne),Xne(jne,t),gn.set(n,jne[0],jne[1],jne[2]);break;case p8.Edge:jne.splice(0,jne.length),jne.push(Zt(-.5,.5)),jne.push(.5*M8()),jne.push(.5*M8()),N8(jne),Xne(jne,t),gn.set(n,jne[0],jne[1],jne[2]);break;default:console.warn(`${e} is not supported for box emitter.`)}var s,o;gn.copy(i,P8)}(this.emitFrom,this.boxThickness,e.position,e.velocity);break;case d8.Circle:!function(e,t,n,i,s){O8(i,e*(1-t),e,n),gn.normalize(s,i)}(this.radius,this.radiusThickness,this.generateArcAngle(),e.position,e.velocity);break;case d8.Cone:!function(e,t,n,i,s,o,r,a){switch(e){case p8.Base:O8(r,t*(1-n),t,i),Bn.multiplyScalar(a,r,Math.sin(s)),a.z=-Math.cos(s)*t,gn.normalize(a,a),r.z=0;break;case p8.Shell:I8(r,i),Bn.multiplyScalar(a,r,Math.sin(s)),a.z=-Math.cos(s),gn.normalize(a,a),Bn.multiplyScalar(r,r,t),r.z=0;break;case p8.Volume:O8(r,t*(1-n),t,i),Bn.multiplyScalar(a,r,Math.sin(s)),a.z=-Math.cos(s)*t,gn.normalize(a,a),r.z=0,gn.add(r,r,gn.multiplyScalar(kne,a,o*Jt()/-a.z));break;default:console.warn(`${e} is not supported for cone emitter.`)}}(this.emitFrom,this.radius,this.radiusThickness,this.generateArcAngle(),this._angle,this.length,e.position,e.velocity);break;case d8.Sphere:!function(e,t,n,i,s){switch(e){case p8.Volume:D8(i,t*(1-n),t),gn.normalize(s,i);break;case p8.Shell:R8(i),gn.multiplyScalar(i,i,t),gn.normalize(s,i);break;default:console.warn(`${e} is not supported for sphere emitter.`)}}(this.emitFrom,this.radius,this.radiusThickness,e.position,e.velocity);break;case d8.Hemisphere:!function(e,t,n,i,s){switch(e){case p8.Volume:D8(i,t*(1-n),t),i.z>0&&(i.z*=-1),gn.normalize(s,i);break;case p8.Shell:R8(i),gn.multiplyScalar(i,i,t),i.z>0&&(i.z*=-1),gn.normalize(s,i);break;default:console.warn(`${e} is not supported for hemisphere emitter.`)}}(this.emitFrom,this.radius,this.radiusThickness,e.position,e.velocity);break;default:console.warn(`${this.shapeType} shapeType is not supported by ShapeModule.`)}if(this.randomPositionAmount>0&&(e.position.x+=Zt(-this.randomPositionAmount,this.randomPositionAmount),e.position.y+=Zt(-this.randomPositionAmount,this.randomPositionAmount),e.position.z+=Zt(-this.randomPositionAmount,this.randomPositionAmount)),gn.transformQuat(e.velocity,e.velocity,this.quat),gn.transformMat4(e.position,e.position,this.mat),this.sphericalDirectionAmount>0){const t=gn.normalize(kne,e.position);gn.lerp(e.velocity,e.velocity,t,this.sphericalDirectionAmount)}this.lastTime=this.particleSystem._time}constructMat(){Tn.fromEuler(this.quat,this._rotation.x,this._rotation.y,this._rotation.z),On.fromRTS(this.mat,this.quat,this._position,this._scale)}generateArcAngle(){if(this.arcMode===f8.Random)return Zt(0,this._arc);let e=this.totalAngle+2*Math.PI*this.arcSpeed.evaluate(this.particleSystem._time,1)*(this.particleSystem._time-this.lastTime);switch(this.totalAngle=e,0!==this.arcSpread&&(e=Math.floor(e/(this._arc*this.arcSpread))*this._arc*this.arcSpread),this.arcMode){case f8.Loop:return rn(e,this._arc);case f8.PingPong:return an(e,this._arc);default:return rn(e,this._arc)}}}).prototype,"position",[Rte,Dte],Object.getOwnPropertyDescriptor(Ene.prototype,"position"),Ene.prototype),ac(Ene.prototype,"rotation",[Ote,Nte],Object.getOwnPropertyDescriptor(Ene.prototype,"rotation"),Ene.prototype),ac(Ene.prototype,"scale",[Mte,Lte],Object.getOwnPropertyDescriptor(Ene.prototype,"scale"),Ene.prototype),ac(Ene.prototype,"arc",[Bte,Fte],Object.getOwnPropertyDescriptor(Ene.prototype,"arc"),Ene.prototype),ac(Ene.prototype,"angle",[zte,Ute],Object.getOwnPropertyDescriptor(Ene.prototype,"angle"),Ene.prototype),Tne=ac(Ene.prototype,"_enable",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ac(Ene.prototype,"enable",[Gte],Object.getOwnPropertyDescriptor(Ene.prototype,"enable"),Ene.prototype),bne=ac(Ene.prototype,"_shapeType",[Vte,Hte,kte],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return d8.Cone}}),ac(Ene.prototype,"shapeType",[jte,Wte],Object.getOwnPropertyDescriptor(Ene.prototype,"shapeType"),Ene.prototype),Ane=ac(Ene.prototype,"emitFrom",[qte,Tc,Xte,Yte],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return p8.Volume}}),Pne=ac(Ene.prototype,"alignToDirection",[Tc,Kte,$te],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),wne=ac(Ene.prototype,"randomDirectionAmount",[Tc,Qte,Jte],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Ine=ac(Ene.prototype,"sphericalDirectionAmount",[Tc,Zte,ene],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Rne=ac(Ene.prototype,"randomPositionAmount",[Tc,tne,nne],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Dne=ac(Ene.prototype,"radius",[Tc,ine,sne],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),One=ac(Ene.prototype,"radiusThickness",[Tc,one,rne],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Nne=ac(Ene.prototype,"arcMode",[ane,Tc,cne,lne],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return f8.Random}}),Mne=ac(Ene.prototype,"arcSpread",[hne,Tc,une,_ne],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Lne=ac(Ene.prototype,"arcSpeed",[dne,pne,fne,Tc,mne,gne],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),Bne=ac(Ene.prototype,"length",[Tc,vne,yne],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 5}}),Fne=ac(Ene.prototype,"boxThickness",[Tc,xne,Sne],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn(0,0,0)}}),zne=ac(Ene.prototype,"_position",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn(0,0,0)}}),Une=ac(Ene.prototype,"_rotation",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn(0,0,0)}}),Gne=ac(Ene.prototype,"_scale",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn(1,1,1)}}),Vne=ac(Ene.prototype,"_arc",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return $t(360)}}),Hne=ac(Ene.prototype,"_angle",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return $t(25)}}),Cne=Ene))||Cne);function Xne(e,t){t.x>0&&(e[0]+=.5*Zt(-t.x,t.x),e[0]=Xt(e[0],-.5,.5)),t.y>0&&(e[1]+=.5*Zt(-t.y,t.y),e[1]=Xt(e[1],-.5,.5)),t.z>0&&(e[2]+=.5*Zt(-t.z,t.z),e[2]=Xt(e[2],-.5,.5))}const Yne=[0,0,1,0,0,1,1,1];class Kne extends fv{constructor(){super(),this._capacity=void 0,this._vertAttrs=void 0,this._vertSize=void 0,this._vBuffer=void 0,this._vertAttrsFloatCount=void 0,this._vdataF32=void 0,this._vdataUint32=void 0,this._iaInfo=void 0,this._iaInfoBuffer=void 0,this._subMeshData=void 0,this._mesh=void 0,this._vertCount=0,this._indexCount=0,this._startTimeOffset=0,this._lifeTimeOffset=0,this._material=null,this.type=_v.PARTICLE_BATCH,this._capacity=0,this._vertAttrs=null,this._vertSize=0,this._vBuffer=null,this._vertAttrsFloatCount=0,this._vdataF32=null,this._vdataUint32=null,this._iaInfo=new os([new is]),this._iaInfoBuffer=this._device.createBuffer(new es(si.INDIRECT,ai.HOST|ai.DEVICE,qs,qs)),this._subMeshData=null,this._mesh=null}setCapacity(e){const t=this._capacity!==e;this._capacity=e,this._subMeshData&&t&&this.rebuild()}setVertexAttributes(e,t){if(this._mesh!==e||this._vertAttrs!==t){this._mesh=e,this._vertAttrs=t,this._vertSize=0;for(const e of this._vertAttrs)e.offset=this._vertSize,this._vertSize+=Hs[e.format].size;this._vertAttrsFloatCount=this._vertSize/4,this.rebuild()}}createSubMeshData(){this.destroySubMeshData(),this._vertCount=4,this._indexCount=6,this._mesh&&(this._vertCount=this._mesh.struct.vertexBundles[this._mesh.struct.primitives[0].vertexBundelIndices[0]].view.count,this._indexCount=this._mesh.struct.primitives[0].indexView.count);const e=this._device.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.HOST|ai.DEVICE,this._vertSize*this._capacity*this._vertCount,this._vertSize)),t=new ArrayBuffer(this._vertSize*this._capacity*this._vertCount);if(this._mesh&&this._capacity>0){let e=this._vertAttrs[this._vertAttrs.findIndex((e=>e.name===zi.ATTR_TEX_COORD))].offset;this._mesh.copyAttribute(0,zi.ATTR_TEX_COORD,t,this._vertSize,e);let n=this._vertAttrs.findIndex((e=>e.name===zi.ATTR_TEX_COORD3));if(e=this._vertAttrs[n++].offset,this._mesh.copyAttribute(0,zi.ATTR_POSITION,t,this._vertSize,e),e=this._vertAttrs[n++].offset,this._mesh.copyAttribute(0,zi.ATTR_NORMAL,t,this._vertSize,e),e=this._vertAttrs[n++].offset,!this._mesh.copyAttribute(0,zi.ATTR_COLOR,t,this._vertSize,e)){const n=new Uint32Array(t);for(let t=0;t<this._vertCount;++t)n[t*this._vertAttrsFloatCount+e/4]=dn.WHITE._val}const i=new Float32Array(t);for(let e=1;e<this._capacity;e++)i.copyWithin(e*this._vertSize*this._vertCount/4,0,this._vertSize*this._vertCount/4)}e.update(t);const n=new Uint16Array(this._capacity*this._indexCount);if(this._mesh&&this._capacity>0){this._mesh.copyIndices(0,n);for(let e=1;e<this._capacity;e++)for(let t=0;t<this._indexCount;t++)n[e*this._indexCount+t]=n[t]+e*this._vertCount}else{let e=0;for(let t=0;t<this._capacity;++t){const i=4*t;n[e++]=i,n[e++]=i+1,n[e++]=i+2,n[e++]=i+3,n[e++]=i+2,n[e++]=i+1}}const i=this._device.createBuffer(new es(si.INDEX|si.TRANSFER_DST,ai.DEVICE,this._capacity*this._indexCount*Uint16Array.BYTES_PER_ELEMENT,Uint16Array.BYTES_PER_ELEMENT));return i.update(n),this._iaInfo.drawInfos[0].vertexCount=this._capacity*this._vertCount,this._iaInfo.drawInfos[0].indexCount=this._capacity*this._indexCount,this._iaInfoBuffer||(this._iaInfoBuffer=this._device.createBuffer(new es(si.INDIRECT,ai.HOST|ai.DEVICE,qs,qs))),this._iaInfoBuffer.update(this._iaInfo),this._subMeshData=new yE([e],this._vertAttrs,Pi.TRIANGLE_LIST,i,this._iaInfoBuffer),this.initSubModel(0,this._subMeshData,this._material),t}updateMaterial(e){this._material=e,this.setSubModelMaterial(0,e)}addParticleVertexData(e,t){if(this._mesh)for(let n=0;n<this._vertCount;n++){let i=(e*this._vertCount+n)*this._vertAttrsFloatCount;this._vdataF32[i++]=t[0].x,this._vdataF32[i++]=t[0].y,this._vdataF32[i++]=t[0].z,i+=2,this._vdataF32[i++]=t[1].z,this._vdataF32[i++]=t[2].x,this._vdataF32[i++]=t[2].y,this._vdataF32[i++]=t[2].z,this._vdataF32[i++]=t[3].x,this._vdataF32[i++]=t[3].y,this._vdataF32[i++]=t[3].z,this._vdataUint32[i++]=t[4]}else{let n=e*this._vertAttrsFloatCount;this._vdataF32[n++]=t[0].x,this._vdataF32[n++]=t[0].y,this._vdataF32[n++]=t[0].z,this._vdataF32[n++]=t[1].x,this._vdataF32[n++]=t[1].y,this._vdataF32[n++]=t[1].z,this._vdataF32[n++]=t[2].x,this._vdataF32[n++]=t[2].y,this._vdataF32[n++]=t[2].z,this._vdataF32[n++]=t[3].x,this._vdataF32[n++]=t[3].y,this._vdataF32[n++]=t[3].z,this._vdataUint32[n++]=t[4],t[5]&&(this._vdataF32[n++]=t[5].x,this._vdataF32[n++]=t[5].y,this._vdataF32[n++]=t[5].z)}}addGPUParticleVertexData(e,t,n){let i=t*this._vertAttrsFloatCount*this._vertCount;for(let t=0;t<this._vertCount;t++){let s=i;this._vdataF32[s++]=e.position.x,this._vdataF32[s++]=e.position.y,this._vdataF32[s++]=e.position.z,this._vdataF32[s++]=n,this._vdataF32[s++]=e.startSize.x,this._vdataF32[s++]=e.startSize.y,this._vdataF32[s++]=e.startSize.z,this._vdataF32[s++]=Yne[2*t],this._vdataF32[s++]=e.rotation.x,this._vdataF32[s++]=e.rotation.y,this._vdataF32[s++]=e.rotation.z,this._vdataF32[s++]=Yne[2*t+1],this._vdataF32[s++]=e.startColor.r/255,this._vdataF32[s++]=e.startColor.g/255,this._vdataF32[s++]=e.startColor.b/255,this._vdataF32[s++]=e.startColor.a/255,this._vdataF32[s++]=e.velocity.x,this._vdataF32[s++]=e.velocity.y,this._vdataF32[s++]=e.velocity.z,this._vdataF32[s++]=e.startLifetime,this._vdataF32[s++]=e.randomSeed,i+=this._vertAttrsFloatCount}}updateGPUParticles(e,t,n){const i=this._vertAttrsFloatCount*this._vertCount;let s=0,o=0,r=0,a=0,c=0;for(let l=0;l<e;++l)s=l*i,o=this._vdataF32[s+this._startTimeOffset],r=this._vdataF32[s+this._lifeTimeOffset],c=t-o,r-c<n&&(a=--e*i,this._vdataF32.copyWithin(s,a,a+i),l--);return e}constructAttributeIndex(){if(!this._vertAttrs)return;let e=this._vertAttrs.findIndex((e=>"a_position_starttime"===e.name)),t=this._vertAttrs[e].offset;this._startTimeOffset=t/4+3,e=this._vertAttrs.findIndex((e=>"a_dir_life"===e.name)),t=this._vertAttrs[e].offset,this._lifeTimeOffset=t/4+3}updateIA(e){e<=0||(this._subModels[0].inputAssembler.vertexBuffers[0].update(this._vdataF32),this._iaInfo.drawInfos[0].firstIndex=0,this._iaInfo.drawInfos[0].indexCount=this._indexCount*e,this._iaInfoBuffer.update(this._iaInfo))}clear(){this._subModels[0].inputAssembler.indexCount=0}destroy(){super.destroy(),this._vertAttrs=null,this._vBuffer=null,this._vdataF32=null,this._vdataUint32=null,this._material=null,this._mesh=null,this.destroySubMeshData(),this._iaInfoBuffer&&(this._iaInfoBuffer.destroy(),this._iaInfoBuffer=null)}rebuild(){this._vBuffer=this.createSubMeshData(),this._vdataF32=new Float32Array(this._vBuffer),this._vdataUint32=new Uint32Array(this._vBuffer)}destroySubMeshData(){this._subMeshData&&(this._subMeshData.destroy(),this._subMeshData=null,this._iaInfoBuffer=null)}}class $ne{constructor(e){this._particleSystem=null,this._model=null,this._renderInfo=null,this._vertAttrs=[],this._renderInfo=e}getInfo(){return this._renderInfo}onInit(e){this._particleSystem=e}onEnable(){if(!this._particleSystem)return;this.attachToScene();const e=this._model;e&&(e.node=e.transform=this._particleSystem.node)}onDisable(){this.detachFromScene()}onDestroy(){this._model&&(u.director.root.destroyModel(this._model),this._model=null)}attachToScene(){this._model&&(this._model.scene&&this.detachFromScene(),this._particleSystem._getRenderScene().addModel(this._model))}detachFromScene(){this._model&&this._model.scene&&this._model.scene.removeModel(this._model)}setVertexAttributes(){this._model&&this._model.setVertexAttributes(this._renderInfo.renderMode===_8.Mesh?this._renderInfo.mesh:null,this._vertAttrs)}clear(){this._model&&(this._model.enabled=!1)}getModel(){return this._model}_initModel(){this._model||(this._model=u.director.root.createModel(Kne),this._model.setCapacity(this._particleSystem.capacity),this._model.visFlags=this._particleSystem.visibility)}updateTrailMaterial(){}getDefaultTrailMaterial(){return null}}const Qne=new gn,Jne=new On,Zne=new Tn,eie=(new gn,["_colorOverLifetimeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule"]),tie=[0,0,1,0,0,1,1,1],nie=[new vs(zi.ATTR_POSITION,ti.RGB32F),new vs(zi.ATTR_TEX_COORD,ti.RGB32F),new vs(zi.ATTR_TEX_COORD1,ti.RGB32F),new vs(zi.ATTR_TEX_COORD2,ti.RGB32F),new vs(zi.ATTR_COLOR,ti.RGBA8,!0)],iie=[new vs(zi.ATTR_POSITION,ti.RGB32F),new vs(zi.ATTR_TEX_COORD,ti.RGB32F),new vs(zi.ATTR_TEX_COORD1,ti.RGB32F),new vs(zi.ATTR_TEX_COORD2,ti.RGB32F),new vs(zi.ATTR_COLOR,ti.RGBA8,!0),new vs(zi.ATTR_COLOR1,ti.RGB32F)],sie=[new vs(zi.ATTR_POSITION,ti.RGB32F),new vs(zi.ATTR_TEX_COORD,ti.RGB32F),new vs(zi.ATTR_TEX_COORD1,ti.RGB32F),new vs(zi.ATTR_TEX_COORD2,ti.RGB32F),new vs(zi.ATTR_COLOR,ti.RGBA8,!0),new vs(zi.ATTR_TEX_COORD3,ti.RGB32F),new vs(zi.ATTR_NORMAL,ti.RGB32F),new vs(zi.ATTR_COLOR1,ti.RGBA8,!0)],oie={parent:null,owner:null,subModelIdx:0};class rie extends $ne{constructor(e){super(e),this._defines=void 0,this._trailDefines=void 0,this._frameTile_velLenScale=void 0,this._tmp_velLenScale=void 0,this._defaultMat=null,this._node_scale=void 0,this._attrs=void 0,this._particles=null,this._defaultTrailMat=null,this._updateList=new Map,this._animateList=new Map,this._runAnimateList=new Array,this._fillDataFunc=null,this._uScaleHandle=0,this._uLenHandle=0,this._uNodeRotHandle=0,this._alignSpace=u8.View,this._inited=!1,this._localMat=new On,this._gravity=new Gn,this._model=null,this._frameTile_velLenScale=new Gn(1,1,0,0),this._tmp_velLenScale=this._frameTile_velLenScale.clone(),this._node_scale=new Gn,this._attrs=new Array(5),this._defines={CC_USE_WORLD_SPACE:!0,CC_USE_BILLBOARD:!0,CC_USE_STRETCHED_BILLBOARD:!1,CC_USE_HORIZONTAL_BILLBOARD:!1,CC_USE_VERTICAL_BILLBOARD:!1},this._trailDefines={CC_USE_WORLD_SPACE:!0}}onInit(e){super.onInit(e),this._particles=new Fl((()=>new o8(this)),16),this._setVertexAttrib(),this._setFillFunc(),this._initModuleList(),this._initModel(),this.updateMaterialParams(),this.updateTrailMaterial(),this.setVertexAttributes(),this._inited=!0}clear(){super.clear(),this._particles.reset(),this._particleSystem._trailModule&&this._particleSystem._trailModule.clear(),this.updateRenderData(),this._model.enabled=!1}updateRenderMode(){this._setVertexAttrib(),this._setFillFunc(),this.updateMaterialParams(),this.setVertexAttributes()}onDestroy(){var e;null===(e=this._particles)||void 0===e||e.destroy(),super.onDestroy()}getFreeParticle(){return this._particles.length>=this._particleSystem.capacity?null:this._particles.add()}getDefaultTrailMaterial(){return this._defaultTrailMat}setNewParticle(e){}_initModuleList(){eie.forEach((e=>{const t=this._particleSystem[e];t&&t.enable&&(t.needUpdate&&(this._updateList[t.name]=t),t.needAnimate&&(this._animateList[t.name]=t))})),this._runAnimateList.length=0;for(let e=0,t=r8.length;e<t;e++){const t=this._animateList[r8[e]];t&&this._runAnimateList.push(t)}}enableModule(e,t,n){t?(n.needUpdate&&(this._updateList[n.name]=n),n.needAnimate&&(this._animateList[n.name]=n)):(delete this._animateList[e],delete this._updateList[e]),this._runAnimateList.length=0;for(let e=0,t=r8.length;e<t;e++){const t=this._animateList[r8[e]];t&&this._runAnimateList.push(t)}this.updateMaterialParams()}updateAlignSpace(e){this._alignSpace=e}getDefaultMaterial(){return this._defaultMat}updateRotation(e){e&&this.doUpdateRotation(e)}doUpdateRotation(e){if(this._renderInfo.renderMode===_8.Mesh||this._alignSpace!==u8.View){if(this._alignSpace===u8.Local)this._particleSystem.node.getRotation(Zne);else if(this._alignSpace===u8.World)this._particleSystem.node.getWorldRotation(Zne);else if(this._alignSpace===u8.View){var t;Zne.set(0,0,0,1);const e=null===(t=this._particleSystem.node.scene.renderScene)||void 0===t?void 0:t.cameras;if(void 0!==e)for(let t=0;t<(null==e?void 0:e.length);++t){const n=e[t];if((n.visibility&this._particleSystem.node.layer)===this._particleSystem.node.layer){Tn.fromViewUp(Zne,n.forward);break}}}else Zne.set(0,0,0,1);e.setUniform(this._uNodeRotHandle,Zne)}}updateScale(e){e&&this.doUpdateScale(e)}doUpdateScale(e){switch(this._particleSystem.scaleSpace){case l8.Local:this._particleSystem.node.getScale(this._node_scale);break;case l8.World:this._particleSystem.node.getWorldScale(this._node_scale)}e.setUniform(this._uScaleHandle,this._node_scale)}updateParticles(e){const t=this._particleSystem;if(!t)return this._particles.length;t.node.getWorldMatrix(Jne);const n=(t.getMaterialInstance(0)||this._defaultMat).passes[0];this.doUpdateScale(n),this.doUpdateRotation(n),this._updateList.forEach((e=>{e.update(t._simulationSpace,Jne)}));const i=t._trailModule,s=i&&i.enable;if(s&&i.update(),t.simulationSpace===l8.Local){const e=t.node.getRotation();On.fromQuat(this._localMat,e),this._localMat.transpose()}for(let n=0;n<this._particles.length;++n){const o=this._particles.data[n];if(o.remainingLifetime-=e,gn.set(o.animatedVelocity,0,0,0),o.remainingLifetime<0)s&&i.removeParticle(o),this._particles.removeAt(n),--n;else{if(t.simulationSpace===l8.Local){const n=9.8*-t.gravityModifier.evaluate(1-o.remainingLifetime/o.startLifetime,tn(o.randomSeed))*e;this._gravity.x=0,this._gravity.y=n,this._gravity.z=0,this._gravity.w=1,this._gravity=this._gravity.transformMat4(this._localMat),o.velocity.x+=this._gravity.x,o.velocity.y+=this._gravity.y,o.velocity.z+=this._gravity.z}else o.velocity.y-=9.8*t.gravityModifier.evaluate(1-o.remainingLifetime/o.startLifetime,tn(o.randomSeed))*e;gn.copy(o.ultimateVelocity,o.velocity),this._runAnimateList.forEach((t=>{t.animate(o,e)})),gn.scaleAndAdd(o.position,o.position,o.ultimateVelocity,e),s&&i.animate(o,e)}}return this._model.enabled=this._particles.length>0,this._particles.length}updateRenderData(){let e=0;for(let t=0;t<this._particles.length;++t){const n=this._particles.data[t];let i=0;const s=this._particleSystem._textureAnimationModule;s&&s.enable&&(i=n.frameIndex),e=4*t,this._fillDataFunc(n,e,i)}}beforeRender(){this._model.updateIA(this._particles.length)}getParticleCount(){return this._particles.length}onMaterialModified(e,t){this._inited&&(0===e?this.updateMaterialParams():this.updateTrailMaterial())}onRebuildPSO(e,t){this._model&&0===e&&this._model.setSubModelMaterial(0,t);const n=this._particleSystem._trailModule;n&&n._trailModel&&1===e&&n._trailModel.setSubModelMaterial(0,t)}_setFillFunc(){this._renderInfo.renderMode===_8.Mesh?this._fillDataFunc=this._fillMeshData:this._renderInfo.renderMode===_8.StrecthedBillboard?this._fillDataFunc=this._fillStrecthedData:this._fillDataFunc=this._fillNormalData}_fillMeshData(e,t,n){const i=t/4;this._attrs[0]=e.position,Qne.z=n,this._attrs[1]=Qne,this._attrs[2]=e.size,this._attrs[3]=e.rotation,this._attrs[4]=e.color._val,this._model.addParticleVertexData(i,this._attrs)}_fillStrecthedData(e,t,n){for(let i=0;i<4;++i)this._attrs[0]=e.position,Qne.x=tie[2*i],Qne.y=tie[2*i+1],Qne.z=n,this._attrs[1]=Qne,this._attrs[2]=e.size,this._attrs[3]=e.rotation,this._attrs[4]=e.color._val,this._attrs[5]=e.ultimateVelocity,this._attrs[6]=null,this._model.addParticleVertexData(t++,this._attrs)}_fillNormalData(e,t,n){for(let i=0;i<4;++i)this._attrs[0]=e.position,Qne.x=tie[2*i],Qne.y=tie[2*i+1],Qne.z=n,this._attrs[1]=Qne,this._attrs[2]=e.size,this._attrs[3]=e.rotation,this._attrs[4]=e.color._val,this._attrs[5]=null,this._model.addParticleVertexData(t++,this._attrs)}_setVertexAttrib(){switch(this._renderInfo.renderMode){case _8.StrecthedBillboard:this._vertAttrs=iie.slice();break;case _8.Mesh:this._vertAttrs=sie.slice();break;default:this._vertAttrs=nie.slice()}}updateMaterialParams(){if(!this._particleSystem)return;const e=this._particleSystem,t=e.sharedMaterial;if(null!=t){const n=t._effectAsset._name;this._renderInfo.mainTexture=t.getProperty("mainTexture",0),-1!==n.indexOf("particle")&&-1===n.indexOf("particle-gpu")||e.setMaterial(null,0)}null==e.sharedMaterial&&null==this._defaultMat&&(oie.parent=Fm.get("default-particle-material"),oie.owner=this._particleSystem,oie.subModelIdx=0,this._defaultMat=new vv(oie),oie.parent=null,oie.owner=null,oie.subModelIdx=0,null!==this._renderInfo.mainTexture&&this._defaultMat.setProperty("mainTexture",this._renderInfo.mainTexture));const n=e.getMaterialInstance(0)||this._defaultMat;e._simulationSpace===l8.World?this._defines.CC_USE_WORLD_SPACE=!0:this._defines.CC_USE_WORLD_SPACE=!1;const i=n.passes[0];this._uScaleHandle=i.getHandle("scale"),this._uLenHandle=i.getHandle("frameTile_velLenScale"),this._uNodeRotHandle=i.getHandle("nodeRotation");const s=this._renderInfo.renderMode,o=this._frameTile_velLenScale;s===_8.Billboard?this._defines.CC_RENDER_MODE=0:s===_8.StrecthedBillboard?(this._defines.CC_RENDER_MODE=1,o.z=this._renderInfo.velocityScale,o.w=this._renderInfo.lengthScale):s===_8.HorizontalBillboard?this._defines.CC_RENDER_MODE=2:s===_8.VerticalBillboard?this._defines.CC_RENDER_MODE=3:s===_8.Mesh?this._defines.CC_RENDER_MODE=4:console.warn(`particle system renderMode ${s} not support.`);const r=e._textureAnimationModule;r&&r.enable?(Gn.copy(this._tmp_velLenScale,o),Bn.set(this._tmp_velLenScale,r.numTilesX,r.numTilesY),i.setUniform(this._uLenHandle,this._tmp_velLenScale)):i.setUniform(this._uLenHandle,o);let a=!1;const c=this._particleSystem._rotationOvertimeModule;a=c&&c.enable,this._defines.ROTATION_OVER_TIME_MODULE_ENABLE=a,n.recompileShaders(this._defines),this._model&&this._model.updateMaterial(n)}updateTrailMaterial(){if(!this._particleSystem)return;const e=this._particleSystem,t=e._trailModule;if(t&&t.enable){e.simulationSpace===l8.World||t.space===l8.World?this._trailDefines.CC_USE_WORLD_SPACE=!0:this._trailDefines.CC_USE_WORLD_SPACE=!1;let n=e.getMaterialInstance(1);null===n&&null===this._defaultTrailMat&&(oie.parent=Fm.get("default-trail-material"),oie.owner=this._particleSystem,oie.subModelIdx=1,this._defaultTrailMat=new vv(oie),oie.parent=null,oie.owner=null,oie.subModelIdx=0),n=n||this._defaultTrailMat,n.recompileShaders(this._trailDefines),t.updateMaterial()}}}const aie=new On,cie=new Gn,lie=new Tn,hie=new Tn,uie=(new gn,32),_ie="a_position_starttime",die="a_size_uv",pie="a_rotation_uv",fie="a_color",mie="a_dir_life",gie="a_rndSeed",vie=[new vs(_ie,ti.RGBA32F),new vs(die,ti.RGBA32F),new vs(pie,ti.RGBA32F),new vs(fie,ti.RGBA32F),new vs(mie,ti.RGBA32F),new vs(gie,ti.R32F)],yie=[new vs(_ie,ti.RGBA32F),new vs(die,ti.RGBA32F),new vs(pie,ti.RGBA32F),new vs(fie,ti.RGBA32F),new vs(mie,ti.RGBA32F),new vs(gie,ti.R32F),new vs(zi.ATTR_TEX_COORD,ti.RGB32F),new vs(zi.ATTR_TEX_COORD3,ti.RGB32F),new vs(zi.ATTR_NORMAL,ti.RGB32F),new vs(zi.ATTR_COLOR1,ti.RGBA8,!0)],xie={parent:null,owner:null,subModelIdx:0};class Sie extends $ne{constructor(e){super(e),this._defines=void 0,this._frameTile_velLenScale=void 0,this._unifrom_velLenScale=void 0,this._tmp_velLenScale=void 0,this._node_scale=void 0,this._vertAttrs=[],this._defaultMat=null,this._particleNum=0,this._tempParticle=null,this._colorTexture=null,this._forceTexture=null,this._velocityTexture=null,this._rotationTexture=null,this._sizeTexture=null,this._animTexture=null,this._uTimeHandle=0,this._uRotHandle=0,this._uNodeRotHandle=0,this._alignSpace=u8.View,this._inited=!1,this._frameTile_velLenScale=new Gn(1,1,0,0),this._unifrom_velLenScale=this._frameTile_velLenScale.clone(),this._tmp_velLenScale=this._frameTile_velLenScale.clone(),this._node_scale=new Gn,this._defines={CC_USE_WORLD_SPACE:!0,CC_USE_BILLBOARD:!0,CC_USE_STRETCHED_BILLBOARD:!1,CC_USE_HORIZONTAL_BILLBOARD:!1,CC_USE_VERTICAL_BILLBOARD:!1,COLOR_OVER_TIME_MODULE_ENABLE:!1},this._tempParticle=new o8(null),this._particleNum=0}onInit(e){super.onInit(e),this._setVertexAttrib(),this._initModel(),this.updateMaterialParams(),this.setVertexAttributes(),this._inited=!0}updateRenderMode(){this._setVertexAttrib(),this.updateMaterialParams(),this.setVertexAttributes()}setVertexAttributes(){super.setVertexAttributes(),this._model.constructAttributeIndex()}clear(){super.clear(),this._particleNum=0,this.updateRenderData()}onDestroy(){super.onDestroy(),this._forceTexture&&this._forceTexture.destroy(),this._velocityTexture&&this._velocityTexture.destroy(),this._colorTexture&&this._colorTexture.destroy(),this._sizeTexture&&this._sizeTexture.destroy(),this._rotationTexture&&this._rotationTexture.destroy(),this._animTexture&&this._animTexture.destroy()}enableModule(e,t,n){const i=this._particleSystem.getMaterialInstance(0)||this._defaultMat;i&&(this.initShaderUniform(i),i.recompileShaders(this._defines),this._model&&this._model.setSubModelMaterial(0,i))}getFreeParticle(){return this._particleNum>=this._particleSystem._capacity?null:this._tempParticle}setNewParticle(e){this._model.addGPUParticleVertexData(e,this._particleNum,this._particleSystem._time),this._particleNum++}getDefaultMaterial(){return this._defaultMat}updateRotation(e){e&&this.doUpdateRotation(e)}doUpdateRotation(e){if(this._renderInfo.renderMode===_8.Mesh||this._alignSpace!==u8.View){if(this._alignSpace===u8.Local)this._particleSystem.node.getRotation(hie);else if(this._alignSpace===u8.World)this._particleSystem.node.getWorldRotation(hie);else if(this._alignSpace===u8.View){var t;hie.set(0,0,0,1);const e=null===(t=this._particleSystem.node.scene.renderScene)||void 0===t?void 0:t.cameras;if(void 0!==e)for(let t=0;t<(null==e?void 0:e.length);++t){const n=e[t];if((n.visibility&this._particleSystem.node.layer)===this._particleSystem.node.layer){Tn.fromViewUp(hie,n.forward);break}}}else hie.set(0,0,0,1);e.setUniform(this._uNodeRotHandle,hie)}}updateScale(e){e&&this.doUpdateScale(e)}doUpdateScale(e){switch(this._particleSystem.scaleSpace){case l8.Local:this._particleSystem.node.getScale(this._node_scale);break;case l8.World:this._particleSystem.node.getWorldScale(this._node_scale)}e.setUniform(e.getHandle("scale"),this._node_scale)}updateParticles(e){return this._particleNum=this._model.updateGPUParticles(this._particleNum,this._particleSystem._time,e),this.updateShaderUniform(e),this._model.enabled=this._particleNum>0,this._particleNum}updateRenderData(){}beforeRender(){this._model.updateIA(this._particleNum)}updateAlignSpace(e){this._alignSpace=e}updateShaderUniform(e){const t=this._particleSystem.getMaterialInstance(0)||this._defaultMat;if(!t)return;const n=t.passes[0];cie.x=this._particleSystem._time,cie.y=e,n.setUniform(this._uTimeHandle,cie),this._particleSystem.node.getWorldRotation(lie),n.setUniform(this._uRotHandle,lie),this.doUpdateRotation(n)}initShaderUniform(e){const t=e.passes[0];this._uTimeHandle=t.getHandle("u_timeDelta"),this._uRotHandle=t.getHandle("u_worldRot"),this._uNodeRotHandle=t.getHandle("nodeRotation"),this.doUpdateScale(t),t.setUniform(t.getHandle("frameTile_velLenScale"),this._unifrom_velLenScale),cie.x=uie,cie.y=.03125,t.setUniform(t.getHandle("u_sampleInfo"),cie);let n=!1;const i=this._particleSystem._forceOvertimeModule;if(n=i&&i.enable,this._defines.FORCE_OVER_TIME_MODULE_ENABLE=n,n){this._forceTexture&&this._forceTexture.destroy(),this._forceTexture=Y5(uie,i.x,i.y,i.z);const e=t.getHandle("force_over_time_tex0"),n=Wm.getBindingFromHandle(e);t.bindSampler(n,this._forceTexture.getGFXSampler()),t.bindTexture(n,this._forceTexture.getGFXTexture());const s=t.getHandle("u_force_space");t.setUniform(s,i.space);const o=t.getHandle("u_force_mode");t.setUniform(o,this._forceTexture.height)}const s=this._particleSystem._velocityOvertimeModule;if(n=s&&s.enable,this._defines.VELOCITY_OVER_TIME_MODULE_ENABLE=n,n){this._velocityTexture&&this._velocityTexture.destroy(),this._velocityTexture=function(e,t,n,i,s){const o=Math.max(q5(t),q5(n),q5(i),q5(s)),r=new Float32Array(e*o*4),a=[t,n,i,s],c=1/(e-1);for(let t=0;t<o;t++)for(let n=0;n<4;n++){const i=a[n];let s=0,o=0;for(let a=0;a<e;a++){const e=W5(i,c*a,t);s+=e,o=s/(a+1),r[4*a+n]=o}}return X5(r,e,o)}(uie,s.x,s.y,s.z,s.speedModifier);const e=t.getHandle("velocity_over_time_tex0"),n=Wm.getBindingFromHandle(e);t.bindSampler(n,this._velocityTexture.getGFXSampler()),t.bindTexture(n,this._velocityTexture.getGFXTexture());const i=t.getHandle("u_velocity_space");t.setUniform(i,s.space);const o=t.getHandle("u_velocity_mode");t.setUniform(o,this._velocityTexture.height)}const o=this._particleSystem._colorOverLifetimeModule;if(n=o&&o.enable,this._defines.COLOR_OVER_TIME_MODULE_ENABLE=n,n){this._colorTexture&&this._colorTexture.destroy(),this._colorTexture=function(e,t){const n=function(e){switch(e.mode){case m6.TwoColors:case m6.TwoGradients:return 2;default:return 1}}(t),i=new Uint8Array(e*n*4),s=1/(e-1);let o=0;for(let r=0;r<n;r++)for(let n=0;n<e;n++){const e=v6(t,s*n,r);i[o]=e.r,i[o+1]=e.g,i[o+2]=e.b,i[o+3]=e.a,o+=4}const r=new bm;return r.create(e,n,Vf.RGBA8888),r.setFilters(kf.LINEAR,kf.LINEAR),r.setWrapMode(Hf.CLAMP_TO_EDGE,Hf.CLAMP_TO_EDGE),r.uploadData(i),r}(uie,o.color);const e=t.getHandle("color_over_time_tex0"),n=Wm.getBindingFromHandle(e);t.bindSampler(n,this._colorTexture.getGFXSampler()),t.bindTexture(n,this._colorTexture.getGFXTexture());const i=t.getHandle("u_color_mode");t.setUniform(i,this._colorTexture.height)}const r=this._particleSystem._rotationOvertimeModule;if(n=r&&r.enable,this._defines.ROTATION_OVER_TIME_MODULE_ENABLE=n,n){this._rotationTexture&&this._rotationTexture.destroy(),r.separateAxes?this._rotationTexture=Y5(uie,r.x,r.y,r.z):this._rotationTexture=function(e,t){const n=q5(t),i=new Float32Array(e*n*4),s=1/(e-1);let o=0;for(let r=0;r<n;r++)for(let n=0;n<e;n++){const e=W5(t,s*n,r);i[o+2]=e,o+=4}return X5(i,e,n)}(uie,r.z);const e=t.getHandle("rotation_over_time_tex0"),n=Wm.getBindingFromHandle(e);t.bindSampler(n,this._rotationTexture.getGFXSampler()),t.bindTexture(n,this._rotationTexture.getGFXTexture());const i=t.getHandle("u_rotation_mode");t.setUniform(i,this._rotationTexture.height)}const a=this._particleSystem._sizeOvertimeModule;if(n=a&&a.enable,this._defines.SIZE_OVER_TIME_MODULE_ENABLE=n,n){this._sizeTexture&&this._sizeTexture.destroy(),a.separateAxes?this._sizeTexture=Y5(uie,a.x,a.y,a.z,!0):this._sizeTexture=function(e,t){const n=q5(t),i=new Float32Array(e*n*4),s=1/(e-1);let o=0,r=0,a=0;for(let c=0;c<n;c++){o=0;for(let n=0;n<e;n++){const e=W5(t,s*n,c);r=e,i[a]=r,i[a+1]=r,i[a+2]=r,a+=4}}return X5(i,e,n)}(uie,a.size);const e=t.getHandle("size_over_time_tex0"),n=Wm.getBindingFromHandle(e);t.bindSampler(n,this._sizeTexture.getGFXSampler()),t.bindTexture(n,this._sizeTexture.getGFXTexture());const i=t.getHandle("u_size_mode");t.setUniform(i,this._sizeTexture.height)}const c=this._particleSystem._textureAnimationModule;if(n=c&&c.enable,this._defines.TEXTURE_ANIMATION_MODULE_ENABLE=n,n){this._animTexture&&this._animTexture.destroy(),this._animTexture=function(e,t,n){const i=Math.max(q5(t),q5(n)),s=new Float32Array(e*i*4),o=[t,n],r=1/(e-1);for(let t=0;t<i;t++)for(let n=0;n<2;n++){const i=o[n];let a=0,c=0;for(let o=0;o<e;o++){const e=W5(i,r*o,t);a+=e,c=a/(o+1),s[4*o+n]=c}}return X5(s,e,i)}(uie,c.startFrame,c.frameOverTime);const e=t.getHandle("texture_animation_tex0"),n=Wm.getBindingFromHandle(e);t.bindSampler(n,this._animTexture.getGFXSampler()),t.bindTexture(n,this._animTexture.getGFXTexture());const i=t.getHandle("u_anim_info");cie.x=this._animTexture.height,cie.y=c.numTilesX*c.numTilesY,cie.z=c.cycleCount,t.setUniform(i,cie)}this._defines.USE_VK_SHADER=u.game._gfxDevice.gfxAPI===Jn.VULKAN}getParticleCount(){return this._particleNum}onMaterialModified(e,t){this._inited&&this.updateMaterialParams()}onRebuildPSO(e,t){this._model&&0===e&&this._model.setSubModelMaterial(0,t)}_setVertexAttrib(){switch(this._renderInfo.renderMode){case _8.StrecthedBillboard:this._vertAttrs=vie.slice();break;case _8.Mesh:this._vertAttrs=yie.slice();break;default:this._vertAttrs=vie.slice()}}updateMaterialParams(){if(!this._particleSystem)return;const e=this._particleSystem,t=e.sharedMaterial;if(null!==t){const e=t._effectAsset._name;this._renderInfo.mainTexture=t.getProperty("mainTexture",0),-1===e.indexOf("particle-gpu")&&(this._renderInfo.mainTexture=t.getProperty("mainTexture",0),this._particleSystem.setMaterial(null,0))}null==e.sharedMaterial&&null==this._defaultMat&&(xie.parent=Fm.get("default-particle-gpu-material"),xie.owner=e,xie.subModelIdx=0,this._defaultMat=new vv(xie),xie.parent=null,xie.owner=null,xie.subModelIdx=0,null!==this._renderInfo.mainTexture&&this._defaultMat.setProperty("mainTexture",this._renderInfo.mainTexture));const n=e.getMaterialInstance(0)||this._defaultMat;e.node.getWorldMatrix(aie),e._simulationSpace===l8.World?this._defines.CC_USE_WORLD_SPACE=!0:this._defines.CC_USE_WORLD_SPACE=!1;const i=this._renderInfo.renderMode;i===_8.Billboard?this._defines.CC_RENDER_MODE=0:i===_8.StrecthedBillboard?(this._defines.CC_RENDER_MODE=1,this._frameTile_velLenScale.z=this._renderInfo.velocityScale,this._frameTile_velLenScale.w=this._renderInfo.lengthScale):i===_8.HorizontalBillboard?this._defines.CC_RENDER_MODE=2:i===_8.VerticalBillboard?this._defines.CC_RENDER_MODE=3:i===_8.Mesh?this._defines.CC_RENDER_MODE=4:console.warn(`particle system renderMode ${i} not support.`);const s=e._textureAnimationModule;s&&s.enable?(Bn.set(this._frameTile_velLenScale,s.numTilesX,s.numTilesY),Gn.copy(this._unifrom_velLenScale,this._frameTile_velLenScale)):(this._tmp_velLenScale.z=this._frameTile_velLenScale.z,this._tmp_velLenScale.w=this._frameTile_velLenScale.w,Gn.copy(this._unifrom_velLenScale,this._tmp_velLenScale)),this.initShaderUniform(n),n.recompileShaders(this._defines),this._model&&this._model.updateMaterial(n)}}var Cie,Eie,Tie,bie,Aie,Pie,wie,Iie,Rie,Die,Oie,Nie,Mie,Lie,Bie,Fie,zie,Uie,Gie,Vie,Hie,kie,jie,Wie,qie,Xie,Yie,Kie,$ie,Qie,Jie,Zie,ese,tse;function nse(){const e=Sw.root.device;return!!(e.capabilities.maxVertexTextureUnits>=8&&e.getFormatFeatures(ti.RGBA32F)&(ui.RENDER_TARGET|ui.SAMPLED_TEXTURE))||(u.warn("Maybe the device has restrictions on vertex textures or does not support float textures."),!1)}let ise=(Cie=mc("cc.ParticleSystemRenderer"),Eie=Zc(_8),Tie=Wc(),bie=Uc(),Aie=Wc(),Pie=Uc(),wie=Wc(),Iie=Uc(),Rie=Zc(_8),Die=Zc(ak),Oie=Wc(),Nie=Uc(),Mie=Zc(lg),Lie=Wc(),Bie=Uc(),Fie=Zc(lg),zie=Wc(),Uie=Uc(),Gie=Wc(),Vie=Uc(),Hie=Zc(u8),kie=Wc(),jie=Uc(),Cie((tse=ese=class{constructor(){rc(this,"_renderMode",Xie,this),rc(this,"_velocityScale",Yie,this),rc(this,"_lengthScale",Kie,this),rc(this,"_mesh",$ie,this),rc(this,"_mainTexture",Qie,this),rc(this,"_useGPU",Jie,this),rc(this,"_alignSpace",Zie,this),this._particleSystem=null}get renderMode(){return this._renderMode}set renderMode(e){this._renderMode!==e&&(this._renderMode=e,this._particleSystem&&this._particleSystem.processor.updateRenderMode())}get velocityScale(){return this._velocityScale}set velocityScale(e){this._velocityScale=e,this._particleSystem&&this._particleSystem.processor.updateMaterialParams()}get lengthScale(){return this._lengthScale}set lengthScale(e){this._lengthScale=e,this._particleSystem&&this._particleSystem.processor.updateMaterialParams()}get mesh(){return this._mesh}set mesh(e){this._mesh=e,this._particleSystem&&this._particleSystem.processor.setVertexAttributes()}get particleMaterial(){return this._particleSystem?this._particleSystem.getMaterial(0):null}set particleMaterial(e){this._particleSystem&&this._particleSystem.setMaterial(e,0)}get trailMaterial(){return this._particleSystem?this._particleSystem.getMaterial(1):null}set trailMaterial(e){this._particleSystem&&this._particleSystem.setMaterial(e,1)}get mainTexture(){return this._mainTexture}set mainTexture(e){this._mainTexture=e}get useGPU(){return this._useGPU}set useGPU(e){this._useGPU!==e&&(nse()?this._useGPU=e:this._useGPU=!1,this._switchProcessor())}get alignSpace(){return this._alignSpace}set alignSpace(e){this._alignSpace=e,this._particleSystem.processor.updateAlignSpace(this._alignSpace)}create(e){null===this._particleSystem?this._particleSystem=e:this._particleSystem!==e&&N(6033)}onInit(e){if(this.create(e),this._particleSystem.processor)N(6034);else{const t=this._useGPU&&nse();this._particleSystem.processor=t?new Sie(this):new rie(this),this._particleSystem.processor.updateAlignSpace(this.alignSpace),this._particleSystem.processor.onInit(e)}}_switchProcessor(){this._particleSystem&&(this._particleSystem.processor&&(this._particleSystem.processor.detachFromScene(),this._particleSystem.processor.clear(),this._particleSystem.processor=null),this._particleSystem.processor=this._useGPU?new Sie(this):new rie(this),this._particleSystem.processor.updateAlignSpace(this.alignSpace),this._particleSystem.processor.onInit(this._particleSystem),this._particleSystem.processor.onEnable(),this._particleSystem.bindModule())}},ese.AlignmentSpace=u8,ac((qie=tse).prototype,"renderMode",[Eie,Tie,bie],Object.getOwnPropertyDescriptor(qie.prototype,"renderMode"),qie.prototype),ac(qie.prototype,"velocityScale",[Aie,Pie],Object.getOwnPropertyDescriptor(qie.prototype,"velocityScale"),qie.prototype),ac(qie.prototype,"lengthScale",[wie,Iie],Object.getOwnPropertyDescriptor(qie.prototype,"lengthScale"),qie.prototype),Xie=ac(qie.prototype,"_renderMode",[Rie,Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return _8.Billboard}}),Yie=ac(qie.prototype,"_velocityScale",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Kie=ac(qie.prototype,"_lengthScale",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),$ie=ac(qie.prototype,"_mesh",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(qie.prototype,"mesh",[Die,Oie,Nie],Object.getOwnPropertyDescriptor(qie.prototype,"mesh"),qie.prototype),ac(qie.prototype,"particleMaterial",[Mie,Lie,Yc,Bie],Object.getOwnPropertyDescriptor(qie.prototype,"particleMaterial"),qie.prototype),ac(qie.prototype,"trailMaterial",[Fie,zie,Yc,Uie],Object.getOwnPropertyDescriptor(qie.prototype,"trailMaterial"),qie.prototype),Qie=ac(qie.prototype,"_mainTexture",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Jie=ac(qie.prototype,"_useGPU",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ac(qie.prototype,"useGPU",[Gie,Vie],Object.getOwnPropertyDescriptor(qie.prototype,"useGPU"),qie.prototype),ac(qie.prototype,"alignSpace",[Hie,kie,jie],Object.getOwnPropertyDescriptor(qie.prototype,"alignSpace"),qie.prototype),Zie=ac(qie.prototype,"_alignSpace",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return u8.View}}),Wie=qie))||Wie);var sse,ose,rse,ase,cse,lse,hse,use,_se,dse,pse,fse,mse,gse,vse,yse,xse,Sse,Cse,Ese,Tse,bse,Ase,Pse,wse,Ise,Rse,Dse,Ose,Nse,Mse,Lse,Bse,Fse,zse,Use,Gse,Vse,Hse,kse,jse,Wse,qse,Xse,Yse,Kse,$se;const Qse=Math.cos($t(100)),Jse={position:new gn,velocity:new gn},Zse=new Tn,eoe=new On,toe=new gn,noe=new gn,ioe=new dn;class soe{constructor(e){for(this.start=void 0,this.end=void 0,this.trailElements=void 0,this.start=-1,this.end=-1,this.trailElements=[];e--;)this.trailElements.push({position:new gn,lifetime:0,width:0,velocity:new gn,direction:0,color:new dn})}getElement(e){return-1===this.start?null:(e<0&&(e=(e+this.trailElements.length)%this.trailElements.length),e>=this.trailElements.length&&(e%=this.trailElements.length),this.trailElements[e])}addElement(){if(0===this.trailElements.length)return null;if(-1===this.start)return this.start=0,this.end=1,this.trailElements[0];this.start===this.end&&(this.trailElements.splice(this.end,0,{position:new gn,lifetime:0,width:0,velocity:new gn,direction:0,color:new dn}),this.start++,this.start%=this.trailElements.length);const e=this.end++;return this.end%=this.trailElements.length,this.trailElements[e]}iterateElement(e,t,n,i){const s=this.start>=this.end?this.end+this.trailElements.length:this.end;for(let o=this.start;o<s;o++)t(e,this.trailElements[o%this.trailElements.length],n,i)&&(this.start++,this.start%=this.trailElements.length);this.start===s&&(this.start=-1,this.end=-1)}count(){return this.start<this.end?this.end-this.start:this.trailElements.length+this.end-this.start}clear(){this.start=-1,this.end=-1}}let ooe=(sse=mc("cc.TrailModule"),ose=Wc(),rse=Zc(m8),ase=Wc(),cse=Uc(),lse=Zc(j5),hse=Gc(),use=Wc(),_se=Uc(),dse=Wc(),pse=Uc(),fse=Zc(l8),mse=Wc(),gse=Uc(),vse=Zc(g8),yse=Wc(),xse=Uc(),Sse=Wc(),Cse=Uc(),Ese=Zc(j5),Tse=Gc(),bse=Wc(),Ase=Uc(),Pse=Wc(),wse=Uc(),Ise=Zc(g6),Rse=Wc(),Dse=Uc(),Ose=Zc(g6),Nse=Wc(),Mse=Uc(),Lse=Zc(l8),sse((ac((Fse=class{get enable(){return this._enable}set enable(e){e===this._enable&&this._trailModel||(e&&!this._enable&&(this._enable=e,this._particleSystem.processor&&this._particleSystem.processor.updateTrailMaterial()),e&&!this._trailModel&&(this._createModel(),this.rebuild()),this._enable=e,this._trailModel&&(this._trailModel.enabled=e),e?this.onEnable():this.onDisable())}get minParticleDistance(){return this._minParticleDistance}set minParticleDistance(e){this._minParticleDistance=e,this._minSquaredDistance=e*e}get space(){return this._space}set space(e){this._space=e;const t=this._particleSystem;t&&t.processor&&t.processor.updateTrailMaterial()}getModel(){return this._trailModel}constructor(){rc(this,"_enable",zse,this),rc(this,"mode",Use,this),rc(this,"lifeTime",Gse,this),rc(this,"_minParticleDistance",Vse,this),rc(this,"existWithParticles",Hse,this),rc(this,"textureMode",kse,this),rc(this,"widthFromParticle",jse,this),rc(this,"widthRatio",Wse,this),rc(this,"colorFromParticle",qse,this),rc(this,"colorOverTrail",Xse,this),rc(this,"colorOvertime",Yse,this),rc(this,"_space",Kse,this),rc(this,"_particleSystem",$se,this),this._minSquaredDistance=0,this._vertSize=void 0,this._trailNum=0,this._trailLifetime=0,this.vbOffset=0,this.ibOffset=0,this._trailSegments=null,this._particleTrail=void 0,this._trailModel=null,this._iaInfo=void 0,this._iaInfoBuffer=null,this._subMeshData=null,this._vertAttrs=void 0,this._vbF32=null,this._vbUint32=null,this._iBuffer=null,this._needTransform=!1,this._material=null,this._iaInfo=new os([new is]),this._vertAttrs=[new vs(zi.ATTR_POSITION,ti.RGB32F),new vs(zi.ATTR_TEX_COORD,ti.RGBA32F),new vs(zi.ATTR_TEX_COORD1,ti.RGB32F),new vs(zi.ATTR_COLOR,ti.RGBA8,!0)],this._vertSize=0;for(const e of this._vertAttrs)this._vertSize+=Hs[e.format].size;this._particleTrail=new Map}onInit(e){this._particleSystem=e,this.minParticleDistance=this._minParticleDistance;let t=0;const n=e.startLifetime.getMax(),i=e.rateOverTime.getMax(),s=e.duration;for(let i=0,o=e.bursts.length;i<o;i++)t+=e.bursts[i].getMaxCount(e)*Math.ceil(n/s);this._trailNum=Math.ceil(n*this.lifeTime.getMax()*60*(i*s+t)),this._trailSegments=new Bl((()=>new soe(10)),Math.ceil(i*s),(e=>e.trailElements.length=0)),this._enable&&(this.enable=this._enable)}onEnable(){this._attachToScene()}onDisable(){this._particleTrail.clear(),this._detachFromScene()}_attachToScene(){this._trailModel&&(this._trailModel.scene&&this._detachFromScene(),this._particleSystem._getRenderScene().addModel(this._trailModel))}_detachFromScene(){this._trailModel&&this._trailModel.scene&&this._trailModel.scene.removeModel(this._trailModel)}destroy(){this.destroySubMeshData(),this._trailModel&&(Sw.root.destroyModel(this._trailModel),this._trailModel=null),this._trailSegments&&(this._trailSegments.destroy(),this._trailSegments=null)}play(){this._trailModel&&this._enable&&(this._trailModel.enabled=!0)}clear(){if(this.enable){const e=this._particleTrail.values();let t=e.next();for(;!t.done;)t.value.clear(),t=e.next();this._particleTrail.clear(),this.updateRenderData(),this._trailModel&&(this._trailModel.enabled=!1)}}updateMaterial(){this._particleSystem&&(this._material=this._particleSystem.getMaterialInstance(1)||this._particleSystem.processor._defaultTrailMat,this._trailModel&&this._trailModel.setSubModelMaterial(0,this._material))}update(){this._trailLifetime=this.lifeTime.evaluate(this._particleSystem._time,1),this.space===l8.World&&this._particleSystem._simulationSpace===l8.Local?(this._needTransform=!0,this._particleSystem.node.getWorldMatrix(eoe),this._particleSystem.node.getWorldRotation(Zse)):this._needTransform=!1}animate(e,t){if(!this._trailSegments)return;if(e.loopCount>e.lastLoop)return void(e.trailDelay>1?(e.lastLoop=e.loopCount,e.trailDelay=0):e.trailDelay++);let n=this._particleTrail.get(e);if(!n)return n=this._trailSegments.alloc(),void this._particleTrail.set(e,n);let i=n.getElement(n.end-1);if(this._needTransform?gn.transformMat4(toe,e.position,eoe):gn.copy(toe,e.position),i&&(n.iterateElement(this,this._updateTrailElement,e,t),gn.squaredDistance(i.position,toe)<this._minSquaredDistance))return;if(i=n.addElement(),!i)return;gn.copy(i.position,toe),i.lifetime=0,this.widthFromParticle?i.width=e.size.x*this.widthRatio.evaluate(0,1):i.width=this.widthRatio.evaluate(0,1);const s=n.count();if(2===s){const e=n.getElement(n.end-2);gn.subtract(e.velocity,i.position,e.position)}else if(s>2){const e=n.getElement(n.end-2),t=n.getElement(n.end-3);gn.subtract(toe,t.position,e.position),gn.subtract(noe,i.position,e.position),gn.subtract(e.velocity,noe,toe),gn.equals(gn.ZERO,e.velocity)&&gn.copy(e.velocity,toe),gn.normalize(e.velocity,e.velocity),this._checkDirectionReverse(e,t)}this.colorFromParticle?i.color.set(e.color):i.color.set(this.colorOvertime.evaluate(0,1))}removeParticle(e){const t=this._particleTrail.get(e);t&&this._trailSegments&&(t.clear(),this._trailSegments.free(t),this._particleTrail.delete(e))}updateRenderData(){this.vbOffset=0,this.ibOffset=0;for(const e of this._particleTrail.keys()){const t=this._particleTrail.get(e);if(-1===t.start)continue;const n=4*this.vbOffset/this._vertSize,i=t.start>=t.end?t.end+t.trailElements.length:t.end,s=i-t.start,o=1/s,r=t.trailElements[t.start];this._fillVertexBuffer(r,this.colorOverTrail.evaluate(1,1),n,1,0,4);for(let e=t.start+1;e<i;e++){const i=t.trailElements[e%t.trailElements.length],r=e-t.start;this._fillVertexBuffer(i,this.colorOverTrail.evaluate(1-r/s,1),n,1-r*o,r,5)}this._needTransform?gn.transformMat4(Jse.position,e.position,eoe):gn.copy(Jse.position,e.position);const a=this._trailModel;if(a&&a.node.invalidateChildren(Iv.POSITION),1===s||2===s){const e=t.getElement(t.end-1);gn.subtract(e.velocity,Jse.position,e.position),this._vbF32[this.vbOffset-this._vertSize/4-4]=e.velocity.x,this._vbF32[this.vbOffset-this._vertSize/4-3]=e.velocity.y,this._vbF32[this.vbOffset-this._vertSize/4-2]=e.velocity.z,this._vbF32[this.vbOffset-4]=e.velocity.x,this._vbF32[this.vbOffset-3]=e.velocity.y,this._vbF32[this.vbOffset-2]=e.velocity.z,gn.subtract(Jse.velocity,Jse.position,e.position),this._checkDirectionReverse(Jse,e)}else if(s>2){const e=t.getElement(t.end-1),i=t.getElement(t.end-2);gn.subtract(toe,i.position,e.position),gn.subtract(noe,Jse.position,e.position),gn.normalize(toe,toe),gn.normalize(noe,noe),gn.subtract(e.velocity,noe,toe),gn.normalize(e.velocity,e.velocity),this._checkDirectionReverse(e,i),this.vbOffset-=this._vertSize/4*2,this.ibOffset-=6,this._fillVertexBuffer(e,this.colorOverTrail.evaluate(o,1),n,o,s-1,5),gn.subtract(Jse.velocity,Jse.position,e.position),gn.normalize(Jse.velocity,Jse.velocity),this._checkDirectionReverse(Jse,e)}this.widthFromParticle?Jse.width=e.size.x*this.widthRatio.evaluate(0,1):Jse.width=this.widthRatio.evaluate(0,1),Jse.color=e.color,gn.equals(Jse.velocity,gn.ZERO)?this.ibOffset-=3:this._fillVertexBuffer(Jse,this.colorOverTrail.evaluate(0,1),n,0,s,1)}this._trailModel.enabled=this.ibOffset>0}updateIA(e){const t=this._trailModel&&this._trailModel.subModels;if(t&&t.length>0){const n=t[0];n.inputAssembler.vertexBuffers[0].update(this._vbF32),n.inputAssembler.indexBuffer.update(this._iBuffer),this._iaInfo.drawInfos[0].firstIndex=0,this._iaInfo.drawInfos[0].indexCount=e,this._iaInfoBuffer.update(this._iaInfo)}}beforeRender(){this.updateIA(this.ibOffset)}_createModel(){this._trailModel||(this._trailModel=u.director.root.createModel(fv))}rebuild(){const e=Sw.root.device,t=e.createBuffer(new es(si.VERTEX|si.TRANSFER_DST,ai.HOST|ai.DEVICE,this._vertSize*(this._trailNum+1)*2,this._vertSize)),n=new ArrayBuffer(this._vertSize*(this._trailNum+1)*2);this._vbF32=new Float32Array(n),this._vbUint32=new Uint32Array(n),t.update(n);const i=e.createBuffer(new es(si.INDEX|si.TRANSFER_DST,ai.HOST|ai.DEVICE,6*Math.max(1,this._trailNum)*Uint16Array.BYTES_PER_ELEMENT,Uint16Array.BYTES_PER_ELEMENT));this._iBuffer=new Uint16Array(6*Math.max(1,this._trailNum)),i.update(this._iBuffer),this._iaInfoBuffer=e.createBuffer(new es(si.INDIRECT,ai.HOST|ai.DEVICE,qs,qs)),this._iaInfo.drawInfos[0].vertexCount=2*(this._trailNum+1),this._iaInfo.drawInfos[0].indexCount=6*this._trailNum,this._iaInfoBuffer.update(this._iaInfo),this._subMeshData=new yE([t],this._vertAttrs,Pi.TRIANGLE_LIST,i,this._iaInfoBuffer);const s=this._trailModel;s&&(s.node=s.transform=this._particleSystem.node,s.visFlags=this._particleSystem.visibility,s.initSubModel(0,this._subMeshData,this._material),s.enabled=!0)}_updateTrailElement(e,t,n,i){return t.lifetime+=i,e.colorFromParticle?(t.color.set(n.color),t.color.multiply(e.colorOvertime.evaluate(1-n.remainingLifetime/n.startLifetime,1))):t.color.set(e.colorOvertime.evaluate(1-n.remainingLifetime/n.startLifetime,1)),e.widthFromParticle?t.width=n.size.x*e.widthRatio.evaluate(t.lifetime/e._trailLifetime,1):t.width=e.widthRatio.evaluate(t.lifetime/e._trailLifetime,1),t.lifetime>e._trailLifetime}_fillVertexBuffer(e,t,n,i,s,o){this._vbF32[this.vbOffset++]=e.position.x,this._vbF32[this.vbOffset++]=e.position.y,this._vbF32[this.vbOffset++]=e.position.z,this._vbF32[this.vbOffset++]=e.direction,this._vbF32[this.vbOffset++]=e.width,this._vbF32[this.vbOffset++]=i,this._vbF32[this.vbOffset++]=0,this._vbF32[this.vbOffset++]=e.velocity.x,this._vbF32[this.vbOffset++]=e.velocity.y,this._vbF32[this.vbOffset++]=e.velocity.z,ioe.set(e.color),ioe.multiply(t),this._vbUint32[this.vbOffset++]=ioe._val,this._vbF32[this.vbOffset++]=e.position.x,this._vbF32[this.vbOffset++]=e.position.y,this._vbF32[this.vbOffset++]=e.position.z,this._vbF32[this.vbOffset++]=1-e.direction,this._vbF32[this.vbOffset++]=e.width,this._vbF32[this.vbOffset++]=i,this._vbF32[this.vbOffset++]=1,this._vbF32[this.vbOffset++]=e.velocity.x,this._vbF32[this.vbOffset++]=e.velocity.y,this._vbF32[this.vbOffset++]=e.velocity.z,this._vbUint32[this.vbOffset++]=ioe._val,1&o&&(this._iBuffer[this.ibOffset++]=n+2*s,this._iBuffer[this.ibOffset++]=n+2*s-1,this._iBuffer[this.ibOffset++]=n+2*s+1),4&o&&(this._iBuffer[this.ibOffset++]=n+2*s,this._iBuffer[this.ibOffset++]=n+2*s+1,this._iBuffer[this.ibOffset++]=n+2*s+2)}_checkDirectionReverse(e,t){gn.dot(e.velocity,t.velocity)<Qse?e.direction=1-t.direction:e.direction=t.direction}destroySubMeshData(){this._subMeshData&&(this._subMeshData.destroy(),this._subMeshData=null)}}).prototype,"enable",[ose],Object.getOwnPropertyDescriptor(Fse.prototype,"enable"),Fse.prototype),zse=ac(Fse.prototype,"_enable",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Use=ac(Fse.prototype,"mode",[rse,Tc,ase,cse],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return m8.Particles}}),Gse=ac(Fse.prototype,"lifeTime",[lse,Tc,hse,use,_se],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),Vse=ac(Fse.prototype,"_minParticleDistance",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),ac(Fse.prototype,"minParticleDistance",[dse,pse],Object.getOwnPropertyDescriptor(Fse.prototype,"minParticleDistance"),Fse.prototype),ac(Fse.prototype,"space",[fse,mse,gse],Object.getOwnPropertyDescriptor(Fse.prototype,"space"),Fse.prototype),Hse=ac(Fse.prototype,"existWithParticles",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),kse=ac(Fse.prototype,"textureMode",[vse,Tc,yse,xse],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return g8.Stretch}}),jse=ac(Fse.prototype,"widthFromParticle",[Tc,Sse,Cse],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Wse=ac(Fse.prototype,"widthRatio",[Ese,Tc,Tse,bse,Ase],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),qse=ac(Fse.prototype,"colorFromParticle",[Tc,Pse,wse],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Xse=ac(Fse.prototype,"colorOverTrail",[Ise,Tc,Rse,Dse],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new g6}}),Yse=ac(Fse.prototype,"colorOvertime",[Ose,Tc,Nse,Mse],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new g6}}),Kse=ac(Fse.prototype,"_space",[Lse],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return l8.World}}),$se=ac(Fse.prototype,"_particleSystem",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Bse=Fse))||Bse);const roe=new On,aoe=new Tn,coe=new gn,loe=["_colorOverLifetimeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule"];class hoe{constructor(e){this._particleSystem=void 0,this._processor=void 0,this._node=void 0,this._particlesAll=void 0,this._updateList=new Map,this._animateList=new Map,this._runAnimateList=new Array,this._localMat=new On,this._gravity=new Gn,this.minPos=new gn,this.maxPos=new gn,this._nodePos=new gn,this._nodeSize=new gn,this._particleSystem=e,this._processor=this._particleSystem.processor,this._node=e.node,this._particlesAll=[],this._initModuleList()}_updateBoundingNode(){this._nodeSize.set(this.maxPos.x-this.minPos.x,this.maxPos.y-this.minPos.y,this.maxPos.z-this.minPos.z),this._nodePos.set(this.minPos.x+.5*this._nodeSize.x,this.minPos.y+.5*this._nodeSize.y,this.minPos.z+.5*this._nodeSize.z)}setBoundingBoxSize(e){this.maxPos.x=this._nodePos.x+e.x,this.maxPos.y=this._nodePos.y+e.y,this.maxPos.z=this._nodePos.z+e.z,this.minPos.x=this._nodePos.x-e.x,this.minPos.y=this._nodePos.y-e.y,this.minPos.z=this._nodePos.z-e.z,this._updateBoundingNode()}setBoundingBoxCenter(e,t,n){this.maxPos.x=e+.5*this._nodeSize.x,this.maxPos.y=t+.5*this._nodeSize.y,this.maxPos.z=n+.5*this._nodeSize.z,this.minPos.x=e-.5*this._nodeSize.x,this.minPos.y=t-.5*this._nodeSize.y,this.minPos.z=n-.5*this._nodeSize.z,this._updateBoundingNode()}_initModuleList(){loe.forEach((e=>{const t=this._particleSystem[e];t&&t.enable&&(t.needUpdate&&(this._updateList[t.name]=t),t.needAnimate&&(this._animateList[t.name]=t))})),this._runAnimateList.length=0;for(let e=0,t=r8.length;e<t;e++){const t=this._animateList[r8[e]];t&&this._runAnimateList.push(t)}}_emit(e,t,i){const s=this._particleSystem,o=this._node,r=s.time%s.duration/s.duration;o.invalidateChildren(Iv.POSITION),s.simulationSpace===l8.World&&(o.getWorldMatrix(roe),o.getWorldRotation(aoe));for(let o=0;o<e;++o){const e=new o8(s);e.particleSystem=s,e.reset();const o=tn(en(0,n));s._shapeModule&&s._shapeModule.enable?s._shapeModule.emit(e):(gn.set(e.position,0,0,0),gn.copy(e.velocity,P8)),s._textureAnimationModule&&s._textureAnimationModule.enable&&s._textureAnimationModule.init(e);const a=s.startSpeed.evaluate(r,o);gn.multiplyScalar(e.velocity,e.velocity,a),s.simulationSpace===l8.World&&(gn.transformMat4(e.position,e.position,roe),gn.transformQuat(e.velocity,e.velocity,aoe)),gn.copy(e.ultimateVelocity,e.velocity),gn.set(e.rotation,0,0,0),s.startSize3D?gn.set(e.startSize,s.startSizeX.evaluate(r,o),s.startSizeY.evaluate(r,o),s.startSizeZ.evaluate(r,o)):(gn.set(e.startSize,s.startSizeX.evaluate(r,o),1,1),e.startSize.y=e.startSize.x),gn.copy(e.size,e.startSize),e.startLifetime=s.startLifetime.evaluate(r,o)+t,e.remainingLifetime=e.startLifetime,i.push(e)}}_updateParticles(e,t){const n=this._particleSystem;switch(n.node.getWorldMatrix(roe),n.scaleSpace){case l8.Local:n.node.getScale(coe);break;case l8.World:n.node.getWorldScale(coe)}if(this._updateList.forEach((e=>{e.update(n.simulationSpace,roe)})),n.simulationSpace===l8.Local){const e=n.node.getRotation();On.fromQuat(this._localMat,e),this._localMat.transpose()}for(let i=0;i<t.length;++i){const s=t[i];if(s.remainingLifetime-=e,gn.set(s.animatedVelocity,0,0,0),n.simulationSpace===l8.Local){const t=9.8*-n.gravityModifier.evaluate(1-s.remainingLifetime/s.startLifetime,tn(s.randomSeed))*e;this._gravity.x=0,this._gravity.y=t,this._gravity.z=0,this._gravity.w=1,this._gravity=this._gravity.transformMat4(this._localMat),s.velocity.x+=this._gravity.x,s.velocity.y+=this._gravity.y,s.velocity.z+=this._gravity.z}else s.velocity.y-=9.8*n.gravityModifier.evaluate(1-s.remainingLifetime/s.startLifetime,tn(s.randomSeed))*e;gn.copy(s.ultimateVelocity,s.velocity),this._runAnimateList.forEach((t=>{t.animate(s,e)})),gn.scaleAndAdd(s.position,s.position,s.ultimateVelocity,e)}}_calculateBounding(e){const t=new gn,n=new gn,i=new gn,s=new gn,o=new gn(1,1,1);if(this._processor.getInfo().renderMode===_8.Mesh){const e=this._processor.getInfo().mesh;if(e&&e.struct.minPosition&&e.struct.maxPosition){const t=new Ua;Ua.fromPoints(t,e.struct.minPosition,e.struct.maxPosition);const n=Math.max(t.halfExtents.x,t.halfExtents.y,t.halfExtents.z);o.set(n,n,n)}}for(let r=0;r<this._particlesAll.length;++r){const a=this._particlesAll[r];gn.multiply(t,coe,a.size),gn.multiply(t,t,o),n.set(a.position),this._particleSystem.simulationSpace!==l8.World&&gn.transformMat4(n,n,this._particleSystem.node._mat),e&&0===r?(gn.subtract(this.minPos,n,t),gn.add(this.maxPos,n,t)):(gn.subtract(i,n,t),gn.add(s,n,t),gn.min(this.minPos,this.minPos,i),gn.max(this.maxPos,this.maxPos,s))}}calculatePositions(){this._emit(this._particleSystem.capacity,0,this._particlesAll);const e=tn(en(0,n));this._updateParticles(0,this._particlesAll),this._calculateBounding(!0),this._updateParticles(this._particleSystem.startLifetime.evaluate(0,e),this._particlesAll),this._calculateBounding(!1),this._updateBoundingNode()}clear(){this._particlesAll.length=0}destroy(){}}var uoe,_oe,doe,poe,foe,moe,goe,voe,yoe,xoe,Soe,Coe,Eoe,Toe,boe,Aoe,Poe,woe,Ioe,Roe,Doe,Ooe,Noe,Moe,Loe,Boe,Foe,zoe,Uoe,Goe,Voe,Hoe,koe,joe,Woe,qoe,Xoe,Yoe,Koe,$oe,Qoe,Joe,Zoe,ere,tre,nre,ire,sre,ore,rre,are,cre,lre,hre,ure,_re,dre,pre,fre,mre,gre,vre,yre,xre,Sre,Cre,Ere,Tre,bre,Are,Pre,wre,Ire,Rre,Dre,Ore,Nre,Mre,Lre,Bre,Fre,zre,Ure,Gre,Vre,Hre,kre,jre,Wre,qre,Xre,Yre,Kre,$re,Qre,Jre,Zre,eae,tae,nae,iae,sae,oae,rae,aae,cae,lae,hae,uae,_ae,dae,pae,fae,mae,gae,vae,yae,xae,Sae,Cae,Eae,Tae,bae,Aae,Pae,wae,Iae,Rae,Dae,Oae,Nae,Mae,Lae,Bae,Fae,zae,Uae,Gae,Vae,Hae,kae,jae,Wae,qae,Xae,Yae,Kae,$ae,Qae,Jae,Zae,ece,tce,nce,ice,sce,oce,rce,ace,cce,lce,hce,uce,_ce,dce,pce,fce,mce,gce,vce,yce,xce,Sce,Cce,Ece,Tce,bce,Ace,Pce,wce,Ice,Rce,Dce,Oce,Nce,Mce,Lce;const Bce=new On,Fce=new Tn,zce=Object.getOwnPropertyDescriptor(FD.prototype,"sharedMaterials");let Uce=function(t){return e({ParticleSystem:t,ParticleSystemComponent:t}),t}((uoe=mc("cc.ParticleSystem"),_oe=Mc(),doe=Rc(),poe=vc(99),foe=Gc(),moe=Wc(),goe=Uc(),voe=Zc(g6),yoe=Wc(),xoe=Uc(),Soe=Zc(l8),Coe=Wc(),Eoe=Uc(),Toe=Wc(),boe=Uc(),Aoe=bc("startSize"),Poe=Gc(),woe=Zc(j5),Ioe=Wc(),Roe=Uc(),Doe=Zc(j5),Ooe=Gc(),Noe=Wc(),Moe=Uc(),Loe=Zc(j5),Boe=Gc(),Foe=Wc(),zoe=Uc(),Uoe=Zc(j5),Goe=Gc(),Voe=Wc(),Hoe=Uc(),koe=Wc(),joe=Uc(),Woe=Zc(j5),qoe=Gc(),Xoe=Wc(),Yoe=Uc(),Koe=Zc(j5),$oe=Gc(),Qoe=Wc(),Joe=Uc(),Zoe=Zc(j5),ere=bc("startRotation"),tre=Gc(),nre=Wc(),ire=Uc(),sre=Zc(j5),ore=Gc(),rre=Wc(),are=Uc(),cre=Zc(j5),lre=Gc(),hre=Wc(),ure=Uc(),_re=Wc(),dre=Uc(),pre=Wc(),fre=Uc(),mre=Wc(),gre=Uc(),vre=Zc(l8),yre=Wc(),xre=Uc(),Sre=Wc(),Cre=Uc(),Ere=Wc(),Tre=Uc(),bre=Zc(j5),Are=Gc(),Pre=Wc(),wre=Uc(),Ire=Zc(j5),Rre=Gc(),Dre=Wc(),Ore=Uc(),Nre=Zc(j5),Mre=Gc(),Lre=Wc(),Bre=Uc(),Fre=Zc([wte]),zre=Wc(),Ure=Uc(),Gre=Zc(Boolean),Vre=Wc(),Hre=Uc(),kre=Zc(h8),jre=Wc(),Wre=Uc(),qre=Zc(Number),Xre=Wc(),Yre=Uc(),Kre=Zc(Number),$re=Wc(),Qre=Uc(),Jre=Zc(Number),Zre=Wc(),eae=Uc(),tae=Wc(),nae=Uc(),iae=bc("enableCulling"),sae=Bc(),oae=Zc(lg),rae=zc(),aae=Zc(A8),cae=Zc(A8),lae=Wc(),hae=Uc(),uae=Zc(qne),_ae=Zc(qne),dae=Wc(),pae=Uc(),fae=Zc(q9),mae=Zc(q9),gae=Wc(),vae=Uc(),yae=Zc(vte),xae=Zc(vte),Sae=Wc(),Cae=Uc(),Eae=Zc(a7),Tae=Zc(a7),bae=Wc(),Aae=Uc(),Pae=Zc(q7),wae=Zc(q7),Iae=Wc(),Rae=Uc(),Dae=Zc(g9),Oae=Zc(g9),Nae=Wc(),Mae=Uc(),Lae=Zc(Gee),Bae=Zc(Gee),Fae=Wc(),zae=Uc(),Uae=Zc(ooe),Gae=Zc(ooe),Vae=Wc(),Hae=Uc(),kae=Zc(ise),jae=Wc(),Wae=Uc(),uoe(qae=_oe(qae=doe(qae=poe(qae=Ic((Lce=Mce=class extends FD{get capacity(){return this._capacity}set capacity(e){this._capacity=Math.floor(e>0?e:0),this.processor&&this.processor._model&&this.processor._model.setCapacity(this._capacity)}get prewarm(){return this._prewarm}set prewarm(e){!0===e&&this.loop,this._prewarm=e}get simulationSpace(){return this._simulationSpace}set simulationSpace(e){e!==this._simulationSpace&&(this._simulationSpace=e,this.processor&&(this.processor.updateMaterialParams(),this.processor.updateTrailMaterial()))}set renderCulling(e){this._renderCulling=e,e&&(this._boundingBox||(this._boundingBox=new Ua,this._calculateBounding(!1)))}get renderCulling(){return this._renderCulling}get cullingMode(){return this._cullingMode}set cullingMode(e){this._cullingMode=e}get aabbHalfX(){return this.getBoundingX()||0}set aabbHalfX(e){this.setBoundingX(e)}get aabbHalfY(){return this.getBoundingY()||0}set aabbHalfY(e){this.setBoundingY(e)}get aabbHalfZ(){return this.getBoundingZ()||0}set aabbHalfZ(e){this.setBoundingZ(e)}get dataCulling(){return this._dataCulling}set dataCulling(e){this._dataCulling=e}get sharedMaterials(){return zce.get.call(this)}set sharedMaterials(e){zce.set.call(this,e)}get colorOverLifetimeModule(){return this._colorOverLifetimeModule}set colorOverLifetimeModule(e){e&&(this._colorOverLifetimeModule=e)}get shapeModule(){return this._shapeModule}set shapeModule(e){e&&(this._shapeModule=e)}get sizeOvertimeModule(){return this._sizeOvertimeModule}set sizeOvertimeModule(e){e&&(this._sizeOvertimeModule=e)}get velocityOvertimeModule(){return this._velocityOvertimeModule}set velocityOvertimeModule(e){e&&(this._velocityOvertimeModule=e)}get forceOvertimeModule(){return this._forceOvertimeModule}set forceOvertimeModule(e){e&&(this._forceOvertimeModule=e)}get limitVelocityOvertimeModule(){return this._limitVelocityOvertimeModule}set limitVelocityOvertimeModule(e){e&&(this._limitVelocityOvertimeModule=e)}get rotationOvertimeModule(){return this._rotationOvertimeModule}set rotationOvertimeModule(e){e&&(this._rotationOvertimeModule=e)}get textureAnimationModule(){return this._textureAnimationModule}set textureAnimationModule(e){e&&(this._textureAnimationModule=e)}get trailModule(){return this._trailModule}set trailModule(e){e&&(this._trailModule=e)}constructor(){super(),rc(this,"startColor",Yae,this),rc(this,"scaleSpace",Kae,this),rc(this,"startSize3D",$ae,this),rc(this,"startSizeX",Qae,this),rc(this,"startSizeY",Jae,this),rc(this,"startSizeZ",Zae,this),rc(this,"startSpeed",ece,this),rc(this,"startRotation3D",tce,this),rc(this,"startRotationX",nce,this),rc(this,"startRotationY",ice,this),rc(this,"startRotationZ",sce,this),rc(this,"startDelay",oce,this),rc(this,"startLifetime",rce,this),rc(this,"duration",ace,this),rc(this,"loop",cce,this),rc(this,"simulationSpeed",lce,this),rc(this,"playOnAwake",hce,this),rc(this,"gravityModifier",uce,this),rc(this,"rateOverTime",_ce,this),rc(this,"rateOverDistance",dce,this),rc(this,"bursts",pce,this),rc(this,"_renderCulling",fce,this),rc(this,"_cullingMode",mce,this),rc(this,"_aabbHalfX",gce,this),rc(this,"_aabbHalfY",vce,this),rc(this,"_aabbHalfZ",yce,this),rc(this,"_dataCulling",xce,this),rc(this,"_colorOverLifetimeModule",Sce,this),rc(this,"_shapeModule",Cce,this),rc(this,"_sizeOvertimeModule",Ece,this),rc(this,"_velocityOvertimeModule",Tce,this),rc(this,"_forceOvertimeModule",bce,this),rc(this,"_limitVelocityOvertimeModule",Ace,this),rc(this,"_rotationOvertimeModule",Pce,this),rc(this,"_textureAnimationModule",wce,this),rc(this,"_trailModule",Ice,this),rc(this,"renderer",Rce,this),this._isPlaying=void 0,this._isPaused=void 0,this._isStopped=void 0,this._isEmitting=void 0,this._needRefresh=void 0,this._time=void 0,this._emitRateTimeCounter=void 0,this._emitRateDistanceCounter=void 0,this._oldWPos=void 0,this._curWPos=void 0,this._boundingBox=void 0,this._culler=void 0,this._oldPos=void 0,this._curPos=void 0,this._isCulled=void 0,this._isSimulating=void 0,this._customData1=void 0,this._customData2=void 0,this._subEmitters=void 0,this._needAttach=void 0,rc(this,"_prewarm",Dce,this),rc(this,"_capacity",Oce,this),rc(this,"_simulationSpace",Nce,this),this.processor=null,this.rateOverTime.constant=10,this.startLifetime.constant=5,this.startSizeX.constant=1,this.startSpeed.constant=5,this._isPlaying=!1,this._isPaused=!1,this._isStopped=!0,this._isEmitting=!1,this._needRefresh=!0,this._needAttach=!1,this._time=0,this._emitRateTimeCounter=0,this._emitRateDistanceCounter=0,this._oldWPos=new gn,this._curWPos=new gn,this._boundingBox=null,this._culler=null,this._oldPos=null,this._curPos=null,this._isCulled=!1,this._isSimulating=!0,this._customData1=new Bn,this._customData2=new Bn,this._subEmitters=[]}onFocusInEditor(){this.renderer.create(this)}onLoad(){this.renderer.onInit(this),this._shapeModule&&this._shapeModule.onInit(this),this._trailModule&&this._trailModule.onInit(this),this.bindModule(),this._resetPosition()}_onMaterialModified(e,t){null!==this.processor&&this.processor.onMaterialModified(e,t)}_onRebuildPSO(e,t){this.processor.onRebuildPSO(e,t)}_collectModels(){return this._models.length=0,this._models.push(this.processor._model),this._trailModule&&this._trailModule.enable&&this._trailModule._trailModel&&this._models.push(this._trailModule._trailModel),this._models}_attachToScene(){this.processor.attachToScene(),this._trailModule&&this._trailModule.enable&&this._trailModule._attachToScene()}_detachFromScene(){this.processor.detachFromScene(),this._trailModule&&this._trailModule.enable&&this._trailModule._detachFromScene(),this._boundingBox&&(this._boundingBox=null),this._culler&&(this._culler.clear(),this._culler.destroy(),this._culler=null)}bindModule(){this._colorOverLifetimeModule&&this._colorOverLifetimeModule.bindTarget(this.processor),this._sizeOvertimeModule&&this._sizeOvertimeModule.bindTarget(this.processor),this._rotationOvertimeModule&&this._rotationOvertimeModule.bindTarget(this.processor),this._forceOvertimeModule&&this._forceOvertimeModule.bindTarget(this.processor),this._limitVelocityOvertimeModule&&this._limitVelocityOvertimeModule.bindTarget(this.processor),this._velocityOvertimeModule&&this._velocityOvertimeModule.bindTarget(this.processor),this._textureAnimationModule&&this._textureAnimationModule.bindTarget(this.processor)}play(){if(this._isPaused&&(this._isPaused=!1),this._isStopped&&(this._isStopped=!1),this._isPlaying=!0,this._isEmitting=!0,this._resetPosition(),this._prewarm&&this._prewarmSystem(),this._trailModule&&this._trailModule.play(),this.processor){const e=this.processor.getModel();e&&(e.enabled=this.enabledInHierarchy)}}pause(){this._isStopped?console.warn("pause(): particle system is already stopped."):(this._isPlaying&&(this._isPlaying=!1),this._isPaused=!0)}stop(){(this._isPlaying||this._isPaused)&&this.clear(),this._isPlaying&&(this._isPlaying=!1),this._isPaused&&(this._isPaused=!1),this._time=0,this._emitRateTimeCounter=0,this._emitRateDistanceCounter=0,this._isStopped=!0,this._needRefresh=!0;for(const e of this.bursts)e.reset()}clear(){this.enabledInHierarchy&&(this.processor.clear(),this._trailModule&&this._trailModule.clear()),this._calculateBounding(!1)}getParticleCount(){return this.processor.getParticleCount()}setCustomData1(e,t){Bn.set(this._customData1,e,t)}setCustomData2(e,t){Bn.set(this._customData2,e,t)}onDestroy(){u.director.off(u.Director.EVENT_BEFORE_COMMIT,this.beforeRender,this),this.processor.onDestroy(),this._trailModule&&this._trailModule.destroy(),this._culler&&(this._culler.clear(),this._culler.destroy(),this._culler=null)}onEnable(){u.director.on(u.Director.EVENT_BEFORE_COMMIT,this.beforeRender,this),this.playOnAwake&&this.play(),this.processor.onEnable(),this._trailModule&&this._trailModule.onEnable()}onDisable(){u.director.off(u.Director.EVENT_BEFORE_COMMIT,this.beforeRender,this),this.processor.onDisable(),this._trailModule&&this._trailModule.onDisable(),this._boundingBox&&(this._boundingBox=null),this._culler&&(this._culler.clear(),this._culler.destroy(),this._culler=null)}_calculateBounding(e){this._boundingBox&&(this._culler||(this._culler=new hoe(this)),this._culler.calculatePositions(),Ua.fromPoints(this._boundingBox,this._culler.minPos,this._culler.maxPos),e?(this.aabbHalfX=this._boundingBox.halfExtents.x,this.aabbHalfY=this._boundingBox.halfExtents.y,this.aabbHalfZ=this._boundingBox.halfExtents.z):(this.aabbHalfX?this.setBoundingX(this.aabbHalfX):this.aabbHalfX=this._boundingBox.halfExtents.x,this.aabbHalfY?this.setBoundingY(this.aabbHalfY):this.aabbHalfY=this._boundingBox.halfExtents.y,this.aabbHalfZ?this.setBoundingZ(this.aabbHalfZ):this.aabbHalfZ=this._boundingBox.halfExtents.z),this._culler.clear())}update(e){const t=e*this.simulationSpeed;if(this.renderCulling){var n;if(this._boundingBox||(this._boundingBox=new Ua,this._calculateBounding(!1)),this._curPos||(this._curPos=new gn),this.node.getWorldPosition(this._curPos),this._oldPos||(this._oldPos=new gn,this._oldPos.set(this._curPos)),!this._curPos.equals(this._oldPos)&&this._boundingBox&&this._culler){const e=this._curPos.x-this._oldPos.x,t=this._curPos.y-this._oldPos.y,n=this._curPos.z-this._oldPos.z,i=this._boundingBox.center;i.x+=e,i.y+=t,i.z+=n,this._culler.setBoundingBoxCenter(i.x,i.y,i.z),this._oldPos.set(this._curPos)}const e=null===(n=this.node.scene.renderScene)||void 0===n?void 0:n.cameras;let i=!0;if(void 0!==e&&this._boundingBox)for(let t=0;t<e.length;++t){const n=e[t];if((n.visibility&this.node.layer)===this.node.layer&&Vr.aabbFrustum(this._boundingBox,n.frustum)){i=!1;break}}if(i){if(this._cullingMode!==h8.AlwaysSimulate&&(this._isSimulating=!1),this._isCulled||(this.processor.detachFromScene(),this._isCulled=!0),this._trailModule&&this._trailModule.enable&&this._trailModule._detachFromScene(),this._cullingMode===h8.PauseAndCatchup&&(this._time+=t),this._cullingMode!==h8.AlwaysSimulate)return}else this._isCulled&&(this._attachToScene(),this._isCulled=!1),this._isSimulating||(this._isSimulating=!0);if(!this._isSimulating)return}else this._boundingBox&&(this._boundingBox=null),this._culler&&(this._culler.clear(),this._culler.destroy(),this._culler=null),this._isSimulating=!0;if(this._isPlaying)this._time+=t,this._emit(t),0!==this.processor.updateParticles(t)||this._isEmitting||this.stop();else{const e=(this.getMaterialInstance(0)||this.processor.getDefaultMaterial()).passes[0];this.processor.updateRotation(e),this.processor.updateScale(e)}var i,s;(this.processor.updateRenderData(),this._trailModule&&this._trailModule.enable&&this._trailModule.updateRenderData(),this._needAttach&&this.getParticleCount()>0&&!this._isCulled)&&((null===(i=this.processor.getModel())||void 0===i?void 0:i.scene)||this.processor.attachToScene(),this._trailModule&&this._trailModule.enable&&((null===(s=this._trailModule.getModel())||void 0===s?void 0:s.scene)||this._trailModule._attachToScene()),this._needAttach=!1)}beforeRender(){var e,t;this._isPlaying&&(this.processor.beforeRender(),this._trailModule&&this._trailModule.enable&&this._trailModule.beforeRender(),this.getParticleCount()<=0?(null===(t=this.processor.getModel())||void 0===t?void 0:t.scene)&&(this.processor.detachFromScene(),this._trailModule&&this._trailModule.enable&&this._trailModule._detachFromScene(),this._needAttach=!1):(null===(e=this.processor.getModel())||void 0===e?void 0:e.scene)||(this._needAttach=!0))}_onVisibilityChange(e){this.processor._model&&(this.processor._model.visFlags=e)}emit(e,t){const i=this._time%this.duration/this.duration;this._needRefresh&&(this.node.invalidateChildren(Iv.POSITION),this._needRefresh=!1),this._simulationSpace===l8.World&&(this.node.getWorldMatrix(Bce),this.node.getWorldRotation(Fce));for(let s=0;s<e;++s){const e=this.processor.getFreeParticle();if(null===e)return;e.particleSystem=this,e.reset();const s=tn(en(0,n));this._shapeModule&&this._shapeModule.enable?this._shapeModule.emit(e):(gn.set(e.position,0,0,0),gn.copy(e.velocity,P8)),this._textureAnimationModule&&this._textureAnimationModule.enable&&this._textureAnimationModule.init(e);const o=this.startSpeed.evaluate(i,s);gn.multiplyScalar(e.velocity,e.velocity,o),this._simulationSpace===l8.World&&(gn.transformMat4(e.position,e.position,Bce),gn.transformQuat(e.velocity,e.velocity,Fce)),gn.copy(e.ultimateVelocity,e.velocity),this.startRotation3D?e.startEuler.set(this.startRotationX.evaluate(i,s),this.startRotationY.evaluate(i,s),this.startRotationZ.evaluate(i,s)):e.startEuler.set(0,0,this.startRotationZ.evaluate(i,s)),e.rotation.set(e.startEuler),this.startSize3D?gn.set(e.startSize,this.startSizeX.evaluate(i,s),this.startSizeY.evaluate(i,s),this.startSizeZ.evaluate(i,s)):(gn.set(e.startSize,this.startSizeX.evaluate(i,s),1,1),e.startSize.y=e.startSize.x),gn.copy(e.size,e.startSize),e.startColor.set(this.startColor.evaluate(i,s)),e.color.set(e.startColor),e.startLifetime=this.startLifetime.evaluate(i,s)+t,e.remainingLifetime=e.startLifetime,e.randomSeed=en(0,233280),e.loopCount++,this.processor.setNewParticle(e)}}_prewarmSystem(){this.startDelay.mode=k5.Constant,this.startDelay.constant=0;const e=this.duration/1;for(let t=0;t<e;++t)this._time+=1,this._emit(1),this.processor.updateParticles(1)}_emit(e){const t=this.startDelay.evaluate(0,1);if(this._time>t){if(this._time>this.duration+t&&!this.loop)return void(this._isEmitting=!1);if(this._emitRateTimeCounter+=this.rateOverTime.evaluate(this._time/this.duration,1)*e,this._emitRateTimeCounter>1&&this._isEmitting){const t=Math.floor(this._emitRateTimeCounter);this._emitRateTimeCounter-=t,this.emit(t,e)}this.node.getWorldPosition(this._curWPos);const n=gn.distance(this._curWPos,this._oldWPos);if(gn.copy(this._oldWPos,this._curWPos),this._emitRateDistanceCounter+=n*this.rateOverDistance.evaluate(this._time/this.duration,1),this._emitRateDistanceCounter>1&&this._isEmitting){const t=Math.floor(this._emitRateDistanceCounter);this._emitRateDistanceCounter-=t,this.emit(t,e)}for(const t of this.bursts)t.update(this,e)}}_resetPosition(){this.node.getWorldPosition(this._oldWPos),gn.copy(this._curWPos,this._oldWPos)}addSubEmitter(e){this._subEmitters.push(e)}removeSubEmitter(e){this._subEmitters.splice(this._subEmitters.indexOf(e),1)}addBurst(e){this.bursts.push(e)}removeBurst(e){this.bursts.splice(this.bursts.indexOf(e),1)}getBoundingX(){return this._aabbHalfX}getBoundingY(){return this._aabbHalfY}getBoundingZ(){return this._aabbHalfZ}setBoundingX(e){this._boundingBox&&this._culler&&(this._boundingBox.halfExtents.x=e,this._culler.setBoundingBoxSize(this._boundingBox.halfExtents),this._aabbHalfX=e)}setBoundingY(e){this._boundingBox&&this._culler&&(this._boundingBox.halfExtents.y=e,this._culler.setBoundingBoxSize(this._boundingBox.halfExtents),this._aabbHalfY=e)}setBoundingZ(e){this._boundingBox&&this._culler&&(this._boundingBox.halfExtents.z=e,this._culler.setBoundingBoxSize(this._boundingBox.halfExtents),this._aabbHalfZ=e)}get isPlaying(){return this._isPlaying}get isPaused(){return this._isPaused}get isStopped(){return this._isStopped}get isEmitting(){return this._isEmitting}get time(){return this._time}_onBeforeSerialize(e){return this.dataCulling?e.filter((e=>!a8.includes(e)||this[e]&&this[e].enable)):e}},Mce.CullingMode=h8,ac((Xae=Lce).prototype,"capacity",[foe,moe,goe],Object.getOwnPropertyDescriptor(Xae.prototype,"capacity"),Xae.prototype),Yae=ac(Xae.prototype,"startColor",[voe,Tc,yoe,xoe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new g6}}),Kae=ac(Xae.prototype,"scaleSpace",[Soe,Tc,Coe,Eoe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return l8.Local}}),$ae=ac(Xae.prototype,"startSize3D",[Tc,Toe,boe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Qae=ac(Xae.prototype,"startSizeX",[Aoe,Poe,woe,Ioe,Roe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),Jae=ac(Xae.prototype,"startSizeY",[Doe,Tc,Ooe,Noe,Moe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),Zae=ac(Xae.prototype,"startSizeZ",[Loe,Tc,Boe,Foe,zoe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),ece=ac(Xae.prototype,"startSpeed",[Uoe,Tc,Goe,Voe,Hoe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),tce=ac(Xae.prototype,"startRotation3D",[Tc,koe,joe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),nce=ac(Xae.prototype,"startRotationX",[Woe,Tc,qoe,qc,Xoe,Yoe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),ice=ac(Xae.prototype,"startRotationY",[Koe,Tc,$oe,qc,Qoe,Joe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),sce=ac(Xae.prototype,"startRotationZ",[Zoe,ere,tre,qc,nre,ire],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),oce=ac(Xae.prototype,"startDelay",[sre,Tc,ore,rre,are],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),rce=ac(Xae.prototype,"startLifetime",[cre,Tc,lre,hre,ure],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),ace=ac(Xae.prototype,"duration",[Tc,_re,dre],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 5}}),cce=ac(Xae.prototype,"loop",[Tc,pre,fre],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),ac(Xae.prototype,"prewarm",[mre,gre],Object.getOwnPropertyDescriptor(Xae.prototype,"prewarm"),Xae.prototype),ac(Xae.prototype,"simulationSpace",[vre,Tc,yre,xre],Object.getOwnPropertyDescriptor(Xae.prototype,"simulationSpace"),Xae.prototype),lce=ac(Xae.prototype,"simulationSpeed",[Tc,Sre,Cre],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),hce=ac(Xae.prototype,"playOnAwake",[Tc,Ere,Tre],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),uce=ac(Xae.prototype,"gravityModifier",[bre,Tc,Are,Pre,wre],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),_ce=ac(Xae.prototype,"rateOverTime",[Ire,Tc,Rre,Dre,Ore],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),dce=ac(Xae.prototype,"rateOverDistance",[Nre,Tc,Mre,Lre,Bre],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new j5}}),pce=ac(Xae.prototype,"bursts",[Fre,Tc,zre,Ure],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),ac(Xae.prototype,"renderCulling",[Gre,Vre,Hre],Object.getOwnPropertyDescriptor(Xae.prototype,"renderCulling"),Xae.prototype),fce=ac(Xae.prototype,"_renderCulling",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ac(Xae.prototype,"cullingMode",[kre,jre,Wre],Object.getOwnPropertyDescriptor(Xae.prototype,"cullingMode"),Xae.prototype),mce=ac(Xae.prototype,"_cullingMode",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return h8.Pause}}),ac(Xae.prototype,"aabbHalfX",[qre,Xre,Yre],Object.getOwnPropertyDescriptor(Xae.prototype,"aabbHalfX"),Xae.prototype),gce=ac(Xae.prototype,"_aabbHalfX",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ac(Xae.prototype,"aabbHalfY",[Kre,$re,Qre],Object.getOwnPropertyDescriptor(Xae.prototype,"aabbHalfY"),Xae.prototype),vce=ac(Xae.prototype,"_aabbHalfY",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ac(Xae.prototype,"aabbHalfZ",[Jre,Zre,eae],Object.getOwnPropertyDescriptor(Xae.prototype,"aabbHalfZ"),Xae.prototype),yce=ac(Xae.prototype,"_aabbHalfZ",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ac(Xae.prototype,"dataCulling",[tae,nae],Object.getOwnPropertyDescriptor(Xae.prototype,"dataCulling"),Xae.prototype),xce=ac(Xae.prototype,"_dataCulling",[Tc,iae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ac(Xae.prototype,"sharedMaterials",[el,sae,oae,Tc,rae],Object.getOwnPropertyDescriptor(Xae.prototype,"sharedMaterials"),Xae.prototype),Sce=ac(Xae.prototype,"_colorOverLifetimeModule",[aae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(Xae.prototype,"colorOverLifetimeModule",[cae,lae,hae],Object.getOwnPropertyDescriptor(Xae.prototype,"colorOverLifetimeModule"),Xae.prototype),Cce=ac(Xae.prototype,"_shapeModule",[uae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(Xae.prototype,"shapeModule",[_ae,dae,pae],Object.getOwnPropertyDescriptor(Xae.prototype,"shapeModule"),Xae.prototype),Ece=ac(Xae.prototype,"_sizeOvertimeModule",[fae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(Xae.prototype,"sizeOvertimeModule",[mae,gae,vae],Object.getOwnPropertyDescriptor(Xae.prototype,"sizeOvertimeModule"),Xae.prototype),Tce=ac(Xae.prototype,"_velocityOvertimeModule",[yae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(Xae.prototype,"velocityOvertimeModule",[xae,Sae,Cae],Object.getOwnPropertyDescriptor(Xae.prototype,"velocityOvertimeModule"),Xae.prototype),bce=ac(Xae.prototype,"_forceOvertimeModule",[Eae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(Xae.prototype,"forceOvertimeModule",[Tae,bae,Aae],Object.getOwnPropertyDescriptor(Xae.prototype,"forceOvertimeModule"),Xae.prototype),Ace=ac(Xae.prototype,"_limitVelocityOvertimeModule",[Pae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(Xae.prototype,"limitVelocityOvertimeModule",[wae,Iae,Rae],Object.getOwnPropertyDescriptor(Xae.prototype,"limitVelocityOvertimeModule"),Xae.prototype),Pce=ac(Xae.prototype,"_rotationOvertimeModule",[Dae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(Xae.prototype,"rotationOvertimeModule",[Oae,Nae,Mae],Object.getOwnPropertyDescriptor(Xae.prototype,"rotationOvertimeModule"),Xae.prototype),wce=ac(Xae.prototype,"_textureAnimationModule",[Lae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(Xae.prototype,"textureAnimationModule",[Bae,Fae,zae],Object.getOwnPropertyDescriptor(Xae.prototype,"textureAnimationModule"),Xae.prototype),Ice=ac(Xae.prototype,"_trailModule",[Uae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ac(Xae.prototype,"trailModule",[Gae,Vae,Hae],Object.getOwnPropertyDescriptor(Xae.prototype,"trailModule"),Xae.prototype),Rce=ac(Xae.prototype,"renderer",[kae,Tc,jae,Wae],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new ise}}),Dce=ac(Xae.prototype,"_prewarm",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Oce=ac(Xae.prototype,"_capacity",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 100}}),Nce=ac(Xae.prototype,"_simulationSpace",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return l8.Local}}),qae=Xae))||qae)||qae)||qae)||qae)||qae));class Gce{static instantiate(e){return this.registeredSceneEvent||(Sw.on(xw.EVENT_BEFORE_SCENE_LAUNCH,this.onSceneUnload,this),this.registeredSceneEvent=!0),this.particleSystemPool.has(e._uuid)||this.particleSystemPool.set(e._uuid,new Bl((()=>Iu(e)||new lS),1,(e=>e.destroy()))),this.particleSystemPool.get(e._uuid).alloc()}static destroy(e){this.particleSystemPool.has(e._prefab.asset._uuid)&&(this.stop(e),this.particleSystemPool.get(e._prefab.asset._uuid).free(e))}static play(e){for(const t of e.getComponentsInChildren(Uce))t.play()}static stop(e){for(const t of e.getComponentsInChildren(Uce))t.stop()}static onSceneUnload(){this.particleSystemPool.forEach((e=>e.destroy())),this.particleSystemPool.clear()}}function Vce(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}e("ParticleUtils",Gce),Gce.particleSystemPool=new Map,Gce.registeredSceneEvent=!1,H(wte.prototype,"Burst.prototype",[{name:"minCount"},{name:"maxCount"}]),V(Uce.prototype,"ParticleSystem.prototype",[{name:"enableCulling",newName:"dataCulling"}]),u.ParticleSystemComponent=Uce,ke.setClassAlias(Uce,"cc.ParticleSystemComponent"),u.BillboardComponent=N5,ke.setClassAlias(N5,"cc.BillboardComponent"),u.LineComponent=s8,ke.setClassAlias(s8,"cc.LineComponent"),u.ParticleUtils=Gce;var Hce=function(e,t){return function(e){e.exports=function e(t,n,i){function s(r,a){if(!n[r]){if(!t[r]){if(!a&&Vce)return Vce();if(o)return o(r,!0);throw new Error("Cannot find module '"+r+"'")}var c=n[r]={exports:{}};t[r][0].call(c.exports,(function(e){return s(t[r][1][e]||e)}),c,c.exports,e,t,n,i)}return n[r].exports}for(var o=Vce,r=0;r<i.length;r++)s(i[r]);return s}({1:[function(e,t){t.exports={name:"@cocos/cannon",version:"1.2.8",description:"A lightweight 3D physics engine written in JavaScript.",homepage:"https://github.com/cocos-creator/cannon.js",author:"Stefan Hedman <schteppe@gmail.com> (http://steffe.se), JayceLai",keywords:["cannon.js","cocos","creator","physics","engine","3d"],scripts:{build:"grunt && npm run preprocess && grunt addLicense && grunt addDate",preprocess:"node node_modules/uglify-js/bin/uglifyjs build/cannon.js -o build/cannon.min.js -c -m",postpublish:"cnpm sync @cocos/cannon"},main:"./build/cannon.js",engines:{node:"*"},repository:{type:"git",url:"https://github.com/cocos-creator/cannon.js.git"},bugs:{url:"https://github.com/cocos-creator/cannon.js/issues"},licenses:[{type:"MIT"}],devDependencies:{jshint:"latest","uglify-js":"latest",nodeunit:"^0.9.0",grunt:"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"^0.4.1","grunt-contrib-concat":"~0.1.3","grunt-contrib-uglify":"^0.5.1","grunt-browserify":"^2.1.4","grunt-contrib-yuidoc":"^0.5.2",browserify:"*"},dependencies:{}}},{}],2:[function(e,t){t.exports={version:e("../package.json").version,AABB:e("./collision/AABB"),ArrayCollisionMatrix:e("./collision/ArrayCollisionMatrix"),Body:e("./objects/Body"),Box:e("./shapes/Box"),Broadphase:e("./collision/Broadphase"),Constraint:e("./constraints/Constraint"),ContactEquation:e("./equations/ContactEquation"),Narrowphase:e("./world/Narrowphase"),ConeTwistConstraint:e("./constraints/ConeTwistConstraint"),ContactMaterial:e("./material/ContactMaterial"),ConvexPolyhedron:e("./shapes/ConvexPolyhedron"),Cylinder:e("./shapes/Cylinder"),DistanceConstraint:e("./constraints/DistanceConstraint"),Equation:e("./equations/Equation"),EventTarget:e("./utils/EventTarget"),FrictionEquation:e("./equations/FrictionEquation"),GSSolver:e("./solver/GSSolver"),GridBroadphase:e("./collision/GridBroadphase"),Heightfield:e("./shapes/Heightfield"),HingeConstraint:e("./constraints/HingeConstraint"),LockConstraint:e("./constraints/LockConstraint"),Mat3:e("./math/Mat3"),Material:e("./material/Material"),NaiveBroadphase:e("./collision/NaiveBroadphase"),ObjectCollisionMatrix:e("./collision/ObjectCollisionMatrix"),Pool:e("./utils/Pool"),Particle:e("./shapes/Particle"),Plane:e("./shapes/Plane"),PointToPointConstraint:e("./constraints/PointToPointConstraint"),Quaternion:e("./math/Quaternion"),Ray:e("./collision/Ray"),RaycastVehicle:e("./objects/RaycastVehicle"),RaycastResult:e("./collision/RaycastResult"),RigidVehicle:e("./objects/RigidVehicle"),RotationalEquation:e("./equations/RotationalEquation"),RotationalMotorEquation:e("./equations/RotationalMotorEquation"),SAPBroadphase:e("./collision/SAPBroadphase"),SPHSystem:e("./objects/SPHSystem"),Shape:e("./shapes/Shape"),Solver:e("./solver/Solver"),Sphere:e("./shapes/Sphere"),SplitSolver:e("./solver/SplitSolver"),Spring:e("./objects/Spring"),Transform:e("./math/Transform"),Trimesh:e("./shapes/Trimesh"),Vec3:e("./math/Vec3"),Vec3Pool:e("./utils/Vec3Pool"),World:e("./world/World"),Octree:e("./utils/Octree")}},{"../package.json":1,"./collision/AABB":3,"./collision/ArrayCollisionMatrix":4,"./collision/Broadphase":5,"./collision/GridBroadphase":6,"./collision/NaiveBroadphase":7,"./collision/ObjectCollisionMatrix":8,"./collision/Ray":10,"./collision/RaycastResult":11,"./collision/SAPBroadphase":12,"./constraints/ConeTwistConstraint":13,"./constraints/Constraint":14,"./constraints/DistanceConstraint":15,"./constraints/HingeConstraint":16,"./constraints/LockConstraint":17,"./constraints/PointToPointConstraint":18,"./equations/ContactEquation":20,"./equations/Equation":21,"./equations/FrictionEquation":22,"./equations/RotationalEquation":23,"./equations/RotationalMotorEquation":24,"./material/ContactMaterial":25,"./material/Material":26,"./math/Mat3":28,"./math/Quaternion":29,"./math/Transform":30,"./math/Vec3":31,"./objects/Body":32,"./objects/RaycastVehicle":33,"./objects/RigidVehicle":34,"./objects/SPHSystem":35,"./objects/Spring":36,"./shapes/Box":38,"./shapes/ConvexPolyhedron":39,"./shapes/Cylinder":40,"./shapes/Heightfield":41,"./shapes/Particle":42,"./shapes/Plane":43,"./shapes/Shape":44,"./shapes/Sphere":45,"./shapes/Trimesh":46,"./solver/GSSolver":47,"./solver/Solver":48,"./solver/SplitSolver":49,"./utils/EventTarget":50,"./utils/Octree":51,"./utils/Pool":52,"./utils/Vec3Pool":55,"./world/Narrowphase":56,"./world/World":57}],3:[function(e,t){var n=e("../math/Vec3");function i(e){e=e||{},this.lowerBound=new n,e.lowerBound&&this.lowerBound.copy(e.lowerBound),this.upperBound=new n,e.upperBound&&this.upperBound.copy(e.upperBound)}e("../utils/Utils"),t.exports=i;var s=new n;i.prototype.setFromPoints=function(e,t,n,i){var o=this.lowerBound,r=this.upperBound,a=n;o.copy(e[0]),a&&a.vmult(o,o),r.copy(o);for(var c=1;c<e.length;c++){var l=e[c];a&&(a.vmult(l,s),l=s),l.x>r.x&&(r.x=l.x),l.x<o.x&&(o.x=l.x),l.y>r.y&&(r.y=l.y),l.y<o.y&&(o.y=l.y),l.z>r.z&&(r.z=l.z),l.z<o.z&&(o.z=l.z)}return t&&(t.vadd(o,o),t.vadd(r,r)),i&&(o.x-=i,o.y-=i,o.z-=i,r.x+=i,r.y+=i,r.z+=i),this},i.prototype.copy=function(e){return this.lowerBound.copy(e.lowerBound),this.upperBound.copy(e.upperBound),this},i.prototype.clone=function(){return(new i).copy(this)},i.prototype.extend=function(e){this.lowerBound.x=Math.min(this.lowerBound.x,e.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,e.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,e.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,e.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,e.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,e.upperBound.z)},i.prototype.overlaps=function(e){var t=this.lowerBound,n=this.upperBound,i=e.lowerBound,s=e.upperBound,o=i.x<=n.x&&n.x<=s.x||t.x<=s.x&&s.x<=n.x,r=i.y<=n.y&&n.y<=s.y||t.y<=s.y&&s.y<=n.y,a=i.z<=n.z&&n.z<=s.z||t.z<=s.z&&s.z<=n.z;return o&&r&&a},i.prototype.volume=function(){var e=this.lowerBound,t=this.upperBound;return(t.x-e.x)*(t.y-e.y)*(t.z-e.z)},i.prototype.contains=function(e){var t=this.lowerBound,n=this.upperBound,i=e.lowerBound,s=e.upperBound;return t.x<=i.x&&n.x>=s.x&&t.y<=i.y&&n.y>=s.y&&t.z<=i.z&&n.z>=s.z},i.prototype.getCorners=function(e,t,n,i,s,o,r,a){var c=this.lowerBound,l=this.upperBound;e.copy(c),t.set(l.x,c.y,c.z),n.set(l.x,l.y,c.z),i.set(c.x,l.y,l.z),s.set(l.x,c.y,l.z),o.set(c.x,l.y,c.z),r.set(c.x,c.y,l.z),a.copy(l)};var o=[new n,new n,new n,new n,new n,new n,new n,new n];i.prototype.toLocalFrame=function(e,t){var n=o,i=n[0],s=n[1],r=n[2],a=n[3],c=n[4],l=n[5],h=n[6],u=n[7];this.getCorners(i,s,r,a,c,l,h,u);for(var _=0;8!==_;_++){var d=n[_];e.pointToLocal(d,d)}return t.setFromPoints(n)},i.prototype.toWorldFrame=function(e,t){var n=o,i=n[0],s=n[1],r=n[2],a=n[3],c=n[4],l=n[5],h=n[6],u=n[7];this.getCorners(i,s,r,a,c,l,h,u);for(var _=0;8!==_;_++){var d=n[_];e.pointToWorld(d,d)}return t.setFromPoints(n)},i.prototype.overlapsRay=function(e){var t=1/e._direction.x,n=1/e._direction.y,i=1/e._direction.z,s=(this.lowerBound.x-e.from.x)*t,o=(this.upperBound.x-e.from.x)*t,r=(this.lowerBound.y-e.from.y)*n,a=(this.upperBound.y-e.from.y)*n,c=(this.lowerBound.z-e.from.z)*i,l=(this.upperBound.z-e.from.z)*i,h=Math.max(Math.max(Math.min(s,o),Math.min(r,a)),Math.min(c,l)),u=Math.min(Math.min(Math.max(s,o),Math.max(r,a)),Math.max(c,l));return!(u<0||h>u)}},{"../math/Vec3":31,"../utils/Utils":54}],4:[function(e,t){function n(){this.matrix=[]}t.exports=n,n.prototype.get=function(e,t){if(e=e.index,(t=t.index)>e){var n=t;t=e,e=n}return this.matrix[(e*(e+1)>>1)+t-1]},n.prototype.set=function(e,t,n){if(e=e.index,(t=t.index)>e){var i=t;t=e,e=i}this.matrix[(e*(e+1)>>1)+t-1]=n?1:0},n.prototype.reset=function(){for(var e=0,t=this.matrix.length;e!==t;e++)this.matrix[e]=0},n.prototype.setNumObjects=function(e){this.matrix.length=e*(e-1)>>1}},{}],5:[function(e,t){var n=e("../objects/Body"),i=e("../math/Vec3"),s=e("../math/Quaternion");function o(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}e("../shapes/Shape"),e("../shapes/Plane"),t.exports=o,o.prototype.collisionPairs=function(){throw new Error("collisionPairs not implemented for this BroadPhase class!")},o.prototype.needBroadphaseCollision=function(e,t){if(0==(e.collisionFilterGroup&t.collisionFilterMask)||0==(t.collisionFilterGroup&e.collisionFilterMask))return!1;var i=0!=(e.type&n.STATIC),s=0!=(t.type&n.STATIC);return!(i&&s||!e.hasTrigger&&!t.hasTrigger&&e.sleepState===n.SLEEPING&&t.sleepState===n.SLEEPING)},o.prototype.intersectionTest=function(e,t,n,i){this.useBoundingBoxes?this.doBoundingBoxBroadphase(e,t,n,i):this.doBoundingSphereBroadphase(e,t,n,i)};var r=new i;new i,new s,new i,o.prototype.doBoundingSphereBroadphase=function(e,t,n,i){var s=r;t.position.vsub(e.position,s);var o=Math.pow(e.boundingRadius+t.boundingRadius,2);s.norm2()<o&&(n.push(e),i.push(t))},o.prototype.doBoundingBoxBroadphase=function(e,t,n,i){e.aabbNeedsUpdate&&e.computeAABB(),t.aabbNeedsUpdate&&t.computeAABB(),e.aabb.overlaps(t.aabb)&&(n.push(e),i.push(t))};var a={keys:[]},c=[],l=[];o.prototype.makePairsUnique=function(e,t){for(var n=a,i=c,s=l,o=e.length,r=0;r!==o;r++)i[r]=e[r],s[r]=t[r];for(e.length=0,t.length=0,r=0;r!==o;r++){var h=i[r].id,u=s[r].id;n[_=h<u?h+","+u:u+","+h]=r,n.keys.push(_)}for(r=0;r!==n.keys.length;r++){var _=n.keys.pop(),d=n[_];e.push(i[d]),t.push(s[d]),delete n[_]}},o.prototype.setWorld=function(){};var h=new i;o.boundingSphereCheck=function(e,t){var n=h;return e.position.vsub(t.position,n),Math.pow(e.shape.boundingSphereRadius+t.shape.boundingSphereRadius,2)>n.norm2()},o.prototype.aabbQuery=function(){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}},{"../math/Quaternion":29,"../math/Vec3":31,"../objects/Body":32,"../shapes/Plane":43,"../shapes/Shape":44}],6:[function(e,t){t.exports=o;var n=e("./Broadphase"),i=e("../math/Vec3"),s=e("../shapes/Shape");function o(e,t,s,o,r){n.apply(this),this.nx=s||10,this.ny=o||10,this.nz=r||10,this.aabbMin=e||new i(100,100,100),this.aabbMax=t||new i(-100,-100,-100);var a=this.nx*this.ny*this.nz;if(a<=0)throw"GridBroadphase: Each dimension's n must be >0";this.bins=[],this.binLengths=[],this.bins.length=a,this.binLengths.length=a;for(var c=0;c<a;c++)this.bins[c]=[],this.binLengths[c]=0}o.prototype=new n,o.prototype.constructor=o;var r=new i;new i,o.prototype.collisionPairs=function(e,t,n){for(var i=e.numObjects(),o=e.bodies,a=this.aabbMax,c=this.aabbMin,l=this.nx,h=this.ny,u=this.nz,_=h*u,d=u,p=1,f=a.x,m=a.y,g=a.z,v=c.x,y=c.y,x=c.z,S=l/(f-v),C=h/(m-y),E=u/(g-x),T=(f-v)/l,b=(m-y)/h,A=(g-x)/u,P=.5*Math.sqrt(T*T+b*b+A*A),w=s.types,I=w.SPHERE,R=w.PLANE,D=(w.BOX,w.COMPOUND,w.CONVEXPOLYHEDRON,this.bins),O=this.binLengths,N=this.bins.length,M=0;M!==N;M++)O[M]=0;var L=Math.ceil;function B(e,t,n,i,s,o,r){var a=(e-v)*S|0,c=(t-y)*C|0,f=(n-x)*E|0,m=L((i-v)*S),g=L((s-y)*C),T=L((o-x)*E);a<0?a=0:a>=l&&(a=l-1),c<0?c=0:c>=h&&(c=h-1),f<0?f=0:f>=u&&(f=u-1),m<0?m=0:m>=l&&(m=l-1),g<0?g=0:g>=h&&(g=h-1),T<0?T=0:T>=u&&(T=u-1),c*=d,f*=p,m*=_,g*=d,T*=p;for(var b=a*=_;b<=m;b+=_)for(var A=c;A<=g;A+=d)for(var P=f;P<=T;P+=p){var w=b+A+P;D[w][O[w]++]=r}}for(c=Math.min,a=Math.max,M=0;M!==i;M++){var F=(ne=o[M]).shape;switch(F.type){case I:var z=ne.position.x,U=ne.position.y,G=ne.position.z,V=F.radius;B(z-V,U-V,G-V,z+V,U+V,G+V,ne);break;case R:F.worldNormalNeedsUpdate&&F.computeWorldNormal(ne.quaternion);var H=F.worldNormal,k=v+.5*T-ne.position.x,j=y+.5*b-ne.position.y,W=x+.5*A-ne.position.z,q=r;q.set(k,j,W);for(var X=0,Y=0;X!==l;X++,Y+=_,q.y=j,q.x+=T)for(var K=0,$=0;K!==h;K++,$+=d,q.z=W,q.y+=b)for(var Q=0,J=0;Q!==u;Q++,J+=p,q.z+=A)if(q.dot(H)<P){var Z=Y+$+J;D[Z][O[Z]++]=ne}break;default:ne.aabbNeedsUpdate&&ne.computeAABB(),B(ne.aabb.lowerBound.x,ne.aabb.lowerBound.y,ne.aabb.lowerBound.z,ne.aabb.upperBound.x,ne.aabb.upperBound.y,ne.aabb.upperBound.z,ne)}}for(M=0;M!==N;M++){var ee=O[M];if(ee>1){var te=D[M];for(X=0;X!==ee;X++){var ne=te[X];for(K=0;K!==X;K++){var ie=te[K];this.needBroadphaseCollision(ne,ie)&&this.intersectionTest(ne,ie,t,n)}}}}this.makePairsUnique(t,n)}},{"../math/Vec3":31,"../shapes/Shape":44,"./Broadphase":5}],7:[function(e,t){t.exports=s;var n=e("./Broadphase"),i=e("./AABB");function s(){n.apply(this)}s.prototype=new n,s.prototype.constructor=s,s.prototype.collisionPairs=function(e,t,n){var i,s,o,r,a=e.bodies,c=a.length;for(i=0;i!==c;i++)for(s=0;s!==i;s++)o=a[i],r=a[s],this.needBroadphaseCollision(o,r)&&this.intersectionTest(o,r,t,n)},new i,s.prototype.aabbQuery=function(e,t,n){n=n||[];for(var i=0;i<e.bodies.length;i++){var s=e.bodies[i];s.aabbNeedsUpdate&&s.computeAABB(),s.aabb.overlaps(t)&&n.push(s)}return n}},{"./AABB":3,"./Broadphase":5}],8:[function(e,t){function n(){this.matrix={}}t.exports=n,n.prototype.get=function(e,t){if(e=e.id,(t=t.id)>e){var n=t;t=e,e=n}return e+"-"+t in this.matrix},n.prototype.set=function(e,t,n){if(e=e.id,(t=t.id)>e){var i=t;t=e,e=i}n?this.matrix[e+"-"+t]=!0:delete this.matrix[e+"-"+t]},n.prototype.reset=function(){this.matrix={}},n.prototype.setNumObjects=function(){}},{}],9:[function(e,t){function n(){this.current=[],this.previous=[]}function i(e,t){e.push((4294901760&t)>>16,65535&t)}t.exports=n,n.prototype.getKey=function(e,t){if(t<e){var n=t;t=e,e=n}return e<<16|t},n.prototype.set=function(e,t){for(var n=this.getKey(e,t),i=this.current,s=0;n>i[s];)s++;if(n!==i[s]){for(t=i.length-1;t>=s;t--)i[t+1]=i[t];i[s]=n}},n.prototype.tick=function(){var e=this.current;this.current=this.previous,this.previous=e,this.current.length=0},n.prototype.getDiff=function(e,t){for(var n=this.current,s=this.previous,o=n.length,r=s.length,a=0,c=0;c<o;c++){for(var l=n[c];l>s[a];)a++;l===s[a]||i(e,l)}for(a=0,c=0;c<r;c++){for(var h=s[c];h>n[a];)a++;n[a]===h||i(t,h)}}},{}],10:[function(e,t){t.exports=c;var n=e("../math/Vec3"),i=e("../math/Quaternion"),s=e("../math/Transform"),o=(e("../shapes/ConvexPolyhedron"),e("../shapes/Box"),e("../collision/RaycastResult")),r=e("../shapes/Shape"),a=e("../collision/AABB");function c(e,t){this.from=e?e.clone():new n,this.to=t?t.clone():new n,this._direction=new n,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=c.ANY,this.result=new o,this.hasHit=!1,this.callback=function(){}}c.prototype.constructor=c,c.CLOSEST=1,c.ANY=2,c.ALL=4;var l=new a,h=[];c.prototype.intersectWorld=function(e,t){return this.mode=t.mode||c.ANY,this.result=t.result||new o,this.skipBackfaces=!!t.skipBackfaces,this.checkCollisionResponse=!!t.checkCollisionResponse,this.collisionFilterMask=void 0!==t.collisionFilterMask?t.collisionFilterMask:-1,this.collisionFilterGroup=void 0!==t.collisionFilterGroup?t.collisionFilterGroup:-1,t.from&&this.from.copy(t.from),t.to&&this.to.copy(t.to),this.callback=t.callback||function(){},this.hasHit=!1,this.result.reset(),this._updateDirection(),this.getAABB(l),h.length=0,e.broadphase.aabbQuery(e,l,h),this.intersectBodies(h),this.hasHit};var u=new n,_=new n;function d(e,t,n,i){i.vsub(t,B),n.vsub(t,u),e.vsub(t,_);var s,o,r=B.dot(B),a=B.dot(u),c=B.dot(_),l=u.dot(u),h=u.dot(_);return(s=l*c-a*h)>=0&&(o=r*h-a*c)>=0&&s+o<r*l-a*a}c.pointInTriangle=d;var p=new n,f=new i;c.prototype.intersectBody=function(e,t){if(t&&(this.result=t,this._updateDirection()),(!this.checkCollisionResponse||e.collisionResponse)&&c.perBodyFilter(this,e))for(var n=p,i=f,s=0,o=e.shapes.length;s<o;s++){var r=e.shapes[s];if(c.perShapeFilter(this,r)&&(e.quaternion.mult(e.shapeOrientations[s],i),e.quaternion.vmult(e.shapeOffsets[s],n),n.vadd(e.position,n),this.intersectShape(r,i,n,e),this.result._shouldStop))break}},c.prototype.intersectBodies=function(e,t){t&&(this.result=t,this._updateDirection());for(var n=0,i=e.length;!this.result._shouldStop&&n<i;n++)this.intersectBody(e[n])},c.prototype._updateDirection=function(){this.to.vsub(this.from,this._direction),this._direction.normalize()},c.prototype.intersectShape=function(e,t,n,i){if(!(z(this.from,this._direction,n)>e.boundingSphereRadius)){var s=this[e.type];s&&s.call(this,e,t,n,i,e)}},new n,new n;var m=new n,g=new n,v=new n,y=new n;new n,new o,c.prototype.intersectBox=function(e,t,n,i,s){return this.intersectConvex(e.convexPolyhedronRepresentation,t,n,i,s)},c.prototype[r.types.BOX]=c.prototype.intersectBox,c.prototype.intersectPlane=function(e,t,i,s,o){var r=this.from,a=this.to,c=this._direction,l=new n(0,0,1);t.vmult(l,l);var h=new n;r.vsub(i,h);var u=h.dot(l);if(a.vsub(i,h),!(u*h.dot(l)>0||r.distanceTo(a)<u)){var _=l.dot(c);if(!(Math.abs(_)<this.precision)){var d=new n,p=new n,f=new n;r.vsub(i,d);var m=-l.dot(d)/_;c.scale(m,p),r.vadd(p,f),this.reportIntersection(l,f,o,s,-1)}}},c.prototype[r.types.PLANE]=c.prototype.intersectPlane,c.prototype.getAABB=function(e){var t=this.to,n=this.from;e.lowerBound.x=Math.min(t.x,n.x),e.lowerBound.y=Math.min(t.y,n.y),e.lowerBound.z=Math.min(t.z,n.z),e.upperBound.x=Math.max(t.x,n.x),e.upperBound.y=Math.max(t.y,n.y),e.upperBound.z=Math.max(t.z,n.z)};var x={faceList:[0]},S=new n,C=new c,E=[];c.prototype.intersectHeightfield=function(e,t,n,i,o){e.data,e.elementSize;var r=C;r.from.copy(this.from),r.to.copy(this.to),s.pointToLocalFrame(n,t,r.from,r.from),s.pointToLocalFrame(n,t,r.to,r.to),r._updateDirection();var c,l,h,u,_=E;c=l=0,h=u=e.data.length-1;var d=new a;r.getAABB(d),e.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,_,!0),c=Math.max(c,_[0]),l=Math.max(l,_[1]),e.getIndexOfPosition(d.upperBound.x,d.upperBound.y,_,!0),h=Math.min(h,_[0]+1),u=Math.min(u,_[1]+1);for(var p=c;p<h;p++)for(var f=l;f<u;f++){if(this.result._shouldStop)return;if(e.getAabbAtIndex(p,f,d),d.overlapsRay(r)){if(e.getConvexTrianglePillar(p,f,!1),s.pointToWorldFrame(n,t,e.pillarOffset,S),this.intersectConvex(e.pillarConvex,t,S,i,o,x),this.result._shouldStop)return;e.getConvexTrianglePillar(p,f,!0),s.pointToWorldFrame(n,t,e.pillarOffset,S),this.intersectConvex(e.pillarConvex,t,S,i,o,x)}}},c.prototype[r.types.HEIGHTFIELD]=c.prototype.intersectHeightfield;var T=new n,b=new n;c.prototype.intersectSphere=function(e,t,n,i,s){var o=this.from,r=this.to,a=e.radius,c=Math.pow(r.x-o.x,2)+Math.pow(r.y-o.y,2)+Math.pow(r.z-o.z,2),l=2*((r.x-o.x)*(o.x-n.x)+(r.y-o.y)*(o.y-n.y)+(r.z-o.z)*(o.z-n.z)),h=Math.pow(o.x-n.x,2)+Math.pow(o.y-n.y,2)+Math.pow(o.z-n.z,2)-Math.pow(a,2),u=Math.pow(l,2)-4*c*h,_=T,d=b;if(!(u<0))if(0===u)o.lerp(r,u,_),_.vsub(n,d),d.normalize(),this.reportIntersection(d,_,s,i,-1);else{var p=(-l-Math.sqrt(u))/(2*c),f=(-l+Math.sqrt(u))/(2*c);if(p>=0&&p<=1&&(o.lerp(r,p,_),_.vsub(n,d),d.normalize(),this.reportIntersection(d,_,s,i,-1)),this.result._shouldStop)return;f>=0&&f<=1&&(o.lerp(r,f,_),_.vsub(n,d),d.normalize(),this.reportIntersection(d,_,s,i,-1))}},c.prototype[r.types.SPHERE]=c.prototype.intersectSphere;var A=new n,P=(new n,new n,new n);c.prototype.intersectConvex=function(e,t,n,i,s,o){for(var r=A,a=P,c=o&&o.faceList||null,l=e.faces,h=e.vertices,u=e.faceNormals,_=this._direction,p=this.from,f=this.to,x=p.distanceTo(f),S=c?c.length:l.length,C=this.result,E=0;!C._shouldStop&&E<S;E++){var T=c?c[E]:E,b=l[T],w=u[T],I=t,R=n;a.copy(h[b[0]]),I.vmult(a,a),a.vadd(R,a),a.vsub(p,a),I.vmult(w,r);var D=_.dot(r);if(!(Math.abs(D)<this.precision)){var O=r.dot(a)/D;if(!(O<0)){_.mult(O,m),m.vadd(p,m),g.copy(h[b[0]]),I.vmult(g,g),R.vadd(g,g);for(var N=1;!C._shouldStop&&N<b.length-1;N++){v.copy(h[b[N]]),y.copy(h[b[N+1]]),I.vmult(v,v),I.vmult(y,y),R.vadd(v,v),R.vadd(y,y);var M=m.distanceTo(p);!d(m,g,v,y)&&!d(m,v,g,y)||M>x||this.reportIntersection(r,m,s,i,T)}}}}},c.prototype[r.types.CONVEXPOLYHEDRON]=c.prototype.intersectConvex;var w=new n,I=new n,R=new n,D=new n,O=new n,N=new n,M=(new a,[]),L=new s;c.prototype.intersectTrimesh=function(e,t,n,i,o,r){var a=w,c=M,l=L,h=P,u=I,_=R,p=D,f=N,x=O,S=(r&&r.faceList,e.indices),C=(e.vertices,e.faceNormals,this.from),E=this.to,T=this._direction;l.position.copy(n),l.quaternion.copy(t),s.vectorToLocalFrame(n,t,T,u),s.pointToLocalFrame(n,t,C,_),s.pointToLocalFrame(n,t,E,p),p.x*=e.scale.x,p.y*=e.scale.y,p.z*=e.scale.z,_.x*=e.scale.x,_.y*=e.scale.y,_.z*=e.scale.z,p.vsub(_,u),u.normalize();var b=_.distanceSquared(p);e.tree.rayQuery(this,l,c);for(var A=0,B=c.length;!this.result._shouldStop&&A!==B;A++){var F=c[A];e.getNormal(F,a),e.getVertex(S[3*F],g),g.vsub(_,h);var z=u.dot(a),U=a.dot(h)/z;if(!(U<0)){u.scale(U,m),m.vadd(_,m),e.getVertex(S[3*F+1],v),e.getVertex(S[3*F+2],y);var G=m.distanceSquared(_);!d(m,v,g,y)&&!d(m,g,v,y)||G>b||(s.vectorToWorldFrame(t,a,x),s.pointToWorldFrame(n,t,m,f),this.reportIntersection(x,f,o,i,F))}}c.length=0},c.prototype[r.types.TRIMESH]=c.prototype.intersectTrimesh,c.prototype.reportIntersection=function(e,t,n,i,s){var o=this.from,r=this.to,a=o.distanceTo(t),l=this.result;if(!(this.skipBackfaces&&e.dot(this._direction)>0))switch(l.hitFaceIndex=void 0!==s?s:-1,this.mode){case c.ALL:this.hasHit=!0,l.set(o,r,e,t,n,i,a),l.hasHit=!0,this.callback(l);break;case c.CLOSEST:(a<l.distance||!l.hasHit)&&(this.hasHit=!0,l.hasHit=!0,l.set(o,r,e,t,n,i,a));break;case c.ANY:this.hasHit=!0,l.hasHit=!0,l.set(o,r,e,t,n,i,a),l._shouldStop=!0}};var B=new n,F=new n;function z(e,t,n){n.vsub(e,B);var i=B.dot(t);return t.mult(i,F),F.vadd(e,F),n.distanceTo(F)}c.perBodyFilter=function(e,t){return 0!=(e.collisionFilterGroup&t.collisionFilterMask)&&0!=(t.collisionFilterGroup&e.collisionFilterMask)},c.perShapeFilter=function(e,t){return!(e.checkCollisionResponse&&!t.collisionResponse)}},{"../collision/AABB":3,"../collision/RaycastResult":11,"../math/Quaternion":29,"../math/Transform":30,"../math/Vec3":31,"../shapes/Box":38,"../shapes/ConvexPolyhedron":39,"../shapes/Shape":44}],11:[function(e,t){var n=e("../math/Vec3");function i(){this.rayFromWorld=new n,this.rayToWorld=new n,this.hitNormalWorld=new n,this.hitPointWorld=new n,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this._shouldStop=!1}t.exports=i,i.prototype.reset=function(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this._shouldStop=!1},i.prototype.abort=function(){this._shouldStop=!0},i.prototype.set=function(e,t,n,i,s,o,r){this.rayFromWorld.copy(e),this.rayToWorld.copy(t),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(i),this.shape=s,this.body=o,this.distance=r}},{"../math/Vec3":31}],12:[function(e,t){e("../shapes/Shape");var n=e("../collision/Broadphase");function i(e){n.apply(this),this.axisList=[],this.world=null,this.axisIndex=0;var t=this.axisList;this._addBodyHandler=function(e){t.push(e.body)},this._removeBodyHandler=function(e){var n=t.indexOf(e.body);-1!==n&&t.splice(n,1)},e&&this.setWorld(e)}t.exports=i,i.prototype=new n,i.prototype.setWorld=function(e){this.axisList.length=0;for(var t=0;t<e.bodies.length;t++)this.axisList.push(e.bodies[t]);e.removeEventListener("addBody",this._addBodyHandler),e.removeEventListener("removeBody",this._removeBodyHandler),e.addEventListener("addBody",this._addBodyHandler),e.addEventListener("removeBody",this._removeBodyHandler),this.world=e,this.dirty=!0},i.insertionSortX=function(e){for(var t=1,n=e.length;t<n;t++){for(var i=e[t],s=t-1;s>=0&&!(e[s].aabb.lowerBound.x<=i.aabb.lowerBound.x);s--)e[s+1]=e[s];e[s+1]=i}return e},i.insertionSortY=function(e){for(var t=1,n=e.length;t<n;t++){for(var i=e[t],s=t-1;s>=0&&!(e[s].aabb.lowerBound.y<=i.aabb.lowerBound.y);s--)e[s+1]=e[s];e[s+1]=i}return e},i.insertionSortZ=function(e){for(var t=1,n=e.length;t<n;t++){for(var i=e[t],s=t-1;s>=0&&!(e[s].aabb.lowerBound.z<=i.aabb.lowerBound.z);s--)e[s+1]=e[s];e[s+1]=i}return e},i.prototype.collisionPairs=function(e,t,n){var s,o,r=this.axisList,a=r.length,c=this.axisIndex;for(this.dirty&&(this.sortList(),this.dirty=!1),s=0;s!==a;s++){var l=r[s];for(o=s+1;o<a;o++){var h=r[o];if(this.needBroadphaseCollision(l,h)){if(!i.checkBounds(l,h,c))break;this.intersectionTest(l,h,t,n)}}}},i.prototype.sortList=function(){for(var e=this.axisList,t=this.axisIndex,n=e.length,s=0;s!==n;s++){var o=e[s];o.aabbNeedsUpdate&&o.computeAABB()}0===t?i.insertionSortX(e):1===t?i.insertionSortY(e):2===t&&i.insertionSortZ(e)},i.checkBounds=function(e,t,n){var i,s;0===n?(i=e.position.x,s=t.position.x):1===n?(i=e.position.y,s=t.position.y):2===n&&(i=e.position.z,s=t.position.z);var o=e.boundingRadius;return s-t.boundingRadius<i+o},i.prototype.autoDetectAxis=function(){for(var e=0,t=0,n=0,i=0,s=0,o=0,r=this.axisList,a=r.length,c=1/a,l=0;l!==a;l++){var h=r[l],u=h.position.x;e+=u,t+=u*u;var _=h.position.y;n+=_,i+=_*_;var d=h.position.z;s+=d,o+=d*d}var p=t-e*e*c,f=i-n*n*c,m=o-s*s*c;this.axisIndex=p>f?p>m?0:2:f>m?1:2},i.prototype.aabbQuery=function(e,t,n){n=n||[],this.dirty&&(this.sortList(),this.dirty=!1);var i=this.axisIndex,s="x";1===i&&(s="y"),2===i&&(s="z");for(var o=this.axisList,r=(t.lowerBound[s],t.upperBound[s],0);r<o.length;r++){var a=o[r];a.aabbNeedsUpdate&&a.computeAABB(),a.aabb.overlaps(t)&&n.push(a)}return n}},{"../collision/Broadphase":5,"../shapes/Shape":44}],13:[function(e,t){t.exports=r,e("./Constraint");var n=e("./PointToPointConstraint"),i=e("../equations/ConeEquation"),s=e("../equations/RotationalEquation"),o=(e("../equations/ContactEquation"),e("../math/Vec3"));function r(e,t,r){var a=void 0!==(r=r||{}).maxForce?r.maxForce:1e6,c=r.pivotA?r.pivotA.clone():new o,l=r.pivotB?r.pivotB.clone():new o;this.axisA=r.axisA?r.axisA.clone():new o,this.axisB=r.axisB?r.axisB.clone():new o,n.call(this,e,c,t,l,a),this.collideConnected=!!r.collideConnected,this.angle=void 0!==r.angle?r.angle:0;var h=this.coneEquation=new i(e,t,r),u=this.twistEquation=new s(e,t,r);this.twistAngle=void 0!==r.twistAngle?r.twistAngle:0,h.maxForce=0,h.minForce=-a,u.maxForce=0,u.minForce=-a,this.equations.push(h,u)}r.prototype=new n,r.constructor=r,new o,new o,r.prototype.update=function(){var e=this.bodyA,t=this.bodyB,i=this.coneEquation,s=this.twistEquation;n.prototype.update.call(this),e.vectorToWorldFrame(this.axisA,i.axisA),t.vectorToWorldFrame(this.axisB,i.axisB),this.axisA.tangents(s.axisA,s.axisA),e.vectorToWorldFrame(s.axisA,s.axisA),this.axisB.tangents(s.axisB,s.axisB),t.vectorToWorldFrame(s.axisB,s.axisB),i.angle=this.angle,s.maxAngle=this.twistAngle}},{"../equations/ConeEquation":19,"../equations/ContactEquation":20,"../equations/RotationalEquation":23,"../math/Vec3":31,"./Constraint":14,"./PointToPointConstraint":18}],14:[function(e,t){t.exports=i;var n=e("../utils/Utils");function i(e,t,s){s=n.defaults(s,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=e,this.bodyB=t,this.id=i.idCounter++,this.collideConnected=s.collideConnected,s.wakeUpBodies&&(e&&e.wakeUp(),t&&t.wakeUp())}i.prototype.update=function(){throw new Error("method update() not implmemented in this Constraint subclass!")},i.prototype.enable=function(){for(var e=this.equations,t=0;t<e.length;t++)e[t].enabled=!0},i.prototype.disable=function(){for(var e=this.equations,t=0;t<e.length;t++)e[t].enabled=!1},i.idCounter=0},{"../utils/Utils":54}],15:[function(e,t){t.exports=s;var n=e("./Constraint"),i=e("../equations/ContactEquation");function s(e,t,s,o){n.call(this,e,t),void 0===s&&(s=e.position.distanceTo(t.position)),void 0===o&&(o=1e6),this.distance=s;var r=this.distanceEquation=new i(e,t);this.equations.push(r),r.minForce=-o,r.maxForce=o}s.prototype=new n,s.prototype.update=function(){var e=this.bodyA,t=this.bodyB,n=this.distanceEquation,i=.5*this.distance,s=n.ni;t.position.vsub(e.position,s),s.normalize(),s.mult(i,n.ri),s.mult(-i,n.rj)}},{"../equations/ContactEquation":20,"./Constraint":14}],16:[function(e,t){t.exports=r,e("./Constraint");var n=e("./PointToPointConstraint"),i=e("../equations/RotationalEquation"),s=e("../equations/RotationalMotorEquation"),o=(e("../equations/ContactEquation"),e("../math/Vec3"));function r(e,t,r){var a=void 0!==(r=r||{}).maxForce?r.maxForce:1e6,c=r.pivotA?r.pivotA.clone():new o,l=r.pivotB?r.pivotB.clone():new o;n.call(this,e,c,t,l,a),(this.axisA=r.axisA?r.axisA.clone():new o(1,0,0)).normalize(),(this.axisB=r.axisB?r.axisB.clone():new o(1,0,0)).normalize();var h=this.rotationalEquation1=new i(e,t,r),u=this.rotationalEquation2=new i(e,t,r),_=this.motorEquation=new s(e,t,a);_.enabled=!1,this.equations.push(h,u,_)}r.prototype=new n,r.constructor=r,r.prototype.enableMotor=function(){this.motorEquation.enabled=!0},r.prototype.disableMotor=function(){this.motorEquation.enabled=!1},r.prototype.setMotorSpeed=function(e){this.motorEquation.targetVelocity=e},r.prototype.setMotorMaxForce=function(e){this.motorEquation.maxForce=e,this.motorEquation.minForce=-e};var a=new o,c=new o;r.prototype.update=function(){var e=this.bodyA,t=this.bodyB,i=this.motorEquation,s=this.rotationalEquation1,o=this.rotationalEquation2,r=a,l=c,h=this.axisA,u=this.axisB;n.prototype.update.call(this),e.quaternion.vmult(h,r),t.quaternion.vmult(u,l),r.tangents(s.axisA,o.axisA),s.axisB.copy(l),o.axisB.copy(l),this.motorEquation.enabled&&(e.quaternion.vmult(this.axisA,i.axisA),t.quaternion.vmult(this.axisB,i.axisB))}},{"../equations/ContactEquation":20,"../equations/RotationalEquation":23,"../equations/RotationalMotorEquation":24,"../math/Vec3":31,"./Constraint":14,"./PointToPointConstraint":18}],17:[function(e,t){t.exports=o,e("./Constraint");var n=e("./PointToPointConstraint"),i=e("../equations/RotationalEquation"),s=(e("../equations/RotationalMotorEquation"),e("../equations/ContactEquation"),e("../math/Vec3"));function o(e,t,o){var r=void 0!==(o=o||{}).maxForce?o.maxForce:1e6,a=new s,c=new s,l=new s;e.position.vadd(t.position,l),l.scale(.5,l),t.pointToLocalFrame(l,c),e.pointToLocalFrame(l,a),n.call(this,e,a,t,c,r),this.xA=e.vectorToLocalFrame(s.UNIT_X),this.xB=t.vectorToLocalFrame(s.UNIT_X),this.yA=e.vectorToLocalFrame(s.UNIT_Y),this.yB=t.vectorToLocalFrame(s.UNIT_Y),this.zA=e.vectorToLocalFrame(s.UNIT_Z),this.zB=t.vectorToLocalFrame(s.UNIT_Z);var h=this.rotationalEquation1=new i(e,t,o),u=this.rotationalEquation2=new i(e,t,o),_=this.rotationalEquation3=new i(e,t,o);this.equations.push(h,u,_)}o.prototype=new n,o.constructor=o,new s,new s,o.prototype.update=function(){var e=this.bodyA,t=this.bodyB,i=(this.motorEquation,this.rotationalEquation1),s=this.rotationalEquation2,o=this.rotationalEquation3;n.prototype.update.call(this),e.vectorToWorldFrame(this.xA,i.axisA),t.vectorToWorldFrame(this.yB,i.axisB),e.vectorToWorldFrame(this.yA,s.axisA),t.vectorToWorldFrame(this.zB,s.axisB),e.vectorToWorldFrame(this.zA,o.axisA),t.vectorToWorldFrame(this.xB,o.axisB)}},{"../equations/ContactEquation":20,"../equations/RotationalEquation":23,"../equations/RotationalMotorEquation":24,"../math/Vec3":31,"./Constraint":14,"./PointToPointConstraint":18}],18:[function(e,t){t.exports=o;var n=e("./Constraint"),i=e("../equations/ContactEquation"),s=e("../math/Vec3");function o(e,t,o,r,a){n.call(this,e,o),a=void 0!==a?a:1e6,this.pivotA=t?t.clone():new s,this.pivotB=r?r.clone():new s;var c=this.equationX=new i(e,o),l=this.equationY=new i(e,o),h=this.equationZ=new i(e,o);this.equations.push(c,l,h),c.minForce=l.minForce=h.minForce=-a,c.maxForce=l.maxForce=h.maxForce=a,c.ni.set(1,0,0),l.ni.set(0,1,0),h.ni.set(0,0,1)}o.prototype=new n,o.prototype.update=function(){var e=this.bodyA,t=this.bodyB,n=this.equationX,i=this.equationY,s=this.equationZ;e.quaternion.vmult(this.pivotA,n.ri),t.quaternion.vmult(this.pivotB,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),s.ri.copy(n.ri),s.rj.copy(n.rj)}},{"../equations/ContactEquation":20,"../math/Vec3":31,"./Constraint":14}],19:[function(e,t){t.exports=s;var n=e("../math/Vec3"),i=(e("../math/Mat3"),e("./Equation"));function s(e,t,s){var o=void 0!==(s=s||{}).maxForce?s.maxForce:1e6;i.call(this,e,t,-o,o),this.axisA=s.axisA?s.axisA.clone():new n(1,0,0),this.axisB=s.axisB?s.axisB.clone():new n(0,1,0),this.angle=void 0!==s.angle?s.angle:0}s.prototype=new i,s.prototype.constructor=s;var o=new n,r=new n;s.prototype.computeB=function(e){var t=this.a,n=this.b,i=this.axisA,s=this.axisB,a=o,c=r,l=this.jacobianElementA,h=this.jacobianElementB;return i.cross(s,a),s.cross(i,c),l.rotational.copy(c),h.rotational.copy(a),-(Math.cos(this.angle)-i.dot(s))*t-this.computeGW()*n-e*this.computeGiMf()}},{"../math/Mat3":28,"../math/Vec3":31,"./Equation":21}],20:[function(e,t){t.exports=s;var n=e("./Equation"),i=e("../math/Vec3");function s(e,t,s){s=void 0!==s?s:1e6,n.call(this,e,t,0,s),this.si=null,this.sj=null,this.restitution=0,this.ri=new i,this.rj=new i,this.ni=new i}e("../math/Mat3"),s.prototype=new n,s.prototype.constructor=s;var o=new i,r=new i,a=new i;s.prototype.computeB=function(e){var t=this.a,n=this.b,i=this.bi,s=this.bj,c=this.ri,l=this.rj,h=o,u=r,_=i.velocity,d=i.angularVelocity,p=(i.force,i.torque,s.velocity),f=s.angularVelocity,m=(s.force,s.torque,a),g=this.jacobianElementA,v=this.jacobianElementB,y=this.ni;c.cross(y,h),l.cross(y,u),y.negate(g.spatial),h.negate(g.rotational),v.spatial.copy(y),v.rotational.copy(u),m.copy(s.position),m.vadd(l,m),m.vsub(i.position,m),m.vsub(c,m);var x=y.dot(m),S=this.restitution+1;return-x*t-(S*p.dot(y)-S*_.dot(y)+f.dot(u)-d.dot(h))*n-e*this.computeGiMf()};var c=new i,l=new i,h=new i,u=new i,_=new i;s.prototype.getImpactVelocityAlongNormal=function(){var e=c,t=l,n=h,i=u,s=_;return this.bi.position.vadd(this.ri,n),this.bj.position.vadd(this.rj,i),this.bi.getVelocityAtWorldPoint(n,e),this.bj.getVelocityAtWorldPoint(i,t),e.vsub(t,s),this.ni.dot(s)}},{"../math/Mat3":28,"../math/Vec3":31,"./Equation":21}],21:[function(e,t){t.exports=s;var n=e("../math/JacobianElement"),i=e("../math/Vec3");function s(e,t,i,o){this.id=s.id++,this.minForce=void 0===i?-1e6:i,this.maxForce=void 0===o?1e6:o,this.bi=e,this.bj=t,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new n,this.jacobianElementB=new n,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}s.prototype.constructor=s,s.id=0,s.prototype.setSpookParams=function(e,t,n){var i=t,s=e,o=n;this.a=4/(o*(1+4*i)),this.b=4*i/(1+4*i),this.eps=4/(o*o*s*(1+4*i))},s.prototype.computeB=function(e,t,n){var i=this.computeGW();return-this.computeGq()*e-i*t-this.computeGiMf()*n},s.prototype.computeGq=function(){var e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,s=n.position,o=i.position;return e.spatial.dot(s)+t.spatial.dot(o)},new i,s.prototype.computeGW=function(){var e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,s=n.velocity,o=i.velocity,r=n.angularVelocity,a=i.angularVelocity;return e.multiplyVectors(s,r)+t.multiplyVectors(o,a)},s.prototype.computeGWlambda=function(){var e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,s=n.vlambda,o=i.vlambda,r=n.wlambda,a=i.wlambda;return e.multiplyVectors(s,r)+t.multiplyVectors(o,a)};var o=new i,r=new i,a=new i,c=new i;s.prototype.computeGiMf=function(){var e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,s=n.force,l=n.torque,h=i.force,u=i.torque,_=n.invMassSolve,d=i.invMassSolve;return s.scale(_,o),h.scale(d,r),n.invInertiaWorldSolve.vmult(l,a),i.invInertiaWorldSolve.vmult(u,c),e.multiplyVectors(o,a)+t.multiplyVectors(r,c)};var l=new i;s.prototype.computeGiMGt=function(){var e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,s=n.invMassSolve,o=i.invMassSolve,r=n.invInertiaWorldSolve,a=i.invInertiaWorldSolve,c=s+o;return r.vmult(e.rotational,l),c+=l.dot(e.rotational),a.vmult(t.rotational,l),c+l.dot(t.rotational)};var h=new i;new i,new i,new i,new i,new i,s.prototype.addToWlambda=function(e){var t=this.jacobianElementA,n=this.jacobianElementB,i=this.bi,s=this.bj,o=h;i.vlambda.addScaledVector(i.invMassSolve*e,t.spatial,i.vlambda),s.vlambda.addScaledVector(s.invMassSolve*e,n.spatial,s.vlambda),i.invInertiaWorldSolve.vmult(t.rotational,o),i.wlambda.addScaledVector(e,o,i.wlambda),s.invInertiaWorldSolve.vmult(n.rotational,o),s.wlambda.addScaledVector(e,o,s.wlambda)},s.prototype.computeC=function(){return this.computeGiMGt()+this.eps}},{"../math/JacobianElement":27,"../math/Vec3":31}],22:[function(e,t){t.exports=s;var n=e("./Equation"),i=e("../math/Vec3");function s(e,t,s){n.call(this,e,t,-s,s),this.ri=new i,this.rj=new i,this.t=new i}e("../math/Mat3"),s.prototype=new n,s.prototype.constructor=s;var o=new i,r=new i;s.prototype.computeB=function(e){this.a;var t=this.b,n=(this.bi,this.bj,this.ri),i=this.rj,s=o,a=r,c=this.t;n.cross(c,s),i.cross(c,a);var l=this.jacobianElementA,h=this.jacobianElementB;return c.negate(l.spatial),s.negate(l.rotational),h.spatial.copy(c),h.rotational.copy(a),-this.computeGW()*t-e*this.computeGiMf()}},{"../math/Mat3":28,"../math/Vec3":31,"./Equation":21}],23:[function(e,t){t.exports=s;var n=e("../math/Vec3"),i=(e("../math/Mat3"),e("./Equation"));function s(e,t,s){var o=void 0!==(s=s||{}).maxForce?s.maxForce:1e6;i.call(this,e,t,-o,o),this.axisA=s.axisA?s.axisA.clone():new n(1,0,0),this.axisB=s.axisB?s.axisB.clone():new n(0,1,0),this.maxAngle=Math.PI/2}s.prototype=new i,s.prototype.constructor=s;var o=new n,r=new n;s.prototype.computeB=function(e){var t=this.a,n=this.b,i=this.axisA,s=this.axisB,a=o,c=r,l=this.jacobianElementA,h=this.jacobianElementB;return i.cross(s,a),s.cross(i,c),l.rotational.copy(c),h.rotational.copy(a),-(Math.cos(this.maxAngle)-i.dot(s))*t-this.computeGW()*n-e*this.computeGiMf()}},{"../math/Mat3":28,"../math/Vec3":31,"./Equation":21}],24:[function(e,t){t.exports=s;var n=e("../math/Vec3"),i=(e("../math/Mat3"),e("./Equation"));function s(e,t,s){s=void 0!==s?s:1e6,i.call(this,e,t,-s,s),this.axisA=new n,this.axisB=new n,this.targetVelocity=0}s.prototype=new i,s.prototype.constructor=s,s.prototype.computeB=function(e){this.a;var t=this.b,n=(this.bi,this.bj,this.axisA),i=this.axisB,s=this.jacobianElementA,o=this.jacobianElementB;return s.rotational.copy(n),i.negate(o.rotational),-(this.computeGW()-this.targetVelocity)*t-e*this.computeGiMf()}},{"../math/Mat3":28,"../math/Vec3":31,"./Equation":21}],25:[function(e,t){var n=e("../utils/Utils");function i(e,t,s){s=n.defaults(s,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=i.idCounter++,this.materials=[e,t],this.friction=s.friction,this.restitution=s.restitution,this.contactEquationStiffness=s.contactEquationStiffness,this.contactEquationRelaxation=s.contactEquationRelaxation,this.frictionEquationStiffness=s.frictionEquationStiffness,this.frictionEquationRelaxation=s.frictionEquationRelaxation}t.exports=i,i.idCounter=0},{"../utils/Utils":54}],26:[function(e,t){function n(e){var t="";"string"==typeof(e=e||{})?(t=e,e={}):"object"==typeof e&&(t=""),this.name=t,this.id=n.idCounter++,this.friction=void 0!==e.friction?e.friction:-1,this.restitution=void 0!==e.restitution?e.restitution:-1,this.correctInelastic=0}t.exports=n,n.idCounter=0},{}],27:[function(e,t){t.exports=i;var n=e("./Vec3");function i(){this.spatial=new n,this.rotational=new n}i.prototype.multiplyElement=function(e){return e.spatial.dot(this.spatial)+e.rotational.dot(this.rotational)},i.prototype.multiplyVectors=function(e,t){return e.dot(this.spatial)+t.dot(this.rotational)}},{"./Vec3":31}],28:[function(e,t){t.exports=i;var n=e("./Vec3");function i(e){this.elements=e||[0,0,0,0,0,0,0,0,0]}i.prototype.identity=function(){var e=this.elements;e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1},i.prototype.setZero=function(){var e=this.elements;e[0]=0,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=0,e[6]=0,e[7]=0,e[8]=0},i.prototype.setTrace=function(e){var t=this.elements;t[0]=e.x,t[4]=e.y,t[8]=e.z},i.prototype.getTrace=function(e){e=e||new n;var t=this.elements;e.x=t[0],e.y=t[4],e.z=t[8]},i.prototype.vmult=function(e,t){t=t||new n;var i=this.elements,s=e.x,o=e.y,r=e.z;return t.x=i[0]*s+i[1]*o+i[2]*r,t.y=i[3]*s+i[4]*o+i[5]*r,t.z=i[6]*s+i[7]*o+i[8]*r,t},i.prototype.smult=function(e){for(var t=0;t<this.elements.length;t++)this.elements[t]*=e},i.prototype.mmult=function(e,t){for(var n=t||new i,s=0;s<3;s++)for(var o=0;o<3;o++){for(var r=0,a=0;a<3;a++)r+=e.elements[s+3*a]*this.elements[a+3*o];n.elements[s+3*o]=r}return n},i.prototype.scale=function(e,t){t=t||new i;for(var n=this.elements,s=t.elements,o=0;3!==o;o++)s[3*o+0]=e.x*n[3*o+0],s[3*o+1]=e.y*n[3*o+1],s[3*o+2]=e.z*n[3*o+2];return t},i.prototype.solve=function(e,t){t=t||new n;for(var i,s=3,o=4,r=[],a=0;a<s*o;a++)r.push(0);for(a=0;a<3;a++)for(i=0;i<3;i++)r[a+o*i]=this.elements[a+3*i];r[3]=e.x,r[7]=e.y,r[11]=e.z;var c,l,h=3,u=h,_=4;do{if(0===r[(a=u-h)+o*a])for(i=a+1;i<u;i++)if(0!==r[a+o*i]){c=_;do{r[(l=_-c)+o*a]+=r[l+o*i]}while(--c);break}if(0!==r[a+o*a])for(i=a+1;i<u;i++){var d=r[a+o*i]/r[a+o*a];c=_;do{r[(l=_-c)+o*i]=l<=a?0:r[l+o*i]-r[l+o*a]*d}while(--c)}}while(--h);if(t.z=r[2*o+3]/r[2*o+2],t.y=(r[1*o+3]-r[1*o+2]*t.z)/r[1*o+1],t.x=(r[0*o+3]-r[0*o+2]*t.z-r[0*o+1]*t.y)/r[0*o+0],isNaN(t.x)||isNaN(t.y)||isNaN(t.z)||t.x===1/0||t.y===1/0||t.z===1/0)throw"Could not solve equation! Got x=["+t.toString()+"], b=["+e.toString()+"], A=["+this.toString()+"]";return t},i.prototype.e=function(e,t,n){if(void 0===n)return this.elements[t+3*e];this.elements[t+3*e]=n},i.prototype.copy=function(e){for(var t=0;t<e.elements.length;t++)this.elements[t]=e.elements[t];return this},i.prototype.toString=function(){for(var e="",t=",",n=0;n<9;n++)e+=this.elements[n]+t;return e},i.prototype.reverse=function(e){e=e||new i;for(var t,n=3,s=6,o=[],r=0;r<n*s;r++)o.push(0);for(r=0;r<3;r++)for(t=0;t<3;t++)o[r+s*t]=this.elements[r+3*t];o[3]=1,o[9]=0,o[15]=0,o[4]=0,o[10]=1,o[16]=0,o[5]=0,o[11]=0,o[17]=1;var a,c,l=3,h=l,u=s;do{if(0===o[(r=h-l)+s*r])for(t=r+1;t<h;t++)if(0!==o[r+s*t]){a=u;do{o[(c=u-a)+s*r]+=o[c+s*t]}while(--a);break}if(0!==o[r+s*r])for(t=r+1;t<h;t++){var _=o[r+s*t]/o[r+s*r];a=u;do{o[(c=u-a)+s*t]=c<=r?0:o[c+s*t]-o[c+s*r]*_}while(--a)}}while(--l);r=2;do{t=r-1;do{_=o[r+s*t]/o[r+s*r],a=s;do{o[(c=s-a)+s*t]=o[c+s*t]-o[c+s*r]*_}while(--a)}while(t--)}while(--r);r=2;do{_=1/o[r+s*r],a=s;do{o[(c=s-a)+s*r]=o[c+s*r]*_}while(--a)}while(r--);r=2;do{t=2;do{if(c=o[n+t+s*r],isNaN(c)||c===1/0)throw"Could not reverse! A=["+this.toString()+"]";e.e(r,t,c)}while(t--)}while(r--);return e},i.prototype.setRotationFromQuaternion=function(e){var t=e.x,n=e.y,i=e.z,s=e.w,o=t+t,r=n+n,a=i+i,c=t*o,l=t*r,h=t*a,u=n*r,_=n*a,d=i*a,p=s*o,f=s*r,m=s*a,g=this.elements;return g[0]=1-(u+d),g[1]=l-m,g[2]=h+f,g[3]=l+m,g[4]=1-(c+d),g[5]=_-p,g[6]=h-f,g[7]=_+p,g[8]=1-(c+u),this},i.prototype.transpose=function(e){for(var t=(e=e||new i).elements,n=this.elements,s=0;3!==s;s++)for(var o=0;3!==o;o++)t[3*s+o]=n[3*o+s];return e}},{"./Vec3":31}],29:[function(e,t){t.exports=i;var n=e("./Vec3");function i(e,t,n,i){this.x=void 0!==e?e:0,this.y=void 0!==t?t:0,this.z=void 0!==n?n:0,this.w=void 0!==i?i:1}i.prototype.set=function(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this},i.prototype.toString=function(){return this.x+","+this.y+","+this.z+","+this.w},i.prototype.toArray=function(){return[this.x,this.y,this.z,this.w]},i.prototype.setFromAxisAngle=function(e,t){var n=Math.sin(.5*t);return this.x=e.x*n,this.y=e.y*n,this.z=e.z*n,this.w=Math.cos(.5*t),this},i.prototype.toAxisAngle=function(e){e=e||new n,this.normalize();var t=2*Math.acos(this.w),i=Math.sqrt(1-this.w*this.w);return i<.001?(e.x=this.x,e.y=this.y,e.z=this.z):(e.x=this.x/i,e.y=this.y/i,e.z=this.z/i),[e,t]};var s=new n,o=new n;i.prototype.setFromVectors=function(e,t){if(e.isAntiparallelTo(t)){var n=s,i=o;e.tangents(n,i),this.setFromAxisAngle(n,Math.PI)}else{var r=e.cross(t);this.x=r.x,this.y=r.y,this.z=r.z,this.w=Math.sqrt(Math.pow(e.norm(),2)*Math.pow(t.norm(),2))+e.dot(t),this.normalize()}return this},new n,new n,new n,i.prototype.mult=function(e,t){t=t||new i;var n=this.x,s=this.y,o=this.z,r=this.w,a=e.x,c=e.y,l=e.z,h=e.w;return t.x=n*h+r*a+s*l-o*c,t.y=s*h+r*c+o*a-n*l,t.z=o*h+r*l+n*c-s*a,t.w=r*h-n*a-s*c-o*l,t},i.prototype.inverse=function(e){var t=this.x,n=this.y,s=this.z,o=this.w;e=e||new i,this.conjugate(e);var r=1/(t*t+n*n+s*s+o*o);return e.x*=r,e.y*=r,e.z*=r,e.w*=r,e},i.prototype.conjugate=function(e){return(e=e||new i).x=-this.x,e.y=-this.y,e.z=-this.z,e.w=this.w,e},i.prototype.normalize=function(){var e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===e?(this.x=0,this.y=0,this.z=0,this.w=0):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this},i.prototype.normalizeFast=function(){var e=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return 0===e?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=e,this.y*=e,this.z*=e,this.w*=e),this},i.prototype.vmult=function(e,t){t=t||new n;var i=e.x,s=e.y,o=e.z,r=this.x,a=this.y,c=this.z,l=this.w,h=l*i+a*o-c*s,u=l*s+c*i-r*o,_=l*o+r*s-a*i,d=-r*i-a*s-c*o;return t.x=h*l+d*-r+u*-c-_*-a,t.y=u*l+d*-a+_*-r-h*-c,t.z=_*l+d*-c+h*-a-u*-r,t},i.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},i.prototype.toEuler=function(e,t){var n,i,s;t=t||"YZX";var o=this.x,r=this.y,a=this.z,c=this.w;switch(t){case"YZX":var l=o*r+a*c;if(l>.499&&(n=2*Math.atan2(o,c),i=Math.PI/2,s=0),l<-.499&&(n=-2*Math.atan2(o,c),i=-Math.PI/2,s=0),isNaN(n)){var h=o*o,u=r*r,_=a*a;n=Math.atan2(2*r*c-2*o*a,1-2*u-2*_),i=Math.asin(2*l),s=Math.atan2(2*o*c-2*r*a,1-2*h-2*_)}break;default:throw new Error("Euler order "+t+" not supported yet.")}e.y=n,e.z=i,e.x=s},i.prototype.setFromEuler=function(e,t,n,i){i=i||"XYZ";var s=Math.cos(e/2),o=Math.cos(t/2),r=Math.cos(n/2),a=Math.sin(e/2),c=Math.sin(t/2),l=Math.sin(n/2);return"XYZ"===i?(this.x=a*o*r+s*c*l,this.y=s*c*r-a*o*l,this.z=s*o*l+a*c*r,this.w=s*o*r-a*c*l):"YXZ"===i?(this.x=a*o*r+s*c*l,this.y=s*c*r-a*o*l,this.z=s*o*l-a*c*r,this.w=s*o*r+a*c*l):"ZXY"===i?(this.x=a*o*r-s*c*l,this.y=s*c*r+a*o*l,this.z=s*o*l+a*c*r,this.w=s*o*r-a*c*l):"ZYX"===i?(this.x=a*o*r-s*c*l,this.y=s*c*r+a*o*l,this.z=s*o*l-a*c*r,this.w=s*o*r+a*c*l):"YZX"===i?(this.x=a*o*r+s*c*l,this.y=s*c*r+a*o*l,this.z=s*o*l-a*c*r,this.w=s*o*r-a*c*l):"XZY"===i&&(this.x=a*o*r-s*c*l,this.y=s*c*r-a*o*l,this.z=s*o*l+a*c*r,this.w=s*o*r+a*c*l),this},i.prototype.clone=function(){return new i(this.x,this.y,this.z,this.w)},i.prototype.slerp=function(e,t,n){n=n||new i;var s,o,r,a,c,l=this.x,h=this.y,u=this.z,_=this.w,d=e.x,p=e.y,f=e.z,m=e.w;return(o=l*d+h*p+u*f+_*m)<0&&(o=-o,d=-d,p=-p,f=-f,m=-m),1-o>1e-6?(s=Math.acos(o),r=Math.sin(s),a=Math.sin((1-t)*s)/r,c=Math.sin(t*s)/r):(a=1-t,c=t),n.x=a*l+c*d,n.y=a*h+c*p,n.z=a*u+c*f,n.w=a*_+c*m,n},i.prototype.integrate=function(e,t,n,s){s=s||new i;var o=e.x*n.x,r=e.y*n.y,a=e.z*n.z,c=this.x,l=this.y,h=this.z,u=this.w,_=.5*t;return s.x+=_*(o*u+r*h-a*l),s.y+=_*(r*u+a*c-o*h),s.z+=_*(a*u+o*l-r*c),s.w+=_*(-o*c-r*l-a*h),s},i.prototype.euqals=function(e){return this.x===e.x&&this.y===e.y&&this.z===e.z&&this.w===e.w}},{"./Vec3":31}],30:[function(e,t){var n=e("./Vec3"),i=e("./Quaternion");function s(e){e=e||{},this.position=new n,e.position&&this.position.copy(e.position),this.quaternion=new i,e.quaternion&&this.quaternion.copy(e.quaternion)}t.exports=s;var o=new i;s.pointToLocalFrame=function(e,t,i,s){return s=s||new n,i.vsub(e,s),t.conjugate(o),o.vmult(s,s),s},s.prototype.pointToLocal=function(e,t){return s.pointToLocalFrame(this.position,this.quaternion,e,t)},s.pointToWorldFrame=function(e,t,i,s){return s=s||new n,t.vmult(i,s),s.vadd(e,s),s},s.prototype.pointToWorld=function(e,t){return s.pointToWorldFrame(this.position,this.quaternion,e,t)},s.prototype.vectorToWorldFrame=function(e,t){return t=t||new n,this.quaternion.vmult(e,t),t},s.vectorToWorldFrame=function(e,t,n){return e.vmult(t,n),n},s.vectorToLocalFrame=function(e,t,i,s){return s=s||new n,t.w*=-1,t.vmult(i,s),t.w*=-1,s}},{"./Quaternion":29,"./Vec3":31}],31:[function(e,t){t.exports=i;var n=e("./Mat3");function i(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0}i.ZERO=new i(0,0,0),i.UNIT_X=new i(1,0,0),i.UNIT_Y=new i(0,1,0),i.UNIT_Z=new i(0,0,1),i.prototype.cross=function(e,t){var n=e.x,s=e.y,o=e.z,r=this.x,a=this.y,c=this.z;return(t=t||new i).x=a*o-c*s,t.y=c*n-r*o,t.z=r*s-a*n,t},i.prototype.set=function(e,t,n){return this.x=e,this.y=t,this.z=n,this},i.prototype.setZero=function(){this.x=this.y=this.z=0},i.prototype.vadd=function(e,t){if(!t)return new i(this.x+e.x,this.y+e.y,this.z+e.z);t.x=e.x+this.x,t.y=e.y+this.y,t.z=e.z+this.z},i.prototype.vsub=function(e,t){if(!t)return new i(this.x-e.x,this.y-e.y,this.z-e.z);t.x=this.x-e.x,t.y=this.y-e.y,t.z=this.z-e.z},i.prototype.crossmat=function(){return new n([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])},i.prototype.normalize=function(){var e=this.x,t=this.y,n=this.z,i=Math.sqrt(e*e+t*t+n*n);if(i>0){var s=1/i;this.x*=s,this.y*=s,this.z*=s}else this.x=0,this.y=0,this.z=0;return i},i.prototype.unit=function(e){e=e||new i;var t=this.x,n=this.y,s=this.z,o=Math.sqrt(t*t+n*n+s*s);return o>0?(o=1/o,e.x=t*o,e.y=n*o,e.z=s*o):(e.x=1,e.y=0,e.z=0),e},i.prototype.norm=function(){var e=this.x,t=this.y,n=this.z;return Math.sqrt(e*e+t*t+n*n)},i.prototype.length=i.prototype.norm,i.prototype.norm2=function(){return this.dot(this)},i.prototype.lengthSquared=i.prototype.norm2,i.prototype.distanceTo=function(e){var t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,r=e.z;return Math.sqrt((s-t)*(s-t)+(o-n)*(o-n)+(r-i)*(r-i))},i.prototype.distanceSquared=function(e){var t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,r=e.z;return(s-t)*(s-t)+(o-n)*(o-n)+(r-i)*(r-i)},i.prototype.mult=function(e,t){t=t||new i;var n=this.x,s=this.y,o=this.z;return t.x=e*n,t.y=e*s,t.z=e*o,t},i.prototype.vmul=function(e,t){return(t=t||new i).x=e.x*this.x,t.y=e.y*this.y,t.z=e.z*this.z,t},i.prototype.scale=i.prototype.mult,i.prototype.addScaledVector=function(e,t,n){return(n=n||new i).x=this.x+e*t.x,n.y=this.y+e*t.y,n.z=this.z+e*t.z,n},i.prototype.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z},i.prototype.isZero=function(){return 0===this.x&&0===this.y&&0===this.z},i.prototype.negate=function(e){return(e=e||new i).x=-this.x,e.y=-this.y,e.z=-this.z,e};var s=new i,o=new i;i.prototype.tangents=function(e,t){var n=this.norm();if(n>0){var i=s,r=1/n;i.set(this.x*r,this.y*r,this.z*r);var a=o;Math.abs(i.x)<.9?(a.set(1,0,0),i.cross(a,e)):(a.set(0,1,0),i.cross(a,e)),i.cross(e,t)}else e.set(1,0,0),t.set(0,1,0)},i.prototype.toString=function(){return this.x+","+this.y+","+this.z},i.prototype.toArray=function(){return[this.x,this.y,this.z]},i.prototype.copy=function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},i.prototype.lerp=function(e,t,n){var i=this.x,s=this.y,o=this.z;n.x=i+(e.x-i)*t,n.y=s+(e.y-s)*t,n.z=o+(e.z-o)*t},i.prototype.almostEquals=function(e,t){return void 0===t&&(t=1e-6),!(Math.abs(this.x-e.x)>t||Math.abs(this.y-e.y)>t||Math.abs(this.z-e.z)>t)},i.prototype.almostZero=function(e){return void 0===e&&(e=1e-6),!(Math.abs(this.x)>e||Math.abs(this.y)>e||Math.abs(this.z)>e)};var r=new i;i.prototype.isAntiparallelTo=function(e,t){return this.negate(r),r.almostEquals(e,t)},i.prototype.clone=function(){return new i(this.x,this.y,this.z)}},{"./Mat3":28}],32:[function(e,t){t.exports=u;var n=e("../utils/EventTarget"),i=e("../shapes/Shape"),s=e("../math/Vec3"),o=e("../math/Mat3"),r=e("../math/Quaternion"),a=(e("../material/Material"),e("../collision/AABB")),c=e("../shapes/Box"),l=e("../collision/RaycastResult"),h=e("../world/World");function u(e){e=e||{},n.apply(this),this.id=u.idCounter++,this.world=null,this.preStep=null,this.ccdSpeedThreshold=void 0!==e.ccdSpeedThreshold?e.ccdSpeedThreshold:-1,this.ccdIterations=void 0!==e.ccdIterations?e.ccdIterations:5,this.postStep=null,this.vlambda=new s,this.collisionFilterGroup="number"==typeof e.collisionFilterGroup?e.collisionFilterGroup:1,this.collisionFilterMask="number"==typeof e.collisionFilterMask?e.collisionFilterMask:-1,this.collisionResponse=!0,this.position=new s,this.previousPosition=new s,this.interpolatedPosition=new s,this.initPosition=new s,e.position&&(this.position.copy(e.position),this.previousPosition.copy(e.position),this.interpolatedPosition.copy(e.position),this.initPosition.copy(e.position)),this.velocity=new s,e.velocity&&this.velocity.copy(e.velocity),this.initVelocity=new s,this.force=new s;var t="number"==typeof e.mass?e.mass:0;this.mass=t,this.invMass=t>0?1/t:0,this.material=e.material||null,this.linearDamping="number"==typeof e.linearDamping?e.linearDamping:.01,this.type=t<=0?u.STATIC:u.DYNAMIC,typeof e.type==typeof u.STATIC&&(this.type=e.type),this.allowSleep=void 0===e.allowSleep||e.allowSleep,this.sleepState=0,this.sleepSpeedLimit=void 0!==e.sleepSpeedLimit?e.sleepSpeedLimit:.1,this.sleepTimeLimit=void 0!==e.sleepTimeLimit?e.sleepTimeLimit:1,this.timeLastSleepy=0,this._wakeUpAfterNarrowphase=!1,this.torque=new s,this.quaternion=new r,this.initQuaternion=new r,this.previousQuaternion=new r,this.interpolatedQuaternion=new r,e.quaternion&&(this.quaternion.copy(e.quaternion),this.initQuaternion.copy(e.quaternion),this.previousQuaternion.copy(e.quaternion),this.interpolatedQuaternion.copy(e.quaternion)),this.angularVelocity=new s,e.angularVelocity&&this.angularVelocity.copy(e.angularVelocity),this.initAngularVelocity=new s,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new s,this.invInertia=new s,this.invInertiaWorld=new o,this.invMassSolve=0,this.invInertiaSolve=new s,this.invInertiaWorldSolve=new o,this.fixedRotation=void 0!==e.fixedRotation&&e.fixedRotation,this.useGravity=!0,this.angularDamping=void 0!==e.angularDamping?e.angularDamping:.01,this.linearFactor=new s(1,1,1),e.linearFactor&&this.linearFactor.copy(e.linearFactor),this.angularFactor=new s(1,1,1),e.angularFactor&&this.angularFactor.copy(e.angularFactor),this.aabb=new a,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new s,e.shape&&this.addShape(e.shape),this.hasTrigger=!0,this.updateMassProperties()}u.prototype=new n,u.prototype.constructor=u,u.COLLIDE_EVENT_NAME="collide",u.DYNAMIC=1,u.STATIC=2,u.KINEMATIC=4,u.AWAKE=0,u.SLEEPY=1,u.SLEEPING=2,u.idCounter=0,u.wakeupEvent={type:"wakeup"},u.prototype.wakeUp=function(){var e=this.sleepState;this.sleepState=0,this._wakeUpAfterNarrowphase=!1,e===u.SLEEPING&&this.dispatchEvent(u.wakeupEvent)},u.prototype.sleep=function(){this.sleepState=u.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this._wakeUpAfterNarrowphase=!1},u.sleepyEvent={type:"sleepy"},u.sleepEvent={type:"sleep"},u.prototype.sleepTick=function(e){if(this.allowSleep){var t=this.sleepState,n=this.velocity.norm2()+this.angularVelocity.norm2(),i=Math.pow(this.sleepSpeedLimit,2);t===u.AWAKE&&n<i?(this.sleepState=u.SLEEPY,this.timeLastSleepy=e,this.dispatchEvent(u.sleepyEvent)):t===u.SLEEPY&&n>i?this.wakeUp():t===u.SLEEPY&&e-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(u.sleepEvent))}},u.prototype.updateSolveMassProperties=function(){this.sleepState===u.SLEEPING||this.type===u.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))},u.prototype.pointToLocalFrame=function(e,t){return t=t||new s,e.vsub(this.position,t),this.quaternion.conjugate().vmult(t,t),t},u.prototype.vectorToLocalFrame=function(e,t){return t=t||new s,this.quaternion.conjugate().vmult(e,t),t},u.prototype.pointToWorldFrame=function(e,t){return t=t||new s,this.quaternion.vmult(e,t),t.vadd(this.position,t),t},u.prototype.vectorToWorldFrame=function(e,t){return t=t||new s,this.quaternion.vmult(e,t),t};var _=new s,d=new r;u.prototype.addShape=function(e,t,n){var i=new s,o=new r;return t&&i.copy(t),n&&o.copy(n),this.shapes.push(e),this.shapeOffsets.push(i),this.shapeOrientations.push(o),this.aabbNeedsUpdate=!0,this.updateMassProperties(),this.updateBoundingRadius(),this.updateHasTrigger(),h.idToShapeMap[e.id]=e,e.body=this,this},u.prototype.removeShape=function(e){var t=this.shapes.indexOf(e);-1!==t&&(this.shapes.splice(t,1),this.shapeOffsets.splice(t,1),this.shapeOrientations.splice(t,1),this.aabbNeedsUpdate=!0,this.updateMassProperties(),this.updateBoundingRadius(),this.updateHasTrigger())},u.prototype.updateBoundingRadius=function(){for(var e=this.shapes,t=this.shapeOffsets,n=e.length,i=0,s=0;s!==n;s++){var o=e[s];o.updateBoundingSphereRadius();var r=t[s].norm(),a=o.boundingSphereRadius;r+a>i&&(i=r+a)}this.boundingRadius=i};var p=new a;u.prototype.computeAABB=function(){for(var e=this.shapes,t=this.shapeOffsets,n=this.shapeOrientations,i=e.length,s=_,o=d,r=this.quaternion,a=this.aabb,c=p,l=0;l!==i;l++){var h=e[l];r.vmult(t[l],s),s.vadd(this.position,s),n[l].mult(r,o),h.calculateWorldAABB(s,o,c.lowerBound,c.upperBound),0===l?a.copy(c):a.extend(c)}this.aabbNeedsUpdate=!1};var f=new o,m=new o;new o,u.prototype.updateInertiaWorld=function(e){var t=this.invInertia;if(t.x!==t.y||t.y!==t.z||e){var n=f,i=m;n.setRotationFromQuaternion(this.quaternion),n.transpose(i),n.scale(t,n),n.mmult(i,this.invInertiaWorld)}},new s;var g=new s;u.prototype.applyForce=function(e,t){if(this.type===u.DYNAMIC){var n=g;t.cross(e,n),this.force.vadd(e,this.force),this.torque.vadd(n,this.torque)}};var v=new s,y=new s;u.prototype.applyLocalForce=function(e,t){if(this.type===u.DYNAMIC){var n=v,i=y;this.vectorToWorldFrame(e,n),this.vectorToWorldFrame(t,i),this.applyForce(n,i)}},new s;var x=new s,S=new s;u.prototype.applyImpulse=function(e,t){if(this.type===u.DYNAMIC){var n=t,i=x;i.copy(e),i.mult(this.invMass,i),this.velocity.vadd(i,this.velocity);var s=S;n.cross(e,s),this.invInertiaWorld.vmult(s,s),this.angularVelocity.vadd(s,this.angularVelocity)}};var C=new s,E=new s;u.prototype.applyLocalImpulse=function(e,t){if(this.type===u.DYNAMIC){var n=C,i=E;this.vectorToWorldFrame(e,n),this.vectorToWorldFrame(t,i),this.applyImpulse(n,i)}};var T=new s;u.prototype.updateMassProperties=function(){var e=T;this.invMass=this.mass>0?1/this.mass:0;var t=this.inertia,n=this.fixedRotation;this.computeAABB(),e.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),c.calculateInertia(e,this.mass,t),this.invInertia.set(t.x>0&&!n?1/t.x:0,t.y>0&&!n?1/t.y:0,t.z>0&&!n?1/t.z:0),this.updateInertiaWorld(!0)},u.prototype.getVelocityAtWorldPoint=function(e,t){var n=new s;return e.vsub(this.position,n),this.angularVelocity.cross(n,t),this.velocity.vadd(t,t),t},new s,new s;var b=new s,A=(new r,new r);u.prototype.integrate=function(e,t,n){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),(this.type===u.DYNAMIC||h.integrateKinematic&&this.type===u.KINEMATIC)&&this.sleepState!==u.SLEEPING){var i=this.velocity,s=this.angularVelocity,o=this.position,r=this.force,a=this.torque,c=this.quaternion,l=this.invMass,_=this.invInertiaWorld,d=this.linearFactor,p=l*e;i.x+=r.x*p*d.x,i.y+=r.y*p*d.y,i.z+=r.z*p*d.z;var f=_.elements,m=this.angularFactor,g=a.x*m.x,v=a.y*m.y,y=a.z*m.z;s.x+=e*(f[0]*g+f[1]*v+f[2]*y),s.y+=e*(f[3]*g+f[4]*v+f[5]*y),s.z+=e*(f[6]*g+f[7]*v+f[8]*y),c.integrate(this.angularVelocity,e,this.angularFactor,c),t&&(n?c.normalizeFast():c.normalize()),this.type===u.DYNAMIC&&this.ccdSpeedThreshold>0&&this.velocity.length()>=Math.pow(this.ccdSpeedThreshold,2)&&this.integrateToTimeOfImpact(e)||(i.mult(e,b),o.vadd(b,o)),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}},u.prototype.updateKinematic=function(e){if(this.type===u.KINEMATIC&&0!==e){this.velocity.setZero(),this.angularVelocity.setZero();var t=1/e;this.previousPosition.almostEquals(this.position)||(this.position.vsub(this.previousPosition,this.velocity),this.velocity.mult(t,this.velocity),this.aabbNeedsUpdate=!0),this.previousQuaternion.euqals(this.quaternion)||(this.previousQuaternion.conjugate(A),A.mult(this.quaternion,A),A.toEuler(this.angularVelocity),this.angularVelocity.mult(t,this.angularVelocity),this.aabbNeedsUpdate=!0)}},u.prototype.applyGravity=function(e){if(this.type===u.DYNAMIC){if(1==this.linearDamping)this.force.setZero();else if(this.useGravity){var t=e.x,n=e.y,i=e.z,s=this.force,o=this.mass;s.x+=o*t,s.y+=o*n,s.z+=o*i}1==this.angularDamping&&this.torque.setZero()}};var P=new s,w=new s,I=new s,R=new s,D=new s,O=new s,N=new l,M=new l,L=new l,B=new s,F=new s,z=new s,U=new o;u.prototype.integrateToTimeOfImpact=function(e){P.copy(this.velocity),P.normalize(),this.velocity.mult(e,I),I.vadd(this.position,w),w.vsub(this.position,D);var t,n=D.length(),s=this.collisionFilterGroup;this.collisionFilterGroup=0;for(var o=1,r=0;r<this.shapes.length;r++){var a=this.shapes[r],c={collisionFilterMask:a.collisionFilterMask,collisionFilterGroup:a.collisionFilterGroup,skipBackfaces:!0};if(B.copy(this.position),B.vadd(D,F),u.DrawLine(B,F),this.world.raycastClosest(B,F,c,N),t=N.body,a.type===i.types.SPHERE&&(o=a.radius,h.ccdSphereAdvance)){if(z.copy(this.velocity),z.y=0,z.normalize(),B.copy(z),U.identity(),U.elements[0]=B.x,U.elements[1]=-B.z,U.elements[3]=B.z,U.elements[4]=B.x,R.set(0,a.radius,0),U.vmult(R,R),R.z=R.y,R.y=0,R.vadd(this.position,B),I.vadd(B,F),u.DrawLine(B,F),this.world.raycastClosest(B,F,c,M),R.negate(R),R.vadd(this.position,B),I.vadd(B,F),u.DrawLine(B,F),this.world.raycastClosest(B,F,c,L),M.hasHit){M.hitPointWorld.vsub(this.position,B);var l=P.dot(B);(!N.hasHit||N.distance>l)&&(N.hasHit=!0,N.distance=l,t=M.body,P.mult(l,B),B.vadd(this.position,N.hitPointWorld))}L.hasHit&&(L.hitPointWorld.vsub(this.position,B),l=P.dot(B),(!N.hasHit||N.distance>l)&&(N.hasHit=!0,N.distance=l,t=L.body,P.mult(l,B),B.vadd(this.position,N.hitPointWorld)))}if(t)break}if(this.collisionFilterGroup=s,!t)return!1;N.hasHit&&u.DrawSphere(N.hitPointWorld,.05),M.hasHit&&u.DrawSphere(M.hitPointWorld,.05),L.hasHit&&u.DrawSphere(L.hitPointWorld,.05);var _=1;(w=N.hitPointWorld).vsub(this.position,D),_=N.distance/n,O.copy(this.position);for(var d=0,p=0,f=_,m=1;m>=p&&d<this.ccdIterations;){d++,f=(m+p)/2,D.mult(f,b),O.vadd(b,this.position),this.computeAABB(),u.DrawSphere(this.position,o);var g=this.aabb.overlaps(t.aabb);if(g){var v=[];this.world.narrowphase.getContacts([this],[t],this.world,v,[],[],[]),g=v.length>0}g?m=f:p=f}return _=m,this.position.copy(O),D.mult(_,b),this.position.vadd(b,this.position),!0},u.DrawSphere=u.DrawLine=function(){},u.prototype.isSleeping=function(){return this.sleepState===u.SLEEPING},u.prototype.isSleepy=function(){return this.sleepState===u.SLEEPY},u.prototype.isAwake=function(){return this.sleepState===u.AWAKE},u.prototype.updateHasTrigger=function(){for(var e=this.shapes.length;e--&&(this.hasTrigger=!this.shapes[e].collisionResponse,!this.hasTrigger););}},{"../collision/AABB":3,"../collision/RaycastResult":11,"../material/Material":26,"../math/Mat3":28,"../math/Quaternion":29,"../math/Vec3":31,"../shapes/Box":38,"../shapes/Shape":44,"../utils/EventTarget":50,"../world/World":57}],33:[function(e,t){e("./Body");var n=e("../math/Vec3"),i=e("../math/Quaternion"),s=(e("../collision/RaycastResult"),e("../collision/Ray")),o=e("../objects/WheelInfo");function r(e){this.chassisBody=e.chassisBody,this.wheelInfos=[],this.sliding=!1,this.world=null,this.indexRightAxis=void 0!==e.indexRightAxis?e.indexRightAxis:1,this.indexForwardAxis=void 0!==e.indexForwardAxis?e.indexForwardAxis:0,this.indexUpAxis=void 0!==e.indexUpAxis?e.indexUpAxis:2}t.exports=r,new n,new n,new n;var a=new n,c=new n,l=new n;new s,r.prototype.addWheel=function(e){var t=new o(e=e||{}),n=this.wheelInfos.length;return this.wheelInfos.push(t),n},r.prototype.setSteeringValue=function(e,t){this.wheelInfos[t].steering=e},new n,r.prototype.applyEngineForce=function(e,t){this.wheelInfos[t].engineForce=e},r.prototype.setBrake=function(e,t){this.wheelInfos[t].brake=e},r.prototype.addToWorld=function(e){this.constraints,e.addBody(this.chassisBody);var t=this;this.preStepCallback=function(){t.updateVehicle(e.dt)},e.addEventListener("preStep",this.preStepCallback),this.world=e},r.prototype.getVehicleAxisWorld=function(e,t){t.set(0===e?1:0,1===e?1:0,2===e?1:0),this.chassisBody.vectorToWorldFrame(t,t)},r.prototype.updateVehicle=function(e){for(var t=this.wheelInfos,i=t.length,s=this.chassisBody,o=0;o<i;o++)this.updateWheelTransform(o);this.currentVehicleSpeedKmHour=3.6*s.velocity.norm();var r=new n;for(this.getVehicleAxisWorld(this.indexForwardAxis,r),r.dot(s.velocity)<0&&(this.currentVehicleSpeedKmHour*=-1),o=0;o<i;o++)this.castRay(t[o]);this.updateSuspension(e);var a=new n,c=new n;for(o=0;o<i;o++){var l=(d=t[o]).suspensionForce;l>d.maxSuspensionForce&&(l=d.maxSuspensionForce),d.raycastResult.hitNormalWorld.scale(l*e,a),d.raycastResult.hitPointWorld.vsub(s.position,c),s.applyImpulse(a,c)}this.updateFriction(e);var h=new n,u=new n,_=new n;for(o=0;o<i;o++){var d=t[o];s.getVelocityAtWorldPoint(d.chassisConnectionPointWorld,_);var p=1;switch(this.indexUpAxis){case 1:p=-1}if(d.isInContact){this.getVehicleAxisWorld(this.indexForwardAxis,u);var f=u.dot(d.raycastResult.hitNormalWorld);d.raycastResult.hitNormalWorld.scale(f,h),u.vsub(h,u);var m=u.dot(_);d.deltaRotation=p*m*e/d.radius}!d.sliding&&d.isInContact||0===d.engineForce||!d.useCustomSlidingRotationalSpeed||(d.deltaRotation=(d.engineForce>0?1:-1)*d.customSlidingRotationalSpeed*e),Math.abs(d.brake)>Math.abs(d.engineForce)&&(d.deltaRotation=0),d.rotation+=d.deltaRotation,d.deltaRotation*=.99}},r.prototype.updateSuspension=function(){for(var e=this.chassisBody.mass,t=this.wheelInfos,n=t.length,i=0;i<n;i++){var s=t[i];if(s.isInContact){var o,r=s.suspensionRestLength-s.suspensionLength;o=s.suspensionStiffness*r*s.clippedInvContactDotSuspension;var a=s.suspensionRelativeVelocity;o-=(a<0?s.dampingCompression:s.dampingRelaxation)*a,s.suspensionForce=o*e,s.suspensionForce<0&&(s.suspensionForce=0)}else s.suspensionForce=0}},r.prototype.removeFromWorld=function(e){this.constraints,e.remove(this.chassisBody),e.removeEventListener("preStep",this.preStepCallback),this.world=null};var h=new n,u=new n;r.prototype.castRay=function(e){var t=h,i=u;this.updateWheelTransformWorld(e);var s=this.chassisBody,o=-1,r=e.suspensionRestLength+e.radius;e.directionWorld.scale(r,t);var a=e.chassisConnectionPointWorld;a.vadd(t,i);var c=e.raycastResult;c.reset();var l=s.collisionResponse;s.collisionResponse=!1,this.world.rayTest(a,i,c),s.collisionResponse=l;var _=c.body;if(e.raycastResult.groundObject=0,_){o=c.distance,e.raycastResult.hitNormalWorld=c.hitNormalWorld,e.isInContact=!0;var d=c.distance;e.suspensionLength=d-e.radius;var p=e.suspensionRestLength-e.maxSuspensionTravel,f=e.suspensionRestLength+e.maxSuspensionTravel;e.suspensionLength<p&&(e.suspensionLength=p),e.suspensionLength>f&&(e.suspensionLength=f,e.raycastResult.reset());var m=e.raycastResult.hitNormalWorld.dot(e.directionWorld),g=new n;s.getVelocityAtWorldPoint(e.raycastResult.hitPointWorld,g);var v=e.raycastResult.hitNormalWorld.dot(g);if(m>=-.1)e.suspensionRelativeVelocity=0,e.clippedInvContactDotSuspension=10;else{var y=-1/m;e.suspensionRelativeVelocity=v*y,e.clippedInvContactDotSuspension=y}}else e.suspensionLength=e.suspensionRestLength+0*e.maxSuspensionTravel,e.suspensionRelativeVelocity=0,e.directionWorld.scale(-1,e.raycastResult.hitNormalWorld),e.clippedInvContactDotSuspension=1;return o},r.prototype.updateWheelTransformWorld=function(e){e.isInContact=!1;var t=this.chassisBody;t.pointToWorldFrame(e.chassisConnectionPointLocal,e.chassisConnectionPointWorld),t.vectorToWorldFrame(e.directionLocal,e.directionWorld),t.vectorToWorldFrame(e.axleLocal,e.axleWorld)},r.prototype.updateWheelTransform=function(e){var t=a,n=c,s=l,o=this.wheelInfos[e];this.updateWheelTransformWorld(o),o.directionLocal.scale(-1,t),n.copy(o.axleLocal),t.cross(n,s),s.normalize(),n.normalize();var r=o.steering,h=new i;h.setFromAxisAngle(t,r);var u=new i;u.setFromAxisAngle(n,o.rotation);var _=o.worldTransform.quaternion;this.chassisBody.quaternion.mult(h,_),_.mult(u,_),_.normalize();var d=o.worldTransform.position;d.copy(o.directionWorld),d.scale(o.suspensionLength,d),d.vadd(o.chassisConnectionPointWorld,d)};var _=[new n(1,0,0),new n(0,1,0),new n(0,0,1)];r.prototype.getWheelTransformWorld=function(e){return this.wheelInfos[e].worldTransform};var d=new n,p=[],f=[],m=1;r.prototype.updateFriction=function(e){for(var t=d,i=this.wheelInfos,s=i.length,o=this.chassisBody,r=f,a=p,c=0;c<s;c++){var l=(D=i[c]).raycastResult.body;D.sideImpulse=0,D.forwardImpulse=0,r[c]||(r[c]=new n),a[c]||(a[c]=new n)}for(c=0;c<s;c++)if(l=(D=i[c]).raycastResult.body){var h=a[c];this.getWheelTransformWorld(c).vectorToWorldFrame(_[this.indexRightAxis],h);var u=D.raycastResult.hitNormalWorld,g=h.dot(u);u.scale(g,t),h.vsub(t,h),h.normalize(),u.cross(h,r[c]),r[c].normalize(),D.sideImpulse=I(o,D.raycastResult.hitPointWorld,l,D.raycastResult.hitPointWorld,h),D.sideImpulse*=m}var v=1,y=.5;for(this.sliding=!1,c=0;c<s;c++){l=(D=i[c]).raycastResult.body;var S=0;if(D.slipInfo=1,l){var C=0,E=D.brake?D.brake:C;S=x(o,l,D.raycastResult.hitPointWorld,r[c],E);var T=E/(S+=D.engineForce*e);D.slipInfo*=T}if(D.forwardImpulse=0,D.skidInfo=1,l){D.skidInfo=1;var b=D.suspensionForce*e*D.frictionSlip,A=b*b;D.forwardImpulse=S;var P=D.forwardImpulse*y,w=D.sideImpulse*v,R=P*P+w*w;D.sliding=!1,R>A&&(this.sliding=!0,D.sliding=!0,T=b/Math.sqrt(R),D.skidInfo*=T)}}if(this.sliding)for(c=0;c<s;c++)0!==(D=i[c]).sideImpulse&&D.skidInfo<1&&(D.forwardImpulse*=D.skidInfo,D.sideImpulse*=D.skidInfo);for(c=0;c<s;c++){var D=i[c],O=new n;if(D.raycastResult.hitPointWorld.vsub(o.position,O),0!==D.forwardImpulse){var N=new n;r[c].scale(D.forwardImpulse,N),o.applyImpulse(N,O)}if(0!==D.sideImpulse){l=D.raycastResult.body;var M=new n;D.raycastResult.hitPointWorld.vsub(l.position,M);var L=new n;a[c].scale(D.sideImpulse,L),o.vectorToLocalFrame(O,O),O["xyz"[this.indexUpAxis]]*=D.rollInfluence,o.vectorToWorldFrame(O,O),o.applyImpulse(L,O),L.scale(-1,L),l.applyImpulse(L,M)}}};var g=new n,v=new n,y=new n;function x(e,t,n,i,s){var o=0,r=n,a=g,c=v,l=y;return e.getVelocityAtWorldPoint(r,a),t.getVelocityAtWorldPoint(r,c),a.vsub(c,l),s<(o=-i.dot(l)*(1/(b(e,n,i)+b(t,n,i))))&&(o=s),o<-s&&(o=-s),o}var S=new n,C=new n,E=new n,T=new n;function b(e,t,n){var i=S,s=C,o=E,r=T;return t.vsub(e.position,i),i.cross(n,s),e.invInertiaWorld.vmult(s,r),r.cross(i,o),e.invMass+n.dot(o)}var A=new n,P=new n,w=new n;function I(e,t,n,i,s){if(s.norm2()>1.1)return 0;var o=A,r=P,a=w;return e.getVelocityAtWorldPoint(t,o),n.getVelocityAtWorldPoint(i,r),o.vsub(r,a),-.2*s.dot(a)*(1/(e.invMass+n.invMass))}},{"../collision/Ray":10,"../collision/RaycastResult":11,"../math/Quaternion":29,"../math/Vec3":31,"../objects/WheelInfo":37,"./Body":32}],34:[function(e,t){var n=e("./Body"),i=e("../shapes/Sphere"),s=e("../shapes/Box"),o=e("../math/Vec3"),r=e("../constraints/HingeConstraint");function a(e){if(this.wheelBodies=[],this.coordinateSystem=void 0===e.coordinateSystem?new o(1,2,3):e.coordinateSystem.clone(),this.chassisBody=e.chassisBody,!this.chassisBody){var t=new s(new o(5,2,.5));this.chassisBody=new n(1,t)}this.constraints=[],this.wheelAxes=[],this.wheelForces=[]}t.exports=a,a.prototype.addWheel=function(e){var t=(e=e||{}).body;t||(t=new n(1,new i(1.2))),this.wheelBodies.push(t),this.wheelForces.push(0),new o;var s=void 0!==e.position?e.position.clone():new o,a=new o;this.chassisBody.pointToWorldFrame(s,a),t.position.set(a.x,a.y,a.z);var c=void 0!==e.axis?e.axis.clone():new o(0,1,0);this.wheelAxes.push(c);var l=new r(this.chassisBody,t,{pivotA:s,axisA:c,pivotB:o.ZERO,axisB:c,collideConnected:!1});return this.constraints.push(l),this.wheelBodies.length-1},a.prototype.setSteeringValue=function(e,t){var n=this.wheelAxes[t],i=Math.cos(e),s=Math.sin(e),o=n.x,r=n.y;this.constraints[t].axisA.set(i*o-s*r,s*o+i*r,0)},a.prototype.setMotorSpeed=function(e,t){var n=this.constraints[t];n.enableMotor(),n.motorTargetVelocity=e},a.prototype.disableMotor=function(e){this.constraints[e].disableMotor()};var c=new o;a.prototype.setWheelForce=function(e,t){this.wheelForces[t]=e},a.prototype.applyWheelForce=function(e,t){var n=this.wheelAxes[t],i=this.wheelBodies[t],s=i.torque;n.scale(e,c),i.vectorToWorldFrame(c,c),s.vadd(c,s)},a.prototype.addToWorld=function(e){for(var t=this.constraints,n=this.wheelBodies.concat([this.chassisBody]),i=0;i<n.length;i++)e.addBody(n[i]);for(i=0;i<t.length;i++)e.addConstraint(t[i]);e.addEventListener("preStep",this._update.bind(this))},a.prototype._update=function(){for(var e=this.wheelForces,t=0;t<e.length;t++)this.applyWheelForce(e[t],t)},a.prototype.removeFromWorld=function(e){for(var t=this.constraints,n=this.wheelBodies.concat([this.chassisBody]),i=0;i<n.length;i++)e.remove(n[i]);for(i=0;i<t.length;i++)e.removeConstraint(t[i])};var l=new o;a.prototype.getWheelSpeed=function(e){var t=this.wheelAxes[e],n=this.wheelBodies[e].angularVelocity;return this.chassisBody.vectorToWorldFrame(t,l),n.dot(l)}},{"../constraints/HingeConstraint":16,"../math/Vec3":31,"../shapes/Box":38,"../shapes/Sphere":45,"./Body":32}],35:[function(e,t){t.exports=i,e("../shapes/Shape");var n=e("../math/Vec3");function i(){this.particles=[],this.density=1,this.smoothingRadius=1,this.speedOfSound=1,this.viscosity=.01,this.eps=1e-6,this.pressures=[],this.densities=[],this.neighbors=[]}e("../math/Quaternion"),e("../shapes/Particle"),e("../objects/Body"),e("../material/Material"),i.prototype.add=function(e){this.particles.push(e),this.neighbors.length<this.particles.length&&this.neighbors.push([])},i.prototype.remove=function(e){var t=this.particles.indexOf(e);-1!==t&&(this.particles.splice(t,1),this.neighbors.length>this.particles.length&&this.neighbors.pop())};var s=new n;i.prototype.getNeighbors=function(e,t){for(var n=this.particles.length,i=e.id,o=this.smoothingRadius*this.smoothingRadius,r=s,a=0;a!==n;a++){var c=this.particles[a];c.position.vsub(e.position,r),i!==c.id&&r.norm2()<o&&t.push(c)}};var o=new n,r=new n,a=new n,c=new n,l=new n,h=new n;i.prototype.update=function(){for(var e=this.particles.length,t=o,n=this.speedOfSound,i=this.eps,s=0;s!==e;s++){var u=this.particles[s];(T=this.neighbors[s]).length=0,this.getNeighbors(u,T),T.push(this.particles[s]);for(var _=T.length,d=0,p=0;p!==_;p++){u.position.vsub(T[p].position,t);var f=t.norm(),m=this.w(f);d+=T[p].mass*m}this.densities[s]=d,this.pressures[s]=n*n*(this.densities[s]-this.density)}var g=r,v=a,y=c,x=l,S=h;for(s=0;s!==e;s++){var C,E,T,b=this.particles[s];for(g.set(0,0,0),v.set(0,0,0),_=(T=this.neighbors[s]).length,p=0;p!==_;p++){var A=T[p];b.position.vsub(A.position,x);var P=x.norm();C=-A.mass*(this.pressures[s]/(this.densities[s]*this.densities[s]+i)+this.pressures[p]/(this.densities[p]*this.densities[p]+i)),this.gradw(x,y),y.mult(C,y),g.vadd(y,g),A.velocity.vsub(b.velocity,S),S.mult(1/(1e-4+this.densities[s]*this.densities[p])*this.viscosity*A.mass,S),E=this.nablaw(P),S.mult(E,S),v.vadd(S,v)}v.mult(b.mass,v),g.mult(b.mass,g),b.force.vadd(v,b.force),b.force.vadd(g,b.force)}},i.prototype.w=function(e){var t=this.smoothingRadius;return 315/(64*Math.PI*Math.pow(t,9))*Math.pow(t*t-e*e,3)},i.prototype.gradw=function(e,t){var n=e.norm(),i=this.smoothingRadius;e.mult(945/(32*Math.PI*Math.pow(i,9))*Math.pow(i*i-n*n,2),t)},i.prototype.nablaw=function(e){var t=this.smoothingRadius;return 945/(32*Math.PI*Math.pow(t,9))*(t*t-e*e)*(7*e*e-3*t*t)}},{"../material/Material":26,"../math/Quaternion":29,"../math/Vec3":31,"../objects/Body":32,"../shapes/Particle":42,"../shapes/Shape":44}],36:[function(e,t){var n=e("../math/Vec3");function i(e,t,i){i=i||{},this.restLength="number"==typeof i.restLength?i.restLength:1,this.stiffness=i.stiffness||100,this.damping=i.damping||1,this.bodyA=e,this.bodyB=t,this.localAnchorA=new n,this.localAnchorB=new n,i.localAnchorA&&this.localAnchorA.copy(i.localAnchorA),i.localAnchorB&&this.localAnchorB.copy(i.localAnchorB),i.worldAnchorA&&this.setWorldAnchorA(i.worldAnchorA),i.worldAnchorB&&this.setWorldAnchorB(i.worldAnchorB)}t.exports=i,i.prototype.setWorldAnchorA=function(e){this.bodyA.pointToLocalFrame(e,this.localAnchorA)},i.prototype.setWorldAnchorB=function(e){this.bodyB.pointToLocalFrame(e,this.localAnchorB)},i.prototype.getWorldAnchorA=function(e){this.bodyA.pointToWorldFrame(this.localAnchorA,e)},i.prototype.getWorldAnchorB=function(e){this.bodyB.pointToWorldFrame(this.localAnchorB,e)};var s=new n,o=new n,r=new n,a=new n,c=new n,l=new n,h=new n,u=new n,_=new n,d=new n,p=new n;i.prototype.applyForce=function(){var e=this.stiffness,t=this.damping,n=this.restLength,i=this.bodyA,f=this.bodyB,m=s,g=o,v=r,y=a,x=p,S=c,C=l,E=h,T=u,b=_,A=d;this.getWorldAnchorA(S),this.getWorldAnchorB(C),S.vsub(i.position,E),C.vsub(f.position,T),C.vsub(S,m);var P=m.norm();g.copy(m),g.normalize(),f.velocity.vsub(i.velocity,v),f.angularVelocity.cross(T,x),v.vadd(x,v),i.angularVelocity.cross(E,x),v.vsub(x,v),g.mult(-e*(P-n)-t*v.dot(g),y),i.force.vsub(y,i.force),f.force.vadd(y,f.force),E.cross(y,b),T.cross(y,A),i.torque.vsub(b,i.torque),f.torque.vadd(A,f.torque)}},{"../math/Vec3":31}],37:[function(e,t){var n=e("../math/Vec3"),i=e("../math/Transform"),s=e("../collision/RaycastResult"),o=e("../utils/Utils");function r(e){e=o.defaults(e,{chassisConnectionPointLocal:new n,chassisConnectionPointWorld:new n,directionLocal:new n,directionWorld:new n,axleLocal:new n,axleWorld:new n,suspensionRestLength:1,suspensionMaxLength:2,radius:1,suspensionStiffness:100,dampingCompression:10,dampingRelaxation:10,frictionSlip:1e4,steering:0,rotation:0,deltaRotation:0,rollInfluence:.01,maxSuspensionForce:Number.MAX_VALUE,isFrontWheel:!0,clippedInvContactDotSuspension:1,suspensionRelativeVelocity:0,suspensionForce:0,skidInfo:0,suspensionLength:0,maxSuspensionTravel:1,useCustomSlidingRotationalSpeed:!1,customSlidingRotationalSpeed:-.1}),this.maxSuspensionTravel=e.maxSuspensionTravel,this.customSlidingRotationalSpeed=e.customSlidingRotationalSpeed,this.useCustomSlidingRotationalSpeed=e.useCustomSlidingRotationalSpeed,this.sliding=!1,this.chassisConnectionPointLocal=e.chassisConnectionPointLocal.clone(),this.chassisConnectionPointWorld=e.chassisConnectionPointWorld.clone(),this.directionLocal=e.directionLocal.clone(),this.directionWorld=e.directionWorld.clone(),this.axleLocal=e.axleLocal.clone(),this.axleWorld=e.axleWorld.clone(),this.suspensionRestLength=e.suspensionRestLength,this.suspensionMaxLength=e.suspensionMaxLength,this.radius=e.radius,this.suspensionStiffness=e.suspensionStiffness,this.dampingCompression=e.dampingCompression,this.dampingRelaxation=e.dampingRelaxation,this.frictionSlip=e.frictionSlip,this.steering=0,this.rotation=0,this.deltaRotation=0,this.rollInfluence=e.rollInfluence,this.maxSuspensionForce=e.maxSuspensionForce,this.engineForce=0,this.brake=0,this.isFrontWheel=e.isFrontWheel,this.clippedInvContactDotSuspension=1,this.suspensionRelativeVelocity=0,this.suspensionForce=0,this.skidInfo=0,this.suspensionLength=0,this.sideImpulse=0,this.forwardImpulse=0,this.raycastResult=new s,this.worldTransform=new i,this.isInContact=!1}t.exports=r;var a=new n,c=new n;a=new n,r.prototype.updateWheel=function(e){var t=this.raycastResult;if(this.isInContact){var n=t.hitNormalWorld.dot(t.directionWorld);t.hitPointWorld.vsub(e.position,c),e.getVelocityAtWorldPoint(c,a);var i=t.hitNormalWorld.dot(a);if(n>=-.1)this.suspensionRelativeVelocity=0,this.clippedInvContactDotSuspension=10;else{var s=-1/n;this.suspensionRelativeVelocity=i*s,this.clippedInvContactDotSuspension=s}}else t.suspensionLength=this.suspensionRestLength,this.suspensionRelativeVelocity=0,t.directionWorld.scale(-1,t.hitNormalWorld),this.clippedInvContactDotSuspension=1}},{"../collision/RaycastResult":11,"../math/Transform":30,"../math/Vec3":31,"../utils/Utils":54}],38:[function(e,t){t.exports=o;var n=e("./Shape"),i=e("../math/Vec3"),s=e("./ConvexPolyhedron");function o(e){n.call(this,{type:n.types.BOX}),this.halfExtents=e,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}o.prototype=new n,o.prototype.constructor=o,o.prototype.updateConvexPolyhedronRepresentation=function(){var e=this.halfExtents.x,t=this.halfExtents.y,n=this.halfExtents.z,o=i,r=[new o(-e,-t,-n),new o(e,-t,-n),new o(e,t,-n),new o(-e,t,-n),new o(-e,-t,n),new o(e,-t,n),new o(e,t,n),new o(-e,t,n)],a=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],c=(new o(0,0,1),new o(0,1,0),new o(1,0,0),new s(r,a));this.convexPolyhedronRepresentation=c,c.material=this.material},o.prototype.calculateLocalInertia=function(e,t){return t=t||new i,o.calculateInertia(this.halfExtents,e,t),t},o.calculateInertia=function(e,t,n){var i=e;i.isZero()?(n.x=2/12*t,n.y=2/12*t,n.z=2/12*t):(n.x=1/12*t*(4*i.y*i.y+4*i.z*i.z),n.y=1/12*t*(4*i.x*i.x+4*i.z*i.z),n.z=1/12*t*(4*i.y*i.y+4*i.x*i.x))},o.prototype.getSideNormals=function(e,t){var n=e,i=this.halfExtents;if(n[0].set(i.x,0,0),n[1].set(0,i.y,0),n[2].set(0,0,i.z),n[3].set(-i.x,0,0),n[4].set(0,-i.y,0),n[5].set(0,0,-i.z),void 0!==t)for(var s=0;s!==n.length;s++)t.vmult(n[s],n[s]);return n},o.prototype.volume=function(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z},o.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=this.halfExtents.norm()};var r=new i;new i,o.prototype.forEachWorldCorner=function(e,t,n){for(var i=this.halfExtents,s=[[i.x,i.y,i.z],[-i.x,i.y,i.z],[-i.x,-i.y,i.z],[-i.x,-i.y,-i.z],[i.x,-i.y,-i.z],[i.x,i.y,-i.z],[-i.x,i.y,-i.z],[i.x,-i.y,i.z]],o=0;o<s.length;o++)r.set(s[o][0],s[o][1],s[o][2]),t.vmult(r,r),e.vadd(r,r),n(r.x,r.y,r.z)};var a=[new i,new i,new i,new i,new i,new i,new i,new i];o.prototype.calculateWorldAABB=function(e,t,n,i){var s=this.halfExtents;a[0].set(s.x,s.y,s.z),a[1].set(-s.x,s.y,s.z),a[2].set(-s.x,-s.y,s.z),a[3].set(-s.x,-s.y,-s.z),a[4].set(s.x,-s.y,-s.z),a[5].set(s.x,s.y,-s.z),a[6].set(-s.x,s.y,-s.z),a[7].set(s.x,-s.y,s.z);var o=a[0];t.vmult(o,o),e.vadd(o,o),i.copy(o),n.copy(o);for(var r=1;r<8;r++){o=a[r],t.vmult(o,o),e.vadd(o,o);var c=o.x,l=o.y,h=o.z;c>i.x&&(i.x=c),l>i.y&&(i.y=l),h>i.z&&(i.z=h),c<n.x&&(n.x=c),l<n.y&&(n.y=l),h<n.z&&(n.z=h)}}},{"../math/Vec3":31,"./ConvexPolyhedron":39,"./Shape":44}],39:[function(e,t){t.exports=o;var n=e("./Shape"),i=e("../math/Vec3"),s=(e("../math/Quaternion"),e("../math/Transform"));function o(e,t,i){n.call(this,{type:n.types.CONVEXPOLYHEDRON}),this.vertices=e||[],this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.faces=t||[],this.faceNormals=[],this.computeNormals(),this.worldFaceNormalsNeedsUpdate=!0,this.worldFaceNormals=[],this.uniqueEdges=[],this.uniqueAxes=i?i.slice():null,this.computeEdges(),this.updateBoundingSphereRadius()}o.prototype=new n,o.prototype.constructor=o;var r=new i;o.prototype.computeEdges=function(){var e=this.faces,t=this.vertices,n=(t.length,this.uniqueEdges);n.length=0;for(var i=r,s=0;s!==e.length;s++)for(var o=e[s],a=o.length,c=0;c!==a;c++){var l=(c+1)%a;t[o[c]].vsub(t[o[l]],i),i.normalize();for(var h=!1,u=0;u!==n.length;u++)if(n[u].almostEquals(i)||n[u].almostEquals(i)){h=!0;break}h||n.push(i.clone())}},o.prototype.computeNormals=function(){this.faceNormals.length=this.faces.length;for(var e=0;e<this.faces.length;e++){for(var t=0;t<this.faces[e].length;t++)if(!this.vertices[this.faces[e][t]])throw new Error("Vertex "+this.faces[e][t]+" not found!");var n=this.faceNormals[e]||new i;this.getFaceNormal(e,n),n.negate(n),this.faceNormals[e]=n}};var a=new i,c=new i;o.computeNormal=function(e,t,n,i){t.vsub(e,c),n.vsub(t,a),a.cross(c,i),i.isZero()||i.normalize()},o.prototype.getFaceNormal=function(e,t){var n=this.faces[e],i=this.vertices[n[0]],s=this.vertices[n[1]],r=this.vertices[n[2]];return o.computeNormal(i,s,r,t)};var l=new i;o.prototype.clipAgainstHull=function(e,t,n,s,o,r,a,c,h){for(var u=l,_=-1,d=-Number.MAX_VALUE,p=0;p<n.faces.length;p++){u.copy(n.faceNormals[p]),o.vmult(u,u);var f=u.dot(r);f>d&&(d=f,_=p)}for(var m=[],g=n.faces[_],v=g.length,y=0;y<v;y++){var x=n.vertices[g[y]],S=new i;S.copy(x),o.vmult(S,S),s.vadd(S,S),m.push(S)}_>=0&&this.clipFaceAgainstHull(r,e,t,m,a,c,h)};var h=new i,u=new i,_=new i,d=new i,p=new i,f=new i;o.prototype.findSeparatingAxis=function(e,t,n,i,s,o,r,a){var c=h,l=u,m=_,g=d,v=p,y=f,x=Number.MAX_VALUE,S=this;if(S.uniqueAxes)for(E=0;E!==S.uniqueAxes.length;E++){if(n.vmult(S.uniqueAxes[E],c),!1===(A=S.testSepAxis(c,e,t,n,i,s)))return!1;A<x&&(x=A,o.copy(c))}else for(var C=r?r.length:S.faces.length,E=0;E<C;E++){var T=r?r[E]:E;if(c.copy(S.faceNormals[T]),n.vmult(c,c),!1===(A=S.testSepAxis(c,e,t,n,i,s)))return!1;A<x&&(x=A,o.copy(c))}if(e.uniqueAxes)for(E=0;E!==e.uniqueAxes.length;E++){if(s.vmult(e.uniqueAxes[E],l),!1===(A=S.testSepAxis(l,e,t,n,i,s)))return!1;A<x&&(x=A,o.copy(l))}else{var b=a?a.length:e.faces.length;for(E=0;E<b;E++){var A;if(T=a?a[E]:E,l.copy(e.faceNormals[T]),s.vmult(l,l),!1===(A=S.testSepAxis(l,e,t,n,i,s)))return!1;A<x&&(x=A,o.copy(l))}}for(var P=0;P!==S.uniqueEdges.length;P++){n.vmult(S.uniqueEdges[P],g);for(var w=0;w!==e.uniqueEdges.length;w++)if(s.vmult(e.uniqueEdges[w],v),g.cross(v,y),!y.almostZero()){y.normalize();var I=S.testSepAxis(y,e,t,n,i,s);if(!1===I)return!1;I<x&&(x=I,o.copy(y))}}return i.vsub(t,m),m.dot(o)>0&&o.negate(o),!0};var m=[],g=[];o.prototype.testSepAxis=function(e,t,n,i,s,r){var a=this;o.project(a,e,n,i,m),o.project(t,e,s,r,g);var c=m[0],l=m[1],h=g[0],u=g[1];if(c<u||h<l)return!1;var _=c-u,d=h-l;return _<d?_:d};var v=new i,y=new i;o.prototype.calculateLocalInertia=function(e,t){this.computeLocalAABB(v,y);var n=y.x-v.x,i=y.y-v.y,s=y.z-v.z;t.x=1/12*e*(4*i*i+4*s*s),t.y=1/12*e*(4*n*n+4*s*s),t.z=1/12*e*(4*i*i+4*n*n)},o.prototype.getPlaneConstantOfFace=function(e){var t=this.faces[e],n=this.faceNormals[e],i=this.vertices[t[0]];return-n.dot(i)};var x=new i,S=new i,C=new i,E=new i,T=new i,b=new i,A=new i,P=new i;o.prototype.clipFaceAgainstHull=function(e,t,n,i,s,o,r){for(var a=x,c=S,l=C,h=E,u=T,_=b,d=A,p=P,f=this,m=i,g=[],v=-1,y=Number.MAX_VALUE,w=0;w<f.faces.length;w++){a.copy(f.faceNormals[w]),n.vmult(a,a);var I=a.dot(e);I<y&&(y=I,v=w)}if(!(v<0)){var R=f.faces[v];R.connectedFaces=[];for(var D=0;D<f.faces.length;D++)for(var O=0;O<f.faces[D].length;O++)-1!==R.indexOf(f.faces[D][O])&&D!==v&&-1===R.connectedFaces.indexOf(D)&&R.connectedFaces.push(D);m.length;for(var N=R.length,M=0;M<N;M++){var L=f.vertices[R[M]],B=f.vertices[R[(M+1)%N]];L.vsub(B,c),l.copy(c),n.vmult(l,l),t.vadd(l,l),h.copy(this.faceNormals[v]),n.vmult(h,h),t.vadd(h,h),l.cross(h,u),u.negate(u),_.copy(L),n.vmult(_,_),t.vadd(_,_),_.dot(u);var F=R.connectedFaces[M];d.copy(this.faceNormals[F]);var z=this.getPlaneConstantOfFace(F);p.copy(d),n.vmult(p,p);var U=z-p.dot(t);for(this.clipFaceAgainstPlane(m,g,p,U);m.length;)m.shift();for(;g.length;)m.push(g.shift())}for(d.copy(this.faceNormals[v]),z=this.getPlaneConstantOfFace(v),p.copy(d),n.vmult(p,p),U=z-p.dot(t),D=0;D<m.length;D++){var G=p.dot(m[D])+U;if(G<=s&&(G=s),G<=o){var V=m[D];if(G<=0){var H={point:V,normal:p,depth:G};r.push(H)}}}}},o.prototype.clipFaceAgainstPlane=function(e,t,n,s){var o,r,a=e.length;if(a<2)return t;var c=e[e.length-1],l=e[0];o=n.dot(c)+s;for(var h=0;h<a;h++){if(l=e[h],r=n.dot(l)+s,o<0)if(r<0)(u=new i).copy(l),t.push(u);else{var u=new i;c.lerp(l,o/(o-r),u),t.push(u)}else r<0&&(u=new i,c.lerp(l,o/(o-r),u),t.push(u),t.push(l));c=l,o=r}return t},o.prototype.computeWorldVertices=function(e,t){for(var n=this.vertices.length;this.worldVertices.length<n;)this.worldVertices.push(new i);for(var s=this.vertices,o=this.worldVertices,r=0;r!==n;r++)t.vmult(s[r],o[r]),e.vadd(o[r],o[r]);this.worldVerticesNeedsUpdate=!1},new i,o.prototype.computeLocalAABB=function(e,t){var n=this.vertices.length,i=this.vertices;e.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),t.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(var s=0;s<n;s++){var o=i[s];o.x<e.x?e.x=o.x:o.x>t.x&&(t.x=o.x),o.y<e.y?e.y=o.y:o.y>t.y&&(t.y=o.y),o.z<e.z?e.z=o.z:o.z>t.z&&(t.z=o.z)}},o.prototype.computeWorldFaceNormals=function(e){for(var t=this.faceNormals.length;this.worldFaceNormals.length<t;)this.worldFaceNormals.push(new i);for(var n=this.faceNormals,s=this.worldFaceNormals,o=0;o!==t;o++)e.vmult(n[o],s[o]);this.worldFaceNormalsNeedsUpdate=!1},o.prototype.updateBoundingSphereRadius=function(){for(var e=0,t=this.vertices,n=0,i=t.length;n!==i;n++){var s=t[n].norm2();s>e&&(e=s)}this.boundingSphereRadius=Math.sqrt(e)};var w=new i;o.prototype.calculateWorldAABB=function(e,t,n,i){for(var s,o,r,a,c,l,h=this.vertices.length,u=this.vertices,_=0;_<h;_++){w.copy(u[_]),t.vmult(w,w),e.vadd(w,w);var d=w;(d.x<s||void 0===s)&&(s=d.x),(d.x>a||void 0===a)&&(a=d.x),(d.y<o||void 0===o)&&(o=d.y),(d.y>c||void 0===c)&&(c=d.y),(d.z<r||void 0===r)&&(r=d.z),(d.z>l||void 0===l)&&(l=d.z)}n.set(s,o,r),i.set(a,c,l)},o.prototype.volume=function(){return 4*Math.PI*this.boundingSphereRadius/3},o.prototype.getAveragePointLocal=function(e){e=e||new i;for(var t=this.vertices.length,n=this.vertices,s=0;s<t;s++)e.vadd(n[s],e);return e.mult(1/t,e),e},o.prototype.transformAllPoints=function(e,t){var n=this.vertices.length,i=this.vertices;if(t){for(var s=0;s<n;s++){var o=i[s];t.vmult(o,o)}for(s=0;s<this.faceNormals.length;s++)o=this.faceNormals[s],t.vmult(o,o)}if(e)for(s=0;s<n;s++)(o=i[s]).vadd(e,o)};var I=new i,R=new i,D=new i;o.prototype.pointIsInside=function(e){var t=this.vertices.length,n=this.vertices,i=this.faces,s=this.faceNormals,o=this.faces.length,r=I;this.getAveragePointLocal(r);for(var a=0;a<o;a++){this.faces[a].length,t=s[a];var c=n[i[a][0]],l=R;e.vsub(c,l);var h=t.dot(l),u=D;r.vsub(c,u);var _=t.dot(u);if(h<0&&_>0||h>0&&_<0)return!1}return-1},new i;var O=new i,N=new i;o.project=function(e,t,n,i,o){var r=e.vertices.length,a=O,c=0,l=0,h=N,u=e.vertices;h.setZero(),s.vectorToLocalFrame(n,i,t,a),s.pointToLocalFrame(n,i,h,h);var _=h.dot(a);l=c=u[0].dot(a);for(var d=1;d<r;d++){var p=u[d].dot(a);p>c&&(c=p),p<l&&(l=p)}if((l-=_)>(c-=_)){var f=l;l=c,c=f}o[0]=c,o[1]=l}},{"../math/Quaternion":29,"../math/Transform":30,"../math/Vec3":31,"./Shape":44}],40:[function(e,t){t.exports=s,e("./Shape");var n=e("../math/Vec3"),i=(e("../math/Quaternion"),e("./ConvexPolyhedron"));function s(e,t,s,o,r){if(r){for(var a=o,c=Math.cos,l=Math.sin,h=s/2,u=[],_=[],d=[0],p=[1],f=[],m=2*Math.PI/a,g=0;g<a;g++)u.push(new n(e*c(m*g),h,e*l(m*g))),u.push(new n(e*c(m*g),-h,e*l(m*g))),g<a-1?(_.push([2*g+2,2*g+3,2*g+1,2*g]),d.push(2*g+2),p.push(2*g+3)):_.push([0,1,2*g+1,2*g]),(a%2==1||g<a/2)&&f.push(new n(c(m*(g+.5)),0,l(m*(g+.5))));_.push(p);var v=[];for(g=0;g<d.length;g++)v.push(d[d.length-g-1]);return _.push(v),f.push(new n(0,1,0)),void i.call(this,u,_,f)}a=o;var y=[],x=(f=[],[]),S=[],C=[];for(c=Math.cos,l=Math.sin,y.push(new n(t*c(0),t*l(0),.5*-s)),S.push(0),y.push(new n(e*c(0),e*l(0),.5*s)),C.push(1),g=0;g<a;g++){m=2*Math.PI/a*(g+1);var E=2*Math.PI/a*(g+.5);g<a-1?(y.push(new n(t*c(m),t*l(m),.5*-s)),S.push(2*g+2),y.push(new n(e*c(m),e*l(m),.5*s)),C.push(2*g+3),x.push([2*g+2,2*g+3,2*g+1,2*g])):x.push([0,1,2*g+1,2*g]),(a%2==1||g<a/2)&&f.push(new n(c(E),l(E),0))}for(x.push(C),f.push(new n(0,0,1)),v=[],g=0;g<S.length;g++)v.push(S[S.length-g-1]);x.push(v),i.call(this,y,x,f)}s.prototype=new i},{"../math/Quaternion":29,"../math/Vec3":31,"./ConvexPolyhedron":39,"./Shape":44}],41:[function(e,t){var n=e("./Shape"),i=e("./ConvexPolyhedron"),s=e("../math/Vec3"),o=e("../utils/Utils");function r(e,t){t=o.defaults(t,{maxValue:null,minValue:null,elementSize:1}),this.data=e,this.maxValue=t.maxValue,this.minValue=t.minValue,this.elementSize=t.elementSize,null===t.minValue&&this.updateMinValue(),null===t.maxValue&&this.updateMaxValue(),this.cacheEnabled=!0,n.call(this,{type:n.types.HEIGHTFIELD}),this.pillarConvex=new i,this.pillarOffset=new s,this.updateBoundingSphereRadius(),this._cachedPillars={}}t.exports=r,r.prototype=new n,r.prototype.update=function(){this._cachedPillars={}},r.prototype.updateMinValue=function(){for(var e=this.data,t=e[0][0],n=0;n!==e.length;n++)for(var i=0;i!==e[n].length;i++){var s=e[n][i];s<t&&(t=s)}this.minValue=t},r.prototype.updateMaxValue=function(){for(var e=this.data,t=e[0][0],n=0;n!==e.length;n++)for(var i=0;i!==e[n].length;i++){var s=e[n][i];s>t&&(t=s)}this.maxValue=t},r.prototype.setHeightValueAtIndex=function(e,t,n){this.data[e][t]=n,this.clearCachedConvexTrianglePillar(e,t,!1),e>0&&(this.clearCachedConvexTrianglePillar(e-1,t,!0),this.clearCachedConvexTrianglePillar(e-1,t,!1)),t>0&&(this.clearCachedConvexTrianglePillar(e,t-1,!0),this.clearCachedConvexTrianglePillar(e,t-1,!1)),t>0&&e>0&&this.clearCachedConvexTrianglePillar(e-1,t-1,!0)},r.prototype.getRectMinMax=function(e,t,n,i,s){s=s||[];for(var o=this.data,r=this.minValue,a=e;a<=n;a++)for(var c=t;c<=i;c++){var l=o[a][c];l>r&&(r=l)}s[0]=this.minValue,s[1]=r},r.prototype.getIndexOfPosition=function(e,t,n,i){var s=this.elementSize,o=this.data,r=Math.floor(e/s),a=Math.floor(t/s);return n[0]=r,n[1]=a,i&&(r<0&&(r=0),a<0&&(a=0),r>=o.length-1&&(r=o.length-1),a>=o[0].length-1&&(a=o[0].length-1)),!(r<0||a<0||r>=o.length-1||a>=o[0].length-1)};var a=[],c=new s,l=new s,h=new s,u=new s;r.prototype.getTriangleAt=function(e,t,n,i,s,o){var r=a;this.getIndexOfPosition(e,t,r,n);var c=r[0],l=r[1],h=this.data;n&&(c=Math.min(h.length-2,Math.max(0,c)),l=Math.min(h[0].length-2,Math.max(0,l)));var u=this.elementSize,_=Math.pow(e/u-c,2)+Math.pow(t/u-l,2)>Math.pow(e/u-(c+1),2)+Math.pow(t/u-(l+1),2);return this.getTriangle(c,l,_,i,s,o),_};var _=new s,d=new s,p=new s,f=new s,m=new s;function g(e,t,n,i,s,o,r,a,c){c.x=((o-a)*(e-r)+(r-s)*(t-a))/((o-a)*(n-r)+(r-s)*(i-a)),c.y=((a-i)*(e-r)+(n-r)*(t-a))/((o-a)*(n-r)+(r-s)*(i-a)),c.z=1-c.x-c.y}r.prototype.getNormalAt=function(e,t,n,i){var s=_,o=d,r=p,a=f,c=m;this.getTriangleAt(e,t,n,s,o,r),o.vsub(s,a),r.vsub(s,c),a.cross(c,i),i.normalize()},r.prototype.getAabbAtIndex=function(e,t,n){var i=this.data,s=this.elementSize;n.lowerBound.set(e*s,t*s,i[e][t]),n.upperBound.set((e+1)*s,(t+1)*s,i[e+1][t+1])},r.prototype.getHeightAt=function(e,t,n){var i=this.data,s=l,o=h,r=u,_=a;this.getIndexOfPosition(e,t,_,n);var d=_[0],p=_[1];n&&(d=Math.min(i.length-2,Math.max(0,d)),p=Math.min(i[0].length-2,Math.max(0,p)));var f=this.getTriangleAt(e,t,n,s,o,r);g(e,t,s.x,s.y,o.x,o.y,r.x,r.y,c);var m=c;return f?i[d+1][p+1]*m.x+i[d][p+1]*m.y+i[d+1][p]*m.z:i[d][p]*m.x+i[d+1][p]*m.y+i[d][p+1]*m.z},r.prototype.getCacheConvexTrianglePillarKey=function(e,t,n){return e+"_"+t+"_"+(n?1:0)},r.prototype.getCachedConvexTrianglePillar=function(e,t,n){return this._cachedPillars[this.getCacheConvexTrianglePillarKey(e,t,n)]},r.prototype.setCachedConvexTrianglePillar=function(e,t,n,i,s){this._cachedPillars[this.getCacheConvexTrianglePillarKey(e,t,n)]={convex:i,offset:s}},r.prototype.clearCachedConvexTrianglePillar=function(e,t,n){delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(e,t,n)]},r.prototype.getTriangle=function(e,t,n,i,s,o){var r=this.data,a=this.elementSize;n?(i.set((e+1)*a,(t+1)*a,r[e+1][t+1]),s.set(e*a,(t+1)*a,r[e][t+1]),o.set((e+1)*a,t*a,r[e+1][t])):(i.set(e*a,t*a,r[e][t]),s.set((e+1)*a,t*a,r[e+1][t]),o.set(e*a,(t+1)*a,r[e][t+1]))},r.prototype.getConvexTrianglePillar=function(e,t,n){var o=this.pillarConvex,r=this.pillarOffset;if(this.cacheEnabled){if(a=this.getCachedConvexTrianglePillar(e,t,n))return this.pillarConvex=a.convex,void(this.pillarOffset=a.offset);o=new i,r=new s,this.pillarConvex=o,this.pillarOffset=r}var a=this.data,c=this.elementSize,l=o.faces;o.vertices.length=6;for(var h=0;h<6;h++)o.vertices[h]||(o.vertices[h]=new s);for(l.length=5,h=0;h<5;h++)l[h]||(l[h]=[]);var u=o.vertices,_=(Math.min(a[e][t],a[e+1][t],a[e][t+1],a[e+1][t+1])-this.minValue)/2+this.minValue;n?(r.set((e+.75)*c,(t+.75)*c,_),u[0].set(.25*c,.25*c,a[e+1][t+1]-_),u[1].set(-.75*c,.25*c,a[e][t+1]-_),u[2].set(.25*c,-.75*c,a[e+1][t]-_),u[3].set(.25*c,.25*c,-_-1),u[4].set(-.75*c,.25*c,-_-1),u[5].set(.25*c,-.75*c,-_-1),l[0][0]=0,l[0][1]=1,l[0][2]=2,l[1][0]=5,l[1][1]=4,l[1][2]=3,l[2][0]=2,l[2][1]=5,l[2][2]=3,l[2][3]=0,l[3][0]=3,l[3][1]=4,l[3][2]=1,l[3][3]=0,l[4][0]=1,l[4][1]=4,l[4][2]=5,l[4][3]=2):(r.set((e+.25)*c,(t+.25)*c,_),u[0].set(-.25*c,-.25*c,a[e][t]-_),u[1].set(.75*c,-.25*c,a[e+1][t]-_),u[2].set(-.25*c,.75*c,a[e][t+1]-_),u[3].set(-.25*c,-.25*c,-_-1),u[4].set(.75*c,-.25*c,-_-1),u[5].set(-.25*c,.75*c,-_-1),l[0][0]=0,l[0][1]=1,l[0][2]=2,l[1][0]=5,l[1][1]=4,l[1][2]=3,l[2][0]=0,l[2][1]=2,l[2][2]=5,l[2][3]=3,l[3][0]=1,l[3][1]=0,l[3][2]=3,l[3][3]=4,l[4][0]=4,l[4][1]=5,l[4][2]=2,l[4][3]=1),o.computeNormals(),o.computeEdges(),o.updateBoundingSphereRadius(),this.setCachedConvexTrianglePillar(e,t,n,o,r)},r.prototype.calculateLocalInertia=function(e,t){return(t=t||new s).set(0,0,0),t},r.prototype.volume=function(){return Number.MAX_VALUE},r.prototype.calculateWorldAABB=function(e,t,n,i){n.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),i.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)},r.prototype.updateBoundingSphereRadius=function(){var e=this.data,t=this.elementSize;this.boundingSphereRadius=new s(e.length*t,e[0].length*t,Math.max(Math.abs(this.maxValue),Math.abs(this.minValue))).norm()},r.prototype.setHeightsFromImage=function(e,t){var n=document.createElement("canvas");n.width=e.width,n.height=e.height;var i=n.getContext("2d");i.drawImage(e,0,0);var s=i.getImageData(0,0,e.width,e.height),o=this.data;o.length=0,this.elementSize=Math.abs(t.x)/s.width;for(var r=0;r<s.height;r++){for(var a=[],c=0;c<s.width;c++){var l=(s.data[4*(r*s.height+c)]+s.data[4*(r*s.height+c)+1]+s.data[4*(r*s.height+c)+2])/4/255*t.z;t.x<0?a.push(l):a.unshift(l)}t.y<0?o.unshift(a):o.push(a)}this.updateMaxValue(),this.updateMinValue(),this.update()}},{"../math/Vec3":31,"../utils/Utils":54,"./ConvexPolyhedron":39,"./Shape":44}],42:[function(e,t){t.exports=s;var n=e("./Shape"),i=e("../math/Vec3");function s(){n.call(this,{type:n.types.PARTICLE})}s.prototype=new n,s.prototype.constructor=s,s.prototype.calculateLocalInertia=function(e,t){return(t=t||new i).set(0,0,0),t},s.prototype.volume=function(){return 0},s.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=0},s.prototype.calculateWorldAABB=function(e,t,n,i){n.copy(e),i.copy(e)}},{"../math/Vec3":31,"./Shape":44}],43:[function(e,t){t.exports=s;var n=e("./Shape"),i=e("../math/Vec3");function s(){n.call(this,{type:n.types.PLANE}),this.worldNormal=new i,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}s.prototype=new n,s.prototype.constructor=s,s.prototype.computeWorldNormal=function(e){var t=this.worldNormal;t.set(0,0,1),e.vmult(t,t),this.worldNormalNeedsUpdate=!1},s.prototype.calculateLocalInertia=function(e,t){return t||new i},s.prototype.volume=function(){return Number.MAX_VALUE};var o=new i;s.prototype.calculateWorldAABB=function(e,t,n,i){o.set(0,0,1),t.vmult(o,o);var s=Number.MAX_VALUE;n.set(-s,-s,-s),i.set(s,s,s),1===o.x&&(i.x=e.x),1===o.y&&(i.y=e.y),1===o.z&&(i.z=e.z),-1===o.x&&(n.x=e.x),-1===o.y&&(n.y=e.y),-1===o.z&&(n.z=e.z)},s.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=Number.MAX_VALUE}},{"../math/Vec3":31,"./Shape":44}],44:[function(e,t){t.exports=i;var n=e("../utils/EventTarget"),i=e("./Shape");function i(e){e=e||{},n.apply(this),this.id=i.idCounter++,this.type=e.type||0,this.boundingSphereRadius=0,this.collisionResponse=!e.collisionResponse||e.collisionResponse,this.collisionFilterGroup=void 0!==e.collisionFilterGroup?e.collisionFilterGroup:1,this.collisionFilterMask=void 0!==e.collisionFilterMask?e.collisionFilterMask:-1,this.material=e.material?e.material:null,this.body=null}e("../math/Vec3"),e("../math/Quaternion"),e("../material/Material"),i.prototype=new n,i.prototype.constructor=i,i.prototype.updateBoundingSphereRadius=function(){throw"computeBoundingSphereRadius() not implemented for shape type "+this.type},i.prototype.volume=function(){throw"volume() not implemented for shape type "+this.type},i.prototype.calculateLocalInertia=function(){throw"calculateLocalInertia() not implemented for shape type "+this.type},i.idCounter=0,i.types={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256}},{"../material/Material":26,"../math/Quaternion":29,"../math/Vec3":31,"../utils/EventTarget":50,"./Shape":44}],45:[function(e,t){t.exports=s;var n=e("./Shape"),i=e("../math/Vec3");function s(e){if(n.call(this,{type:n.types.SPHERE}),this.radius=void 0!==e?e:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}s.prototype=new n,s.prototype.constructor=s,s.prototype.calculateLocalInertia=function(e,t){t=t||new i;var n=2*e*this.radius*this.radius/5;return t.x=n,t.y=n,t.z=n,t},s.prototype.volume=function(){return 4*Math.PI*this.radius/3},s.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=this.radius},s.prototype.calculateWorldAABB=function(e,t,n,i){for(var s=this.radius,o=["x","y","z"],r=0;r<o.length;r++){var a=o[r];n[a]=e[a]-s,i[a]=e[a]+s}}},{"../math/Vec3":31,"./Shape":44}],46:[function(e,t){t.exports=a;var n=e("./Shape"),i=e("../math/Vec3"),s=(e("../math/Quaternion"),e("../math/Transform")),o=e("../collision/AABB"),r=e("../utils/Octree");function a(e,t){n.call(this,{type:n.types.TRIMESH}),this.vertices=new Float32Array(e),this.indices=new Int16Array(t),this.normals=new Float32Array(t.length),this.aabb=new o,this.edges=null,this.scale=new i(1,1,1),this.tree=new r,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}a.prototype=new n,a.prototype.constructor=a;var c=new i;a.prototype.updateTree=function(){var e=this.tree;e.reset(),e.aabb.copy(this.aabb);var t=this.scale;e.aabb.lowerBound.x*=1/t.x,e.aabb.lowerBound.y*=1/t.y,e.aabb.lowerBound.z*=1/t.z,e.aabb.upperBound.x*=1/t.x,e.aabb.upperBound.y*=1/t.y,e.aabb.upperBound.z*=1/t.z;for(var n=new o,s=new i,r=new i,a=new i,c=[s,r,a],l=0;l<this.indices.length/3;l++){var h=3*l;this._getUnscaledVertex(this.indices[h],s),this._getUnscaledVertex(this.indices[h+1],r),this._getUnscaledVertex(this.indices[h+2],a),n.setFromPoints(c),e.insert(n,l)}e.removeEmptyNodes()};var l=new o;a.prototype.getTrianglesInAABB=function(e,t){l.copy(e);var n=this.scale,i=n.x,s=n.y,o=n.z,r=l.lowerBound,a=l.upperBound;return r.x/=i,r.y/=s,r.z/=o,a.x/=i,a.y/=s,a.z/=o,this.tree.aabbQuery(l,t)},a.prototype.setScale=function(e){var t=this.scale.x===this.scale.y===this.scale.z,n=e.x===e.y===e.z;t&&n||this.updateNormals(),this.scale.copy(e),this.updateAABB(),this.updateBoundingSphereRadius()},a.prototype.updateNormals=function(){for(var e=c,t=this.normals,n=0;n<this.indices.length/3;n++){var i=3*n,s=this.indices[i],o=this.indices[i+1],r=this.indices[i+2];this.getVertex(s,p),this.getVertex(o,f),this.getVertex(r,m),a.computeNormal(f,p,m,e),t[i]=e.x,t[i+1]=e.y,t[i+2]=e.z}},a.prototype.updateEdges=function(){for(var e={},t=function(){e[s<o?s+"_"+o:o+"_"+s]=!0},n=0;n<this.indices.length/3;n++){var i=3*n,s=this.indices[i],o=this.indices[i+1];this.indices[i+2],t(),t(),t()}var r=Object.keys(e);for(this.edges=new Int16Array(2*r.length),n=0;n<r.length;n++){var a=r[n].split("_");this.edges[2*n]=parseInt(a[0],10),this.edges[2*n+1]=parseInt(a[1],10)}},a.prototype.getEdgeVertex=function(e,t,n){var i=this.edges[2*e+(t?1:0)];this.getVertex(i,n)};var h=new i,u=new i;a.prototype.getEdgeVector=function(e,t){var n=h,i=u;this.getEdgeVertex(e,0,n),this.getEdgeVertex(e,1,i),i.vsub(n,t)};var _=new i,d=new i;a.computeNormal=function(e,t,n,i){t.vsub(e,d),n.vsub(t,_),_.cross(d,i),i.isZero()||i.normalize()};var p=new i,f=new i,m=new i;a.prototype.getVertex=function(e,t){var n=this.scale;return this._getUnscaledVertex(e,t),t.x*=n.x,t.y*=n.y,t.z*=n.z,t},a.prototype._getUnscaledVertex=function(e,t){var n=3*e,i=this.vertices;return t.set(i[n],i[n+1],i[n+2])},a.prototype.getWorldVertex=function(e,t,n,i){return this.getVertex(e,i),s.pointToWorldFrame(t,n,i,i),i},a.prototype.getTriangleVertices=function(e,t,n,i){var s=3*e;this.getVertex(this.indices[s],t),this.getVertex(this.indices[s+1],n),this.getVertex(this.indices[s+2],i)},a.prototype.getNormal=function(e,t){var n=3*e;return t.set(this.normals[n],this.normals[n+1],this.normals[n+2])};var g=new o;a.prototype.calculateLocalInertia=function(e,t){this.computeLocalAABB(g);var n=g.upperBound.x-g.lowerBound.x,i=g.upperBound.y-g.lowerBound.y,s=g.upperBound.z-g.lowerBound.z;return t.set(1/12*e*(4*i*i+4*s*s),1/12*e*(4*n*n+4*s*s),1/12*e*(4*i*i+4*n*n))};var v=new i;a.prototype.computeLocalAABB=function(e){var t=e.lowerBound,n=e.upperBound,i=this.vertices.length/3,s=v;if(0!==i){this.getVertex(0,s),t.copy(s),n.copy(s);for(var o=0;o!==i;o++)this.getVertex(o,s),s.x<t.x?t.x=s.x:s.x>n.x&&(n.x=s.x),s.y<t.y?t.y=s.y:s.y>n.y&&(n.y=s.y),s.z<t.z?t.z=s.z:s.z>n.z&&(n.z=s.z)}},a.prototype.updateAABB=function(){this.computeLocalAABB(this.aabb)},a.prototype.updateBoundingSphereRadius=function(){for(var e=0,t=this.vertices,n=new i,s=0,o=t.length/3;s!==o;s++){this.getVertex(s,n);var r=n.norm2();r>e&&(e=r)}this.boundingSphereRadius=Math.sqrt(e)},new i;var y=new s,x=new o;a.prototype.calculateWorldAABB=function(e,t,n,i){var s=y,o=x;s.position=e,s.quaternion=t,this.aabb.toWorldFrame(s,o),n.copy(o.lowerBound),i.copy(o.upperBound)},a.prototype.volume=function(){return 4*Math.PI*this.boundingSphereRadius/3},a.createTorus=function(e,t,n,i,s){e=e||1,t=t||.5,n=n||8,i=i||6,s=s||2*Math.PI;for(var o=[],r=[],c=0;c<=n;c++)for(var l=0;l<=i;l++){var h=l/i*s,u=c/n*Math.PI*2,_=(e+t*Math.cos(u))*Math.cos(h),d=(e+t*Math.cos(u))*Math.sin(h),p=t*Math.sin(u);o.push(_,d,p)}for(c=1;c<=n;c++)for(l=1;l<=i;l++){var f=(i+1)*c+l-1,m=(i+1)*(c-1)+l-1,g=(i+1)*(c-1)+l,v=(i+1)*c+l;r.push(f,m,v),r.push(m,g,v)}return new a(o,r)}},{"../collision/AABB":3,"../math/Quaternion":29,"../math/Transform":30,"../math/Vec3":31,"../utils/Octree":51,"./Shape":44}],47:[function(e,t){t.exports=i,e("../math/Vec3"),e("../math/Quaternion");var n=e("./Solver");function i(){n.call(this),this.iterations=10,this.tolerance=1e-7}i.prototype=new n;var s=[],o=[],r=[];i.prototype.solve=function(e,t){var n,i,a,c,l,h=0,u=this.iterations,_=this.tolerance*this.tolerance,d=this.equations,p=d.length,f=t.bodies,m=f.length,g=e;if(0!==p)for(var v=0;v!==m;v++)f[v].updateSolveMassProperties();var y=o,x=r,S=s;for(y.length=p,x.length=p,S.length=p,v=0;v!==p;v++){var C=d[v];S[v]=0,x[v]=C.computeB(g),y[v]=1/C.computeC()}if(0!==p){for(v=0;v!==m;v++){var E=(A=f[v]).vlambda,T=A.wlambda;E.set(0,0,0),T.set(0,0,0)}for(h=0;h!==u;h++){c=0;for(var b=0;b!==p;b++)C=d[b],n=x[b],i=y[b],(l=S[b])+(a=i*(n-C.computeGWlambda()-C.eps*l))<C.minForce?a=C.minForce-l:l+a>C.maxForce&&(a=C.maxForce-l),S[b]+=a,c+=a>0?a:-a,C.addToWlambda(a);if(c*c<_)break}for(v=0;v!==m;v++){var A,P=(A=f[v]).velocity,w=A.angularVelocity;A.vlambda.vmul(A.linearFactor,A.vlambda),P.vadd(A.vlambda,P),A.wlambda.vmul(A.angularFactor,A.wlambda),w.vadd(A.wlambda,w)}for(var I=d.length,R=1/g;I--;)d[I].multiplier=S[I]*R}return h}},{"../math/Quaternion":29,"../math/Vec3":31,"./Solver":48}],48:[function(e,t){function n(){this.equations=[]}t.exports=n,n.prototype.solve=function(){return 0},n.prototype.addEquation=function(e){e.enabled&&this.equations.push(e)},n.prototype.removeEquation=function(e){var t=this.equations,n=t.indexOf(e);-1!==n&&t.splice(n,1)},n.prototype.removeAllEquations=function(){this.equations.length=0}},{}],49:[function(e,t){t.exports=s,e("../math/Vec3"),e("../math/Quaternion");var n=e("./Solver"),i=e("../objects/Body");function s(e){for(n.call(this),this.iterations=10,this.tolerance=1e-7,this.subsolver=e,this.nodes=[],this.nodePool=[];this.nodePool.length<128;)this.nodePool.push(this.createNode())}s.prototype=new n;var o=[],r=[],a={bodies:[]},c=i.STATIC;function l(e){for(var t=e.length,n=0;n!==t;n++){var i=e[n];if(!(i.visited||i.body.type&c))return i}return!1}var h=[];function u(e,t,n,i){for(h.push(e),e.visited=!0,t(e,n,i);h.length;)for(var s,o=h.pop();s=l(o.children);)s.visited=!0,t(s,n,i),h.push(s)}function _(e,t,n){t.push(e.body);for(var i=e.eqs.length,s=0;s!==i;s++){var o=e.eqs[s];-1===n.indexOf(o)&&n.push(o)}}function d(e,t){return t.id-e.id}s.prototype.createNode=function(){return{body:null,children:[],eqs:[],visited:!1}},s.prototype.solve=function(e,t){for(var n=o,i=this.nodePool,s=t.bodies,c=this.equations,h=c.length,p=s.length,f=this.subsolver;i.length<p;)i.push(this.createNode());n.length=p;for(var m=0;m<p;m++)n[m]=i[m];for(m=0;m!==p;m++){var g=n[m];g.body=s[m],g.children.length=0,g.eqs.length=0,g.visited=!1}for(var v=0;v!==h;v++){var y=c[v],x=(m=s.indexOf(y.bi),s.indexOf(y.bj)),S=n[m],C=n[x];S.children.push(C),S.eqs.push(y),C.children.push(S),C.eqs.push(y)}var E,T=0,b=r;f.tolerance=this.tolerance,f.iterations=this.iterations;for(var A=a;E=l(n);){b.length=0,A.bodies.length=0,u(E,_,A.bodies,b);var P=b.length;for(b=b.sort(d),m=0;m!==P;m++)f.addEquation(b[m]);f.solve(e,A),f.removeAllEquations(),T++}return T}},{"../math/Quaternion":29,"../math/Vec3":31,"../objects/Body":32,"./Solver":48}],50:[function(e,t){var n=function(){};t.exports=n,n.prototype={constructor:n,addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var n=this._listeners;return void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t),this},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)},hasAnyEventListener:function(e){return void 0!==this._listeners&&void 0!==this._listeners[e]},removeEventListener:function(e,t){if(void 0===this._listeners)return this;var n=this._listeners;if(void 0===n[e])return this;var i=n[e].indexOf(t);return-1!==i&&n[e].splice(i,1),this},dispatchEvent:function(e){if(void 0===this._listeners)return this;var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var n=0,i=t.length;n<i;n++)t[n].call(this,e)}return this}}},{}],51:[function(e,t){var n=e("../collision/AABB"),i=e("../math/Vec3");function s(e){e=e||{},this.root=e.root||null,this.aabb=e.aabb?e.aabb.clone():new n,this.data=[],this.children=[]}function o(e,t){(t=t||{}).root=null,t.aabb=e,s.call(this,t),this.maxDepth=void 0!==t.maxDepth?t.maxDepth:8}t.exports=o,o.prototype=new s,s.prototype.reset=function(){this.children.length=this.data.length=0},s.prototype.insert=function(e,t,n){var i=this.data;if(n=n||0,!this.aabb.contains(e))return!1;var s=this.children;if(n<(this.maxDepth||this.root.maxDepth)){var o=!1;s.length||(this.subdivide(),o=!0);for(var r=0;8!==r;r++)if(s[r].insert(e,t,n+1))return!0;o&&(s.length=0)}return i.push(t),!0};var r=new i;s.prototype.subdivide=function(){var e=this.aabb,t=e.lowerBound,o=e.upperBound,a=this.children;a.push(new s({aabb:new n({lowerBound:new i(0,0,0)})}),new s({aabb:new n({lowerBound:new i(1,0,0)})}),new s({aabb:new n({lowerBound:new i(1,1,0)})}),new s({aabb:new n({lowerBound:new i(1,1,1)})}),new s({aabb:new n({lowerBound:new i(0,1,1)})}),new s({aabb:new n({lowerBound:new i(0,0,1)})}),new s({aabb:new n({lowerBound:new i(1,0,1)})}),new s({aabb:new n({lowerBound:new i(0,1,0)})})),o.vsub(t,r),r.scale(.5,r);for(var c=this.root||this,l=0;8!==l;l++){var h=a[l];h.root=c;var u=h.aabb.lowerBound;u.x*=r.x,u.y*=r.y,u.z*=r.z,u.vadd(t,u),u.vadd(r,h.aabb.upperBound)}},s.prototype.aabbQuery=function(e,t){this.data,this.children;for(var n=[this];n.length;){var i=n.pop();i.aabb.overlaps(e)&&Array.prototype.push.apply(t,i.data),Array.prototype.push.apply(n,i.children)}return t};var a=new n;s.prototype.rayQuery=function(e,t,n){return e.getAABB(a),a.toLocalFrame(t,a),this.aabbQuery(a,n),n},s.prototype.removeEmptyNodes=function(){for(var e=this.children.length-1;e>=0;e--)this.children[e].removeEmptyNodes(),this.children[e].children.length||this.children[e].data.length||this.children.splice(e,1)}},{"../collision/AABB":3,"../math/Vec3":31}],52:[function(e,t){function n(){this.objects=[],this.type=Object}t.exports=n,n.prototype.release=function(){for(var e=arguments.length,t=0;t!==e;t++)this.objects.push(arguments[t]);return this},n.prototype.get=function(){return 0===this.objects.length?this.constructObject():this.objects.pop()},n.prototype.constructObject=function(){throw new Error("constructObject() not implemented in this Pool subclass yet!")},n.prototype.resize=function(e){for(var t=this.objects;t.length>e;)t.pop();for(;t.length<e;)t.push(this.constructObject());return this}},{}],53:[function(e,t){function n(){this.data={keys:[]}}t.exports=n,n.prototype.get=function(e,t){if(e>t){var n=t;t=e,e=n}return this.data[e+"-"+t]},n.prototype.set=function(e,t,n){if(e>t){var i=t;t=e,e=i}var s=e+"-"+t;return this.get(e,t)||this.data.keys.push(s),this.data[s]=n,this.data[s]},n.prototype.del=function(e,t){if(e>t){var n=t;t=e,e=n}var i=e+"-"+t,s=this.data.keys.indexOf(i);return s>=0&&(this.data.keys.splice(s,1),delete this.data[i],!0)},n.prototype.reset=function(){this.data={keys:[]}},n.prototype.getLength=function(){return this.data.keys.length},n.prototype.getKeyByIndex=function(e){return this.data.keys[e]},n.prototype.getDataByKey=function(e){return this.data[e]}},{}],54:[function(e,t){function n(){}t.exports=n,n.defaults=function(e,t){for(var n in e=e||{},t)n in e||(e[n]=t[n]);return e}},{}],55:[function(e,t){t.exports=s;var n=e("../math/Vec3"),i=e("./Pool");function s(){i.call(this),this.type=n}s.prototype=new i,s.prototype.constructObject=function(){return new n}},{"../math/Vec3":31,"./Pool":52}],56:[function(e,t){t.exports=u;var n=e("../collision/AABB"),i=(e("../objects/Body"),e("../shapes/Shape")),s=e("../collision/Ray"),o=e("../math/Vec3"),r=e("../math/Transform"),a=(e("../shapes/ConvexPolyhedron"),e("../math/Quaternion")),c=(e("../solver/Solver"),e("../utils/Vec3Pool")),l=e("../equations/ContactEquation"),h=e("../equations/FrictionEquation");function u(e){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new c,this.world=e,this.currentContactMaterial=null,this.enableFrictionReduction=!1}u.prototype.createContactEquation=function(e,t,n,i,s,o){var r;this.contactPointPool.length?((r=this.contactPointPool.pop()).bi=e,r.bj=t):r=new l(e,t),r.enabled=e.collisionResponse&&t.collisionResponse&&n.collisionResponse&&i.collisionResponse;var a=this.currentContactMaterial,c=a.contactEquationRelaxation;r.restitution=a.restitution;var h=n.material||e.material,u=i.material||t.material;if(h&&u){h.restitution>=0&&u.restitution>=0&&(r.restitution=h.restitution*u.restitution);var _=h.correctInelastic||u.correctInelastic;_&&(c*=_)}return r.setSpookParams(a.contactEquationStiffness,c,this.world.dt),r.si=s||n,r.sj=o||i,r},u.prototype.createFrictionEquationsFromContact=function(e,t){var n=e.bi,i=e.bj,s=e.si,o=e.sj,r=this.world,a=this.currentContactMaterial,c=a.friction,l=s.material||n.material,u=o.material||i.material;if(l&&u&&l.friction>=0&&u.friction>=0&&(c=l.friction*u.friction),c>0){var _=c*r.gravity.length(),d=n.invMass+i.invMass;d>0&&(d=1/d);var p=this.frictionEquationPool,f=p.length?p.pop():new h(n,i,_*d),m=p.length?p.pop():new h(n,i,_*d);return f.bi=m.bi=n,f.bj=m.bj=i,f.minForce=m.minForce=-_*d,f.maxForce=m.maxForce=_*d,f.ri.copy(e.ri),f.rj.copy(e.rj),m.ri.copy(e.ri),m.rj.copy(e.rj),e.ni.tangents(f.t,m.t),f.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),m.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),f.enabled=m.enabled=e.enabled,t.push(f,m),!0}return!1};var _=new o,d=new o,p=new o;u.prototype.createFrictionFromAverage=function(e){var t=this.result[this.result.length-1];if(this.createFrictionEquationsFromContact(t,this.frictionResult)&&1!==e){var n=this.frictionResult[this.frictionResult.length-2],i=this.frictionResult[this.frictionResult.length-1];_.setZero(),d.setZero(),p.setZero();for(var s=t.bi,o=(t.bj,0);o!==e;o++)(t=this.result[this.result.length-1-o]).bodyA!==s?(_.vadd(t.ni,_),d.vadd(t.ri,d),p.vadd(t.rj,p)):(_.vsub(t.ni,_),d.vadd(t.rj,d),p.vadd(t.ri,p));var r=1/e;d.scale(r,n.ri),p.scale(r,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),_.normalize(),_.tangents(n.t,i.t)}};var f=new o,m=new o,g=new a,v=new a;u.prototype.getContacts=function(e,t,n,i,s,o,r){this.contactPointPool=s,this.frictionEquationPool=r,this.result=i,this.frictionResult=o;for(var a=g,c=v,l=f,h=m,u=0,_=e.length;u!==_;u++){var d=e[u],p=t[u],y=null;d.material&&p.material&&(y=n.getContactMaterial(d.material,p.material)||null);for(var x=0==d.collisionResponse||0==p.collisionResponse,S=0;S<d.shapes.length;S++){d.quaternion.mult(d.shapeOrientations[S],a),d.quaternion.vmult(d.shapeOffsets[S],l),l.vadd(d.position,l);for(var C=d.shapes[S],E=0;E<p.shapes.length;E++){p.quaternion.mult(p.shapeOrientations[E],c),p.quaternion.vmult(p.shapeOffsets[E],h),h.vadd(p.position,h);var T=p.shapes[E];if(C.collisionFilterMask&T.collisionFilterGroup&&T.collisionFilterMask&C.collisionFilterGroup&&!(l.distanceTo(h)>C.boundingSphereRadius+T.boundingSphereRadius)){x|=0==C.collisionResponse||0==T.collisionResponse;var b=null;C.material&&T.material&&(b=n.getContactMaterial(C.material,T.material)||null),this.currentContactMaterial=b||y||n.defaultContactMaterial;var A=this[C.type|T.type];if(A&&(C.type<T.type?A.call(this,C,T,l,h,a,c,d,p,C,T,x):A.call(this,T,C,h,l,c,a,p,d,C,T,x))&&x){n.shapeOverlapKeeper.set(C.id,T.id),n.bodyOverlapKeeper.set(d.id,p.id);var P={si:C,sj:T};n.triggerDic.set(C.id,T.id,P),n.oldTriggerDic.set(C.id,T.id,P)}}}}}},u.prototype[i.types.BOX|i.types.BOX]=u.prototype.boxBox=function(e,t,n,i,s,o,r,a,c,l,h){return e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,t.convexPolyhedronRepresentation,n,i,s,o,r,a,e,t,h)},u.prototype[i.types.BOX|i.types.CONVEXPOLYHEDRON]=u.prototype.boxConvex=function(e,t,n,i,s,o,r,a,c,l,h){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,t,n,i,s,o,r,a,e,t,h)},u.prototype[i.types.BOX|i.types.PARTICLE]=u.prototype.boxParticle=function(e,t,n,i,s,o,r,a,c,l,h){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexParticle(e.convexPolyhedronRepresentation,t,n,i,s,o,r,a,e,t,h)},u.prototype[i.types.SPHERE]=u.prototype.sphereSphere=function(e,t,n,i,s,o,r,a,c,l,h){if(h)return n.distanceSquared(i)<Math.pow(e.radius+t.radius,2);var u=this.createContactEquation(r,a,e,t,c,l);i.vsub(n,u.ni),u.ni.normalize(),u.ri.copy(u.ni),u.rj.copy(u.ni),u.ri.mult(e.radius,u.ri),u.rj.mult(-t.radius,u.rj),u.ri.vadd(n,u.ri),u.ri.vsub(r.position,u.ri),u.rj.vadd(i,u.rj),u.rj.vsub(a.position,u.rj),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)};var y=new o,x=new o,S=new o;u.prototype[i.types.PLANE|i.types.TRIMESH]=u.prototype.planeTrimesh=function(e,t,n,i,s,a,c,l,h,u,_){var d=new o,p=y;p.set(0,0,1),s.vmult(p,p);for(var f=0;f<t.vertices.length/3;f++){t.getVertex(f,d);var m=new o;m.copy(d),r.pointToWorldFrame(i,a,m,d);var g=x;if(d.vsub(n,g),p.dot(g)<=0){if(_)return!0;var v=this.createContactEquation(c,l,e,t,h,u);v.ni.copy(p);var C=S;p.scale(g.dot(p),C),d.vsub(C,C),v.ri.copy(C),v.ri.vsub(c.position,v.ri),v.rj.copy(d),v.rj.vsub(l.position,v.rj),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}}};var C=new o,E=new o,T=(new o,new o),b=new o,A=new o,P=new o,w=new o,I=new o,R=new o,D=new o,O=new o,N=new o,M=new o,L=new n,B=[];u.prototype[i.types.SPHERE|i.types.TRIMESH]=u.prototype.sphereTrimesh=function(e,t,n,i,o,a,c,l,h,u,_){var d=A,p=P,f=w,m=I,g=R,v=D,y=L,x=b,S=E,F=B;r.pointToLocalFrame(i,a,n,g);var z=e.radius;y.lowerBound.set(g.x-z,g.y-z,g.z-z),y.upperBound.set(g.x+z,g.y+z,g.z+z),t.getTrianglesInAABB(y,F);for(var U=T,G=e.radius*e.radius,V=0;V<F.length;V++)for(var H=0;H<3;H++)if(t.getVertex(t.indices[3*F[V]+H],U),U.vsub(g,S),S.norm2()<=G){if(x.copy(U),r.pointToWorldFrame(i,a,x,U),U.vsub(n,S),_)return!0;(W=this.createContactEquation(c,l,e,t,h,u)).ni.copy(S),W.ni.normalize(),W.ri.copy(W.ni),W.ri.scale(e.radius,W.ri),W.ri.vadd(n,W.ri),W.ri.vsub(c.position,W.ri),W.rj.copy(U),W.rj.vsub(l.position,W.rj),this.result.push(W),this.createFrictionEquationsFromContact(W,this.frictionResult)}for(V=0;V<F.length;V++)for(H=0;H<3;H++){t.getVertex(t.indices[3*F[V]+H],d),t.getVertex(t.indices[3*F[V]+(H+1)%3],p),p.vsub(d,f),g.vsub(p,v);var k=v.dot(f);g.vsub(d,v);var j=v.dot(f);if(j>0&&k<0&&(g.vsub(d,v),m.copy(f),m.normalize(),j=v.dot(m),m.scale(j,v),v.vadd(d,v),(Q=v.distanceTo(g))<e.radius)){if(_)return!0;var W=this.createContactEquation(c,l,e,t,h,u);v.vsub(g,W.ni),W.ni.normalize(),W.ni.scale(e.radius,W.ri),r.pointToWorldFrame(i,a,v,v),v.vsub(l.position,W.rj),r.vectorToWorldFrame(a,W.ni,W.ni),r.vectorToWorldFrame(a,W.ri,W.ri),this.result.push(W),this.createFrictionEquationsFromContact(W,this.frictionResult)}}for(var q=O,X=N,Y=M,K=C,$=(V=0,F.length);V!==$;V++){t.getTriangleVertices(F[V],q,X,Y),t.getNormal(F[V],K),g.vsub(q,v);var Q=v.dot(K);if(K.scale(Q,v),g.vsub(v,v),Q=v.distanceTo(g),s.pointInTriangle(v,q,X,Y)&&Q<e.radius){if(_)return!0;W=this.createContactEquation(c,l,e,t,h,u),v.vsub(g,W.ni),W.ni.normalize(),W.ni.scale(e.radius,W.ri),r.pointToWorldFrame(i,a,v,v),v.vsub(l.position,W.rj),r.vectorToWorldFrame(a,W.ni,W.ni),r.vectorToWorldFrame(a,W.ri,W.ri),this.result.push(W),this.createFrictionEquationsFromContact(W,this.frictionResult)}}F.length=0};var F=new o,z=new o,U=new o,G=new o,V=new o;u.prototype[i.types.SPHERE|i.types.PLANE]=u.prototype.spherePlane=function(e,t,n,i,s,o,r,a,c,l,h){if(U.set(0,0,1),o.vmult(U,U),U.negate(U),U.normalize(),U.mult(e.radius,G),n.vsub(i,F),U.mult(U.dot(F),z),F.vsub(z,V),-F.dot(U)<=e.radius){if(h)return!0;var u=this.createContactEquation(r,a,e,t,c,l);u.ni.copy(U),u.ri.copy(G),u.rj.copy(V);var _=u.ri,d=u.rj;_.vadd(n,_),_.vsub(r.position,_),d.vadd(i,d),d.vsub(a.position,d),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}return!1};var H=new o,k=new o,j=new o;function W(e,t,n){for(var i=null,s=e.length,o=0;o!==s;o++){var r=e[o],a=H;e[(o+1)%s].vsub(r,a);var c=k;a.cross(t,c);var l=j;n.vsub(r,l);var h=c.dot(l);if(!(null===i||h>0&&!0===i||h<=0&&!1===i))return!1;null===i&&(i=h>0)}return!0}var q=new o,X=new o,Y=new o,K=new o,$=[new o,new o,new o,new o,new o,new o],Q=new o,J=new o,Z=new o,ee=new o;u.prototype[i.types.SPHERE|i.types.BOX]=u.prototype.sphereBox=function(e,t,n,i,s,o,r,a,c,l,h){var u=this.v3pool,_=$;n.vsub(i,q),t.getSideNormals(_,o);for(var d=e.radius,p=!1,f=J,m=Z,g=ee,v=null,y=0,x=0,S=0,C=null,E=0,T=_.length;E!==T&&!1===p;E++){var b=X;b.copy(_[E]);var A=b.norm();b.normalize();var P=q.dot(b);if(P<A+d&&P>0){var w=Y,I=K;w.copy(_[(E+1)%3]),I.copy(_[(E+2)%3]);var R=w.norm(),D=I.norm();w.normalize(),I.normalize();var O=q.dot(w),N=q.dot(I);if(O<R&&O>-R&&N<D&&N>-D){var M=Math.abs(P-A-d);if((null===C||M<C)&&(C=M,x=O,S=N,v=A,f.copy(b),m.copy(w),g.copy(I),y++,h))return!0}}}if(y){p=!0;var L=this.createContactEquation(r,a,e,t,c,l);f.mult(-d,L.ri),L.ni.copy(f),L.ni.negate(L.ni),f.mult(v,f),m.mult(x,m),f.vadd(m,f),g.mult(S,g),f.vadd(g,L.rj),L.ri.vadd(n,L.ri),L.ri.vsub(r.position,L.ri),L.rj.vadd(i,L.rj),L.rj.vsub(a.position,L.rj),this.result.push(L),this.createFrictionEquationsFromContact(L,this.frictionResult)}for(var B=u.get(),F=Q,z=0;2!==z&&!p;z++)for(var U=0;2!==U&&!p;U++)for(var G=0;2!==G&&!p;G++)if(B.set(0,0,0),z?B.vadd(_[0],B):B.vsub(_[0],B),U?B.vadd(_[1],B):B.vsub(_[1],B),G?B.vadd(_[2],B):B.vsub(_[2],B),i.vadd(B,F),F.vsub(n,F),F.norm2()<d*d){if(h)return!0;p=!0,(L=this.createContactEquation(r,a,e,t,c,l)).ri.copy(F),L.ri.normalize(),L.ni.copy(L.ri),L.ri.mult(d,L.ri),L.rj.copy(B),L.ri.vadd(n,L.ri),L.ri.vsub(r.position,L.ri),L.rj.vadd(i,L.rj),L.rj.vsub(a.position,L.rj),this.result.push(L),this.createFrictionEquationsFromContact(L,this.frictionResult)}u.release(B),B=null;var V=u.get(),H=u.get(),k=(L=u.get(),u.get()),j=(M=u.get(),_.length);for(z=0;z!==j&&!p;z++)for(U=0;U!==j&&!p;U++)if(z%3!=U%3){_[U].cross(_[z],V),V.normalize(),_[z].vadd(_[U],H),L.copy(n),L.vsub(H,L),L.vsub(i,L);var W=L.dot(V);for(V.mult(W,k),G=0;G===z%3||G===U%3;)G++;M.copy(n),M.vsub(k,M),M.vsub(H,M),M.vsub(i,M);var te=Math.abs(W),ne=M.norm();if(te<_[G].norm()&&ne<d){if(h)return!0;p=!0;var ie=this.createContactEquation(r,a,e,t,c,l);H.vadd(k,ie.rj),ie.rj.copy(ie.rj),M.negate(ie.ni),ie.ni.normalize(),ie.ri.copy(ie.rj),ie.ri.vadd(i,ie.ri),ie.ri.vsub(n,ie.ri),ie.ri.normalize(),ie.ri.mult(d,ie.ri),ie.ri.vadd(n,ie.ri),ie.ri.vsub(r.position,ie.ri),ie.rj.vadd(i,ie.rj),ie.rj.vsub(a.position,ie.rj),this.result.push(ie),this.createFrictionEquationsFromContact(ie,this.frictionResult)}}u.release(V,H,L,k,M)};var te=new o,ne=new o,ie=new o,se=new o,oe=new o,re=new o,ae=new o,ce=new o,le=new o,he=new o;u.prototype[i.types.SPHERE|i.types.CONVEXPOLYHEDRON]=u.prototype.sphereConvex=function(e,t,n,i,s,o,r,a,c,l,h){var u=this.v3pool;n.vsub(i,te);for(var _=t.faceNormals,d=t.faces,p=t.vertices,f=e.radius,m=0;m!==p.length;m++){var g=p[m],v=oe;o.vmult(g,v),i.vadd(v,v);var y=se;if(v.vsub(n,y),y.norm2()<f*f)return!!h||(x=!0,(M=this.createContactEquation(r,a,e,t,c,l)).ri.copy(y),M.ri.normalize(),M.ni.copy(M.ri),M.ri.mult(f,M.ri),v.vsub(i,M.rj),M.ri.vadd(n,M.ri),M.ri.vsub(r.position,M.ri),M.rj.vadd(i,M.rj),M.rj.vsub(a.position,M.rj),this.result.push(M),void this.createFrictionEquationsFromContact(M,this.frictionResult))}for(var x=!1,S=(m=0,d.length);m!==S&&!1===x;m++){var C=_[m],E=d[m],T=re;o.vmult(C,T);var b=ae;o.vmult(p[E[0]],b),b.vadd(i,b);var A=ce;T.mult(-f,A),n.vadd(A,A);var P=le;A.vsub(b,P);var w=P.dot(T),I=he;if(n.vsub(b,I),w<0&&I.dot(T)>0){for(var R=[],D=0,O=E.length;D!==O;D++){var N=u.get();o.vmult(p[E[D]],N),i.vadd(N,N),R.push(N)}if(W(R,T,n)){if(h)return!0;x=!0;var M=this.createContactEquation(r,a,e,t,c,l);T.mult(-f,M.ri),T.negate(M.ni);var L=u.get();T.mult(-w,L);var B=u.get();T.mult(-f,B),n.vsub(i,M.rj),M.rj.vadd(B,M.rj),M.rj.vadd(L,M.rj),M.rj.vadd(i,M.rj),M.rj.vsub(a.position,M.rj),M.ri.vadd(n,M.ri),M.ri.vsub(r.position,M.ri),u.release(L),u.release(B),this.result.push(M),this.createFrictionEquationsFromContact(M,this.frictionResult),D=0;for(var F=R.length;D!==F;D++)u.release(R[D]);return}for(D=0;D!==E.length;D++){var z=u.get(),U=u.get();o.vmult(p[E[(D+1)%E.length]],z),o.vmult(p[E[(D+2)%E.length]],U),i.vadd(z,z),i.vadd(U,U);var G=ne;U.vsub(z,G);var V=ie;G.unit(V);var H=u.get(),k=u.get();n.vsub(z,k);var j=k.dot(V);V.mult(j,H),H.vadd(z,H);var q=u.get();if(H.vsub(n,q),j>0&&j*j<G.norm2()&&q.norm2()<f*f){if(h)return!0;for(M=this.createContactEquation(r,a,e,t,c,l),H.vsub(i,M.rj),H.vsub(n,M.ni),M.ni.normalize(),M.ni.mult(f,M.ri),M.rj.vadd(i,M.rj),M.rj.vsub(a.position,M.rj),M.ri.vadd(n,M.ri),M.ri.vsub(r.position,M.ri),this.result.push(M),this.createFrictionEquationsFromContact(M,this.frictionResult),D=0,F=R.length;D!==F;D++)u.release(R[D]);return u.release(z),u.release(U),u.release(H),u.release(q),void u.release(k)}u.release(z),u.release(U),u.release(H),u.release(q),u.release(k)}for(D=0,F=R.length;D!==F;D++)u.release(R[D])}}},new o,new o,u.prototype[i.types.PLANE|i.types.BOX]=u.prototype.planeBox=function(e,t,n,i,s,o,r,a,c,l,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,t.convexPolyhedronRepresentation.id=t.id,this.planeConvex(e,t.convexPolyhedronRepresentation,n,i,s,o,r,a,e,t,h)};var ue=new o,_e=new o,de=new o,pe=new o;u.prototype[i.types.PLANE|i.types.CONVEXPOLYHEDRON]=u.prototype.planeConvex=function(e,t,n,i,s,o,r,a,c,l,h){var u=ue,_=_e;_.set(0,0,1),s.vmult(_,_);for(var d=0,p=de,f=0;f!==t.vertices.length;f++)if(u.copy(t.vertices[f]),o.vmult(u,u),i.vadd(u,u),u.vsub(n,p),_.dot(p)<=0){if(h)return!0;var m=this.createContactEquation(r,a,e,t,c,l),g=pe;_.mult(_.dot(p),g),u.vsub(g,g),g.vsub(n,m.ri),m.ni.copy(_),u.vsub(i,m.rj),m.ri.vadd(n,m.ri),m.ri.vsub(r.position,m.ri),m.rj.vadd(i,m.rj),m.rj.vsub(a.position,m.rj),this.result.push(m),d++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(m,this.frictionResult)}this.enableFrictionReduction&&d&&this.createFrictionFromAverage(d)};var fe=new o,me=new o;u.prototype[i.types.CONVEXPOLYHEDRON]=u.prototype.convexConvex=function(e,t,n,i,s,o,r,a,c,l,h,u,_){var d=fe;if(!(n.distanceTo(i)>e.boundingSphereRadius+t.boundingSphereRadius)&&e.findSeparatingAxis(t,n,s,i,o,d,u,_)){var p=[],f=me;e.clipAgainstHull(n,s,t,i,o,d,-100,100,p);for(var m=0,g=0;g!==p.length;g++){if(h)return!0;var v=this.createContactEquation(r,a,e,t,c,l),y=v.ri,x=v.rj;d.negate(v.ni),p[g].normal.negate(f),f.mult(p[g].depth,f),p[g].point.vadd(f,y),x.copy(p[g].point),y.vsub(n,y),x.vsub(i,x),y.vadd(n,y),y.vsub(r.position,y),x.vadd(i,x),x.vsub(a.position,x),this.result.push(v),m++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(v,this.frictionResult)}this.enableFrictionReduction&&m&&this.createFrictionFromAverage(m)}};var ge=new o,ve=new o,ye=new o;u.prototype[i.types.PLANE|i.types.PARTICLE]=u.prototype.planeParticle=function(e,t,n,i,s,o,r,a,c,l,h){var u=ge;u.set(0,0,1),r.quaternion.vmult(u,u);var _=ve;if(i.vsub(r.position,_),u.dot(_)<=0){if(h)return!0;var d=this.createContactEquation(a,r,t,e,c,l);d.ni.copy(u),d.ni.negate(d.ni),d.ri.set(0,0,0);var p=ye;u.mult(u.dot(i),p),i.vsub(p,p),d.rj.copy(p),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}};var xe=new o;u.prototype[i.types.PARTICLE|i.types.SPHERE]=u.prototype.sphereParticle=function(e,t,n,i,s,o,r,a,c,l,h){var u=xe;if(u.set(0,0,1),i.vsub(n,u),u.norm2()<=e.radius*e.radius){if(h)return!0;var _=this.createContactEquation(a,r,t,e,c,l);u.normalize(),_.rj.copy(u),_.rj.mult(e.radius,_.rj),_.ni.copy(u),_.ni.negate(_.ni),_.ri.set(0,0,0),this.result.push(_),this.createFrictionEquationsFromContact(_,this.frictionResult)}};var Se=new a,Ce=new o,Ee=(new o,new o),Te=new o,be=new o;u.prototype[i.types.PARTICLE|i.types.CONVEXPOLYHEDRON]=u.prototype.convexParticle=function(e,t,n,i,s,o,r,a,c,l,h){var u=-1,_=Ee,d=be,p=null,f=Ce;if(f.copy(i),f.vsub(n,f),s.conjugate(Se),Se.vmult(f,f),e.pointIsInside(f)){e.worldVerticesNeedsUpdate&&e.computeWorldVertices(n,s),e.worldFaceNormalsNeedsUpdate&&e.computeWorldFaceNormals(s);for(var m=0,g=e.faces.length;m!==g;m++){var v=[e.worldVertices[e.faces[m][0]]],y=e.worldFaceNormals[m];i.vsub(v[0],Te);var x=-y.dot(Te);if(null===p||Math.abs(x)<Math.abs(p)){if(h)return!0;p=x,u=m,_.copy(y)}}if(-1!==u){var S=this.createContactEquation(a,r,t,e,c,l);_.mult(p,d),d.vadd(i,d),d.vsub(n,d),S.rj.copy(d),_.negate(S.ni),S.ri.set(0,0,0);var C=S.ri,E=S.rj;C.vadd(i,C),C.vsub(a.position,C),E.vadd(n,E),E.vsub(r.position,E),this.result.push(S),this.createFrictionEquationsFromContact(S,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}},u.prototype[i.types.BOX|i.types.HEIGHTFIELD]=u.prototype.boxHeightfield=function(e,t,n,i,s,o,r,a,c,l,h){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexHeightfield(e.convexPolyhedronRepresentation,t,n,i,s,o,r,a,e,t,h)};var Ae=new o,Pe=new o,we=[0];u.prototype[i.types.CONVEXPOLYHEDRON|i.types.HEIGHTFIELD]=u.prototype.convexHeightfield=function(e,t,n,i,s,o,a,c,l,h,u){var _=t.data,d=t.elementSize,p=e.boundingSphereRadius,f=Pe,m=we,g=Ae;r.pointToLocalFrame(i,o,n,g);var v=Math.floor((g.x-p)/d)-1,y=Math.ceil((g.x+p)/d)+1,x=Math.floor((g.y-p)/d)-1,S=Math.ceil((g.y+p)/d)+1;if(!(y<0||S<0||v>_.length||x>_[0].length)){v<0&&(v=0),y<0&&(y=0),x<0&&(x=0),S<0&&(S=0),v>=_.length&&(v=_.length-1),y>=_.length&&(y=_.length-1),S>=_[0].length&&(S=_[0].length-1),x>=_[0].length&&(x=_[0].length-1);var C=[];t.getRectMinMax(v,x,y,S,C);var E=C[0],T=C[1];if(!(g.z-p>T||g.z+p<E))for(var b=v;b<y;b++)for(var A=x;A<S;A++){var P=!1;if(t.getConvexTrianglePillar(b,A,!1),r.pointToWorldFrame(i,o,t.pillarOffset,f),n.distanceTo(f)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(P=this.convexConvex(e,t.pillarConvex,n,f,s,o,a,c,l,h,u,m,null)),u&&P)return!0;if(t.getConvexTrianglePillar(b,A,!0),r.pointToWorldFrame(i,o,t.pillarOffset,f),n.distanceTo(f)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(P=this.convexConvex(e,t.pillarConvex,n,f,s,o,a,c,l,h,u,m,null)),u&&P)return!0}}};var Ie=new o,Re=new o;u.prototype[i.types.SPHERE|i.types.HEIGHTFIELD]=u.prototype.sphereHeightfield=function(e,t,n,i,s,o,a,c,l,h,u){var _=t.data,d=e.radius,p=t.elementSize,f=Re,m=Ie;r.pointToLocalFrame(i,o,n,m);var g=Math.floor((m.x-d)/p)-1,v=Math.ceil((m.x+d)/p)+1,y=Math.floor((m.y-d)/p)-1,x=Math.ceil((m.y+d)/p)+1;if(!(v<0||x<0||g>_.length||y>_[0].length)){g<0&&(g=0),v<0&&(v=0),y<0&&(y=0),x<0&&(x=0),g>=_.length&&(g=_.length-1),v>=_.length&&(v=_.length-1),x>=_[0].length&&(x=_[0].length-1),y>=_[0].length&&(y=_[0].length-1);var S=[];t.getRectMinMax(g,y,v,x,S);var C=S[0],E=S[1];if(!(m.z-d>E||m.z+d<C))for(var T=this.result,b=g;b<v;b++)for(var A=y;A<x;A++){var P=T.length,w=!1;if(t.getConvexTrianglePillar(b,A,!1),r.pointToWorldFrame(i,o,t.pillarOffset,f),n.distanceTo(f)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(w=this.sphereConvex(e,t.pillarConvex,n,f,s,o,a,c,e,t,u)),u&&w)return!0;if(t.getConvexTrianglePillar(b,A,!0),r.pointToWorldFrame(i,o,t.pillarOffset,f),n.distanceTo(f)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(w=this.sphereConvex(e,t.pillarConvex,n,f,s,o,a,c,e,t,u)),u&&w)return!0;if(T.length-P>2)return}}}},{"../collision/AABB":3,"../collision/Ray":10,"../equations/ContactEquation":20,"../equations/FrictionEquation":22,"../math/Quaternion":29,"../math/Transform":30,"../math/Vec3":31,"../objects/Body":32,"../shapes/ConvexPolyhedron":39,"../shapes/Shape":44,"../solver/Solver":48,"../utils/Vec3Pool":55}],57:[function(e,t){t.exports=v,e("../shapes/Shape");var n=e("../math/Vec3"),i=e("../math/Quaternion"),s=e("../solver/GSSolver"),o=(e("../equations/ContactEquation"),e("../equations/FrictionEquation"),e("./Narrowphase")),r=e("../utils/EventTarget"),a=e("../collision/ArrayCollisionMatrix"),c=e("../collision/ObjectCollisionMatrix"),l=e("../collision/OverlapKeeper"),h=e("../material/Material"),u=e("../material/ContactMaterial"),_=e("../objects/Body"),d=e("../utils/TupleDictionary"),p=e("../collision/RaycastResult"),f=e("../collision/AABB"),m=e("../collision/Ray"),g=e("../collision/NaiveBroadphase");function v(e){e=e||{},r.apply(this),this.dt=-1,this.allowSleep=!!e.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=void 0!==e.quatNormalizeSkip?e.quatNormalizeSkip:0,this.quatNormalizeFast=void 0!==e.quatNormalizeFast&&e.quatNormalizeFast,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new n,e.gravity&&this.gravity.copy(e.gravity),this.broadphase=void 0!==e.broadphase?e.broadphase:new g,this.bodies=[],this.solver=void 0!==e.solver?e.solver:new s,this.constraints=[],this.narrowphase=new o(this),this.collisionMatrix=new a,this.collisionMatrixPrevious=new a,this.bodyOverlapKeeper=new l,this.shapeOverlapKeeper=new l,this.materials=[],this.contactmaterials=[],this.contactMaterialTable=new d,this.defaultMaterial=new h("default"),this.defaultContactMaterial=new u(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this),this.substeps=0,this.cm=new c,this.tm=new c,this.triggerDic=new d,this.oldTriggerDic=new d,this.contactsDic=new d,this.oldContactsDic=new d}v.idToBodyMap={},v.idToShapeMap={},v.integrateKinematic=!1,v.ccdSphereAdvance=!1,v.prototype=new r,new f;var y=new m;if(v.prototype.getContactMaterial=function(e,t){return this.contactMaterialTable.get(e.id,t.id)},v.prototype.numObjects=function(){return this.bodies.length},v.prototype.collisionMatrixTick=function(){var e=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=e,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()},v.prototype.add=v.prototype.addBody=function(e){-1===this.bodies.indexOf(e)&&(e.index=this.bodies.length,this.bodies.push(e),e.world=this,e.initPosition.copy(e.position),e.initVelocity.copy(e.velocity),e.timeLastSleepy=this.time,e instanceof _&&(e.initAngularVelocity.copy(e.angularVelocity),e.initQuaternion.copy(e.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=e,this.cm.setNumObjects(this.bodies.length),v.idToBodyMap[e.id]=e,this.dispatchEvent(this.addBodyEvent))},v.prototype.addConstraint=function(e){this.constraints.push(e)},v.prototype.removeConstraint=function(e){var t=this.constraints.indexOf(e);-1!==t&&this.constraints.splice(t,1)},v.prototype.rayTest=function(e,t,n){n instanceof p?this.raycastClosest(e,t,{skipBackfaces:!0},n):this.raycastAll(e,t,{skipBackfaces:!0},n)},v.prototype.raycastAll=function(e,t,n,i){return n.mode=m.ALL,n.from=e,n.to=t,n.callback=i,y.intersectWorld(this,n)},v.prototype.raycastAny=function(e,t,n,i){return n.mode=m.ANY,n.from=e,n.to=t,n.result=i,y.intersectWorld(this,n)},v.prototype.raycastClosest=function(e,t,n,i){return n.mode=m.CLOSEST,n.from=e,n.to=t,n.result=i,y.intersectWorld(this,n)},v.prototype.remove=function(e){e.world=null;var t=this.bodies.length-1,n=this.bodies,i=n.indexOf(e);if(-1!==i){n.splice(i,1);for(var s=0;s!==n.length;s++)n[s].index=s;this.collisionMatrix.setNumObjects(t),this.removeBodyEvent.body=e,delete v.idToBodyMap[e.id],this.cm.setNumObjects(t),this.dispatchEvent(this.removeBodyEvent)}},v.prototype.removeBody=v.prototype.remove,v.prototype.getBodyById=function(e){return v.idToBodyMap[e]},v.prototype.getShapeById=function(e){return v.idToShapeMap[e]},v.prototype.addMaterial=function(e){this.materials.push(e)},v.prototype.addContactMaterial=function(e){this.contactmaterials.push(e),this.contactMaterialTable.set(e.materials[0].id,e.materials[1].id,e)},"undefined"==typeof performance&&(performance={}),!performance.now){var x=Date.now();performance.timing&&performance.timing.navigationStart&&(x=performance.timing.navigationStart),performance.now=function(){return Date.now()-x}}v.prototype.saveKinematicAndApplyGravity=function(e){for(var t=this.bodies,n=this.bodies.length,i=0;i!==n;i++){var s=t[i];s.type===_.DYNAMIC?s.applyGravity(this.gravity):s.type===_.KINEMATIC&&s.updateKinematic(e)}},v.prototype.step=function(e,t,n){if(n=n||10,0===(t=t||0))this.saveKinematicAndApplyGravity(e),this.internalStep(e),this.time+=e,this.substeps=1;else{for(this.saveKinematicAndApplyGravity(t),this.accumulator+=t,this.substeps=0;this.accumulator>=e&&this.substeps<n;)this.internalStep(e),this.accumulator-=e,this.substeps++;for(var i=this.accumulator%e/e,s=0;s!==this.bodies.length;s++){var o=this.bodies[s];o.previousPosition.lerp(o.position,i,o.interpolatedPosition),o.previousQuaternion.slerp(o.quaternion,i,o.interpolatedQuaternion),o.previousQuaternion.normalize()}this.time+=t}this.clearForces()};var S,C,E,T,b,A,P={type:"postStep"},w={type:"preStep"},I={type:"collide",body:null,contact:null},R=[],D=[],O=[],N=[];new n,new n,new n,new n,new n,new n,new n,new n,new n,new i,new i,new i,new n,v.prototype.internalStep=function(e){this.dt=e;var t,n=this.contacts,i=O,s=N,o=this.numObjects(),r=this.bodies,a=this.solver,c=this.doProfiling,l=this.profile,h=_.DYNAMIC,u=this.constraints,d=D,p=0;c&&(t=performance.now()),p=0;for(var f=this.subsystems.length;p!==f;p++)this.subsystems[p].update();c&&(t=performance.now()),i.length=0,s.length=0,this.broadphase.collisionPairs(this,i,s),c&&(l.broadphase=performance.now()-t);var m=u.length;for(p=0;p!==m;p++)if(!(M=u[p]).collideConnected)for(var g=i.length-1;g>=0;g-=1)(M.bodyA===i[g]&&M.bodyB===s[g]||M.bodyB===i[g]&&M.bodyA===s[g])&&(i.splice(g,1),s.splice(g,1));this.collisionMatrixTick(),c&&(t=performance.now());var v=R,y=n.length;for(p=0;p!==y;p++)v.push(n[p]);n.length=0;var x=this.frictionEquations.length;for(p=0;p!==x;p++)d.push(this.frictionEquations[p]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(i,s,this,n,v,this.frictionEquations,d),c&&(l.narrowphase=performance.now()-t),c&&(t=performance.now()),p=0;p<this.frictionEquations.length;p++)a.addEquation(this.frictionEquations[p]);for(var S=n.length,C=0;C!==S;C++){var E=(M=n[C]).bi,T=M.bj,b=M.si,A=M.sj;b.material&&A.material?b.material.restitution>=0&&A.material.restitution>=0&&(M.restitution=b.material.restitution*A.material.restitution):E.material&&T.material&&E.material.restitution>=0&&T.material.restitution>=0&&(M.restitution=E.material.restitution*T.material.restitution),a.addEquation(M),E.allowSleep&&E.type===_.DYNAMIC&&E.sleepState===_.SLEEPING&&T.sleepState===_.AWAKE&&T.type!==_.STATIC&&T.velocity.norm2()+T.angularVelocity.norm2()>=2*Math.pow(T.sleepSpeedLimit,2)&&(E._wakeUpAfterNarrowphase=!0),T.allowSleep&&T.type===_.DYNAMIC&&T.sleepState===_.SLEEPING&&E.sleepState===_.AWAKE&&E.type!==_.STATIC&&E.velocity.norm2()+E.angularVelocity.norm2()>=2*Math.pow(E.sleepSpeedLimit,2)&&(T._wakeUpAfterNarrowphase=!0),this.collisionMatrix.set(E,T,!0),this.collisionMatrixPrevious.get(E,T)||(I.body=T,I.contact=M,E.dispatchEvent(I),I.body=E,T.dispatchEvent(I)),this.bodyOverlapKeeper.set(E.id,T.id),this.shapeOverlapKeeper.set(b.id,A.id)}for(this.emitContactEvents(),c&&(l.makeContactConstraints=performance.now()-t,t=performance.now()),p=0;p!==o;p++)(E=r[p])._wakeUpAfterNarrowphase&&(E.wakeUp(),E._wakeUpAfterNarrowphase=!1);for(m=u.length,p=0;p!==m;p++){var M;(M=u[p]).update(),g=0;for(var L=M.equations.length;g!==L;g++){var B=M.equations[g];a.addEquation(B)}}for(a.solve(e,this),c&&(l.solve=performance.now()-t),a.removeAllEquations(),this.dispatchEvent(w),p=0;p!==o;p++)(E=r[p]).preStep&&E.preStep.call(E);c&&(t=performance.now());var F=this.stepnumber%(this.quatNormalizeSkip+1)==0,z=this.quatNormalizeFast;for(p=0;p!==o;p++)r[p].integrate(e,F,z);var U=Math.pow;for(p=0;p!==o;p++)if((E=r[p]).type&h){var G=U(1-E.linearDamping,e),V=E.velocity;V.mult(G,V);var H=E.angularVelocity;if(H){var k=U(1-E.angularDamping,e);H.mult(k,H)}}for(this.broadphase.dirty=!0,c&&(l.integrate=performance.now()-t),this.time+=e,this.stepnumber+=1,this.dispatchEvent(P),p=0;p!==o;p++){var j=(E=r[p]).postStep;j&&j.call(E)}if(this.allowSleep)for(p=0;p!==o;p++)r[p].sleepTick(this.time)},v.prototype.emitContactEvents=(S=[],C=[],E={type:"beginContact",bodyA:null,bodyB:null},T={type:"endContact",bodyA:null,bodyB:null},b={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},A={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},function(){var e=this.hasAnyEventListener("beginContact"),t=this.hasAnyEventListener("endContact");if((e||t)&&this.bodyOverlapKeeper.getDiff(S,C),e){for(var n=0,i=S.length;n<i;n+=2)E.bodyA=this.getBodyById(S[n]),E.bodyB=this.getBodyById(S[n+1]),this.dispatchEvent(E);E.bodyA=E.bodyB=null}if(t){for(n=0,i=C.length;n<i;n+=2)T.bodyA=this.getBodyById(C[n]),T.bodyB=this.getBodyById(C[n+1]),this.dispatchEvent(T);T.bodyA=T.bodyB=null}S.length=C.length=0;var s=this.hasAnyEventListener("beginShapeContact"),o=this.hasAnyEventListener("endShapeContact");if((s||o)&&this.shapeOverlapKeeper.getDiff(S,C),s){for(n=0,i=S.length;n<i;n+=2){var r=this.getShapeById(S[n]),a=this.getShapeById(S[n+1]);b.shapeA=r,b.shapeB=a,b.bodyA=r.body,b.bodyB=a.body,this.dispatchEvent(b)}b.bodyA=b.bodyB=b.shapeA=b.shapeB=null}if(o){for(n=0,i=C.length;n<i;n+=2)r=this.getShapeById(C[n]),a=this.getShapeById(C[n+1]),A.shapeA=r,A.shapeB=a,A.bodyA=r.body,A.bodyB=a.body,this.dispatchEvent(A);A.bodyA=A.bodyB=A.shapeA=A.shapeB=null}}),v.prototype.clearForces=function(){for(var e=this.bodies,t=e.length,n=0;n!==t;n++){var i=e[n];i.force,i.torque,i.force.set(0,0,0),i.torque.set(0,0,0)}};var M={type:"cc-trigger",event:"",selfBody:null,otherBody:null,selfShape:null,otherShape:null},L={type:"cc-collide",event:"",body:null,selfShape:null,otherShape:null,contacts:null},B=[];v.prototype.emitTriggeredEvents=function(){if(0!=this.substeps){for(var e,t,n=this.triggerDic.getLength();n--;)if(e=this.triggerDic.getKeyByIndex(n),null!=(t=this.triggerDic.getDataByKey(e))){var i=t.si,s=t.sj;this.tm.get(i,s)?M.event="onTriggerStay":(this.tm.set(i,s,!0),M.event="onTriggerEnter"),M.selfShape=i,M.otherShape=s,M.selfBody=i.body,M.otherBody=s.body,i.dispatchEvent(M),M.selfShape=s,M.otherShape=i,M.selfBody=s.body,M.otherBody=i.body,s.dispatchEvent(M)}for(n=this.oldTriggerDic.getLength();n>0;)n--,e=this.oldTriggerDic.getKeyByIndex(n),null==this.triggerDic.getDataByKey(e)&&null!=(t=this.oldTriggerDic.getDataByKey(e))&&(i=t.si,s=t.sj,this.tm.set(i,s,!1),this.oldTriggerDic.del(i.id,s.id)&&n--,M.event="onTriggerExit",M.selfShape=i,M.otherShape=s,M.selfBody=i.body,M.otherBody=s.body,i.dispatchEvent(M),M.selfShape=s,M.otherShape=i,M.selfBody=s.body,M.otherBody=i.body,s.dispatchEvent(M));this.triggerDic.reset()}},v.prototype.emitCollisionEvents=function(){if(0!=this.substeps){for(var e,t,n=this.contacts,i=this.contacts.length;i--;){var s=(h=n[i]).si,o=h.sj,r=this.contactsDic.get(s.id,o.id);null==r&&(r=this.contactsDic.set(s.id,o.id,[])),r.push(h)}for(i=this.contactsDic.getLength();i--;)if(e=this.contactsDic.getKeyByIndex(i),null!=(t=this.contactsDic.getDataByKey(e))){s=t[0].si,o=t[0].sj;var a=s.body,c=o.body;this.cm.get(a,c)?L.event="onCollisionStay":(this.cm.set(a,c,!0),L.event="onCollisionEnter"),L.bi=a,L.contact=t[0],L.contacts=t,L.body=c,L.selfShape=s,L.otherShape=o,a.dispatchEvent(L),L.body=a,L.selfShape=o,L.otherShape=s,c.dispatchEvent(L)}var l=B;for(i=l.length;i--;){var h;s=(h=l[i]).si,o=h.sj,null==this.oldContactsDic.get(s.id,o.id)&&this.oldContactsDic.set(s.id,o.id,h)}for(i=this.oldContactsDic.getLength();i--;)e=this.oldContactsDic.getKeyByIndex(i),null==this.contactsDic.getDataByKey(e)&&(s=(t=this.oldContactsDic.getDataByKey(e)).si,o=t.sj,a=s.body,c=o.body,this.cm.get(a,c)&&(a.isSleeping()&&c.isSleeping()||(this.cm.set(a,c,!1),L.bi=a,L.contact=t,L.event="onCollisionExit",L.body=c,L.selfShape=s,L.otherShape=o,L.contacts.length=0,L.contacts.push(t),a.dispatchEvent(L),L.body=a,L.selfShape=o,L.otherShape=s,c.dispatchEvent(L))));this.contactsDic.reset(),this.oldContactsDic.reset(),R=B,B=this.contacts.slice(),this.contacts.length=0}}},{"../collision/AABB":3,"../collision/ArrayCollisionMatrix":4,"../collision/NaiveBroadphase":7,"../collision/ObjectCollisionMatrix":8,"../collision/OverlapKeeper":9,"../collision/Ray":10,"../collision/RaycastResult":11,"../equations/ContactEquation":20,"../equations/FrictionEquation":22,"../material/ContactMaterial":25,"../material/Material":26,"../math/Quaternion":29,"../math/Vec3":31,"../objects/Body":32,"../shapes/Shape":44,"../solver/GSSolver":47,"../utils/EventTarget":50,"../utils/TupleDictionary":53,"./Narrowphase":56}]},{},[2])(2)}(t={exports:{}}),t.exports}();let kce,jce,Wce,qce,Xce,Yce,Kce;function $ce(e){u._global.CC_PHYSICS_BUILTIN="builtin"===e,u._global.CC_PHYSICS_CANNON="cannon.js"===e,u._global.CC_PHYSICS_AMMO="ammo.js"===e}!function(e){e[e.DYNAMIC=1]="DYNAMIC",e[e.STATIC=2]="STATIC",e[e.KINEMATIC=4]="KINEMATIC"}(kce||(kce=e("ERigidBodyType",{}))),qe(kce),function(e){e[e.X_AXIS=0]="X_AXIS",e[e.Y_AXIS=1]="Y_AXIS",e[e.Z_AXIS=2]="Z_AXIS"}(jce||(jce=e("EAxisDirection",{}))),qe(jce),function(e){e[e.VERTEX=1]="VERTEX",e[e.LINE=2]="LINE",e[e.TRIANGLE=3]="TRIANGLE",e[e.TETRAHEDRON=4]="TETRAHEDRON"}(Wce||(Wce={})),qe(Wce),function(e){e[e.BOX=0]="BOX",e[e.SPHERE=1]="SPHERE",e[e.CAPSULE=2]="CAPSULE",e[e.CYLINDER=3]="CYLINDER",e[e.CONE=4]="CONE",e[e.MESH=5]="MESH",e[e.PLANE=6]="PLANE",e[e.SIMPLEX=7]="SIMPLEX",e[e.TERRAIN=8]="TERRAIN"}(qce||(qce={})),qe(qce),function(e){e[e.POINT_TO_POINT=0]="POINT_TO_POINT",e[e.HINGE=1]="HINGE",e[e.CONE_TWIST=2]="CONE_TWIST"}(Xce||(Xce={})),qe(Xce),function(e){e[e.DEFAULT=1]="DEFAULT"}(Yce||(Yce={})),qe(Yce);const Qce={id:"",switchTo:function(e){if(!Qce.runInEditor)return;const t=Qce;if(Qce.physicsWorld&&e!==Qce.id&&null!=Qce.backend[e]?(Qce.physicsWorld.destroy(),console.info(`[PHYSICS]: switch from ${Qce.id} to ${e}.`),$ce(e),t.id=e,t.wrapper=Qce.backend[e],t.physicsWorld=nle()):(console.info(`[PHYSICS]: using ${e}.`),t.physicsWorld=nle()),Kce){const e=t.physicsWorld;e.setGravity(Kce.gravity),e.setAllowSleep(Kce.allowSleep),e.setDefaultMaterial(Kce.defaultMaterial)}},register:function(e,t){if(console.info(`[PHYSICS]: register ${e}.`),Qce.backend[e]=t,!Qce.physicsWorld||Qce.id===e){$ce(e);const n=Qce;n.id=e,n.wrapper=t}},wrapper:{},backend:{},physicsWorld:null,runInEditor:!0},Jce=()=>0,Zce={impl:null,setGravity:Jce,setAllowSleep:Jce,setDefaultMaterial:Jce,step:Jce,syncAfterEvents:Jce,syncSceneToPhysics:Jce,raycast:Jce,raycastClosest:Jce,emitEvents:Jce,destroy:Jce};var ele;function tle(e,t){return null==e&&(Qce.id?S(`${Qce.id} physics does not support ${ele[t]}`):N(9600),!0)}function nle(){return tle(Qce.wrapper.PhysicsWorld,ele.World)?Zce:new Qce.wrapper.PhysicsWorld}!function(e){e[e.World=0]="World",e[e.RigidBody=1]="RigidBody",e[e.BoxCollider=2]="BoxCollider",e[e.SphereCollider=3]="SphereCollider",e[e.CapsuleCollider=4]="CapsuleCollider",e[e.MeshCollider=5]="MeshCollider",e[e.CylinderCollider=6]="CylinderCollider",e[e.ConeCollider=7]="ConeCollider",e[e.TerrainCollider=8]="TerrainCollider",e[e.SimplexCollider=9]="SimplexCollider",e[e.PlaneCollider=10]="PlaneCollider",e[e.PointToPointConstraint=11]="PointToPointConstraint",e[e.HingeConstraint=12]="HingeConstraint",e[e.ConeTwistConstraint=13]="ConeTwistConstraint"}(ele||(ele={}));const ile={impl:null,rigidBody:null,isAwake:!1,isSleepy:!1,isSleeping:!1,initialize:Jce,onEnable:Jce,onDisable:Jce,onDestroy:Jce,setType:Jce,setMass:Jce,setLinearDamping:Jce,setAngularDamping:Jce,useGravity:Jce,setLinearFactor:Jce,setAngularFactor:Jce,setAllowSleep:Jce,wakeUp:Jce,sleep:Jce,clearState:Jce,clearForces:Jce,clearVelocity:Jce,setSleepThreshold:Jce,getSleepThreshold:Jce,getLinearVelocity:Jce,setLinearVelocity:Jce,getAngularVelocity:Jce,setAngularVelocity:Jce,applyForce:Jce,applyLocalForce:Jce,applyImpulse:Jce,applyLocalImpulse:Jce,applyTorque:Jce,applyLocalTorque:Jce,setGroup:Jce,getGroup:Jce,addGroup:Jce,removeGroup:Jce,setMask:Jce,getMask:Jce,addMask:Jce,removeMask:Jce,isUsingCCD:Jce,useCCD:Jce},sle={INITED:!1},ole={impl:null,collider:null,attachedRigidBody:null,initialize:Jce,onLoad:Jce,onEnable:Jce,onDisable:Jce,onDestroy:Jce,setGroup:Jce,getGroup:Jce,addGroup:Jce,removeGroup:Jce,setMask:Jce,getMask:Jce,addMask:Jce,removeMask:Jce,setMaterial:Jce,setAsTrigger:Jce,setCenter:Jce,getAABB:Jce,getBoundingSphere:Jce,updateSize:Jce,updateRadius:Jce,setRadius:Jce,setCylinderHeight:Jce,setDirection:Jce,setHeight:Jce,setShapeType:Jce,setVertices:Jce,setMesh:Jce,setTerrain:Jce,setNormal:Jce,setConstant:Jce,updateEventListener:Jce};const rle={INITED:!1},ale={impl:null,initialize:Jce,onLoad:Jce,onEnable:Jce,onDisable:Jce,onDestroy:Jce,setEnableCollision:Jce,setConnectedBody:Jce,setPivotA:Jce,setPivotB:Jce,setAxis:Jce};var cle,lle,hle,ule,_le,dle,ple,fle;let mle=function(t){return e({PhysicsMaterial:t,PhysicMaterial:t}),t}(mc("cc.PhysicsMaterial")((fle=ple=class e extends xh{get friction(){return this._friction}set friction(t){Wt(this._friction,t)||(this._friction=t,this.emit(e.EVENT_UPDATE))}get rollingFriction(){return this._rollingFriction}set rollingFriction(t){Wt(this._rollingFriction,t)||(this._rollingFriction=t,this.emit(e.EVENT_UPDATE))}get spinningFriction(){return this._spinningFriction}set spinningFriction(t){Wt(this._spinningFriction,t)||(this._spinningFriction=t,this.emit(e.EVENT_UPDATE))}get restitution(){return this._restitution}set restitution(t){Wt(this._restitution,t)||(this._restitution=t,this.emit(e.EVENT_UPDATE))}constructor(){super(),this.id=void 0,rc(this,"_friction",hle,this),rc(this,"_rollingFriction",ule,this),rc(this,"_spinningFriction",_le,this),rc(this,"_restitution",dle,this),e.allMaterials.push(this),this.id=e._idCounter++,this._uuid||(this._uuid=`pm_${this.id}`)}clone(){const t=new e;return t._friction=this._friction,t._restitution=this._restitution,t._rollingFriction=this._rollingFriction,t._spinningFriction=this._spinningFriction,t}destroy(){if(super.destroy()){const t=e.allMaterials.indexOf(this);return t>=0&&e.allMaterials.splice(t,1),!0}return!1}setValues(t,n,i,s){const o=this._friction!==t||this._rollingFriction!==n||this._spinningFriction!==i||this._restitution!==s;this._friction=t,this._rollingFriction=n,this._spinningFriction=i,this._restitution=s,o&&this.emit(e.EVENT_UPDATE)}},ple.allMaterials=[],ple.EVENT_UPDATE="event_update",ple._idCounter=0,ac((lle=fle).prototype,"friction",[Lc],Object.getOwnPropertyDescriptor(lle.prototype,"friction"),lle.prototype),ac(lle.prototype,"rollingFriction",[Lc],Object.getOwnPropertyDescriptor(lle.prototype,"rollingFriction"),lle.prototype),ac(lle.prototype,"spinningFriction",[Lc],Object.getOwnPropertyDescriptor(lle.prototype,"spinningFriction"),lle.prototype),ac(lle.prototype,"restitution",[Lc],Object.getOwnPropertyDescriptor(lle.prototype,"restitution"),lle.prototype),hle=ac(lle.prototype,"_friction",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.6}}),ule=ac(lle.prototype,"_rollingFriction",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),_le=ac(lle.prototype,"_spinningFriction",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),dle=ac(lle.prototype,"_restitution",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),cle=lle))||cle);class gle{constructor(){this._hitPoint=new gn,this._hitNormal=new gn,this._distance=0,this._collider=null}get hitPoint(){return this._hitPoint}get distance(){return this._distance}get collider(){return this._collider}get hitNormal(){return this._hitNormal}_assign(e,t,n,i){gn.copy(this._hitPoint,e),gn.copy(this._hitNormal,i),this._distance=t,this._collider=n}clone(){const e=new gle;return gn.copy(e._hitPoint,this._hitPoint),gn.copy(e._hitNormal,this._hitNormal),e._distance=this._distance,e._collider=this._collider,e}}e("PhysicsRayResult",gle);class vle{constructor(e){if(1===e){const e=this;for(let t=0;t<32;t++){const n="_"+(1<<t);e[n]=0,e.updateArray=[],Object.defineProperty(e,1<<t,{get(){return this[n]},set(e){this[n]!==e&&(this[n]=e,this.updateArray.indexOf(t)<0&&this.updateArray.push(t))}})}this._1=Yce.DEFAULT}else{for(let e=0;e<32;e++)this[""+(1<<e)]=0;this[1]=Yce.DEFAULT}}}u.internal.PhysicsGroup=Yce;class yle extends cw{static get PHYSICS_NONE(){return!Qce.id}static get PHYSICS_BUILTIN(){return"builtin"===Qce.id}static get PHYSICS_CANNON(){return"cannon.js"===Qce.id}static get PHYSICS_BULLET(){return"bullet"===Qce.id}static get PHYSICS_PHYSX(){return"physx"===Qce.id}static get PhysicsGroup(){return Yce}static get instance(){return yle._instance}get enable(){return this._enable}set enable(e){this._enable=e}get allowSleep(){return this._allowSleep}set allowSleep(e){this._allowSleep=e,this.physicsWorld&&this.physicsWorld.setAllowSleep(e)}get maxSubSteps(){return this._maxSubSteps}set maxSubSteps(e){this._maxSubSteps=e}get fixedTimeStep(){return this._fixedTimeStep}set fixedTimeStep(e){this._fixedTimeStep=e}get gravity(){return this._gravity}set gravity(e){this._gravity.set(e),this.physicsWorld&&this.physicsWorld.setGravity(e)}get sleepThreshold(){return this._sleepThreshold}set sleepThreshold(e){this._sleepThreshold=e}get autoSimulation(){return this._autoSimulation}set autoSimulation(e){this._autoSimulation=e}get defaultMaterial(){return this._material}get physicsWorld(){return Qce.physicsWorld}constructor(){super(),this.raycastClosestResult=new gle,this.raycastResults=[],this.collisionMatrix=new vle(1),this.minVolumeSize=1e-5,this.useNodeChains=!1,this._enable=!0,this._allowSleep=!0,this._maxSubSteps=1,this._subStepCount=0,this._fixedTimeStep=1/60,this._autoSimulation=!0,this._accumulator=0,this._sleepThreshold=.1,this._gravity=new gn(0,-10,0),this._material=new mle,this.raycastOptions={group:-1,mask:-1,queryTrigger:!0,maxDistance:1e7},this.raycastResultPool=new Fl((()=>new gle),1),this._material.on(mle.EVENT_UPDATE,this._updateMaterial,this)}postUpdate(e){if(this.physicsWorld)if(this._enable){if(this._autoSimulation){for(this._subStepCount=0,this._accumulator+=e,Sw.emit(xw.EVENT_BEFORE_PHYSICS);this._subStepCount<this._maxSubSteps;){if(!(this._accumulator>=this._fixedTimeStep)){this.physicsWorld.syncSceneToPhysics();break}this.physicsWorld.syncSceneToPhysics(),this.physicsWorld.step(this._fixedTimeStep),this.physicsWorld.emitEvents(),this.physicsWorld.syncAfterEvents(),this._accumulator-=this._fixedTimeStep,this._subStepCount++}Sw.emit(xw.EVENT_AFTER_PHYSICS)}}else this.physicsWorld.syncSceneToPhysics()}resetConfiguration(e){const t=e||(yw.config?yw.config.physics:null);if(t){if("boolean"==typeof t.allowSleep&&(this._allowSleep=t.allowSleep),"number"==typeof t.fixedTimeStep&&(this._fixedTimeStep=t.fixedTimeStep),"number"==typeof t.maxSubSteps&&(this._maxSubSteps=t.maxSubSteps),"number"==typeof t.sleepThreshold&&(this._sleepThreshold=t.sleepThreshold),"boolean"==typeof t.autoSimulation&&(this.autoSimulation=t.autoSimulation),t.gravity&&gn.copy(this._gravity,t.gravity),t.defaultMaterial&&this._material.setValues(t.defaultMaterial.friction,t.defaultMaterial.rollingFriction,t.defaultMaterial.spinningFriction,t.defaultMaterial.restitution),t.collisionMatrix)for(const e in t.collisionMatrix)this.collisionMatrix[""+(1<<parseInt(e))]=t.collisionMatrix[e];if(t.collisionGroups){const e=t.collisionGroups;e instanceof Array&&(e.forEach((e=>{Yce[e.name]=1<<e.index})),qe.update(Yce))}}this.physicsWorld&&(this.physicsWorld.setGravity(this._gravity),this.physicsWorld.setAllowSleep(this._allowSleep),this.physicsWorld.setDefaultMaterial(this._material))}resetAccumulator(e=0){this._accumulator=e}step(e,t,n){this.physicsWorld&&this.physicsWorld.step(e,t,n)}syncSceneToPhysics(){this.physicsWorld&&this.physicsWorld.syncSceneToPhysics()}emitEvents(){this.physicsWorld&&this.physicsWorld.emitEvents()}raycast(e,t=4294967295,n=1e7,i=!0){return!!this.physicsWorld&&(this.raycastResultPool.reset(),this.raycastResults.length=0,this.raycastOptions.mask=t>>>0,this.raycastOptions.maxDistance=n,this.raycastOptions.queryTrigger=i,this.physicsWorld.raycast(e,this.raycastOptions,this.raycastResultPool,this.raycastResults))}raycastClosest(e,t=4294967295,n=1e7,i=!0){return!!this.physicsWorld&&(this.raycastOptions.mask=t>>>0,this.raycastOptions.maxDistance=n,this.raycastOptions.queryTrigger=i,this.physicsWorld.raycastClosest(e,this.raycastOptions,this.raycastClosestResult))}_updateMaterial(){this.physicsWorld&&this.physicsWorld.setDefaultMaterial(this._material)}static constructAndRegister(){if(!yle._instance){const e=new yle;e.resetConfiguration(),function(e){if(Kce||(Kce=e),Qce.runInEditor&&!Qce.physicsWorld){console.info(`[PHYSICS]: using ${Qce.id}.`);const e=Qce.physicsWorld=nle();e.setGravity(Kce.gravity),e.setAllowSleep(Kce.allowSleep),e.setDefaultMaterial(Kce.defaultMaterial)}}(e),yle._instance=e,Sw.registerSystem(yle.ID,e,e.priority)}}}var xle,Sle,Cle,Ele,Tle,ble,Ale,Ple,wle,Ile,Rle,Dle,Ole,Nle,Mle,Lle,Ble,Fle,zle,Ule,Gle,Vle,Hle,kle,jle,Wle,qle,Xle,Yle,Kle,$le,Qle,Jle,Zle,ehe,the,nhe,ihe,she,ohe,rhe,ahe,che,lhe;e("PhysicsSystem",yle),yle.ID="PHYSICS",yle._instance=null,Sw.once(xw.EVENT_INIT,(()=>{yle.constructAndRegister()}));let hhe=function(t){return e({RigidBody:t,RigidBodyComponent:t}),t}((xle=mc("cc.RigidBody"),Sle=Mc(),Cle=Rc(),Ele=vc(-1),Tle=Zc(yle.PhysicsGroup),ble=Wc(),Ale=Uc(),Ple=Zc(kce),wle=Wc(),Ile=Uc(),Rle=Bc(),Dle=Wc(),Ole=Uc(),Nle=Bc(),Mle=Wc(),Lle=Uc(),Ble=Bc(),Fle=Wc(),zle=Uc(),Ule=Bc(),Gle=Wc(),Vle=Uc(),Hle=Bc(),kle=Wc(),jle=Uc(),Wle=Bc(),qle=Wc(),Xle=Uc(),Yle=Bc(),Kle=Wc(),$le=Uc(),xle(Qle=Sle(Qle=Cle(Qle=Ic(Qle=yc(Qle=Ele((lhe=che=class extends Gh{constructor(...e){super(...e),this._body=null,rc(this,"_group",Zle,this),rc(this,"_type",ehe,this),rc(this,"_mass",the,this),rc(this,"_allowSleep",nhe,this),rc(this,"_linearDamping",ihe,this),rc(this,"_angularDamping",she,this),rc(this,"_useGravity",ohe,this),rc(this,"_linearFactor",rhe,this),rc(this,"_angularFactor",ahe,this)}get group(){return this._group}set group(e){this._group=e,this._body&&this._body.getGroup()!==e&&this._body.setGroup(e)}get type(){return this._type}set type(e){this._type!==e&&(this._type=e,this._body&&this._body.setType(e))}get mass(){return this._mass}set mass(e){this._mass!==e&&(e=e<=0?1e-4:e,this._mass=e,this._body&&this._body.setMass(e))}get allowSleep(){return this._allowSleep}set allowSleep(e){this._allowSleep=e,this._body&&this._body.setAllowSleep(e)}get linearDamping(){return this._linearDamping}set linearDamping(e){this._linearDamping=e,this._body&&this._body.setLinearDamping(e)}get angularDamping(){return this._angularDamping}set angularDamping(e){this._angularDamping=e,this._body&&this._body.setAngularDamping(e)}get useGravity(){return this._useGravity}set useGravity(e){this._useGravity=e,this._body&&this._body.useGravity(e)}get linearFactor(){return this._linearFactor}set linearFactor(e){gn.copy(this._linearFactor,e),this._body&&this._body.setLinearFactor(this._linearFactor)}get angularFactor(){return this._angularFactor}set angularFactor(e){gn.copy(this._angularFactor,e),this._body&&this._body.setAngularFactor(this._angularFactor)}get sleepThreshold(){return this._isInitialized?this._body.getSleepThreshold():.1}set sleepThreshold(e){this._isInitialized&&this._body.setSleepThreshold(e)}get useCCD(){return!!this._isInitialized&&this._body.isUsingCCD()}set useCCD(e){this._isInitialized&&this._body.useCCD(e)}get isAwake(){return!!this._isInitialized&&this._body.isAwake}get isSleepy(){return!!this._isInitialized&&this._body.isSleepy}get isSleeping(){return!!this._isInitialized&&this._body.isSleeping}get isStatic(){return this._type===kce.STATIC}set isStatic(e){e&&this.isStatic||!e&&!this.isStatic||(this.type=e?kce.STATIC:kce.DYNAMIC)}get isDynamic(){return this._type===kce.DYNAMIC}set isDynamic(e){e&&this.isDynamic||!e&&!this.isDynamic||(this.type=e?kce.DYNAMIC:kce.KINEMATIC)}get isKinematic(){return this._type===kce.KINEMATIC}set isKinematic(e){e&&this.isKinematic||!e&&!this.isKinematic||(this.type=e?kce.KINEMATIC:kce.DYNAMIC)}get body(){return this._body}get _isInitialized(){const e=null===this._body;return e&&C("[Physics]: This component has not been call onLoad yet, please make sure the node has been added to the scene."),!e}onLoad(){Qce.runInEditor&&(this._body=tle(Qce.wrapper.RigidBody,ele.RigidBody)?ile:new Qce.wrapper.RigidBody,this._body.initialize(this))}onEnable(){this._body&&this._body.onEnable()}onDisable(){this._body&&this._body.onDisable()}onDestroy(){this._body&&this._body.onDestroy()}applyForce(e,t){this._isInitialized&&this._body.applyForce(e,t)}applyLocalForce(e,t){this._isInitialized&&this._body.applyLocalForce(e,t)}applyImpulse(e,t){this._isInitialized&&this._body.applyImpulse(e,t)}applyLocalImpulse(e,t){this._isInitialized&&this._body.applyLocalImpulse(e,t)}applyTorque(e){this._isInitialized&&this._body.applyTorque(e)}applyLocalTorque(e){this._isInitialized&&this._body.applyLocalTorque(e)}wakeUp(){this._isInitialized&&this._body.wakeUp()}sleep(){this._isInitialized&&this._body.sleep()}clearState(){this._isInitialized&&this._body.clearState()}clearForces(){this._isInitialized&&this._body.clearForces()}clearVelocity(){this._isInitialized&&this._body.clearVelocity()}getLinearVelocity(e){this._isInitialized&&this._body.getLinearVelocity(e)}setLinearVelocity(e){this._isInitialized&&this._body.setLinearVelocity(e)}getAngularVelocity(e){this._isInitialized&&this._body.getAngularVelocity(e)}setAngularVelocity(e){this._isInitialized&&this._body.setAngularVelocity(e)}getGroup(){return this._isInitialized?this._body.getGroup():0}setGroup(e){this._isInitialized&&this._body.setGroup(e)}addGroup(e){this._isInitialized&&this._body.addGroup(e)}removeGroup(e){this._isInitialized&&this._body.removeGroup(e)}getMask(){return this._isInitialized?this._body.getMask():0}setMask(e){this._isInitialized&&this._body.setMask(e)}addMask(e){this._isInitialized&&this._body.addMask(e)}removeMask(e){this._isInitialized&&this._body.removeMask(e)}},che.Type=kce,ac((Jle=lhe).prototype,"group",[Tle,ble,Ale],Object.getOwnPropertyDescriptor(Jle.prototype,"group"),Jle.prototype),ac(Jle.prototype,"type",[Ple,wle,Ile],Object.getOwnPropertyDescriptor(Jle.prototype,"type"),Jle.prototype),ac(Jle.prototype,"mass",[Rle,Dle,Ole],Object.getOwnPropertyDescriptor(Jle.prototype,"mass"),Jle.prototype),ac(Jle.prototype,"allowSleep",[Nle,Mle,Lle],Object.getOwnPropertyDescriptor(Jle.prototype,"allowSleep"),Jle.prototype),ac(Jle.prototype,"linearDamping",[Ble,Fle,zle],Object.getOwnPropertyDescriptor(Jle.prototype,"linearDamping"),Jle.prototype),ac(Jle.prototype,"angularDamping",[Ule,Gle,Vle],Object.getOwnPropertyDescriptor(Jle.prototype,"angularDamping"),Jle.prototype),ac(Jle.prototype,"useGravity",[Hle,kle,jle],Object.getOwnPropertyDescriptor(Jle.prototype,"useGravity"),Jle.prototype),ac(Jle.prototype,"linearFactor",[Wle,qle,Xle],Object.getOwnPropertyDescriptor(Jle.prototype,"linearFactor"),Jle.prototype),ac(Jle.prototype,"angularFactor",[Yle,Kle,$le],Object.getOwnPropertyDescriptor(Jle.prototype,"angularFactor"),Jle.prototype),Zle=ac(Jle.prototype,"_group",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return yle.PhysicsGroup.DEFAULT}}),ehe=ac(Jle.prototype,"_type",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return kce.DYNAMIC}}),the=ac(Jle.prototype,"_mass",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),nhe=ac(Jle.prototype,"_allowSleep",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),ihe=ac(Jle.prototype,"_linearDamping",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),she=ac(Jle.prototype,"_angularDamping",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),ohe=ac(Jle.prototype,"_useGravity",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),rhe=ac(Jle.prototype,"_linearFactor",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn(1,1,1)}}),ahe=ac(Jle.prototype,"_angularFactor",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn(1,1,1)}}),Qle=Jle))||Qle)||Qle)||Qle)||Qle)||Qle)||Qle));var uhe,_he,dhe,phe,fhe,mhe,ghe,vhe,yhe,xhe,She,Che,Ehe,The,bhe,Ahe,Phe,whe,Ihe,Rhe,Dhe,Ohe;hhe||(hhe=function(t){return e({RigidBody:t,RigidBodyComponent:t}),t}({}));let Nhe=function(t){return e({Collider:t,ColliderComponent:t}),t}((uhe=mc("cc.Collider"),_he=Zc(hhe),dhe=zc(),phe=Wc(),fhe=Uc(),mhe=Zc(mle),ghe=zc(),vhe=Wc(),yhe=Uc(),xhe=Wc(),She=Uc(),Che=Zc(gn),Ehe=Wc(),The=Uc(),bhe=Zc(mle),uhe((Ohe=Dhe=class extends(ql(Gh)){get attachedRigidBody(){return function(e){const t=e.getComponent(hhe);return t&&t.isValid?t:null}(this.node)}get sharedMaterial(){return this._material}set sharedMaterial(e){this.material=e}get material(){return this._isSharedMaterial&&this._material&&(this._material.off(mle.EVENT_UPDATE,this._updateMaterial,this),this._material=this._material.clone(),this._material.on(mle.EVENT_UPDATE,this._updateMaterial,this),this._isSharedMaterial=!1),this._material}set material(e){this._shape?(e&&this._material?this._material.id!==e.id&&(this._material.off(mle.EVENT_UPDATE,this._updateMaterial,this),e.on(mle.EVENT_UPDATE,this._updateMaterial,this),this._isSharedMaterial=!1,this._material=e):e&&!this._material?(e.on(mle.EVENT_UPDATE,this._updateMaterial,this),this._material=e):!e&&this._material&&(this._material.off(mle.EVENT_UPDATE,this._updateMaterial,this),this._material=e),this._updateMaterial()):this._material=e}get isTrigger(){return this._isTrigger}set isTrigger(e){this._isTrigger=e,this._shape&&this._shape.setAsTrigger(this._isTrigger)}get center(){return this._center}set center(e){gn.copy(this._center,e),this._shape&&this._shape.setCenter(this._center)}get shape(){return this._shape}get worldBounds(){return null==this._aabb&&(this._aabb=new Ua),this._shape&&this._shape.getAABB(this._aabb),this._aabb}get boundingSphere(){return null==this._boundingSphere&&(this._boundingSphere=new er),this._shape&&this._shape.getBoundingSphere(this._boundingSphere),this._boundingSphere}get needTriggerEvent(){return this._needTriggerEvent}get needCollisionEvent(){return this._needCollisionEvent}get _isInitialized(){const e=null===this._shape;return e&&C("[Physics]: This component has not been call onLoad yet, please make sure the node has been added to the scene."),!e}constructor(e){super(),this.type=void 0,this._shape=null,this._aabb=null,this._boundingSphere=null,this._isSharedMaterial=!0,this._needTriggerEvent=!1,this._needCollisionEvent=!1,rc(this,"_material",whe,this),rc(this,"_isTrigger",Ihe,this),rc(this,"_center",Rhe,this),this.type=e}on(e,t,n,i){const s=super.on(e,t,n,i);return this._updateNeedEvent(e),s}off(e,t,n){super.off(e,t,n),this._updateNeedEvent()}once(e,t,n){const i=super.once(e,t,n);return this._updateNeedEvent(e),i}removeAll(e){super.removeAll(e),this._updateNeedEvent()}getGroup(){return this._isInitialized?this._shape.getGroup():0}setGroup(e){this._isInitialized&&this._shape.setGroup(e)}addGroup(e){this._isInitialized&&this._shape.addGroup(e)}removeGroup(e){this._isInitialized&&this._shape.removeGroup(e)}getMask(){return this._isInitialized?this._shape.getMask():0}setMask(e){this._isInitialized&&this._shape.setMask(e)}addMask(e){this._isInitialized&&this._shape.addMask(e)}removeMask(e){this._isInitialized&&this._shape.removeMask(e)}onLoad(){Qce.runInEditor&&(this.sharedMaterial=null==this._material?yle.instance.defaultMaterial:this._material,this._shape=function(e){return sle.INITED||(sle.INITED=!0,sle[qce.BOX]=function(){return tle(Qce.wrapper.BoxShape,ele.BoxCollider)?ole:new Qce.wrapper.BoxShape},sle[qce.SPHERE]=function(){return tle(Qce.wrapper.SphereShape,ele.SphereCollider)?ole:new Qce.wrapper.SphereShape},sle[qce.CAPSULE]=function(){return tle(Qce.wrapper.CapsuleShape,ele.CapsuleCollider)?ole:new Qce.wrapper.CapsuleShape},sle[qce.CYLINDER]=function(){return tle(Qce.wrapper.CylinderShape,ele.CylinderCollider)?ole:new Qce.wrapper.CylinderShape},sle[qce.CONE]=function(){return tle(Qce.wrapper.ConeShape,ele.ConeCollider)?ole:new Qce.wrapper.ConeShape},sle[qce.MESH]=function(){return tle(Qce.wrapper.TrimeshShape,ele.MeshCollider)?ole:new Qce.wrapper.TrimeshShape},sle[qce.TERRAIN]=function(){return tle(Qce.wrapper.TerrainShape,ele.TerrainCollider)?ole:new Qce.wrapper.TerrainShape},sle[qce.SIMPLEX]=function(){return tle(Qce.wrapper.SimplexShape,ele.SimplexCollider)?ole:new Qce.wrapper.SimplexShape},sle[qce.PLANE]=function(){return tle(Qce.wrapper.PlaneShape,ele.PlaneCollider)?ole:new Qce.wrapper.PlaneShape}),sle[e]()}(this.type),this._shape.initialize(this),this._shape.onLoad())}onEnable(){this._shape&&this._shape.onEnable()}onDisable(){this._shape&&this._shape.onDisable()}onDestroy(){this._shape&&(this._needTriggerEvent=!1,this._needCollisionEvent=!1,this._shape.updateEventListener(),this._material&&this._material.off(mle.EVENT_UPDATE,this._updateMaterial,this),this._shape.onDestroy()),this._boundingSphere&&this._boundingSphere.destroy()}_updateMaterial(){this._shape&&this._shape.setMaterial(this._material)}_updateNeedEvent(e){this.isValid&&(void 0!==e?("onCollisionEnter"!==e&&"onCollisionStay"!==e&&"onCollisionExit"!==e||(this._needCollisionEvent=!0),"onTriggerEnter"!==e&&"onTriggerStay"!==e&&"onTriggerExit"!==e||(this._needTriggerEvent=!0)):(this.hasEventListener("onTriggerEnter")||this.hasEventListener("onTriggerStay")||this.hasEventListener("onTriggerExit")||(this._needTriggerEvent=!1),this.hasEventListener("onCollisionEnter")||this.hasEventListener("onCollisionStay")||this.hasEventListener("onCollisionExit")||(this._needCollisionEvent=!1)),this._shape&&this._shape.updateEventListener())}},Dhe.Type=qce,Dhe.Axis=jce,ac((Phe=Ohe).prototype,"attachedRigidBody",[_he,Fc,dhe,phe,fhe],Object.getOwnPropertyDescriptor(Phe.prototype,"attachedRigidBody"),Phe.prototype),ac(Phe.prototype,"sharedMaterial",[mhe,ghe,vhe,yhe],Object.getOwnPropertyDescriptor(Phe.prototype,"sharedMaterial"),Phe.prototype),ac(Phe.prototype,"isTrigger",[xhe,She],Object.getOwnPropertyDescriptor(Phe.prototype,"isTrigger"),Phe.prototype),ac(Phe.prototype,"center",[Che,Ehe,The],Object.getOwnPropertyDescriptor(Phe.prototype,"center"),Phe.prototype),whe=ac(Phe.prototype,"_material",[bhe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Ihe=ac(Phe.prototype,"_isTrigger",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Rhe=ac(Phe.prototype,"_center",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn}}),Ahe=Phe))||Ahe));function Mhe(e){return void 0===(e=e||{}).includeNormal&&(e.includeNormal=!0),void 0===e.includeUV&&(e.includeUV=!0),e}Nhe||(Nhe=function(t){return e({Collider:t,ColliderComponent:t}),t}({}));const Lhe=new gn,Bhe=new gn,Fhe=new gn,zhe=new gn,Uhe=new gn,Ghe=new gn,Vhe=new gn,Hhe=new gn,khe=new gn,jhe=new gn,Whe=new gn,qhe=new gn,Xhe=new gn(0,0,0),Yhe=new gn(0,0,0);function Khe(e=.5,t=.5,n=2,i={}){const s=.5*n,o=i.radialSegments||32,r=i.heightSegments||1,a=void 0===i.capped||i.capped,c=i.arc||2*Math.PI;let l=0;a||(e>0&&l++,t>0&&l++);let h=(o+1)*(r+1);a&&(h+=(o+1)*l+o*l);let u=o*r*6;a&&(u+=o*l*3);const _=new Array(u),d=new Array(3*h),p=new Array(3*h),f=new Array(2*h),m=Math.max(e,t),g=new gn(-m,-s,-m),v=new gn(m,s,m),y=Math.sqrt(m*m+s*s);let x=0,S=0;return function(){const i=[],a=e-t,l=a*a/n*Math.sign(a);for(let e=0;e<=r;e++){const h=[],u=e/r,_=u*a+t;for(let e=0;e<=o;++e){const t=e/o,i=t*c,r=Math.sin(i),a=Math.cos(i);d[3*x]=_*r,d[3*x+1]=u*n-s,d[3*x+2]=_*a,gn.normalize(Xhe,gn.set(Yhe,r,-l,a)),p[3*x]=Xhe.x,p[3*x+1]=Xhe.y,p[3*x+2]=Xhe.z,f[2*x]=2*(1-t)%1,f[2*x+1]=u,h.push(x),++x}i.push(h)}for(let e=0;e<r;++e)for(let t=0;t<o;++t){const n=i[e][t],s=i[e+1][t],o=i[e+1][t+1],r=i[e][t+1];_[S]=n,++S,_[S]=r,++S,_[S]=s,++S,_[S]=r,++S,_[S]=o,++S,_[S]=s,++S}}(),a&&(t>0&&C(!1),e>0&&C(!0)),{positions:d,normals:p,uvs:f,indices:_,minPos:g,maxPos:v,boundingRadius:y};function C(n){const i=n?e:t,r=n?1:-1,a=x;for(let e=1;e<=o;++e)d[3*x]=0,d[3*x+1]=s*r,d[3*x+2]=0,p[3*x]=0,p[3*x+1]=r,p[3*x+2]=0,f[2*x]=.5,f[2*x+1]=.5,++x;const l=x;for(let e=0;e<=o;++e){const t=e/o*c,n=Math.cos(t),a=Math.sin(t);d[3*x]=i*a,d[3*x+1]=s*r,d[3*x+2]=i*n,p[3*x]=0,p[3*x+1]=r,p[3*x+2]=0,f[2*x]=.5-.5*a*r,f[2*x+1]=.5+.5*n,++x}for(let e=0;e<o;++e){const t=a+e,i=l+e;n?(_[S]=i+1,++S,_[S]=t,++S,_[S]=i,++S):(_[S]=t,++S,_[S]=i+1,++S,_[S]=i,++S)}}}const $he=new gn(0,0,0),Qhe=new gn(0,0,0),Jhe=new gn(0,0,0),Zhe=new gn(0,0,0),eue=new gn(0,0,0),tue=new gn(0,0,0),nue=new gn(0,0,0),iue=new gn(0,0,0),sue=new gn(0,0,0);var oue=Object.freeze({__proto__:null,box:function(e){const t=(e=e||{}).widthSegments||1,n=e.heightSegments||1,i=e.lengthSegments||1,s=(e.width||1)/2,o=(e.height||1)/2,r=(e.length||1)/2,a=[gn.set(Uhe,-s,-o,r),gn.set(Ghe,s,-o,r),gn.set(Vhe,s,o,r),gn.set(Hhe,-s,o,r),gn.set(khe,s,-o,-r),gn.set(jhe,-s,-o,-r),gn.set(Whe,-s,o,-r),gn.set(qhe,s,o,-r)],c=[[2,3,1],[4,5,7],[7,6,2],[1,0,4],[1,4,2],[5,0,6]],l=[[0,0,1],[0,0,-1],[0,1,0],[0,-1,0],[1,0,0],[-1,0,0]],h=[[-1,0,0,1],[-1,0,0,1],[-1,0,0,1],[-1,0,0,1],[0,0,-1,1],[0,0,1,1]],u=[],_=[],d=[],p=[],f=[],m=new gn(-s,-o,-r),g=new gn(s,o,r),v=Math.sqrt(s*s+o*o+r*r);function y(e,t,n){let i,s,o,r;const m=u.length/3,g=c[e],v=l[e],y=h[e];for(r=0;r<=n;r++)for(o=0;o<=t;o++)if(i=o/t,s=r/n,gn.lerp(Lhe,a[g[0]],a[g[1]],i),gn.lerp(Bhe,a[g[0]],a[g[2]],s),gn.subtract(Fhe,Bhe,a[g[0]]),gn.add(zhe,Lhe,Fhe),u.push(zhe.x,zhe.y,zhe.z),_.push(v[0],v[1],v[2]),d.push(i,s),p.push(y[0],y[1],y[2],y[3]),o<t&&r<n){const e=t+1,n=o+r*e,i=o+(r+1)*e,s=o+1+(r+1)*e,a=o+1+r*e;f.push(m+n,m+a,m+i),f.push(m+i,m+a,m+s)}}return y(0,t,n),y(4,i,n),y(1,t,n),y(5,i,n),y(3,t,i),y(2,t,i),{positions:u,normals:_,uvs:d,tangents:p,indices:f,minPos:m,maxPos:g,boundingRadius:v}},cone:function(e=.5,t=1,n={}){return Khe(0,e,t,n)},cylinder:Khe,plane:function(e){const t=function(e){return(e=Mhe(e)).width=e.width||10,e.length=e.length||10,e.widthSegments=e.widthSegments||10,e.lengthSegments=e.lengthSegments||10,e}(e),{width:n,length:i,widthSegments:s,lengthSegments:o}=t,r=.5*n,a=.5*i,c=[],l=[],h=[],u=new gn(-r,0,-a),_=new gn(r,0,a),d=Math.sqrt(n*n+i*i);gn.set(eue,-r,0,a),gn.set(tue,r,0,a),gn.set(nue,-r,0,-a);for(let e=0;e<=o;e++)for(let n=0;n<=s;n++){const i=n/s,r=e/o;if(gn.lerp($he,eue,tue,i),gn.lerp(Qhe,eue,nue,r),gn.subtract(Jhe,Qhe,eue),gn.add(Zhe,$he,Jhe),c.push(Zhe.x,Zhe.y,Zhe.z),t.includeUV&&l.push(i,r),n<s&&e<o){const t=s+1,i=n+e*t,o=n+(e+1)*t,r=n+1+(e+1)*t,a=n+1+e*t;h.push(i,a,o),h.push(a,r,o)}}const p={positions:c,indices:h,minPos:u,maxPos:_,boundingRadius:d};if(t.includeNormal){const e=(o+1)*(s+1),t=new Array(3*e);p.normals=t;for(let n=0;n<e;++n)t[3*n+0]=0,t[3*n+1]=1,t[3*n+2]=0}return t.includeUV&&(p.uvs=l),p},quad:function(e){const t=Mhe(e),n={positions:[-.5,-.5,0,-.5,.5,0,.5,.5,0,.5,-.5,0],indices:[0,3,1,3,2,1],minPos:{x:-.5,y:-.5,z:0},maxPos:{x:.5,y:.5,z:0},boundingRadius:Math.sqrt(.5)};return!1!==t.includeNormal&&(n.normals=[0,0,1,0,0,1,0,0,1,0,0,1]),!1!==t.includeUV&&(n.uvs=[0,0,0,1,1,1,1,0]),n},sphere:function(e=.5,t={}){const n=void 0!==t.segments?t.segments:32,i=[],s=[],o=[],r=[],a=new gn(-e,-e,-e),c=new gn(e,e,e),l=e;for(let t=0;t<=n;++t){const a=t*Math.PI/n,c=Math.sin(a),l=-Math.cos(a);for(let a=0;a<=n;++a){const h=2*a*Math.PI/n-Math.PI/2,u=Math.sin(h)*c,_=l,d=Math.cos(h)*c,p=a/n,f=t/n;if(i.push(u*e,_*e,d*e),s.push(u,_,d),o.push(p,f),t<n&&a<n){const e=n+1,i=e*t+a,s=e*(t+1)+a,o=e*(t+1)+a+1,c=e*t+a+1;r.push(i,c,s),r.push(c,o,s)}}}return{positions:i,indices:r,normals:s,uvs:o,minPos:a,maxPos:c,boundingRadius:l}},torus:function(e=.4,t=.1,n={}){const i=n.radialSegments||32,s=n.tubularSegments||32,o=n.arc||2*Math.PI,r=[],a=[],c=[],l=[],h=new gn(-e-t,-t,-e-t),u=new gn(e+t,t,e+t),_=e+t;for(let n=0;n<=i;n++)for(let h=0;h<=s;h++){const u=h/s,_=n/i,d=u*o,p=_*Math.PI*2,f=(e+t*Math.cos(p))*Math.sin(d),m=t*Math.sin(p),g=(e+t*Math.cos(p))*Math.cos(d),v=Math.sin(d)*Math.cos(p),y=Math.sin(p),x=Math.cos(d)*Math.cos(p);if(r.push(f,m,g),a.push(v,y,x),c.push(u,_),h<s&&n<i){const e=s+1,t=e*n+h,i=e*(n+1)+h,o=e*(n+1)+h+1,r=e*n+h+1;l.push(t,r,i),l.push(r,o,i)}}return{positions:r,normals:a,uvs:c,indices:l,minPos:h,maxPos:u,boundingRadius:_}},capsule:function(e=.5,t=.5,n=2,i={}){const s=n-e-t,o=i.sides||32,r=i.heightSegments||32,a=t/n,c=s/n,l=e/n,h=Math.floor(r*a),u=Math.floor(r*l),_=Math.floor(r*c),d=s+t-n/2,p=t-n/2,f=t-n/2,m=i.arc||2*Math.PI,g=[],v=[],y=[],x=[],S=Math.max(e,t),C=new gn(-S,-n/2,-S),E=new gn(S,n/2,S),T=n/2;let b=0;const A=[];return function(){for(let e=0;e<=h;++e){const n=e*Math.PI/h/2,i=Math.sin(n),s=-Math.cos(n);for(let n=0;n<=o;++n){const a=2*n*Math.PI/o-Math.PI/2,c=Math.sin(a)*i,l=s,u=Math.cos(a)*i,_=n/o,d=e/r;if(g.push(c*t,l*t+f,u*t),v.push(c,l,u),y.push(_,d),e<h&&n<o){const t=o+1,i=t*e+n,s=t*(e+1)+n,r=t*(e+1)+n+1,a=t*e+n+1;x.push(i,a,s),x.push(a,r,s)}++b}}}(),function(){const n=(e-t)/s;for(let i=0;i<=_;i++){const r=[],l=i/_,h=l*(e-t)+t;for(let e=0;e<=o;++e){const t=e/o,i=l*c+a,u=t*m-m/4,_=Math.sin(u),d=Math.cos(u);g.push(h*_),g.push(l*s+p),g.push(h*d),gn.normalize(iue,gn.set(sue,_,-n,d)),v.push(iue.x),v.push(iue.y),v.push(iue.z),y.push(t,i),r.push(b),++b}A.push(r)}for(let e=0;e<_;++e)for(let t=0;t<o;++t){const n=A[e][t],i=A[e+1][t],s=A[e+1][t+1],o=A[e][t+1];x.push(n),x.push(o),x.push(i),x.push(o),x.push(s),x.push(i)}}(),function(){for(let t=0;t<=u;++t){const n=t*Math.PI/u/2+Math.PI/2,i=Math.sin(n),s=-Math.cos(n);for(let n=0;n<=o;++n){const a=2*n*Math.PI/o-Math.PI/2,c=Math.sin(a)*i,h=s,p=Math.cos(a)*i,f=n/o,m=t/r+(1-l);if(g.push(c*e,h*e+d,p*e),v.push(c,h,p),y.push(f,m),t<u&&n<o){const e=o+1,i=e*t+n+A[_][o]+1,s=e*(t+1)+n+A[_][o]+1,r=e*(t+1)+n+1+A[_][o]+1,a=e*t+n+1+A[_][o]+1;x.push(i,a,s),x.push(a,r,s)}}}}(),{positions:g,normals:v,uvs:y,indices:x,minPos:C,maxPos:E,boundingRadius:T}},circle:function(e){const t=function(e){return(e=Mhe(e)).segments=64,e}(e).segments,n=new Array(3*(t+1));n[0]=0,n[1]=0,n[2]=0;const i=new Array(1+2*t);i[0]=0;const s=2*Math.PI/t;for(let e=0;e<t;++e){const t=s*e,o=Math.cos(t),r=Math.sin(t),a=3*(e+1);n[a+0]=o,n[a+1]=r,n[a+2]=0;const c=2*e;i[1+c]=e+1,i[1+(c+1)]=e+2}return t>0&&(i[i.length-1]=1),{positions:n,indices:i,minPos:{x:1,y:1,z:0},maxPos:{x:-1,y:-1,z:0},boundingRadius:1,primitiveMode:Pi.TRIANGLE_FAN}},translate:function(e,t){const n=t.x||0,i=t.y||0,s=t.z||0,o=Math.floor(e.positions.length/3);for(let t=0;t<o;++t){const o=3*t,r=3*t+1,a=3*t+2;e.positions[o]+=n,e.positions[r]+=i,e.positions[a]+=s}return e.minPos&&(e.minPos.x+=n,e.minPos.y+=i,e.minPos.z+=s),e.maxPos&&(e.maxPos.x+=n,e.maxPos.y+=i,e.maxPos.z+=s),e},scale:function(e,t){const n=t.x||0,i=t.y||0,s=t.z||0,o=Math.floor(e.positions.length/3);for(let t=0;t<o;++t){const o=3*t,r=3*t+1,a=3*t+2;e.positions[o]*=n,e.positions[r]*=i,e.positions[a]*=s}return e.minPos&&(e.minPos.x*=n,e.minPos.y*=i,e.minPos.z*=s),e.maxPos&&(e.maxPos.x*=n,e.maxPos.y*=i,e.maxPos.z*=s),e.boundingRadius=Math.max(Math.max(n,i),s),e},wireframed:function(e){const{indices:t}=e;if(!t)return e;if(e.primitiveMode&&e.primitiveMode!==Pi.TRIANGLE_LIST)return e;const n=[[0,1],[1,2],[2,0]],i=[],s={};for(let e=0;e<t.length;e+=3)for(let o=0;o<3;++o){const r=t[e+n[o][0]],a=t[e+n[o][1]],c=r>a?a<<16|r:r<<16|a;void 0===s[c]&&(s[c]=0,i.push(r,a))}return e.indices=i,e.primitiveMode=Pi.LINE_LIST,e},wireframe:function(e){const t=[[0,1],[1,2],[2,0]],n=[],i={};for(let s=0;s<e.length;s+=3)for(let o=0;o<3;++o){const r=e[s+t[o][0]],a=e[s+t[o][1]],c=r>a?a<<16|r:r<<16|a;void 0===i[c]&&(i[c]=0,n.push(r,a))}return n},invWinding:function(e){const t=[];for(let n=0;n<e.length;n+=3)t.push(e[n],e[n+2],e[n+1]);return t},toWavefrontOBJ:function(e,t=1){if(!e.indices||!e.uvs||!e.normals||void 0!==e.primitiveMode&&e.primitiveMode!==Pi.TRIANGLE_LIST)return"";const n=e.positions,i=e.uvs,s=e.normals,o=e.indices,r=e=>`${o[e]+1}/${o[e]+1}/${o[e]+1}`;let a="";for(let e=0;e<n.length;e+=3)a+=`v ${n[e]*t} ${n[e+1]*t} ${n[e+2]*t}\n`;for(let e=0;e<i.length;e+=2)a+=`vt ${i[e]} ${i[e+1]}\n`;for(let e=0;e<s.length;e+=3)a+=`vn ${s[e]} ${s[e+1]} ${s[e+2]}\n`;for(let e=0;e<o.length;e+=3)a+=`f ${r(e)} ${r(e+1)} ${r(e+2)}\n`;return a},normals:function(e,t,n=1){const i=new Array(2*e.length);for(let s=0;s<e.length/3;++s){const o=3*s,r=6*s;i[r+0]=e[o+0],i[r+1]=e[o+1],i[r+2]=e[o+2],i[r+3]=e[o+0]+t[o+0]*n,i[r+4]=e[o+1]+t[o+1]*n,i[r+5]=e[o+2]+t[o+2]*n}return i},applyDefaultGeometryOptions:Mhe});function rue(e,t){e.__cc_wrapper__=t}function aue(e){return e.__cc_wrapper__}e("primitives",oue);const cue=new gn;function lue(e){return e.x=Math.abs(e.x),e.y=Math.abs(e.y),e.z=Math.abs(e.z),e}var hue,uue,_ue,due,pue,fue,mue,gue,vue=Object.freeze({__proto__:null,setWrap:rue,getWrap:aue,maxComponent:function(e){return Math.max(e.x,Math.max(e.y,e.z))},VEC3_0:cue,TriggerEventObject:{type:"onTriggerEnter",selfCollider:null,otherCollider:null,impl:null},CollisionEventObject:{type:"onCollisionEnter",selfCollider:null,otherCollider:null,contacts:[],impl:null},shrinkPositions:function(e){const t=[];if(e.length>=3){t[0]=e[0],t[1]=e[1],t[2]=e[2];const n=e.length;for(let i=3;i<n;i+=3){const n=e[i],s=e[i+1],o=e[i+2],r=t.length;let a=!0;for(let e=0;e<r;e+=3)if(Wt(n,t[e])&&Wt(s,t[e+1])&&Wt(o,t[e+2])){a=!1;break}a&&(t.push(n),t.push(s),t.push(o))}}return t},absolute:lue,cylinder:Khe});let yue=function(t){return e({BoxCollider:t,BoxColliderComponent:t}),t}((hue=mc("cc.BoxCollider"),uue=Mc(),_ue=Rc(),due=Zc(gn),pue=Uc(),hue(fue=uue(fue=_ue(fue=Ic((ac((mue=class extends Nhe{get size(){return this._size}set size(e){gn.strictEquals(this._size,e)||(gn.copy(this._size,e),lue(this._size),this._shape&&this.shape.updateSize())}get shape(){return this._shape}constructor(){super(qce.BOX),rc(this,"_size",gue,this)}}).prototype,"size",[due,pue],Object.getOwnPropertyDescriptor(mue.prototype,"size"),mue.prototype),gue=ac(mue.prototype,"_size",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn(1,1,1)}}),fue=mue))||fue)||fue)||fue)||fue));var xue,Sue,Cue,Eue,Tue,bue,Aue;let Pue=function(t){return e({SphereCollider:t,SphereColliderComponent:t}),t}((xue=mc("cc.SphereCollider"),Sue=Mc(),Cue=Rc(),Eue=Uc(),xue(Tue=Sue(Tue=Cue(Tue=Ic((ac((bue=class extends Nhe{get radius(){return this._radius}set radius(e){this._radius!==e&&(this._radius=Math.abs(e),this._shape&&this.shape.updateRadius())}get shape(){return this._shape}constructor(){super(qce.SPHERE),rc(this,"_radius",Aue,this)}}).prototype,"radius",[Eue],Object.getOwnPropertyDescriptor(bue.prototype,"radius"),bue.prototype),Aue=ac(bue.prototype,"_radius",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.5}}),Tue=bue))||Tue)||Tue)||Tue)||Tue));var wue,Iue,Rue,Due,Oue,Nue,Mue,Lue,Bue,Fue,zue,Uue;let Gue=function(t){return e({CapsuleCollider:t,CapsuleColliderComponent:t}),t}((wue=mc("cc.CapsuleCollider"),Iue=Mc(),Rue=Rc(),Due=Uc(),Oue=Uc(),Nue=Zc(jce),Mue=Uc(),wue(Lue=Iue(Lue=Rue(Lue=Ic((ac((Bue=class extends Nhe{get radius(){return this._radius}set radius(e){this._radius!==e&&(this._radius=Math.abs(e),this._shape&&this.shape.setRadius(e))}get cylinderHeight(){return this._cylinderHeight}set cylinderHeight(e){this._cylinderHeight!==e&&(this._cylinderHeight=Math.abs(e),this._shape&&this.shape.setCylinderHeight(e))}get direction(){return this._direction}set direction(e){(e=Math.floor(e))<jce.X_AXIS||e>jce.Z_AXIS||this._direction!==e&&(this._direction=e,this._shape&&this.shape.setDirection(e))}get height(){return 2*this._radius+this._cylinderHeight}set height(e){let t=e-2*this._radius;t<0&&(t=0),this.cylinderHeight=t}get worldHeight(){return 2*this._radius*this._getRadiusScale()+this._cylinderHeight*this._getHeightScale()}get shape(){return this._shape}constructor(){super(qce.CAPSULE),rc(this,"_radius",Fue,this),rc(this,"_cylinderHeight",zue,this),rc(this,"_direction",Uue,this)}_getRadiusScale(){if(null==this.node)return 1;const e=this.node.worldScale;return this._direction===jce.Y_AXIS?Math.abs(hn(e.x,e.z)):this._direction===jce.X_AXIS?Math.abs(hn(e.y,e.z)):Math.abs(hn(e.x,e.y))}_getHeightScale(){if(null==this.node)return 1;const e=this.node.worldScale;return this._direction===jce.Y_AXIS?Math.abs(e.y):this._direction===jce.X_AXIS?Math.abs(e.x):Math.abs(e.z)}}).prototype,"radius",[Due],Object.getOwnPropertyDescriptor(Bue.prototype,"radius"),Bue.prototype),ac(Bue.prototype,"cylinderHeight",[Oue],Object.getOwnPropertyDescriptor(Bue.prototype,"cylinderHeight"),Bue.prototype),ac(Bue.prototype,"direction",[Nue,Mue],Object.getOwnPropertyDescriptor(Bue.prototype,"direction"),Bue.prototype),Fue=ac(Bue.prototype,"_radius",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.5}}),zue=ac(Bue.prototype,"_cylinderHeight",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Uue=ac(Bue.prototype,"_direction",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return jce.Y_AXIS}}),Lue=Bue))||Lue)||Lue)||Lue)||Lue));var Vue,Hue,kue,jue,Wue,que,Xue,Yue,Kue,$ue,Que,Jue;let Zue=function(t){return e({CylinderCollider:t,CylinderColliderComponent:t}),t}((Vue=mc("cc.CylinderCollider"),Hue=Mc(),kue=Rc(),jue=Uc(),Wue=Uc(),que=Zc(jce),Xue=Uc(),Vue(Yue=Hue(Yue=kue(Yue=Ic((ac((Kue=class extends Nhe{get radius(){return this._radius}set radius(e){this._radius!==e&&(this._radius=Math.abs(e),this._shape&&this.shape.setRadius(e))}get height(){return this._height}set height(e){this._height!==e&&(this._height=Math.abs(e),this._shape&&this.shape.setHeight(e))}get direction(){return this._direction}set direction(e){this._direction!==e&&(e<jce.X_AXIS||e>jce.Z_AXIS||(this._direction=e,this._shape&&this.shape.setDirection(e)))}get shape(){return this._shape}constructor(){super(qce.CYLINDER),rc(this,"_radius",$ue,this),rc(this,"_height",Que,this),rc(this,"_direction",Jue,this)}}).prototype,"radius",[jue],Object.getOwnPropertyDescriptor(Kue.prototype,"radius"),Kue.prototype),ac(Kue.prototype,"height",[Wue],Object.getOwnPropertyDescriptor(Kue.prototype,"height"),Kue.prototype),ac(Kue.prototype,"direction",[que,Xue],Object.getOwnPropertyDescriptor(Kue.prototype,"direction"),Kue.prototype),$ue=ac(Kue.prototype,"_radius",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.5}}),Que=ac(Kue.prototype,"_height",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 2}}),Jue=ac(Kue.prototype,"_direction",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return jce.Y_AXIS}}),Yue=Kue))||Yue)||Yue)||Yue)||Yue));var e_e,t_e,n_e,i_e,s_e,o_e,r_e,a_e,c_e,l_e,h_e,u_e;let __e=e("ConeCollider",(e_e=mc("cc.ConeCollider"),t_e=Mc(),n_e=Rc(),i_e=Uc(),s_e=Uc(),o_e=Zc(jce),r_e=Uc(),e_e(a_e=t_e(a_e=n_e(a_e=Ic((ac((c_e=class extends Nhe{get radius(){return this._radius}set radius(e){this._radius!==e&&(this._radius=Math.abs(e),this._shape&&this.shape.setRadius(e))}get height(){return this._height}set height(e){this._height!==e&&(e<0&&(e=0),this._height=e,this._shape&&this.shape.setHeight(e))}get direction(){return this._direction}set direction(e){this._direction!==e&&(e<jce.X_AXIS||e>jce.Z_AXIS||(this._direction=e,this._shape&&this.shape.setDirection(e)))}get shape(){return this._shape}constructor(){super(qce.CONE),rc(this,"_radius",l_e,this),rc(this,"_height",h_e,this),rc(this,"_direction",u_e,this)}}).prototype,"radius",[i_e],Object.getOwnPropertyDescriptor(c_e.prototype,"radius"),c_e.prototype),ac(c_e.prototype,"height",[s_e],Object.getOwnPropertyDescriptor(c_e.prototype,"height"),c_e.prototype),ac(c_e.prototype,"direction",[o_e,r_e],Object.getOwnPropertyDescriptor(c_e.prototype,"direction"),c_e.prototype),l_e=ac(c_e.prototype,"_radius",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.5}}),h_e=ac(c_e.prototype,"_height",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),u_e=ac(c_e.prototype,"_direction",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return jce.Y_AXIS}}),a_e=c_e))||a_e)||a_e)||a_e)||a_e));var d_e,p_e,f_e,m_e,g_e,v_e,y_e,x_e,S_e,C_e;let E_e=function(t){return e({MeshCollider:t,MeshColliderComponent:t}),t}((d_e=mc("cc.MeshCollider"),p_e=Mc(),f_e=Rc(),m_e=Zc(ak),g_e=Uc(),v_e=Uc(),d_e(y_e=p_e(y_e=f_e(y_e=Ic((ac((x_e=class extends Nhe{get mesh(){return this._mesh}set mesh(e){this._mesh!==e&&(this._mesh=e,this._shape&&this.shape.setMesh(this._mesh))}get convex(){return this._convex}set convex(e){this._convex!==e&&(this._convex=e)}get shape(){return this._shape}constructor(){super(qce.MESH),rc(this,"_mesh",S_e,this),rc(this,"_convex",C_e,this)}}).prototype,"mesh",[m_e,g_e],Object.getOwnPropertyDescriptor(x_e.prototype,"mesh"),x_e.prototype),ac(x_e.prototype,"convex",[Lc,v_e],Object.getOwnPropertyDescriptor(x_e.prototype,"convex"),x_e.prototype),S_e=ac(x_e.prototype,"_mesh",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),C_e=ac(x_e.prototype,"_convex",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),y_e=x_e))||y_e)||y_e)||y_e)||y_e));var T_e,b_e,A_e,P_e,w_e,I_e,R_e,D_e,O_e,N_e,M_e,L_e,B_e,F_e,z_e,U_e,G_e,V_e;let H_e=e("ConstantForce",(T_e=mc("cc.ConstantForce"),b_e=Mc(),A_e=gc(hhe),P_e=Rc(),w_e=Wc(),I_e=Uc(),R_e=Wc(),D_e=Uc(),O_e=Wc(),N_e=Uc(),M_e=Wc(),L_e=Uc(),T_e(B_e=b_e(B_e=A_e(B_e=P_e(B_e=yc(B_e=Ic((z_e=ac((F_e=class extends Gh{constructor(...e){super(...e),this._rigidBody=null,rc(this,"_force",z_e,this),rc(this,"_localForce",U_e,this),rc(this,"_torque",G_e,this),rc(this,"_localTorque",V_e,this),this._mask=0}get force(){return this._force}set force(e){gn.copy(this._force,e),this._maskUpdate(this._force,1)}get localForce(){return this._localForce}set localForce(e){gn.copy(this._localForce,e),this._maskUpdate(this.localForce,2)}get torque(){return this._torque}set torque(e){gn.copy(this._torque,e),this._maskUpdate(this._torque,4)}get localTorque(){return this._localTorque}set localTorque(e){gn.copy(this._localTorque,e),this._maskUpdate(this._localTorque,8)}onLoad(){this._rigidBody=this.node.getComponent(hhe),this._maskUpdate(this._force,1),this._maskUpdate(this._localForce,2),this._maskUpdate(this._torque,4),this._maskUpdate(this._localTorque,8)}lateUpdate(e){null!=this._rigidBody&&0!==this._mask&&(1&this._mask&&this._rigidBody.applyForce(this._force),2&this._mask&&this._rigidBody.applyLocalForce(this.localForce),4&this._mask&&this._rigidBody.applyTorque(this._torque),8&this._mask&&this._rigidBody.applyLocalTorque(this._localTorque))}_maskUpdate(e,t){e.strictEquals(gn.ZERO)?this._mask&=~t:this._mask|=t}}).prototype,"_force",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn}}),U_e=ac(F_e.prototype,"_localForce",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn}}),G_e=ac(F_e.prototype,"_torque",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn}}),V_e=ac(F_e.prototype,"_localTorque",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn}}),ac(F_e.prototype,"force",[w_e,I_e],Object.getOwnPropertyDescriptor(F_e.prototype,"force"),F_e.prototype),ac(F_e.prototype,"localForce",[R_e,D_e],Object.getOwnPropertyDescriptor(F_e.prototype,"localForce"),F_e.prototype),ac(F_e.prototype,"torque",[O_e,N_e],Object.getOwnPropertyDescriptor(F_e.prototype,"torque"),F_e.prototype),ac(F_e.prototype,"localTorque",[M_e,L_e],Object.getOwnPropertyDescriptor(F_e.prototype,"localTorque"),F_e.prototype),B_e=F_e))||B_e)||B_e)||B_e)||B_e)||B_e)||B_e));var k_e,j_e,W_e,q_e,X_e,Y_e,K_e,$_e,Q_e,J_e,Z_e;const ede=16842754,tde=16842755,nde=16842756,ide=16842757,sde=16843025;class ode{constructor(){this.length=0,this.buffer=new Uint8Array(2048),this._buffView=new DataView(this.buffer.buffer),this._seekPos=0}reserve(e){if(this.buffer.byteLength>e)return;let t=this.buffer.byteLength;for(;t<e;)t+=t;const n=new Uint8Array(t);for(let e=0;e<this.length;++e)n[e]=this.buffer[e];this.buffer=n,this._buffView=new DataView(this.buffer.buffer)}assign(e){this.buffer=e,this.length=e.length,this._seekPos=e.byteOffset,this._buffView=new DataView(e.buffer)}writeInt8(e){this.reserve(this.length+1),this._buffView.setInt8(this.length,e),this.length+=1}writeInt16(e){this.reserve(this.length+2),this._buffView.setInt16(this.length,e,!0),this.length+=2}writeInt32(e){this.reserve(this.length+4),this._buffView.setInt32(this.length,e,!0),this.length+=4}writeIntArray(e){this.reserve(this.length+4*e.length);for(let t=0;t<e.length;++t)this._buffView.setInt32(this.length+4*t,e[t],!0);this.length+=4*e.length}writeFloat(e){this.reserve(this.length+4),this._buffView.setFloat32(this.length,e,!0),this.length+=4}writeFloatArray(e){this.reserve(this.length+4*e.length);for(let t=0;t<e.length;++t)this._buffView.setFloat32(this.length+4*t,e[t],!0);this.length+=4*e.length}writeString(e){this.reserve(this.length+e.length+4),this._buffView.setInt32(this.length,e.length,!0);for(let t=0;t<e.length;++t)this._buffView.setInt8(this.length+4+t,e.charCodeAt(t));this.length+=e.length+4}readInt8(){const e=this._buffView.getInt8(this._seekPos);return this._seekPos+=1,e}readInt16(){const e=this._buffView.getInt16(this._seekPos,!0);return this._seekPos+=2,e}readInt(){const e=this._buffView.getInt32(this._seekPos,!0);return this._seekPos+=4,e}readIntArray(e){for(let t=0;t<e.length;++t)e[t]=this._buffView.getInt32(this._seekPos+4*t,!0);return this._seekPos+=4*e.length,e}readFloat(){const e=this._buffView.getFloat32(this._seekPos,!0);return this._seekPos+=4,e}readFloatArray(e){for(let t=0;t<e.length;++t)e[t]=this._buffView.getFloat32(this._seekPos+4*t,!0);return this._seekPos+=4*e.length,e}readString(){const e=this.readInt();let t="";for(let n=0;n<e;++n)t+=String.fromCharCode(this.readInt8());return t}}mc("cc.TerrainLayerInfo")((j_e=ac((k_e=class{constructor(){rc(this,"slot",j_e,this),rc(this,"tileSize",W_e,this),rc(this,"detailMap",q_e,this),rc(this,"normalMap",X_e,this),rc(this,"roughness",Y_e,this),rc(this,"metallic",K_e,this)}}).prototype,"slot",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),W_e=ac(k_e.prototype,"tileSize",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),q_e=ac(k_e.prototype,"detailMap",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),X_e=ac(k_e.prototype,"normalMap",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Y_e=ac(k_e.prototype,"roughness",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),K_e=ac(k_e.prototype,"metallic",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),k_e));let rde=mc("cc.TerrainLayerBinaryInfo")($_e=class{constructor(){this.slot=0,this.tileSize=1,this.roughness=1,this.metallic=0,this.detailMapId="",this.normalMapId=""}})||$_e,ade=mc("cc.TerrainAsset")((Z_e=ac((J_e=class extends xh{constructor(){super(),this._version=0,this._data=null,this._tileSize=1,this._blockCount=[1,1],this._weightMapSize=128,this._lightMapSize=128,this._heights=new Uint16Array,this._weights=new Uint8Array,this._layerBuffer=[-1,-1,-1,-1],this._layerBinaryInfos=[],rc(this,"_layerInfos",Z_e,this)}get _nativeAsset(){return this._data.buffer}set _nativeAsset(e){this._data&&this._data.byteLength===e.byteLength?this._data.set(new Uint8Array(e)):this._data=new Uint8Array(e),this._loadNativeData(this._data)}get version(){return this._version}set tileSize(e){this._tileSize=e}get tileSize(){return this._tileSize}set blockCount(e){this._blockCount=e}get blockCount(){return this._blockCount}set lightMapSize(e){this._lightMapSize=e}get lightMapSize(){return this._lightMapSize}set weightMapSize(e){this._weightMapSize=e}get weightMapSize(){return this._weightMapSize}set heights(e){this._heights=e}get heights(){return this._heights}set weights(e){this._weights=e}get weights(){return this._weights}set layerBuffer(e){this._layerBuffer=e}get layerBuffer(){return this._layerBuffer}set layerInfos(e){this._layerInfos=e}get layerInfos(){return this._layerInfos}get layerBinaryInfos(){return this._layerBinaryInfos}getLayer(e,t,n){const i=4*(t*this.blockCount[0]+e)+n;return e<this.blockCount[0]&&t<this.blockCount[1]&&i<this._layerBuffer.length?this._layerBuffer[i]:-1}getHeight(e,t){const n=32*this._blockCount[0]+1;return.001953125*(this._heights[t*n+e]-32768)}getVertexCountI(){return this._blockCount.length<1?0:32*this._blockCount[0]+1}getVertexCountJ(){return this._blockCount.length<2?0:32*this._blockCount[1]+1}_setNativeData(e){this._data=e}_loadNativeData(e){if(!e||0===e.length)return!1;const t=new ode;if(t.assign(e),this._version=t.readInt(),this._version===sde)return!0;if(16842753!==this._version&&this._version!==ede&&this._version!==tde&&this._version!==nde&&this._version!==ide)return!1;this.tileSize=t.readFloat(),t.readIntArray(this._blockCount),this.weightMapSize=t.readInt16(),this.lightMapSize=t.readInt16();const n=t.readInt();this.heights=new Uint16Array(n);for(let e=0;e<this.heights.length;++e)this.heights[e]=t.readInt16();const i=t.readInt();this.weights=new Uint8Array(i);for(let e=0;e<this.weights.length;++e)this.weights[e]=t.readInt8();if(this._version>=ede){const e=t.readInt();this.layerBuffer=new Array(e);for(let e=0;e<this.layerBuffer.length;++e)this.layerBuffer[e]=t.readInt16()}if(this._version>=tde){const e=t.readInt();this._layerBinaryInfos=new Array(e);for(let e=0;e<this._layerBinaryInfos.length;++e)this._layerBinaryInfos[e]=new rde,this._layerBinaryInfos[e].slot=t.readInt(),this._layerBinaryInfos[e].tileSize=t.readFloat(),this._layerBinaryInfos[e].detailMapId=t.readString(),this._version>=nde&&(this._layerBinaryInfos[e].normalMapId=t.readString(),this._layerBinaryInfos[e].roughness=t.readFloat(),this._layerBinaryInfos[e].metallic=t.readFloat())}return!0}_exportNativeData(){const e=new ode;e.writeInt32(ide),e.writeFloat(this.tileSize),e.writeIntArray(this._blockCount),e.writeInt16(this.weightMapSize),e.writeInt16(this.lightMapSize),e.writeInt32(this.heights.length);for(let t=0;t<this.heights.length;++t)e.writeInt16(this.heights[t]);e.writeInt32(this.weights.length);for(let t=0;t<this.weights.length;++t)e.writeInt8(this.weights[t]);e.writeInt32(this.layerBuffer.length);for(let t=0;t<this.layerBuffer.length;++t)e.writeInt16(this.layerBuffer[t]);const t=[];t.length=this.layerInfos.length;for(let e=0;e<t.length;++e){const n=this.layerInfos[e],i=new rde;i.slot=e,i.tileSize=n.tileSize,i.detailMapId=n.detailMap?n.detailMap._uuid:"",i.normalMapId=n.normalMap?n.normalMap._uuid:"",i.metallic=n.metallic,i.roughness=n.roughness,t[e]=i}e.writeInt32(t.length);for(let n=0;n<t.length;++n)e.writeInt32(t[n].slot),e.writeFloat(t[n].tileSize),e.writeString(t[n].detailMapId),e.writeString(t[n].normalMapId),e.writeFloat(t[n].roughness),e.writeFloat(t[n].metallic);return e.buffer}_exportDefaultNativeData(){const e=new ode;return e.writeInt32(sde),e.buffer}}).prototype,"_layerInfos",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Q_e=J_e))||Q_e;var cde,lde,hde,ude,_de,dde,pde,fde;let mde=e("TerrainCollider",(cde=mc("cc.TerrainCollider"),lde=Mc(),hde=Rc(),ude=Zc(ade),_de=Uc(),cde(dde=lde(dde=hde(dde=Ic((ac((pde=class extends Nhe{get terrain(){return this._terrain}set terrain(e){this._terrain=e,this._shape&&this.shape.setTerrain(this._terrain)}get shape(){return this._shape}constructor(){super(qce.TERRAIN),rc(this,"_terrain",fde,this)}}).prototype,"terrain",[ude,_de],Object.getOwnPropertyDescriptor(pde.prototype,"terrain"),pde.prototype),fde=ac(pde.prototype,"_terrain",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),dde=pde))||dde)||dde)||dde)||dde));var gde,vde,yde,xde,Sde,Cde,Ede,Tde,bde,Ade,Pde,wde,Ide,Rde,Dde,Ode,Nde,Mde;let Lde=e("SimplexCollider",(gde=mc("cc.SimplexCollider"),vde=Mc(),yde=Rc(),xde=Zc(Wce),Sde=Uc(),Cde=Uc(),Ede=Bc(),Tde=Uc(),bde=Bc(),Ade=Uc(),Pde=Bc(),wde=Uc(),gde(Ide=vde(Ide=yde(Ide=Ic((Mde=Nde=class extends Nhe{get shapeType(){return this._shapeType}set shapeType(e){this._shapeType=e,this._shape&&this.shape.setShapeType(e)}get vertex0(){return this._vertices[0]}set vertex0(e){gn.copy(this._vertices[0],e),this.updateVertices()}get vertex1(){return this._vertices[1]}set vertex1(e){gn.copy(this._vertices[1],e),this.updateVertices()}get vertex2(){return this._vertices[2]}set vertex2(e){gn.copy(this._vertices[2],e),this.updateVertices()}get vertex3(){return this._vertices[3]}set vertex3(e){gn.copy(this._vertices[3],e),this.updateVertices()}get shape(){return this._shape}get vertices(){return this._vertices}constructor(){super(qce.SIMPLEX),rc(this,"_shapeType",Dde,this),rc(this,"_vertices",Ode,this)}updateVertices(){this._shape&&this.shape.setVertices(this._vertices)}},Nde.ESimplexType=Wce,ac((Rde=Mde).prototype,"shapeType",[xde,Sde],Object.getOwnPropertyDescriptor(Rde.prototype,"shapeType"),Rde.prototype),ac(Rde.prototype,"vertex0",[Lc,Cde],Object.getOwnPropertyDescriptor(Rde.prototype,"vertex0"),Rde.prototype),ac(Rde.prototype,"vertex1",[Ede,Tde],Object.getOwnPropertyDescriptor(Rde.prototype,"vertex1"),Rde.prototype),ac(Rde.prototype,"vertex2",[bde,Ade],Object.getOwnPropertyDescriptor(Rde.prototype,"vertex2"),Rde.prototype),ac(Rde.prototype,"vertex3",[Pde,wde],Object.getOwnPropertyDescriptor(Rde.prototype,"vertex3"),Rde.prototype),Dde=ac(Rde.prototype,"_shapeType",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Wce.TETRAHEDRON}}),Ode=ac(Rde.prototype,"_vertices",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[new gn(0,0,0),new gn(0,0,1),new gn(1,0,0),new gn(0,1,0)]}}),Ide=Rde))||Ide)||Ide)||Ide)||Ide));var Bde,Fde,zde,Ude,Gde,Vde,Hde,kde,jde,Wde;Lde||(Lde=e("SimplexCollider",{}));let qde=e("PlaneCollider",(Bde=mc("cc.PlaneCollider"),Fde=Mc(),zde=Rc(),Ude=Zc(gn),Gde=Uc(),Vde=Uc(),Bde(Hde=Fde(Hde=zde(Hde=Ic((ac((kde=class extends Nhe{get normal(){return this._normal}set normal(e){gn.strictEquals(this._normal,e)||(gn.copy(this._normal,e),this._shape&&this.shape.setNormal(this._normal))}get constant(){return this._constant}set constant(e){this._constant!==e&&(this._constant=e,this._shape&&this.shape.setConstant(this._constant))}get shape(){return this._shape}constructor(){super(qce.PLANE),rc(this,"_normal",jde,this),rc(this,"_constant",Wde,this)}}).prototype,"normal",[Ude,Gde],Object.getOwnPropertyDescriptor(kde.prototype,"normal"),kde.prototype),ac(kde.prototype,"constant",[Lc,Vde],Object.getOwnPropertyDescriptor(kde.prototype,"constant"),kde.prototype),jde=ac(kde.prototype,"_normal",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn(0,1,0)}}),Wde=ac(kde.prototype,"_constant",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Hde=kde))||Hde)||Hde)||Hde)||Hde));var Xde,Yde,Kde,$de,Qde,Jde,Zde,epe,tpe,npe,ipe,spe,ope,rpe;let ape=e("Constraint",(Xde=mc("cc.Constraint"),Yde=gc(hhe),Kde=Zc(hhe),$de=Wc(),Qde=Zc(hhe),Jde=Wc(),Zde=Wc(),epe=Zc(hhe),Xde(tpe=Yde((rpe=ope=class extends(ql(Gh)){get attachedBody(){return this.getComponent(hhe)}get connectedBody(){return this._connectedBody}set connectedBody(e){this._connectedBody=e,this._constraint&&this._constraint.setConnectedBody(e)}get enableCollision(){return this._enableCollision}set enableCollision(e){this._enableCollision=e,this._constraint&&this._constraint.setEnableCollision(e)}constructor(e){super(),this.TYPE=void 0,rc(this,"_enableCollision",ipe,this),rc(this,"_connectedBody",spe,this),this._constraint=null,this.TYPE=e}onLoad(){Qce.runInEditor&&(this._constraint=function(e){return rle.INITED||(rle.INITED=!0,rle[Xce.POINT_TO_POINT]=function(){return tle(Qce.wrapper.PointToPointConstraint,ele.PointToPointConstraint)?ale:new Qce.wrapper.PointToPointConstraint},rle[Xce.HINGE]=function(){return tle(Qce.wrapper.HingeConstraint,ele.HingeConstraint)?ale:new Qce.wrapper.HingeConstraint},rle[Xce.CONE_TWIST]=function(){return tle(Qce.wrapper.ConeTwistConstraint,ele.ConeTwistConstraint)?ale:new Qce.wrapper.ConeTwistConstraint}),rle[e]()}(this.TYPE),this._constraint.initialize(this))}onEnable(){this._constraint&&this._constraint.onEnable()}onDisable(){this._constraint&&this._constraint.onDisable()}onDestroy(){this._constraint&&this._constraint.onDestroy()}},ope.Type=Xce,ac((npe=rpe).prototype,"attachedBody",[Kde,Fc,$de],Object.getOwnPropertyDescriptor(npe.prototype,"attachedBody"),npe.prototype),ac(npe.prototype,"connectedBody",[Qde,Jde],Object.getOwnPropertyDescriptor(npe.prototype,"connectedBody"),npe.prototype),ac(npe.prototype,"enableCollision",[Zde],Object.getOwnPropertyDescriptor(npe.prototype,"enableCollision"),npe.prototype),ipe=ac(npe.prototype,"_enableCollision",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),spe=ac(npe.prototype,"_connectedBody",[epe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),tpe=npe))||tpe)||tpe));var cpe,lpe,hpe,upe,_pe,dpe,ppe,fpe,mpe,gpe,vpe,ype,xpe,Spe;ape||(ape=e("Constraint",{}));let Cpe=e("HingeConstraint",(cpe=mc("cc.HingeConstraint"),lpe=Mc(),hpe=Rc(),upe=Zc(gn),_pe=Zc(gn),dpe=Zc(gn),ppe=bc("axisA"),fpe=bc("pivotA"),mpe=bc("pivotB"),cpe(gpe=lpe(gpe=hpe((ac((vpe=class extends ape{get pivotA(){return this._pivotA}set pivotA(e){gn.copy(this._pivotA,e),this.constraint.setPivotA(this._pivotA)}get pivotB(){return this._pivotB}set pivotB(e){gn.copy(this._pivotB,e),this.constraint.setPivotB(this._pivotB)}get axis(){return this._axis}set axis(e){gn.copy(this._axis,e),this.constraint.setAxis(this._axis)}get constraint(){return this._constraint}constructor(){super(Xce.HINGE),rc(this,"_axis",ype,this),rc(this,"_pivotA",xpe,this),rc(this,"_pivotB",Spe,this)}}).prototype,"pivotA",[upe],Object.getOwnPropertyDescriptor(vpe.prototype,"pivotA"),vpe.prototype),ac(vpe.prototype,"pivotB",[_pe],Object.getOwnPropertyDescriptor(vpe.prototype,"pivotB"),vpe.prototype),ac(vpe.prototype,"axis",[dpe],Object.getOwnPropertyDescriptor(vpe.prototype,"axis"),vpe.prototype),ype=ac(vpe.prototype,"_axis",[Tc,ppe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn}}),xpe=ac(vpe.prototype,"_pivotA",[Tc,fpe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn}}),Spe=ac(vpe.prototype,"_pivotB",[Tc,mpe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn}}),gpe=vpe))||gpe)||gpe)||gpe));var Epe,Tpe,bpe,Ape,Ppe,wpe,Ipe,Rpe,Dpe;let Ope=e("PointToPointConstraint",(Epe=mc("cc.PointToPointConstraint"),Tpe=Mc(),bpe=Rc(),Ape=Zc(gn),Ppe=Zc(gn),Epe(wpe=Tpe(wpe=bpe((ac((Ipe=class extends ape{get pivotA(){return this._pivotA}set pivotA(e){gn.copy(this._pivotA,e),this.constraint.setPivotA(this._pivotA)}get pivotB(){return this._pivotB}set pivotB(e){gn.copy(this._pivotB,e),this.constraint.setPivotB(this._pivotB)}get constraint(){return this._constraint}constructor(){super(Xce.POINT_TO_POINT),rc(this,"_pivotA",Rpe,this),rc(this,"_pivotB",Dpe,this)}}).prototype,"pivotA",[Ape],Object.getOwnPropertyDescriptor(Ipe.prototype,"pivotA"),Ipe.prototype),ac(Ipe.prototype,"pivotB",[Ppe],Object.getOwnPropertyDescriptor(Ipe.prototype,"pivotB"),Ipe.prototype),Rpe=ac(Ipe.prototype,"_pivotA",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn}}),Dpe=ac(Ipe.prototype,"_pivotB",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new gn}}),wpe=Ipe))||wpe)||wpe)||wpe));u.PhysicsSystem=yle,u.PhysicsMaterial=mle,u.PhysicsRayResult=gle,u.ConstantForce=H_e;var Npe=Object.freeze({__proto__:null,PhysicsSystem:yle,PhysicsRayResult:gle,get Collider(){return Nhe},BoxCollider:yue,SphereCollider:Pue,CapsuleCollider:Gue,MeshCollider:E_e,CylinderCollider:Zue,ConeCollider:__e,TerrainCollider:mde,get SimplexCollider(){return Lde},PlaneCollider:qde,get Constraint(){return ape},HingeConstraint:Cpe,PointToPointConstraint:Ope,get RigidBody(){return hhe},PhysicsMaterial:mle,ConstantForce:H_e,selector:Qce,utils:vue,get ERigidBodyType(){return kce},get EAxisDirection(){return jce},get ESimplexType(){return Wce},get EColliderType(){return qce},get EConstraintType(){return Xce},get PhysicsGroup(){return Yce}});e("physics",Npe);const Mpe=new Hce.Vec3,Lpe=new Hce.Vec3;class Bpe{constructor(){this._isEnabled=!1}get isAwake(){return this.impl.isAwake()}get isSleepy(){return this.impl.isSleepy()}get isSleeping(){return this.impl.isSleeping()}setAllowSleep(e){this.impl.type===Hce.Body.DYNAMIC&&(this.impl.allowSleep=e,this._wakeUpIfSleep())}setMass(e){this.impl.type===Hce.Body.DYNAMIC&&(this.impl.mass=e,this.impl.updateMassProperties(),this._wakeUpIfSleep())}setType(e){switch(e){case kce.DYNAMIC:this.impl.type=Hce.Body.DYNAMIC,this.impl.allowSleep=this._rigidBody.allowSleep,this.setMass(this._rigidBody.mass);break;case kce.KINEMATIC:this.impl.type=Hce.Body.KINEMATIC,this.impl.mass=0,this.impl.allowSleep=!1,this.impl.sleepState=Hce.Body.AWAKE,this.impl.updateMassProperties();break;case kce.STATIC:default:this.impl.type=Hce.Body.STATIC,this.impl.mass=0,this.impl.allowSleep=!0,this.impl.updateMassProperties(),this.clearState()}}setLinearDamping(e){this.impl.linearDamping=e}setAngularDamping(e){this.impl.angularDamping=e}useGravity(e){this.impl.useGravity=e,this._wakeUpIfSleep()}useCCD(e){this.impl.ccdSpeedThreshold=e?.01:-1}isUsingCCD(){return-1!==this.impl.ccdSpeedThreshold}setLinearFactor(e){gn.copy(this.impl.linearFactor,e),this._wakeUpIfSleep()}setAngularFactor(e){gn.copy(this.impl.angularFactor,e);const t=gn.equals(this.impl.angularFactor,gn.ZERO);t!==this.impl.fixedRotation&&(this.impl.fixedRotation=t,this.impl.updateMassProperties()),this._wakeUpIfSleep()}get impl(){return this._sharedBody.body}get rigidBody(){return this._rigidBody}get sharedBody(){return this._sharedBody}get isEnabled(){return this._isEnabled}initialize(e){this._rigidBody=e,this._sharedBody=yle.instance.physicsWorld.getSharedBody(this._rigidBody.node,this),this._sharedBody.reference=!0,this._sharedBody.wrappedBody=this}onLoad(){}onEnable(){this._isEnabled=!0,this.setType(this._rigidBody.type),this.setMass(this._rigidBody.mass),this.setAllowSleep(this._rigidBody.allowSleep),this.setLinearDamping(this._rigidBody.linearDamping),this.setAngularDamping(this._rigidBody.angularDamping),this.useGravity(this._rigidBody.useGravity),this.setLinearFactor(this._rigidBody.linearFactor),this.setAngularFactor(this._rigidBody.angularFactor),this._sharedBody.enabled=!0}onDisable(){this._isEnabled=!1,this._sharedBody.enabled=!1}onDestroy(){this._sharedBody.reference=!1,this._rigidBody=null,this._sharedBody=null}clearVelocity(){this.impl.velocity.setZero(),this.impl.angularVelocity.setZero()}clearForces(){this.impl.force.setZero(),this.impl.torque.setZero()}clearState(){this.clearVelocity(),this.clearForces()}wakeUp(){return this.impl.wakeUp()}sleep(){return this.impl.sleep()}setSleepThreshold(e){this.impl.sleepSpeedLimit=e,this._wakeUpIfSleep()}getSleepThreshold(){return this.impl.sleepSpeedLimit}getLinearVelocity(e){return gn.copy(e,this.impl.velocity),e}setLinearVelocity(e){this._wakeUpIfSleep(),gn.copy(this.impl.velocity,e)}getAngularVelocity(e){return gn.copy(e,this.impl.angularVelocity),e}setAngularVelocity(e){this._wakeUpIfSleep(),gn.copy(this.impl.angularVelocity,e)}applyForce(e,t){this._sharedBody.syncSceneToPhysics(),this._wakeUpIfSleep(),null==t&&(t=gn.ZERO),this.impl.applyForce(gn.copy(Mpe,e),gn.copy(Lpe,t))}applyImpulse(e,t){this._sharedBody.syncSceneToPhysics(),this._wakeUpIfSleep(),null==t&&(t=gn.ZERO),this.impl.applyImpulse(gn.copy(Mpe,e),gn.copy(Lpe,t))}applyLocalForce(e,t){this._sharedBody.syncSceneToPhysics(),this._wakeUpIfSleep(),null==t&&(t=gn.ZERO),this.impl.applyLocalForce(gn.copy(Mpe,e),gn.copy(Lpe,t))}applyLocalImpulse(e,t){this._sharedBody.syncSceneToPhysics(),this._wakeUpIfSleep(),null==t&&(t=gn.ZERO),this.impl.applyLocalImpulse(gn.copy(Mpe,e),gn.copy(Lpe,t))}applyTorque(e){this._sharedBody.syncSceneToPhysics(),this._wakeUpIfSleep(),gn.add(this.impl.torque,this.impl.torque,e)}applyLocalTorque(e){this._sharedBody.syncSceneToPhysics(),this._wakeUpIfSleep(),gn.copy(Mpe,e),this.impl.vectorToWorldFrame(Mpe,Mpe),gn.add(this.impl.torque,this.impl.torque,Mpe)}getGroup(){return this.impl.collisionFilterGroup}setGroup(e){this.impl.collisionFilterGroup=e,this._wakeUpIfSleep()}addGroup(e){this.impl.collisionFilterGroup|=e,this._wakeUpIfSleep()}removeGroup(e){this.impl.collisionFilterGroup&=~e,this._wakeUpIfSleep()}getMask(){return this.impl.collisionFilterMask}setMask(e){this.impl.collisionFilterMask=e,this._wakeUpIfSleep()}addMask(e){this.impl.collisionFilterMask|=e,this._wakeUpIfSleep()}removeMask(e){this.impl.collisionFilterMask&=~e,this._wakeUpIfSleep()}_wakeUpIfSleep(){this.impl.isAwake()||this.impl.wakeUp()}}function Fpe(e,t){e.checkCollisionResponse=!t.queryTrigger,e.collisionFilterGroup=-1,e.collisionFilterMask=t.mask}function zpe(e,t){e._assign(t.hitPointWorld,t.distance,aue(t.shape).collider,t.hitNormalWorld)}function Upe(e){e.aabbNeedsUpdate=!0,e.updateMassProperties(),e.updateBoundingRadius()}const Gpe={type:"onTriggerEnter",selfCollider:null,otherCollider:null,impl:null},Vpe=new Hce.Quaternion,Hpe=new Hce.Vec3,kpe=new Hce.Vec3;class jpe{constructor(){this._offset=new Hce.Vec3,this._orient=new Hce.Quaternion,this._index=-1,this.onTriggerListener=this._onTrigger.bind(this),this._isBinding=!1}updateEventListener(){}get impl(){return this._shape}get collider(){return this._collider}get attachedRigidBody(){return this._sharedBody.wrappedBody?this._sharedBody.wrappedBody.rigidBody:null}get sharedBody(){return this._sharedBody}setMaterial(e){if(null==e)this._shape.material=null;else{null==jpe.idToMaterial[e.id]&&(jpe.idToMaterial[e.id]=new Hce.Material(e.id)),this._shape.material=jpe.idToMaterial[e.id];const t=this._shape.material;t.friction=e.friction,t.restitution=e.restitution;const n=Hce.CC_CONFIG.correctInelastic;t.correctInelastic=0===t.restitution?n:0}}setAsTrigger(e){this._shape.collisionResponse=!e,this._index>=0&&this._body.updateHasTrigger()}setCenter(e){this._setCenter(e),this._index>=0&&Upe(this._body)}setAttachedBody(e){if(e){if(this._sharedBody){if(this._sharedBody.wrappedBody===e.body)return;this._sharedBody.reference=!1}this._sharedBody=yle.instance.physicsWorld.getSharedBody(e.node),this._sharedBody.reference=!0}else this._sharedBody&&(this._sharedBody.reference=!1),this._sharedBody=yle.instance.physicsWorld.getSharedBody(this._collider.node),this._sharedBody.reference=!0}getAABB(e){Tn.copy(Vpe,this._collider.node.worldRotation),this._shape.calculateWorldAABB(Hce.Vec3.ZERO,Vpe,Hpe,kpe),gn.subtract(e.halfExtents,kpe,Hpe),gn.multiplyScalar(e.halfExtents,e.halfExtents,.5),gn.add(e.center,this._collider.node.worldPosition,this._collider.center)}getBoundingSphere(e){e.radius=this._shape.boundingSphereRadius,gn.add(e.center,this._collider.node.worldPosition,this._collider.center)}get _body(){return this._sharedBody.body}initialize(e){this._collider=e,this._isBinding=!0,this._sharedBody=yle.instance.physicsWorld.getSharedBody(this._collider.node),this._sharedBody.reference=!0,this.onComponentSet(),rue(this._shape,this),this._shape.addEventListener("cc-trigger",this.onTriggerListener)}onComponentSet(){}onLoad(){this.setMaterial(this._collider.sharedMaterial),this.setCenter(this._collider.center),this.setAsTrigger(this._collider.isTrigger)}onEnable(){this._sharedBody.addShape(this),this._sharedBody.enabled=!0}onDisable(){this._sharedBody.removeShape(this),this._sharedBody.enabled=!1}onDestroy(){this._sharedBody.reference=!1,this._shape.removeEventListener("cc-trigger",this.onTriggerListener),delete Hce.World.idToShapeMap[this._shape.id],this._sharedBody=null,rue(this._shape,null),this._offset=null,this._orient=null,this._shape=null,this._collider=null,this.onTriggerListener=null}getGroup(){return this._body.collisionFilterGroup}setGroup(e){this._body.collisionFilterGroup=e,this._body.isAwake()||this._body.wakeUp()}addGroup(e){this._body.collisionFilterGroup|=e,this._body.isAwake()||this._body.wakeUp()}removeGroup(e){this._body.collisionFilterGroup&=~e,this._body.isAwake()||this._body.wakeUp()}getMask(){return this._body.collisionFilterMask}setMask(e){this._body.collisionFilterMask=e,this._body.isAwake()||this._body.wakeUp()}addMask(e){this._body.collisionFilterMask|=e,this._body.isAwake()||this._body.wakeUp()}removeMask(e){this._body.collisionFilterMask&=~e,this._body.isAwake()||this._body.wakeUp()}setScale(e){this._setCenter(this._collider.center)}setIndex(e){this._index=e}setOffsetAndOrient(e,t){gn.copy(e,this._offset),Tn.copy(t,this._orient),this._offset=e,this._orient=t}_setCenter(e){const t=this._offset;gn.subtract(t,this._sharedBody.node.worldPosition,this._collider.node.worldPosition),gn.add(t,t,e),gn.multiply(t,t,this._collider.node.worldScale)}_onTrigger(e){Gpe.type=e.event;const t=aue(e.selfShape),n=aue(e.otherShape);t&&t.collider.needTriggerEvent&&(Gpe.selfCollider=t.collider,Gpe.otherCollider=n?n.collider:null,Gpe.impl=e,this._collider.emit(Gpe.type,Gpe))}}jpe.idToMaterial={},V(yle,"PhysicsSystem",[{name:"ins",newName:"instance"},{name:"PHYSICS_AMMO",newName:"PHYSICS_BULLET"}]),V(yle.prototype,"PhysicsSystem.prototype",[{name:"deltaTime",newName:"fixedTimeStep"},{name:"maxSubStep",newName:"maxSubSteps"}]),H(yle.prototype,"PhysicsSystem.prototype",[{name:"useFixedTime"},{name:"useCollisionMatrix"},{name:"updateCollisionMatrix"},{name:"resetCollisionMatrix"},{name:"isCollisionGroup"},{name:"setCollisionGroup"}]),V(Nhe.prototype,"Collider.prototype",[{name:"attachedRigidbody",newName:"attachedRigidBody"},{name:"TYPE",newName:"type"}]),V(Nhe,"Collider",[{name:"EColliderType",newName:"Type"},{name:"EAxisDirection",newName:"Axis"}]),V(ape,"Constraint",[{name:"EConstraintType",newName:"Type"}]),V(yue.prototype,"BoxCollider.prototype",[{name:"boxShape",newName:"shape"}]),V(Pue.prototype,"SphereCollider.prototype",[{name:"sphereShape",newName:"shape"}]),V(Gue.prototype,"CapsuleCollider.prototype",[{name:"capsuleShape",newName:"shape"}]),V(hhe.prototype,"RigidBody.prototype",[{name:"rigidBody",newName:"body"}]),V(hhe,"RigidBody",[{name:"ERigidBodyType",newName:"Type"}]),H(hhe.prototype,"RigidBody.prototype",[{name:"fixedRotation"}]),u.RigidBodyComponent=hhe,ke.setClassAlias(hhe,"cc.RigidBodyComponent"),u.ColliderComponent=Nhe,ke.setClassAlias(Nhe,"cc.ColliderComponent"),u.BoxColliderComponent=yue,ke.setClassAlias(yue,"cc.BoxColliderComponent"),u.SphereColliderComponent=Pue,ke.setClassAlias(Pue,"cc.SphereColliderComponent"),ke.setClassAlias(Gue,"cc.CapsuleColliderComponent"),ke.setClassAlias(E_e,"cc.MeshColliderComponent"),ke.setClassAlias(Zue,"cc.CylinderColliderComponent"),u.PhysicMaterial=mle,ke.setClassAlias(mle,"cc.PhysicMaterial"),u.physics=Npe;const Wpe=new Tn;class qpe{get isBodyA(){if(this.impl){const e=this.event.selfCollider.shape.impl,t=this.impl.bj;return e.body.id===t.id}return!1}constructor(e){this.impl=null,this.event=void 0,this.event=e}getLocalPointOnA(e){this.impl&&gn.copy(e,this.impl.rj)}getLocalPointOnB(e){this.impl&&gn.copy(e,this.impl.ri)}getWorldPointOnA(e){this.impl&&gn.add(e,this.impl.rj,this.impl.bj.position)}getWorldPointOnB(e){this.impl&&gn.add(e,this.impl.ri,this.impl.bi.position)}getLocalNormalOnA(e){this.impl&&(this.getWorldNormalOnA(e),Tn.conjugate(Wpe,this.impl.bi.quaternion),gn.transformQuat(e,e,Wpe))}getLocalNormalOnB(e){this.impl&&(Tn.conjugate(Wpe,this.impl.bj.quaternion),gn.transformQuat(e,this.impl.ni,Wpe))}getWorldNormalOnA(e){this.impl&&(this.getWorldNormalOnB(e),this.isBodyA||gn.negate(e,e))}getWorldNormalOnB(e){this.impl&&gn.copy(e,this.impl.ni)}}const Xpe=new gn,Ype=new Tn,Kpe=[],$pe={type:"onCollisionEnter",selfCollider:null,otherCollider:null,contacts:[],impl:null};class Qpe{static getSharedBody(e,t,n){const i=e.uuid;let s;if(Qpe.sharedBodesMap.has(i))s=Qpe.sharedBodesMap.get(i);else{s=new Qpe(e,t);const n=Yce.DEFAULT,i=yle.instance.collisionMatrix[n];s.body.collisionFilterGroup=n,s.body.collisionFilterMask=i,Qpe.sharedBodesMap.set(e.uuid,s)}if(n){s.wrappedBody=n;const e=n.rigidBody.group,t=yle.instance.collisionMatrix[e];s.body.collisionFilterGroup=e,s.body.collisionFilterMask=t}return s}set enabled(e){e?this.index<0&&(this.index=this.wrappedWorld.bodies.length,this.wrappedWorld.addSharedBody(this),this.syncInitial()):this.index>=0&&(0===this.wrappedShapes.length&&null==this.wrappedBody||0===this.wrappedShapes.length&&null!=this.wrappedBody&&!this.wrappedBody.isEnabled)&&(this.body.sleep(),this.index=-1,this.wrappedWorld.removeSharedBody(this))}set reference(e){e?this.ref++:this.ref--,0===this.ref&&this.destroy()}constructor(e,t){this.node=void 0,this.wrappedWorld=void 0,this.body=void 0,this.wrappedShapes=[],this.wrappedJoints0=[],this.wrappedJoints1=[],this.wrappedBody=null,this.index=-1,this.ref=0,this.onCollidedListener=this.onCollided.bind(this),this.wrappedWorld=t,this.node=e,this.body=new Hce.Body,rue(this.body,this),this.body.collisionFilterGroup=yle.PhysicsGroup.DEFAULT,this.body.sleepSpeedLimit=yle.instance.sleepThreshold,this.body.material=this.wrappedWorld.impl.defaultMaterial,this.body.addEventListener("cc-collide",this.onCollidedListener)}addShape(e){if(this.wrappedShapes.indexOf(e)<0){const t=this.body.shapes.length;this.body.addShape(e.impl),this.wrappedShapes.push(e),e.setIndex(t);const n=this.body.shapeOffsets[t],i=this.body.shapeOrientations[t];e.setOffsetAndOrient(n,i),this.body.isSleeping()&&this.body.wakeUp()}}removeShape(e){const t=this.wrappedShapes.indexOf(e);t>=0&&(J(this.wrappedShapes,t),this.body.removeShape(e.impl),e.setIndex(-1),this.body.isSleeping()&&this.body.wakeUp())}addJoint(e,t){t?this.wrappedJoints1.indexOf(e)<0&&this.wrappedJoints1.push(e):this.wrappedJoints0.indexOf(e)<0&&this.wrappedJoints0.push(e)}removeJoint(e,t){if(t){const t=this.wrappedJoints1.indexOf(e);t>=0&&J(this.wrappedJoints1,t)}else{const t=this.wrappedJoints0.indexOf(e);t>=0&&J(this.wrappedJoints0,t)}}syncSceneToPhysics(){const e=this.node,t=this.body;e.hasChangedFlags&&(t.isSleeping()&&t.wakeUp(),gn.copy(t.position,e.worldPosition),Tn.copy(t.quaternion,e.worldRotation),t.aabbNeedsUpdate=!0,e.hasChangedFlags&Iv.SCALE&&this.syncScale())}syncPhysicsToScene(){const e=this.node,t=this.body;t.type===kce.DYNAMIC&&(t.isSleeping()||(gn.copy(Xpe,t.position),Tn.copy(Ype,t.quaternion),e.worldPosition=Xpe,e.worldRotation=Ype))}syncInitial(){const e=this.node,t=this.body;gn.copy(t.position,e.worldPosition),Tn.copy(t.quaternion,e.worldRotation),gn.copy(t.previousPosition,e.worldPosition),Tn.copy(t.previousQuaternion,e.worldRotation),t.aabbNeedsUpdate=!0,this.syncScale(),t.isSleeping()&&t.wakeUp()}syncScale(){for(let e=0;e<this.wrappedShapes.length;e++)this.wrappedShapes[e].setScale(this.node.worldScale);for(let e=0;e<this.wrappedJoints0.length;e++)this.wrappedJoints0[e].updateScale0();for(let e=0;e<this.wrappedJoints1.length;e++)this.wrappedJoints1[e].updateScale1();Upe(this.body)}destroy(){rue(this.body,null),this.body.removeEventListener("cc-collide",this.onCollidedListener),Qpe.sharedBodesMap.delete(this.node.uuid),delete Hce.World.idToBodyMap[this.body.id],this.node=null,this.wrappedWorld=null,this.body=null,this.wrappedShapes=null,this.wrappedJoints0=null,this.wrappedJoints1=null,this.onCollidedListener=null}onCollided(e){$pe.type=e.event;const t=aue(e.selfShape),n=aue(e.otherShape);if(t&&t.collider.needCollisionEvent){Kpe.push.apply(Kpe,$pe.contacts),$pe.contacts.length=0,$pe.impl=e,$pe.selfCollider=t.collider,$pe.otherCollider=n?n.collider:null;let i=0;if("onCollisionExit"!==$pe.type)for(i=0;i<e.contacts.length;i++){const t=e.contacts[i];if(Kpe.length>0){const e=Kpe.pop();e.impl=t,$pe.contacts.push(e)}else{const e=new qpe($pe);e.impl=t,$pe.contacts.push(e)}}for(i=0;i<this.wrappedShapes.length;i++)this.wrappedShapes[i].collider.emit($pe.type,$pe)}}}Qpe.sharedBodesMap=new Map;class Jpe{get impl(){return this._world}setDefaultMaterial(e){this._world.defaultMaterial.friction=e.friction,this._world.defaultMaterial.restitution=e.restitution,null!=jpe.idToMaterial[e.id]&&(jpe.idToMaterial[e.id]=this._world.defaultMaterial)}setAllowSleep(e){this._world.allowSleep=e}setGravity(e){gn.copy(this._world.gravity,e)}constructor(){this.bodies=[],this.constraints=[],this._world=void 0,this._world=new Hce.World,this._world.broadphase=new Hce.NaiveBroadphase,this._world.solver.iterations=10,this._world.solver.tolerance=1e-4,this._world.defaultContactMaterial.contactEquationStiffness=1e6,this._world.defaultContactMaterial.frictionEquationStiffness=1e6,this._world.defaultContactMaterial.contactEquationRelaxation=3,this._world.defaultContactMaterial.frictionEquationRelaxation=3}destroy(){(this.constraints.length||this.bodies.length)&&C("You should destroy all physics component first."),this._world.broadphase=null,this._world=null}emitEvents(){this._world.emitTriggeredEvents(),this._world.emitCollisionEvents()}syncSceneToPhysics(){for(let e=0;e<this.bodies.length;e++)this.bodies[e].syncSceneToPhysics()}syncAfterEvents(){this.syncSceneToPhysics()}step(e,t,n){if(0!==this.bodies.length){this._world.step(e,t,n);for(let e=0;e<this.bodies.length;e++)this.bodies[e].syncPhysicsToScene()}}raycastClosest(e,t,n){tfe(e,t.maxDistance),Fpe(nfe,t);const i=this._world.raycastClosest(Zpe,efe,nfe,Jpe.rayResult);return i&&zpe(n,Jpe.rayResult),i}raycast(e,t,n,i){return tfe(e,t.maxDistance),Fpe(nfe,t),this._world.raycastAll(Zpe,efe,nfe,(e=>{const t=n.add();zpe(t,e),i.push(t)}))}getSharedBody(e,t){return Qpe.getSharedBody(e,this,t)}addSharedBody(e){this.bodies.indexOf(e)<0&&(this.bodies.push(e),this._world.addBody(e.body))}removeSharedBody(e){const t=this.bodies.indexOf(e);t>=0&&(J(this.bodies,t),this._world.remove(e.body))}addConstraint(e){this.constraints.indexOf(e)<0&&(this.constraints.push(e),this._world.addConstraint(e.impl))}removeConstraint(e){const t=this.constraints.indexOf(e);t>=0&&(J(this.constraints,t),this._world.removeConstraint(e.impl))}}Jpe.rayResult=new Hce.RaycastResult;const Zpe=new Hce.Vec3,efe=new Hce.Vec3;function tfe(e,t){gn.copy(Zpe,e.o),e.computeHit(efe,t)}const nfe={checkCollisionResponse:!1,collisionFilterGroup:-1,collisionFilterMask:-1,skipBackfaces:!0};class ife extends jpe{get collider(){return this._collider}get impl(){return this._shape}constructor(){super(),this.halfExtent=void 0,this.halfExtent=new Hce.Vec3(.5,.5,.5),this._shape=new Hce.Box(this.halfExtent.clone())}updateSize(){gn.multiplyScalar(this.halfExtent,this.collider.size,.5);const e=lue(cue.set(this.collider.node.worldScale)),t=this.halfExtent.x*e.x,n=this.halfExtent.y*e.y,i=this.halfExtent.z*e.z,s=yle.instance.minVolumeSize;this.impl.halfExtents.x=Xt(t,s,Number.MAX_VALUE),this.impl.halfExtents.y=Xt(n,s,Number.MAX_VALUE),this.impl.halfExtents.z=Xt(i,s,Number.MAX_VALUE),this.impl.updateConvexPolyhedronRepresentation(),-1!==this._index&&Upe(this._body)}onLoad(){super.onLoad(),this.updateSize()}setScale(e){super.setScale(e),this.updateSize()}}class sfe extends jpe{get collider(){return this._collider}get impl(){return this._shape}updateRadius(){const e=Math.abs(ln(this.collider.node.worldScale));this.impl.radius=Xt(this.collider.radius*Math.abs(e),yle.instance.minVolumeSize,Number.MAX_VALUE),this.impl.updateBoundingSphereRadius(),-1!==this._index&&Upe(this._body)}constructor(e=.5){super(),this._shape=new Hce.Sphere(e)}onLoad(){super.onLoad(),this.updateRadius()}setScale(e){super.setScale(e),this.updateRadius()}}const ofe=new Hce.Vec3;class rfe extends jpe{get collider(){return this._collider}get impl(){return this._shape}setMesh(e){if(!this._isBinding)return;const t=e;if(null!=this._shape)if(t&&t.renderingSubMeshes.length>0){const e=t.renderingSubMeshes[0].geometricInfo.positions,n=t.renderingSubMeshes[0].geometricInfo.indices;this.updateProperties(e,n)}else this.updateProperties(new Float32Array,new Uint16Array);else if(t&&t.renderingSubMeshes.length>0){const e=t.renderingSubMeshes[0].geometricInfo.positions,n=t.renderingSubMeshes[0].geometricInfo.indices;this._shape=new Hce.Trimesh(e,n)}else this._shape=new Hce.Trimesh(new Float32Array,new Uint16Array)}onComponentSet(){this.setMesh(this.collider.mesh)}onLoad(){super.onLoad(),this.setMesh(this.collider.mesh)}setScale(e){super.setScale(e),gn.copy(ofe,e),this.impl.setScale(ofe)}updateProperties(e,t){this.impl.vertices=new Float32Array(e),this.impl.indices=new Int16Array(t),this.impl.normals=new Float32Array(t.length),this.impl.aabb=new Hce.AABB,this.impl.edges=[],this.impl.tree=new Hce.Octree(new Hce.AABB),this.impl.updateEdges(),this.impl.updateNormals(),this.impl.updateAABB(),this.impl.updateBoundingSphereRadius(),this.impl.updateTree(),this.impl.setScale(this.impl.scale),this._index>=0&&Upe(this._body)}}class afe extends jpe{get collider(){return this._collider}get impl(){return this._shape}setRadius(e){this.updateProperties(this.collider.radius,this.collider.height,Hce.CC_CONFIG.numSegmentsCylinder,this.collider.direction,this.collider.node.worldScale),-1!==this._index&&Upe(this._body)}setHeight(e){this.updateProperties(this.collider.radius,this.collider.height,Hce.CC_CONFIG.numSegmentsCylinder,this.collider.direction,this.collider.node.worldScale),-1!==this._index&&Upe(this._body)}setDirection(e){this.updateProperties(this.collider.radius,this.collider.height,Hce.CC_CONFIG.numSegmentsCylinder,this.collider.direction,this.collider.node.worldScale),-1!==this._index&&Upe(this._body)}constructor(e=.5,t=2,n=jce.Y_AXIS){super(),this._shape=new Hce.Cylinder(e,e,t,Hce.CC_CONFIG.numSegmentsCylinder,n===jce.Y_AXIS)}onLoad(){super.onLoad(),this.setRadius(this.collider.radius)}setScale(e){super.setScale(e),this.setRadius(this.collider.radius)}updateProperties(e,t,n,i,s){let o=t,r=e;const a=Math.cos,c=Math.sin,l=Math.abs,h=Math.max;1===i?(o=l(s.y)*t,r=h(l(s.x),l(s.z))*e):2===i?(o=l(s.z)*t,r=h(l(s.x),l(s.y))*e):(o=l(s.x)*t,r=h(l(s.y),l(s.z))*e);const u=n,_=o/2,d=[],p=[],f=[],m=2*Math.PI/u;if(1===i){const e=[1],t=[0];for(let n=0;n<u;n++){const i=r*a(m*n),s=r*c(m*n);d.push(new Hce.Vec3(i,_,s)),d.push(new Hce.Vec3(i,-_,s)),n<u-1?(p.push([2*n+2,2*n+3,2*n+1,2*n]),t.push(2*n+2),e.push(2*n+3)):p.push([0,1,2*n+1,2*n]),(u%2==1||n<u/2)&&f.push(new Hce.Vec3(a(m*(n+.5)),0,c(m*(n+.5))))}p.push(e);const n=[];for(let e=0;e<t.length;e++)n.push(t[t.length-e-1]);p.push(n),f.push(new Hce.Vec3(0,1,0))}else if(2===i){const e=[0],t=[1];for(let n=0;n<u;n++){const i=r*a(m*n),s=r*c(m*n);d.push(new Hce.Vec3(i,s,_)),d.push(new Hce.Vec3(i,s,-_)),n<u-1?(p.push([2*n,2*n+1,2*n+3,2*n+2]),e.push(2*n+2),t.push(2*n+3)):p.push([2*n,2*n+1,0,1]),(u%2==1||n<u/2)&&f.push(new Hce.Vec3(a(m*(n+.5)),c(m*(n+.5)),0))}p.push(e);const n=[];for(let e=0;e<t.length;e++)n.push(t[t.length-e-1]);p.push(n),f.push(new Hce.Vec3(0,0,1))}else{const e=[0],t=[1];for(let n=0;n<u;n++){const i=r*a(m*n),s=r*c(m*n);d.push(new Hce.Vec3(_,i,s)),d.push(new Hce.Vec3(-_,i,s)),n<u-1?(p.push([2*n,2*n+1,2*n+3,2*n+2]),e.push(2*n+2),t.push(2*n+3)):p.push([2*n,2*n+1,0,1]),(u%2==1||n<u/2)&&f.push(new Hce.Vec3(0,a(m*(n+.5)),c(m*(n+.5))))}p.push(e);const n=[];for(let e=0;e<t.length;e++)n.push(t[t.length-e-1]);p.push(n),f.push(new Hce.Vec3(1,0,0))}this.impl.vertices=d,this.impl.faces=p,this.impl.uniqueAxes=f,this.impl.worldVerticesNeedsUpdate=!0,this.impl.worldFaceNormalsNeedsUpdate=!0,this.impl.computeNormals(),this.impl.computeEdges(),this.impl.updateBoundingSphereRadius()}}const cfe=new gn,lfe=new gn;class hfe extends jpe{get collider(){return this._collider}get impl(){return this._shape}setRadius(e){this.updateProperties(this.collider.radius,this.collider.height,Hce.CC_CONFIG.numSegmentsCone,this.collider.direction,this.collider.node.worldScale),-1!==this._index&&Upe(this._body)}setHeight(e){this.updateProperties(this.collider.radius,this.collider.height,Hce.CC_CONFIG.numSegmentsCone,this.collider.direction,this.collider.node.worldScale),-1!==this._index&&Upe(this._body)}setDirection(e){this.updateProperties(this.collider.radius,this.collider.height,Hce.CC_CONFIG.numSegmentsCone,this.collider.direction,this.collider.node.worldScale),-1!==this._index&&Upe(this._body)}constructor(e=.5,t=1,n=jce.Y_AXIS){super(),this._shape=new Hce.Cylinder(0,e,t,Hce.CC_CONFIG.numSegmentsCone,n===jce.Y_AXIS)}onLoad(){super.onLoad(),this.setRadius(this.collider.radius)}setScale(e){super.setScale(e),this.setRadius(this.collider.radius)}updateProperties(e,t,n,i,s){let o=t,r=e;const a=Math.cos,c=Math.sin,l=Math.abs,h=Math.max;1===i?(o=l(s.y)*t,r=h(l(s.x),l(s.z))*e):2===i?(o=l(s.z)*t,r=h(l(s.x),l(s.y))*e):(o=l(s.x)*t,r=h(l(s.y),l(s.z))*e);const u=n,_=o/2,d=[],p=[],f=[],m=2*Math.PI/u;if(1===i){const e=[];p.push(e),d.push(new Hce.Vec3(0,_,0));for(let e=0;e<u;e++){const t=r*a(m*e),n=r*c(m*e);d.push(new Hce.Vec3(t,-_,n))}for(let t=0;t<u;t++){let n;0!==t&&e.push(t),n=t<u-1?[0,t+2,t+1]:[0,1,t+1],p.push(n),gn.subtract(cfe,d[0],d[n[1]]),gn.subtract(lfe,d[n[2]],d[n[1]]),gn.cross(cfe,lfe,cfe),cfe.normalize(),f.push(new Hce.Vec3(cfe.x,cfe.y,cfe.z))}f.push(new Hce.Vec3(0,-1,0))}else if(2===i){const e=[];p.push(e),d.push(new Hce.Vec3(0,0,_));for(let e=0;e<u;e++){const t=r*a(m*e),n=r*c(m*e);d.push(new Hce.Vec3(t,n,-_))}for(let t=0;t<u;t++){let n;0!==t&&e.push(u-t),n=t<u-1?[0,t+1,t+2]:[0,t+1,1],p.push(n),gn.subtract(cfe,d[0],d[n[1]]),gn.subtract(lfe,d[n[2]],d[n[1]]),gn.cross(cfe,cfe,lfe),cfe.normalize(),f.push(new Hce.Vec3(cfe.x,cfe.y,cfe.z))}f.push(new Hce.Vec3(0,0,-1))}else{const e=[];p.push(e),d.push(new Hce.Vec3(_,0,0));for(let e=0;e<u;e++){const t=r*a(m*e),n=r*c(m*e);d.push(new Hce.Vec3(-_,t,n))}for(let t=0;t<u;t++){let n;0!==t&&e.push(u-t),n=t<u-1?[0,t+1,t+2]:[0,t+1,1],p.push(n),gn.subtract(cfe,d[0],d[n[1]]),gn.subtract(lfe,d[n[2]],d[n[1]]),gn.cross(cfe,cfe,lfe),cfe.normalize(),f.push(new Hce.Vec3(cfe.x,cfe.y,cfe.z))}f.push(new Hce.Vec3(-1,0,0))}this.impl.vertices=d,this.impl.faces=p,this.impl.uniqueAxes=f,this.impl.worldVerticesNeedsUpdate=!0,this.impl.worldFaceNormalsNeedsUpdate=!0,this.impl.computeNormals(),this.impl.computeEdges(),this.impl.updateBoundingSphereRadius()}}const ufe=new Hce.AABB,_fe=new Hce.AABB,dfe=new Hce.Transform;Hce.Heightfield.prototype.calculateWorldAABB=function(e,t,n,i){const s=dfe,o=_fe;gn.copy(s.position,e),Tn.copy(s.quaternion,t);const r=this.elementSize,a=this.data;ufe.lowerBound.set(0,0,this.minValue),ufe.upperBound.set((a.length-1)*r,(a[0].length-1)*r,this.maxValue),ufe.toWorldFrame(s,o),n.copy(o.lowerBound),i.copy(o.upperBound)};class pfe extends jpe{get collider(){return this._collider}get impl(){return this._shape}setTerrain(e){if(e){if(this._terrainID!==e._uuid){const t=e,n=t.getVertexCountI(),i=t.getVertexCountJ();this._terrainID=t._uuid,this.data.length=n-1;for(let e=0;e<n;e++){null==this.data[e]&&(this.data[e]=[]),this.data[e].length=i-1;for(let n=0;n<i;n++)this.data[e][n]=t.getHeight(e,i-1-n)}this.options.elementSize=t.tileSize,this.updateProperties(this.data,this.options.elementSize)}}else""!==this._terrainID&&(this._terrainID="",this.data.length=1,this.data[0]=this.data[0]||[],this.data[0].length=0,this.options.elementSize=0,this.updateProperties(this.data,this.options.elementSize))}constructor(){super(),this.data=void 0,this.options=void 0,this._terrainID=void 0,this.data=[[]],this.options={elementSize:0},this._terrainID=""}onComponentSet(){const e=this.collider.terrain;if(e){const t=e.getVertexCountI(),n=e.getVertexCountJ();for(let i=0;i<t;i++){null==this.data[i]&&(this.data[i]=[]);for(let t=0;t<n;t++)this.data[i][t]=e.getHeight(i,n-1-t)}this.options.elementSize=e.tileSize,this._terrainID=e._uuid}this._shape=new Hce.Heightfield(this.data,this.options)}onLoad(){super.onLoad(),this.setTerrain(this.collider.terrain)}updateProperties(e,t){const n=this.impl;n.data=e,n.elementSize=t,n.updateMinValue(),n.updateMaxValue(),n.updateBoundingSphereRadius(),n.update(),this._index>=0&&Upe(this._body)}_setCenter(e){const t=this.collider.terrain;if(t){Tn.fromEuler(this._orient,-90,0,0);const n=this._offset;gn.set(n,0,0,(t.getVertexCountJ()-1)*t.tileSize),gn.add(n,n,e)}}}class ffe extends jpe{constructor(...e){super(...e),this.vertices=[]}setShapeType(e){this._isBinding}setVertices(e){const t=this.vertices.length;if(4===t){const n=this._collider.node.worldScale;for(let i=0;i<t;i++)gn.multiply(this.vertices[i],n,e[i]);const i=this.impl;i.computeNormals(),i.computeEdges(),i.updateBoundingSphereRadius()}-1!==this._index&&Upe(this._body)}get collider(){return this._collider}get impl(){return this._shape}onComponentSet(){if(this.collider.shapeType===Lde.ESimplexType.TETRAHEDRON){for(let e=0;e<4;e++)this.vertices[e]=new Hce.Vec3(0,0,0);this._shape=mfe(this.vertices)}else Lde.ESimplexType.VERTEX,this._shape=new Hce.Particle}onLoad(){super.onLoad(),this.collider.updateVertices()}setScale(e){super.setScale(e),this.collider.updateVertices()}}const mfe=function(){const e=[[0,3,2],[0,1,3],[0,2,1],[1,2,3]];return function(t){return new Hce.ConvexPolyhedron(t,e)}}();class gfe extends jpe{get collider(){return this._collider}get impl(){return this._shape}constructor(){super(),this._shape=new Hce.Plane}setNormal(e){Tn.rotationTo(this._orient,gn.UNIT_Z,e),-1!==this._index&&Upe(this._body)}setConstant(e){gn.scaleAndAdd(this._offset,this._collider.center,this.collider.normal,e)}onLoad(){super.onLoad(),this.setConstant(this.collider.constant),this.setNormal(this.collider.normal)}_setCenter(e){super._setCenter(e),this.setConstant(this.collider.constant)}}Hce.World.staticBody=new Hce.Body,Hce.World.idToConstraintMap={};class vfe{setConnectedBody(e){const t=aue(this.impl.bodyB);t&&t.removeJoint(this,1),e?(this._impl.bodyB=e.body.impl,e.body.sharedBody.addJoint(this,1)):this._impl.bodyB=Hce.World.staticBody;const n=this._impl.bodyB;this._impl.equations.forEach((e=>{e.bj=n}))}setEnableCollision(e){this._impl.collideConnected=e}get impl(){return this._impl}get constraint(){return this._com}initialize(e){this._com=e,this._rigidBody=e.attachedBody,this.onComponentSet(),this.setEnableCollision(e.enableCollision),Hce.World.idToConstraintMap[this._impl.id]=this._impl}onComponentSet(){}updateScale0(){}updateScale1(){}onEnable(){const e=this._rigidBody.body.sharedBody;e.wrappedWorld.addConstraint(this),e.addJoint(this,0);const t=this.constraint.connectedBody;t&&t.body.sharedBody.addJoint(this,1)}onDisable(){const e=this._rigidBody.body.sharedBody;e.wrappedWorld.removeConstraint(this),e.removeJoint(this,0);const t=this.constraint.connectedBody;t&&t.body.sharedBody.removeJoint(this,1)}onDestroy(){delete Hce.World.idToConstraintMap[this._impl.id],this._com=null,this._rigidBody=null,this._impl=null}}const yfe=new gn;class xfe extends vfe{get impl(){return this._impl}get constraint(){return this._com}setPivotA(e){const t=this.constraint;gn.multiply(this.impl.pivotA,t.node.worldScale,t.pivotA),t.connectedBody||this.setPivotB(t.pivotB)}setPivotB(e){const t=this.constraint,n=t.connectedBody;if(n)gn.multiply(this.impl.pivotB,n.node.worldScale,t.pivotB);else{const e=t.node;gn.multiply(yfe,e.worldScale,t.pivotA),gn.add(yfe,yfe,e.worldPosition),gn.add(yfe,yfe,t.pivotB),gn.copy(this.impl.pivotB,yfe)}}onComponentSet(){const e=this._rigidBody.body.impl,t=this.constraint.connectedBody;let n=Hce.World.staticBody;t&&(n=t.body.impl),this._impl=new Hce.PointToPointConstraint(e,null,n),this.setPivotA(this.constraint.pivotA),this.setPivotB(this.constraint.pivotB)}updateScale0(){this.setPivotA(this.constraint.pivotA)}updateScale1(){this.setPivotB(this.constraint.pivotB)}}const Sfe=new gn;class Cfe extends vfe{get impl(){return this._impl}get constraint(){return this._com}setPivotA(e){const t=this.constraint;gn.multiply(this.impl.pivotA,this.constraint.node.worldScale,t.pivotA),t.connectedBody||this.setPivotB(t.pivotB)}setPivotB(e){const t=this.constraint,n=t.connectedBody;if(n)gn.multiply(this.impl.pivotB,n.node.worldScale,t.pivotB);else{const e=this.constraint.node;gn.multiply(Sfe,e.worldScale,t.pivotA),gn.add(Sfe,Sfe,e.worldPosition),gn.add(Sfe,Sfe,t.pivotB),gn.copy(this.impl.pivotB,Sfe)}}setAxis(e){gn.copy(this.impl.axisA,e),gn.copy(this.impl.equations[3].axisA,e),gn.copy(this.impl.equations[4].axisA,e),gn.copy(this.impl.equations[5].axisA,e),this.constraint.connectedBody?(gn.copy(this.impl.axisB,e),gn.copy(this.impl.equations[3].axisB,e),gn.copy(this.impl.equations[4].axisB,e),gn.copy(this.impl.equations[5].axisB,e)):(gn.transformQuat(this.impl.axisB,e,this.constraint.node.worldRotation),gn.copy(this.impl.equations[3].axisB,this.impl.axisB),gn.copy(this.impl.equations[4].axisB,this.impl.axisB),gn.copy(this.impl.equations[5].axisB,this.impl.axisB))}onComponentSet(){const e=this._rigidBody.body.impl,t=this.constraint.connectedBody;let n=Hce.World.staticBody;t&&(n=t.body.impl),this._impl=new Hce.HingeConstraint(e,n),this.setPivotA(this.constraint.pivotA),this.setPivotB(this.constraint.pivotB),this.setAxis(this.constraint.axis)}updateScale0(){this.setPivotA(this.constraint.pivotA)}updateScale1(){this.setPivotB(this.constraint.pivotB)}}var Efe,Tfe,bfe,Afe,Pfe,wfe,Ife,Rfe,Dfe;yw.once(vw.EVENT_ENGINE_INITED,(()=>{Qce.register("cannon.js",{PhysicsWorld:Jpe,RigidBody:Bpe,BoxShape:ife,SphereShape:sfe,TrimeshShape:rfe,CylinderShape:afe,ConeShape:hfe,TerrainShape:pfe,SimplexShape:ffe,PlaneShape:gfe,PointToPointConstraint:xfe,HingeConstraint:Cfe})})),window&&(window.CANNON=Hce),Hce.CC_CONFIG={numSegmentsCone:12,numSegmentsCylinder:12,ignoreSelfBody:!0,correctInelastic:3},Hce.ArrayCollisionMatrix.prototype.reset=function(){for(const e in this.matrix)delete this.matrix[e]},Hce.Ray.perBodyFilter=function(e,t){return 0!=(e.collisionFilterMask&t.collisionFilterGroup)},function(e){e[e.BOX=0]="BOX",e[e.SPHERE=1]="SPHERE",e[e.CYLINDER=2]="CYLINDER",e[e.CONE=3]="CONE",e[e.CAPSULE=4]="CAPSULE",e[e.TORUS=5]="TORUS",e[e.PLANE=6]="PLANE",e[e.QUAD=7]="QUAD"}(Dfe||(Dfe={})),Ke(Dfe);let Ofe=e("Primitive",(Efe=mc("cc.Primitive"),Tfe=Zc(Dfe),Efe((Rfe=Ife=class extends ak{constructor(e=Dfe.BOX){super(),rc(this,"type",Pfe,this),rc(this,"info",wfe,this),this.type=e}onLoaded(){fk(oue[Dfe[this.type].toLowerCase()](this.info),this)}},Ife.PrimitiveType=Dfe,Pfe=ac((Afe=Rfe).prototype,"type",[Tfe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Dfe.BOX}}),wfe=ac(Afe.prototype,"info",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{}}}),bfe=Afe))||bfe));var Nfe;u.Primitive=Ofe,u.primitives=oue;let Mfe=mc("cc.PerfCounter")(Nfe=class extends class{get value(){return this._value}set value(e){this._value=e}constructor(e,t,n){this._id=void 0,this._opts=void 0,this._accumStart=void 0,this._total=0,this._value=0,this._averageValue=0,this._accumValue=0,this._accumSamples=0,this._id=e,this._opts=t,this._accumStart=n}sample(e){this._average(this._value,e)}human(){const{average:e,isInteger:t}=this._opts,n=e?this._averageValue:this._value;return t?Math.round(n):Math.round(100*n)/100}alarm(){return this._opts.below&&this._value<this._opts.below||this._opts.over&&this._value>this._opts.over}_average(e,t=0){if(this._opts.average){this._accumValue+=e,++this._accumSamples;const n=t;n-this._accumStart>=this._opts.average&&(this._averageValue=this._accumValue/this._accumSamples,this._accumValue=0,this._accumStart=n,this._accumSamples=0)}}}{constructor(e,t,n){super(e,t,n),this._time=void 0,this._time=n}start(e=0){this._time=e}end(e=0){this._value=e-this._time,this._average(this._value)}tick(){this.end(),this.start()}frame(e){const t=e,n=t-this._time;this._total++,n>(this._opts.average||1e3)&&(this._value=1e3*this._total/n,this._total=0,this._time=t,this._average(this._value))}})||Nfe;const Lfe="0123456789. ",Bfe=500,Ffe={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,".":10},zfe={fps:{desc:"Framerate (FPS)",below:30,average:Bfe,isInteger:!0},draws:{desc:"Draw call",isInteger:!0},frame:{desc:"Frame time (ms)",min:0,max:50,average:Bfe},instances:{desc:"Instance Count",isInteger:!0},tricount:{desc:"Triangle",isInteger:!0},logic:{desc:"Game Logic (ms)",min:0,max:50,average:Bfe,color:"#080"},physics:{desc:"Physics (ms)",min:0,max:50,average:Bfe},render:{desc:"Renderer (ms)",min:0,max:50,average:Bfe,color:"#f90"},textureMemory:{desc:"GFX Texture Mem(M)"},bufferMemory:{desc:"GFX Buffer Mem(M)"}},Ufe={fontSize:23,quadHeight:.4,segmentsPerLine:8,textureWidth:256,textureHeight:256};class Gfe{constructor(){this._stats=null,this.id="__Profiler__",this._showFPS=!1,this._rootNode=null,this._device=null,this._swapchain=null,this._pipeline=null,this._meshRenderer=null,this._canvas=null,this._ctx=null,this._texture=null,this._region=new Yi,this._canvasArr=[],this._regionArr=[this._region],this.digitsData=null,this.offsetData=null,this.pass=null,this._canvasDone=!1,this._statsDone=!1,this._inited=!1,this._lineHeight=Ufe.textureHeight/(Object.keys(zfe).length+1),this._wordHeight=0,this._eachNumWidth=0,this._totalLines=0,this.lastTime=0,this._canvas=document.createElement("canvas"),this._ctx=this._canvas.getContext("2d"),this._canvasArr.push(this._canvas)}reset(){this._stats=null,this._showFPS=!1,this._rootNode=null,this._device=null,this._swapchain=null,this._pipeline=null,this._meshRenderer&&this._meshRenderer.destroy(),this._meshRenderer=null,this.digitsData=null,this.offsetData=null,this.pass=null,this._canvasDone=!1,this._statsDone=!1,this._inited=!1,this._lineHeight=Ufe.textureHeight/(Object.keys(zfe).length+1),this._wordHeight=0,this._eachNumWidth=0,this._totalLines=0,this.lastTime=0}isShowingStats(){return this._showFPS}hideStats(){this._showFPS&&(this._rootNode&&(this._rootNode.active=!1),u.director.off(u.Director.EVENT_BEFORE_UPDATE,this.beforeUpdate,this),u.director.off(u.Director.EVENT_AFTER_UPDATE,this.afterUpdate,this),u.director.off(u.Director.EVENT_BEFORE_PHYSICS,this.beforePhysics,this),u.director.off(u.Director.EVENT_AFTER_PHYSICS,this.afterPhysics,this),u.director.off(u.Director.EVENT_BEFORE_DRAW,this.beforeDraw,this),u.director.off(u.Director.EVENT_AFTER_DRAW,this.afterDraw,this),this._showFPS=!1,this._pipeline.profiler=null,u.game.config.showFPS=!1)}showStats(){if(!this._showFPS){if(!this._device){const e=u.director.root;this._device=e.device,this._swapchain=e.mainWindow.swapchain,this._pipeline=e.pipeline}this.generateCanvas(),this.generateStats(),u.game.once(u.Game.EVENT_ENGINE_INITED,this.generateNode,this),this._rootNode&&(this._rootNode.active=!0),u.director.on(u.Director.EVENT_BEFORE_UPDATE,this.beforeUpdate,this),u.director.on(u.Director.EVENT_AFTER_UPDATE,this.afterUpdate,this),u.director.on(u.Director.EVENT_BEFORE_PHYSICS,this.beforePhysics,this),u.director.on(u.Director.EVENT_AFTER_PHYSICS,this.afterPhysics,this),u.director.on(u.Director.EVENT_BEFORE_DRAW,this.beforeDraw,this),u.director.on(u.Director.EVENT_AFTER_DRAW,this.afterDraw,this),this._showFPS=!0,this._canvasDone=!0,this._statsDone=!0,u.game.config.showFPS=!0}}generateCanvas(){if(this._canvasDone)return;const{textureWidth:e,textureHeight:t}=Ufe;this._ctx&&this._canvas&&(this._canvas.width=e,this._canvas.height=t,this._canvas.style.width=`${this._canvas.width}`,this._canvas.style.height=`${this._canvas.height}`,this._ctx.font=`${Ufe.fontSize}px Arial`,this._ctx.textBaseline="top",this._ctx.fillStyle="#fff",this._texture=this._device.createTexture(new rs(ci.TEX2D,li.SAMPLED|li.TRANSFER_DST,ti.RGBA8,e,t)),this._region.texExtent.width=e,this._region.texExtent.height=t)}generateStats(){if(this._statsDone||!this._ctx||!this._canvas)return;this._stats=null;const e=performance.now();this._ctx.textAlign="left";let t=0;for(const n in zfe){const i=zfe[n];this._ctx.fillText(i.desc,0,t*this._lineHeight),i.counter=new Mfe(n,i,e),t++}this._totalLines=t,this._wordHeight=this._totalLines*this._lineHeight/this._canvas.height;for(let e=0;e<Lfe.length;++e){const t=this._ctx.measureText(Lfe[e]).width;this._eachNumWidth=Math.max(this._eachNumWidth,t)}for(let e=0;e<Lfe.length;++e)this._ctx.fillText(Lfe[e],e*this._eachNumWidth,this._totalLines*this._lineHeight);this._eachNumWidth/=this._canvas.width,this._stats=zfe,this._canvasArr[0]=this._canvas,this._device.copyTexImagesToTexture(this._canvasArr,this._texture,this._regionArr)}generateNode(){if(this._rootNode&&this._rootNode.isValid)return;this._rootNode=new lS("PROFILER_NODE"),u.game.addPersistRootNode(this._rootNode);const e=new lS("Profiler_Root");e.parent=this._rootNode;const t=Ufe.quadHeight,n=t/this._totalLines,i=t/this._wordHeight,s=n/Ufe.fontSize,o=this._eachNumWidth*this._canvas.width*s,r=[0,t,0,i,t,0,i,0,0,0,0,0],a=[0,2,1,0,3,2],c=[0,0,-1,0,1,0,-1,0,1,this._wordHeight,-1,0,0,this._wordHeight,-1,0];let l=0;for(let e=0;e<this._totalLines;e++)for(let s=0;s<Ufe.segmentsPerLine;s++){r.push(i+s*o,t-e*n,0),r.push(i+(s+1)*o,t-e*n,0),r.push(i+(s+1)*o,t-(e+1)*n,0),r.push(i+s*o,t-(e+1)*n,0),l=4*(e*Ufe.segmentsPerLine+s+1),a.push(0+l,2+l,1+l,0+l,3+l,2+l);const h=e*Ufe.segmentsPerLine+s,u=Math.floor(h/4),_=h-4*u;c.push(0,this._wordHeight,u,_),c.push(this._eachNumWidth,this._wordHeight,u,_),c.push(this._eachNumWidth,1,u,_),c.push(0,1,u,_)}this._meshRenderer=e.addComponent(aj),this._meshRenderer.mesh=fk({positions:r,indices:a,colors:c});const h=new lg;h.initialize({effectName:"profiler"});const _=this.pass=h.passes[0],d=_.getBinding("mainTexture"),p=_.getBinding("digits"),f=_.getBinding("offset");_.bindTexture(d,this._texture),this.digitsData=_.blocks[p],this.offsetData=_.blocks[f],this.offsetData[3]=-1,this._meshRenderer.material=h,this._meshRenderer.node.layer=Zd.Enum.PROFILER,this._inited=!0}beforeUpdate(){if(!this._stats)return;const e=performance.now();this._stats.frame.counter.start(e),this._stats.logic.counter.start(e)}afterUpdate(){if(!this._stats)return;const e=performance.now();u.director.isPaused()?this._stats.frame.counter.start(e):this._stats.logic.counter.end(e)}beforePhysics(){if(!this._stats)return;const e=performance.now();this._stats.physics.counter.start(e)}afterPhysics(){if(!this._stats)return;const e=performance.now();this._stats.physics.counter.end(e)}beforeDraw(){if(!this._stats||!this._inited)return;{const e=this._swapchain.surfaceTransform,t=this._device.capabilities.clipSpaceSignY;if(e!==this.offsetData[3]){const n=Dn[e],i=-.9,s=-.9*t;this.offsetData[0]=i*n[0]+s*n[2],this.offsetData[1]=i*n[1]+s*n[3],this.offsetData[2]=this._eachNumWidth,this.offsetData[3]=e}this.pass._setRootBufferDirty(!0)}this._meshRenderer.model&&(this._pipeline.profiler=this._meshRenderer.model);const e=performance.now();this._stats.render.counter.start(e)}afterDraw(){if(!this._stats||!this._inited)return;const e=performance.now();if(this._stats.frame.counter.end(e),this._stats.fps.counter.frame(e),this._stats.render.counter.end(e),e-this.lastTime<Bfe)return;this.lastTime=e;const t=this._device;this._stats.draws.counter.value=t.numDrawCalls,this._stats.instances.counter.value=t.numInstances,this._stats.bufferMemory.counter.value=t.memoryStatus.bufferSize/1048576,this._stats.textureMemory.counter.value=t.memoryStatus.textureSize/1048576,this._stats.tricount.counter.value=t.numTris;let n=0;{const t=this.digitsData;for(const i in this._stats){const s=this._stats[i];s.counter.sample(e);const o=s.counter.human().toString();for(let e=Ufe.segmentsPerLine-1;e>=0;e--){const i=n*Ufe.segmentsPerLine+e,s=o[o.length-(Ufe.segmentsPerLine-e)];let r=Ffe[s];void 0===r&&(r=11),t[i]=r}n++}}}}e("Profiler",Gfe);const Vfe=e("profiler",new Gfe);u.profiler=Vfe,u.internal.DataPoolManager=class{constructor(e){this.jointTexturePool=void 0,this.jointAnimationInfo=void 0,this.jointTexturePool=new mX(e),this.jointAnimationInfo=new gX(e)}releaseSkeleton(e){this.jointTexturePool.releaseSkeleton(e)}releaseAnimationClip(e){this.jointTexturePool.releaseAnimationClip(e)}clear(){this.jointTexturePool.clear(),this.jointAnimationInfo.clear()}};const Hfe=new On,kfe=new On;class jfe extends AZ{constructor(e,t=""){super(e,t),this._frames=1,this._bakedDuration=0,this._animInfo=null,this._sockets=[],this._animInfoMgr=void 0,this._parent=null,this._curvesInited=!1,this._animInfoMgr=u.director.root.dataPoolManager.jointAnimationInfo}initialize(e){if(this._curveLoaded)return;this._parent=e.getComponent("cc.SkeletalAnimation");const t=this._parent.useBakedAnimation;this._doNotCreateEval=t,super.initialize(e),this._curvesInited=!t;const{frames:n,samples:i}=nX.getOrExtract(this.clip);this._frames=n-1,this._animInfo=this._animInfoMgr.getData(e.uuid),this._bakedDuration=this._frames/i,this.setUseBaked(t)}setUseBaked(e){e?(this._sampleCurves=this._sampleCurvesBaked,this.duration=this._bakedDuration):(this._sampleCurves=super._sampleCurves,this.duration=this.clip.duration,this._curvesInited||(this._curveLoaded=!1,super.initialize(this._targetNode),this._curvesInited=!0))}rebuildSocketCurves(e){if(this._sockets.length=0,!this._targetNode)return;const t=this._targetNode;for(let n=0;n<e.length;++n){const i=e[n],s=t.getChildByPath(i.path);if(!i.target)continue;const o=nX.getOrExtract(this.clip);let r,a=i.path,c=o.joints[a],l=s;for(;!c;){const e=a.lastIndexOf("/");if(a=a.substring(0,e),c=o.joints[a],l&&(r||(r=On.identity(kfe)),On.fromRTS(Hfe,l.rotation,l.position,l.scale),On.multiply(r,Hfe,r),l=l.parent),e<0)break}const h=c&&c.transforms,{frames:u}=o,_=[];for(let e=0;e<u;e++){let t;t=h&&r?On.multiply(Hfe,h[e],r):h?h[e]:r||new On;const n={pos:new gn,rot:new Tn,scale:new gn};On.toRTS(t,n.rot,n.pos,n.scale),_.push(n)}this._sockets.push({target:i.target,frames:_})}}_setAnimInfoDirty(e,t){e.dirty=t,e.nativeDirty.fill(t?1:0)}_sampleCurvesBaked(e){const t=e/this.duration,n=this._animInfo,i=this.clip;n.currentClip!==i&&(this._animInfoMgr.switchClip(this._animInfo,i),this._parent.getUsers().forEach((e=>{e.uploadAnimation(i)})));const s=t*this._frames+.5|0;if(s!==n.data[0]){n.data[0]=s,this._setAnimInfoDirty(n,!0);for(let e=0;e<this._sockets.length;++e){const{target:t,frames:n}=this._sockets[e],{pos:i,rot:o,scale:r}=n[s];t.setRTS(o,i,r)}}}}var Wfe,qfe,Xfe,Yfe,Kfe,$fe,Qfe,Jfe,Zfe,eme,tme,nme,ime,sme,ome,rme,ame,cme,lme,hme;e("SkeletalAnimationState",jfe);let ume=e("Socket",(Wfe=mc("cc.SkeletalAnimation.Socket"),qfe=Zc(lS),Wfe((Kfe=ac((Yfe=class{constructor(e="",t=null){rc(this,"path",Kfe,this),rc(this,"target",$fe,this),this.path=e,this.target=t}}).prototype,"path",[Tc,Lc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),$fe=ac(Yfe.prototype,"target",[qfe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Xfe=Yfe))||Xfe));ke.setClassAlias(ume,"cc.SkeletalAnimationComponent.Socket");const _me=new On,dme=new On;function pme(e,t="",n=[]){for(let i=0;i<e.children.length;i++){const s=e.children[i];if(!s)continue;const o=t?`${t}/${s.name}`:s.name;n.push(o),pme(s,o,n)}return n}let fme=function(t){return e({SkeletalAnimation:t,SkeletalAnimationComponent:t}),t}((Qfe=mc("cc.SkeletalAnimation"),Jfe=Mc(),Zfe=vc(99),eme=Rc(),tme=Zc([ume]),nme=Uc(),ime=Uc(),sme=Zc([ume]),Qfe(ome=Jfe(ome=Zfe(ome=Ic(ome=eme((hme=lme=class extends E2{constructor(...e){super(...e),rc(this,"_useBakedAnimation",ame,this),rc(this,"_sockets",cme,this),this._users=new Set,this._currentBakedState=null}get sockets(){return this._sockets}set sockets(e){if(!this._useBakedAnimation){const t=$J();t.removeSockets(this.node,this._sockets),t.addSockets(this.node,e)}this._sockets=e,this.rebuildSocketAnimations()}get useBakedAnimation(){return this._useBakedAnimation}set useBakedAnimation(e){this._useBakedAnimation=e;for(const t in this._nameToState)this._nameToState[t].setUseBaked(e);this._users.forEach((t=>{t.setUseBakedAnimation(e)})),this._useBakedAnimation?$J().removeSockets(this.node,this._sockets):($J().addSockets(this.node,this._sockets),this._currentBakedState=null)}onLoad(){super.onLoad();const e=this.node.getComponentsInChildren(XX);for(let t=0;t<e.length;++t){const n=e[t];n.skinningRoot===this.node&&this.notifySkinnedMeshAdded(n)}}onDestroy(){super.onDestroy(),u.director.root.dataPoolManager.jointAnimationInfo.destroy(this.node.uuid),$J().removeSockets(this.node,this._sockets),this._removeAllUsers()}start(){this.sockets=this._sockets,this.useBakedAnimation=this._useBakedAnimation,super.start()}pause(){var e;this._useBakedAnimation?null===(e=this._currentBakedState)||void 0===e||e.pause():super.pause()}resume(){var e;this._useBakedAnimation?null===(e=this._currentBakedState)||void 0===e||e.resume():super.resume()}stop(){this._useBakedAnimation?this._currentBakedState&&(this._currentBakedState.stop(),this._currentBakedState=null):super.stop()}querySockets(){const e=this._defaultClip&&Object.keys(nX.getOrExtract(this._defaultClip).joints).sort().reduce(((e,t)=>(t.startsWith(e[e.length-1])||e.push(t),e)),[])||[];if(!e.length)return["please specify a valid default animation clip first"];const t=[];for(let n=0;n<e.length;n++){const i=e[n],s=this.node.getChildByPath(i);s&&(t.push(i),pme(s,i,t))}return t}rebuildSocketAnimations(){for(const e of this._sockets){const t=this.node.getChildByPath(e.path),{target:n}=e;t&&n&&(n.name=`${e.path.substring(e.path.lastIndexOf("/")+1)} Socket`,n.parent=this.node,sX(t,this.node,_me),On.fromRTS(dme,n.rotation,n.position,n.scale),On.equals(dme,_me)||(n.matrix=_me))}for(const e of Object.keys(this._nameToState))this._nameToState[e].rebuildSocketCurves(this._sockets)}createSocket(e){const t=this._sockets.find((t=>t.path===e));if(t)return t.target;if(!this.node.getChildByPath(e))return console.warn("illegal socket path"),null;const n=new lS;return n.parent=this.node,this._sockets.push(new ume(e,n)),this.rebuildSocketAnimations(),n}notifySkinnedMeshAdded(e){const{_useBakedAnimation:t}=this,n=e.associatedAnimation;if(n&&n._users.delete(e),e.associatedAnimation=this,e.setUseBakedAnimation(t,!0),t){const{_currentBakedState:t}=this;t&&e.uploadAnimation(t.clip)}this._users.add(e)}notifySkinnedMeshRemoved(e){e.associatedAnimation===this||e.associatedAnimation,e.setUseBakedAnimation(!1),e.associatedAnimation=null,this._users.delete(e)}getUsers(){return this._users}_createState(e,t){return new jfe(e,t)}_doCreateState(e,t){const n=super._doCreateState(e,t);return n.rebuildSocketCurves(this._sockets),n}doPlayOrCrossFade(e,t){if(this._useBakedAnimation){this._currentBakedState&&this._currentBakedState.stop();const t=e;this._currentBakedState=t,t.play()}else super.doPlayOrCrossFade(e,t)}_removeAllUsers(){Array.from(this._users).forEach((e=>{this.notifySkinnedMeshRemoved(e)}))}},lme.Socket=ume,ac((rme=hme).prototype,"sockets",[tme,nme],Object.getOwnPropertyDescriptor(rme.prototype,"sockets"),rme.prototype),ac(rme.prototype,"useBakedAnimation",[ime],Object.getOwnPropertyDescriptor(rme.prototype,"useBakedAnimation"),rme.prototype),ame=ac(rme.prototype,"_useBakedAnimation",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),cme=ac(rme.prototype,"_sockets",[sme],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),ome=rme))||ome)||ome)||ome)||ome)||ome));u.SkeletalAnimationComponent=fme,ke.setClassAlias(fme,"cc.SkeletalAnimationComponent");class mme{constructor(){this.originalTarget=null,this.target=null,this.tag=mme.TAG_INVALID}clone(){const e=new mme;return e.originalTarget=null,e.target=null,e.tag=this.tag,e}isDone(){return!0}startWithTarget(e){this.originalTarget=e,this.target=e}stop(){this.target=null}step(e){I(1006)}update(e){I(1007)}getTarget(){return this.target}setTarget(e){this.target=e}getOriginalTarget(){return this.originalTarget}setOriginalTarget(e){this.originalTarget=e}getTag(){return this.tag}setTag(e){this.tag=e}reverse(){return I(1008),null}retain(){}release(){}}mme.TAG_INVALID=-1;class gme extends mme{constructor(...e){super(...e),this._duration=0,this._timesForRepeat=1}getDuration(){return this._duration*(this._timesForRepeat||1)}setDuration(e){this._duration=e}clone(){return new gme}}let vme=0;class yme{constructor(){this.actions=[],this.target=null,this.actionIndex=0,this.currentAction=null,this.paused=!1,this.lock=!1}}class xme{constructor(){this._hashTargets=new Map,this._arrayTargets=[],this._elementPool=[]}_searchElementByTarget(e,t){for(let n=0;n<e.length;n++)if(t===e[n].target)return e[n];return null}_getElement(e,t){let n=this._elementPool.pop();return n||(n=new yme),n.target=e,n.paused=!!t,n}_putElement(e){e.actions.length=0,e.actionIndex=0,e.currentAction=null,e.paused=!1,e.target=null,e.lock=!1,this._elementPool.push(e)}addAction(e,t,n){if(!e||!t)return void N(1e3);null==t.uuid&&(t.uuid="_TWEEN_UUID_"+vme++);let i=this._hashTargets.get(t);i?i.actions||(i.actions=[]):(i=this._getElement(t,n),this._hashTargets.set(t,i),this._arrayTargets.push(i)),i.target=t,i.actions.push(e),e.startWithTarget(t)}removeAllActions(){const e=this._arrayTargets;for(let t=0;t<e.length;t++){const n=e[t];n&&this._putElement(n)}this._arrayTargets.length=0,this._hashTargets=new Map}removeAllActionsFromTarget(e){if(null==e)return;const t=this._hashTargets.get(e);t&&(t.actions.length=0,this._deleteHashElement(t))}removeAction(e){if(null==e)return;const t=e.getOriginalTarget(),n=this._hashTargets.get(t);if(n)for(let t=0;t<n.actions.length;t++)if(n.actions[t]===e){n.actions.splice(t,1),n.actionIndex>=t&&n.actionIndex--;break}}_removeActionByTag(e,t,n){for(let i=0,s=t.actions.length;i<s;++i){const s=t.actions[i];if(s&&s.getTag()===e){if(n&&s.getOriginalTarget()!==n)continue;this._removeActionAtIndex(i,t);break}}}_removeAllActionsByTag(e,t,n){for(let i=t.actions.length-1;i>=0;--i){const s=t.actions[i];if(s&&s.getTag()===e){if(n&&s.getOriginalTarget()!==n)continue;this._removeActionAtIndex(i,t)}}}removeActionByTag(e,t){e===mme.TAG_INVALID&&I(1002);const n=this._hashTargets;if(t){const i=n.get(t);i&&this._removeActionByTag(e,i,t)}else n.forEach((t=>{this._removeActionByTag(e,t)}))}removeAllActionsByTag(e,t){e===mme.TAG_INVALID&&I(1002);const n=this._hashTargets;if(t){const i=n.get(t);i&&this._removeAllActionsByTag(e,i,t)}else n.forEach((t=>{this._removeAllActionsByTag(e,t)}))}getActionByTag(e,t){e===mme.TAG_INVALID&&I(1004);const n=this._hashTargets.get(t);if(n){if(null!=n.actions)for(let t=0;t<n.actions.length;++t){const i=n.actions[t];if(i&&i.getTag()===e)return i}I(1005,e)}return null}getNumberOfRunningActionsInTarget(e){const t=this._hashTargets.get(e);return t&&t.actions?t.actions.length:0}pauseTarget(e){const t=this._hashTargets.get(e);t&&(t.paused=!0)}resumeTarget(e){const t=this._hashTargets.get(e);t&&(t.paused=!1)}pauseAllRunningActions(){const e=[],t=this._arrayTargets;for(let n=0;n<t.length;n++){const i=t[n];i&&!i.paused&&(i.paused=!0,e.push(i.target))}return e}resumeTargets(e){if(e)for(let t=0;t<e.length;t++)e[t]&&this.resumeTarget(e[t])}pauseTargets(e){if(e)for(let t=0;t<e.length;t++)e[t]&&this.pauseTarget(e[t])}purgeSharedManager(){u.director.getScheduler().unscheduleUpdate(this)}_removeActionAtIndex(e,t){t.actions[e],t.actions.splice(e,1),t.actionIndex>=e&&t.actionIndex--,0===t.actions.length&&this._deleteHashElement(t)}_deleteHashElement(e){let t=!1;if(e&&!e.lock&&this._hashTargets.get(e.target)){this._hashTargets.delete(e.target);const n=this._arrayTargets;for(let t=0,i=n.length;t<i;t++)if(n[t]===e){n.splice(t,1);break}this._putElement(e),t=!0}return t}update(e){const t=this._arrayTargets;let n;for(let i=0;i<t.length;i++){this._currentTarget=t[i],n=this._currentTarget;const s=n.target;if(s instanceof rl&&!s.isValid)this.removeAllActionsFromTarget(s),i--;else{if(!n.paused&&n.actions){for(n.lock=!0,n.actionIndex=0;n.actionIndex<n.actions.length;n.actionIndex++)if(n.currentAction=n.actions[n.actionIndex],n.currentAction){if(n.currentAction.step(e*(n.currentAction._speedMethod?n.currentAction._speed:1)),n.currentAction&&n.currentAction.isDone()){n.currentAction.stop();const e=n.currentAction;n.currentAction=null,this.removeAction(e)}n.currentAction=null}n.lock=!1}0===n.actions.length&&this._deleteHashElement(n)&&i--}}}}class Sme extends cw{constructor(...e){super(...e),this.actionMgr=new xme}get ActionManager(){return this.actionMgr}update(e){this.actionMgr.update(e)}}e("TweenSystem",Sme),Sme.ID="TWEEN",Sme.instance=void 0,Sw.on(xw.EVENT_INIT,(()=>{const e=new Sme;Sme.instance=e,Sw.registerSystem(Sme.ID,e,cw.Priority.MEDIUM)}));class Cme extends gme{isDone(){return!0}step(e){this.update(1)}update(e){}reverse(){return this.clone()}clone(){return new Cme}}class Eme extends Cme{update(e){const t=this.target.getComponentsInChildren(FD);for(let e=0;e<t.length;++e)t[e].enabled=!0}reverse(){return new Tme}clone(){return new Eme}}class Tme extends Cme{update(e){const t=this.target.getComponentsInChildren(FD);for(let e=0;e<t.length;++e)t[e].enabled=!1}reverse(){return new Eme}clone(){return new Tme}}class bme extends Cme{constructor(e){super(),this._isNeedCleanUp=!0,void 0!==e&&this.init(e)}update(e){this.target.removeFromParent(),this._isNeedCleanUp&&this.target.destroy()}init(e){return this._isNeedCleanUp=e,!0}reverse(){return new bme(this._isNeedCleanUp)}clone(){return new bme(this._isNeedCleanUp)}}class Ame extends Cme{constructor(e,t,n){super(),this._selectorTarget=null,this._function=null,this._data=null,this.initWithFunction(e,t,n)}initWithFunction(e,t,n){return e&&(this._function=e),t&&(this._selectorTarget=t),void 0!==n&&(this._data=n),!0}execute(){this._function&&this._function.call(this._selectorTarget,this.target,this._data)}update(e){this.execute()}getTargetCallback(){return this._selectorTarget}setTargetCallback(e){e!==this._selectorTarget&&(this._selectorTarget&&(this._selectorTarget=null),this._selectorTarget=e)}clone(){const e=new Ame;return e.initWithFunction(this._function,this._selectorTarget,this._data),e}}class Pme extends gme{constructor(e){super(),this.MAX_VALUE=2,this._elapsed=0,this._firstTick=!1,this._easeList=[],this._speed=1,this._repeatForever=!1,this._repeatMethod=!1,this._speedMethod=!1,void 0===e||isNaN(e)||this.initWithDuration(e)}getElapsed(){return this._elapsed}initWithDuration(e){return this._duration=0===e?Qe.FLT_EPSILON:e,this._elapsed=0,this._firstTick=!0,!0}isDone(){return this._elapsed>=this._duration}_cloneDecoration(e){e._repeatForever=this._repeatForever,e._speed=this._speed,e._timesForRepeat=this._timesForRepeat,e._easeList=this._easeList,e._speedMethod=this._speedMethod,e._repeatMethod=this._repeatMethod}_reverseEaseList(e){if(this._easeList){e._easeList=[];for(let t=0;t<this._easeList.length;t++)e._easeList.push(this._easeList[t])}}clone(){const e=new Pme(this._duration);return this._cloneDecoration(e),e}easing(e){this._easeList?this._easeList.length=0:this._easeList=[];for(let e=0;e<arguments.length;e++)this._easeList.push(arguments[e]);return this}_computeEaseTime(e){return e}step(e){this._firstTick?(this._firstTick=!1,this._elapsed=0):this._elapsed+=e;let t=this._elapsed/(this._duration>1.192092896e-7?this._duration:1.192092896e-7);t=t<1?t:1,this.update(t>0?t:0),this._repeatMethod&&this._timesForRepeat>1&&this.isDone()&&(this._repeatForever||this._timesForRepeat--,this.startWithTarget(this.target),this.step(this._elapsed-this._duration))}startWithTarget(e){mme.prototype.startWithTarget.call(this,e),this._elapsed=0,this._firstTick=!0}reverse(){return I(1010),this}setAmplitudeRate(e){I(1011)}getAmplitudeRate(){return I(1012),0}speed(e){return e<=0?(I(1013),this):(this._speedMethod=!0,this._speed*=e,this)}getSpeed(){return this._speed}setSpeed(e){return this._speed=e,this}repeat(e){return e=Math.round(e),isNaN(e)||e<1?(I(1014),this):(this._repeatMethod=!0,this._timesForRepeat*=e,this)}repeatForever(){return this._repeatMethod=!0,this._timesForRepeat=this.MAX_VALUE,this._repeatForever=!0,this}}class wme extends Pme{constructor(e){super(),this._actions=[],this._split=0,this._last=0,this._reversed=!1;const t=e instanceof Array?e:arguments;if(1===t.length)return void N(1019);const n=t.length-1;if(n>=0&&null==t[n]&&I(1015),n>=0){let e,i=t[0];for(let s=1;s<n;s++)t[s]&&(e=i,i=wme._actionOneTwo(e,t[s]));this.initWithTwoActions(i,t[n])}}initWithTwoActions(e,t){if(!e||!t)return N(1025),!1;let n=e._duration,i=t._duration;n*=e._repeatMethod?e._timesForRepeat:1,i*=t._repeatMethod?t._timesForRepeat:1;const s=n+i;return this.initWithDuration(s),this._actions[0]=e,this._actions[1]=t,!0}clone(){const e=new wme;return this._cloneDecoration(e),e.initWithTwoActions(this._actions[0].clone(),this._actions[1].clone()),e}startWithTarget(e){Pme.prototype.startWithTarget.call(this,e),this._split=this._actions[0]._duration/this._duration,this._split*=this._actions[0]._repeatMethod?this._actions[0]._timesForRepeat:1,this._last=-1}stop(){-1!==this._last&&this._actions[this._last].stop(),mme.prototype.stop.call(this)}update(e){let t,n=0;const i=this._split,s=this._actions,o=this._last;let r;(e=this._computeEaseTime(e))<i?(t=0!==i?e/i:1,0===n&&1===o&&this._reversed&&(s[1].update(0),s[1].stop())):(n=1,t=1===i?1:(e-i)/(1-i),-1===o&&(s[0].startWithTarget(this.target),s[0].update(1),s[0].stop()),0===o&&(s[0].update(1),s[0].stop())),r=s[n],o===n&&r.isDone()||(o!==n&&r.startWithTarget(this.target),t*=r._timesForRepeat,r.update(t>1?t%1:t),this._last=n)}reverse(){const e=wme._actionOneTwo(this._actions[1].reverse(),this._actions[0].reverse());return this._cloneDecoration(e),this._reverseEaseList(e),e._reversed=!0,e}}function Ime(e){const t=e instanceof Array?e:arguments;if(1===t.length)return N(1019),null;const n=t.length-1;n>=0&&null==t[n]&&I(1015);let i=null;if(n>=0){i=t[0];for(let e=1;e<=n;e++)t[e]&&(i=wme._actionOneTwo(i,t[e]))}return i}wme._actionOneTwo=function(e,t){const n=new wme;return n.initWithTwoActions(e,t),n};class Rme extends Pme{constructor(e,t){super(),this._times=0,this._total=0,this._nextDt=0,this._actionInstant=!1,this._innerAction=null,void 0!==t&&this.initWithAction(e,t)}initWithAction(e,t){const n=e._duration*t;return!!this.initWithDuration(n)&&(this._times=t,this._innerAction=e,e instanceof Cme&&(this._actionInstant=!0,this._times-=1),this._total=0,!0)}clone(){const e=new Rme;return this._cloneDecoration(e),e.initWithAction(this._innerAction.clone(),this._times),e}startWithTarget(e){this._total=0,this._nextDt=this._innerAction._duration/this._duration,Pme.prototype.startWithTarget.call(this,e),this._innerAction.startWithTarget(e)}stop(){this._innerAction.stop(),mme.prototype.stop.call(this)}update(e){e=this._computeEaseTime(e);const t=this._innerAction,n=this._duration,i=this._times;let s=this._nextDt;if(e>=s){for(;e>s&&this._total<i;)t.update(1),this._total++,t.stop(),t.startWithTarget(this.target),s+=t._duration/n,this._nextDt=s>1?1:s;e>=1&&this._total<i&&(t.update(1),this._total++),this._actionInstant||(this._total===i?t.stop():t.update(e-(s-t._duration/n)))}else t.update(e*i%1)}isDone(){return this._total===this._times}reverse(){const e=new Rme(this._innerAction.reverse(),this._times);return this._cloneDecoration(e),this._reverseEaseList(e),e}setInnerAction(e){this._innerAction!==e&&(this._innerAction=e)}getInnerAction(){return this._innerAction}}class Dme extends Pme{constructor(e){super(),this._innerAction=null,e&&this.initWithAction(e)}initWithAction(e){return e?(this._innerAction=e,!0):(N(1026),!1)}clone(){const e=new Dme;return this._cloneDecoration(e),e.initWithAction(this._innerAction.clone()),e}startWithTarget(e){Pme.prototype.startWithTarget.call(this,e),this._innerAction.startWithTarget(e)}step(e){const t=this._innerAction;t.step(e),t.isDone()&&(t.startWithTarget(this.target),t.step(t.getElapsed()-t._duration))}isDone(){return!1}reverse(){const e=new Dme(this._innerAction.reverse());return this._cloneDecoration(e),this._reverseEaseList(e),e}setInnerAction(e){this._innerAction!==e&&(this._innerAction=e)}getInnerAction(){return this._innerAction}}class Ome extends Pme{constructor(e){super(),this._one=null,this._two=null;const t=e instanceof Array?e:arguments;if(1===t.length)return void N(1020);const n=t.length-1;if(n>=0&&null==t[n]&&I(1015),n>=0){let e,i=t[0];for(let s=1;s<n;s++)t[s]&&(e=i,i=Ome._actionOneTwo(e,t[s]));this.initWithTwoActions(i,t[n])}}initWithTwoActions(e,t){if(!e||!t)return N(1027),!1;let n=!1;const i=e._duration,s=t._duration;return this.initWithDuration(Math.max(i,s))&&(this._one=e,this._two=t,i>s?this._two=wme._actionOneTwo(t,Lme(i-s)):i<s&&(this._one=wme._actionOneTwo(e,Lme(s-i))),n=!0),n}clone(){const e=new Ome;return this._cloneDecoration(e),e.initWithTwoActions(this._one.clone(),this._two.clone()),e}startWithTarget(e){Pme.prototype.startWithTarget.call(this,e),this._one.startWithTarget(e),this._two.startWithTarget(e)}stop(){this._one.stop(),this._two.stop(),mme.prototype.stop.call(this)}update(e){e=this._computeEaseTime(e),this._one&&this._one.update(e),this._two&&this._two.update(e)}reverse(){const e=Ome._actionOneTwo(this._one.reverse(),this._two.reverse());return this._cloneDecoration(e),this._reverseEaseList(e),e}}function Nme(e){const t=e instanceof Array?e:arguments;if(1===t.length)return N(1020),null;t.length>0&&null==t[t.length-1]&&I(1015);let n=t[0];for(let e=1;e<t.length;e++)null!=t[e]&&(n=Ome._actionOneTwo(n,t[e]));return n}Ome._actionOneTwo=function(e,t){const n=new Ome;return n.initWithTwoActions(e,t),n};class Mme extends Pme{update(e){}reverse(){const e=new Mme(this._duration);return this._cloneDecoration(e),this._reverseEaseList(e),e}clone(){const e=new Mme;return this._cloneDecoration(e),e.initWithDuration(this._duration),e}}function Lme(e){return new Mme(e)}class Bme extends Pme{constructor(e){super(),this._other=null,e&&this.initWithAction(e)}initWithAction(e){return e?e===this._other?(N(1029),!1):!!Pme.prototype.initWithDuration.call(this,e._duration)&&(this._other=e,!0):(N(1028),!1)}clone(){const e=new Bme;return this._cloneDecoration(e),e.initWithAction(this._other.clone()),e}startWithTarget(e){Pme.prototype.startWithTarget.call(this,e),this._other.startWithTarget(e)}update(e){e=this._computeEaseTime(e),this._other&&this._other.update(1-e)}reverse(){return this._other.clone()}stop(){this._other.stop(),mme.prototype.stop.call(this)}}class Fme extends Pme{constructor(e,t,n){if(super(),this._opts=void 0,this._props=void 0,this._originProps=void 0,null==n)n=Object.create(null);else if(function(e){const t=" [Tween:] ",n=` option is not support in v + ${_}`,i=e;i.delay&&S(`${t}delay${n}`),i.repeat&&S(`${t}repeat${n}`),i.repeatDelay&&S(`${t}repeatDelay${n}`),i.interpolation&&S(`${t}interpolation${n}`),i.onStop&&S(`${t}onStop${n}`)}(n),n.easing&&"string"==typeof n.easing&&(n.easing=function(e){const t=e.charAt(0);if(/[A-Z]/.test(t)){const n=(e=e.replace(t,t.toLowerCase())).split("-");if(2===n.length){const t=n[0];if("linear"===t)e="linear";else{const i=n[1];switch(t){case"quadratic":e=`quad${i}`;break;case"quartic":e=`quart${i}`;break;case"quintic":e=`quint${i}`;break;case"sinusoidal":e=`sine${i}`;break;case"exponential":e=`expo${i}`;break;case"circular":e=`circ${i}`;break;default:e=t+i}}}}return e}(n.easing)),n.progress||(n.progress=this.progress),n.easing&&"string"==typeof n.easing){const e=n.easing;n.easing=z_[e],n.easing||D(1031,e)}this._opts=n,this._props=Object.create(null);for(const e in t){if(!t.hasOwnProperty(e))continue;let n,i,s=t[e];if("function"==typeof s&&(s=s()),null==s||"string"==typeof s)continue;void 0!==s.value&&(s.easing||s.progress)&&("string"==typeof s.easing?(n=z_[s.easing],n||D(1031,s.easing)):n=s.easing,i=s.progress,s=s.value);const o=Object.create(null);o.value=s,o.easing=n,o.progress=i,this._props[e]=o}this._originProps=t,this.initWithDuration(e)}clone(){const e=new Fme(this._duration,this._originProps,this._opts);return this._cloneDecoration(e),e}startWithTarget(e){Pme.prototype.startWithTarget.call(this,e);const t=!!this._opts.relative,n=this._props;for(const i in n){const s=e[i];if(void 0===s)continue;const o=n[i],r=o.value;if("number"==typeof s)o.start=s,o.current=s,o.end=t?s+r:r;else if("object"==typeof s){null==o.start&&(o.start={},o.current={},o.end={});for(const e in r)isNaN(s[e])||(o.start[e]=s[e],o.current[e]=s[e],o.end[e]=t?s[e]+r[e]:r[e])}}this._opts.onStart&&this._opts.onStart(this.target)}update(e){const t=this.target;if(!t)return;const n=this._props,i=this._opts;let s=e;i.easing&&(s=i.easing(e));const o=i.progress;for(const i in n){const r=n[i],a=r.easing?r.easing(e):s,c=r.progress?r.progress:o,l=r.start,h=r.end;if("number"==typeof l)r.current=c(l,h,r.current,a);else if("object"==typeof l)for(const e in l)r.current[e]=c(l[e],h[e],r.current[e],a);t[i]=r.current}i.onUpdate&&i.onUpdate(this.target,e),1===e&&i.onComplete&&i.onComplete(this.target)}progress(e,t,n,i){return e+(t-e)*i}}e("TweenAction",Fme);class zme extends Cme{constructor(e){super(),this._props=void 0,this._props={},void 0!==e&&this.init(e)}init(e){for(const t in e)this._props[t]=e[t];return!0}update(){const e=this._props,t=this.target;for(const n in e)t[n]=e[n]}clone(){const e=new zme;return e.init(this._props),e}}class Ume{constructor(e){this._actions=[],this._finalAction=null,this._target=null,this._tag=mme.TAG_INVALID,this._target=void 0===e?null:e}tag(e){return this._tag=e,this}then(e){return e instanceof mme?this._actions.push(e.clone()):this._actions.push(e._union()),this}target(e){return this._target=e,this}start(){return this._target?(this._finalAction&&Sme.instance.ActionManager.removeAction(this._finalAction),this._finalAction=this._union(),this._finalAction.setTag(this._tag),Sme.instance.ActionManager.addAction(this._finalAction,this._target,!1),this):(S("Please set target to tween first"),this)}stop(){return this._finalAction&&Sme.instance.ActionManager.removeAction(this._finalAction),this}clone(e){const t=this._union();return Gme(e).then(t.clone())}union(){const e=this._union();return this._actions.length=0,this._actions.push(e),this}to(e,t,n){(n=n||Object.create(null)).relative=!1;const i=new Fme(e,t,n);return this._actions.push(i),this}by(e,t,n){(n=n||Object.create(null)).relative=!0;const i=new Fme(e,t,n);return this._actions.push(i),this}set(e){const t=new zme(e);return this._actions.push(t),this}delay(e){const t=Lme(e);return this._actions.push(t),this}call(e){const t=function(e){return new Ame(e,void 0,void 0)}(e);return this._actions.push(t),this}sequence(...e){const t=Ume._wrappedSequence(...e);return this._actions.push(t),this}parallel(...e){const t=Ume._wrappedParallel(...e);return this._actions.push(t),this}repeat(e,t){if(e===1/0)return this.repeatForever(t);const n=this._actions;let i;return i=t instanceof Ume?t._union():n.pop(),n.push(function(e,t){return new Rme(e,t)}(i,e)),this}repeatForever(e){const t=this._actions;let n;return n=e instanceof Ume?e._union():t.pop(),t.push(function(e){return new Dme(e)}(n)),this}reverseTime(e){const t=this._actions;let n;return n=e instanceof Ume?e._union():t.pop(),t.push(function(e){return new Bme(e)}(n)),this}hide(){const e=new Tme;return this._actions.push(e),this}show(){const e=new Eme;return this._actions.push(e),this}removeSelf(){const e=new bme(!1);return this._actions.push(e),this}static stopAll(){Sme.instance.ActionManager.removeAllActions()}static stopAllByTag(e,t){Sme.instance.ActionManager.removeAllActionsByTag(e,t)}static stopAllByTarget(e){Sme.instance.ActionManager.removeAllActionsFromTarget(e)}_union(){const e=this._actions;let t;return t=1===e.length?e[0]:Ime(e),t}_destroy(){this.stop()}static _wrappedSequence(...e){const t=Ume._tmp_args;t.length=0;for(let n=e.length,i=0;i<n;i++){const n=t[i]=e[i];n instanceof Ume&&(t[i]=n._union())}return Ime.apply(Ime,t)}static _wrappedParallel(...e){const t=Ume._tmp_args;t.length=0;for(let n=e.length,i=0;i<n;i++){const n=t[i]=e[i];n instanceof Ume&&(t[i]=n._union())}return Nme.apply(Nme,t)}}function Gme(e){return new Ume(e)}function Vme(e){return S("tweenUtil' is deprecated, please use 'tween' instead "),new Ume(e)}var Hme,kme,jme,Wme,qme,Xme,Yme,Kme,$me,Qme,Jme,Zme,ege,tge,nge,ige,sge,oge,rge,age,cge,lge,hge,uge,_ge,dge,pge,fge,mge,gge,vge,yge,xge,Sge,Cge,Ege,Tge,bge,Age,Pge,wge,Ige,Rge,Dge,Oge,Nge,Mge,Lge,Bge,Fge,zge,Uge,Gge,Vge,Hge,kge,jge,Wge,qge,Xge;e("Tween",Ume),Ume._tmp_args=[],u.Tween=Ume,u.tween=Gme,u.tweenUtil=Vme;const Yge=new dn;var Kge,$ge;let Qge;!function(e){e[e.NONE=0]="NONE",e[e.COLOR=1]="COLOR",e[e.SPRITE=2]="SPRITE",e[e.SCALE=3]="SCALE"}(Kge||(Kge={})),Ke(Kge),function(e){e.NORMAL="normal",e.HOVER="hover",e.PRESSED="pressed",e.DISABLED="disabled"}($ge||($ge={})),function(e){e.CLICK="click"}(Qge||(Qge={}));let Jge,Zge,eve,tve=function(t){return e({Button:t,ButtonComponent:t}),t}((Hme=mc("cc.Button"),kme=Mc(),jme=vc(110),Wme=Rc(),qme=gc(PN),Xme=Zc(lS),Yme=Wc(),Kme=Uc(),$me=Wc(),Qme=Uc(),Jme=Zc(Kge),Zme=Wc(),ege=Uc(),tge=Wc(),nge=Uc(),ige=Wc(),sge=Uc(),oge=Wc(),rge=Uc(),age=Wc(),cge=Uc(),lge=Vc(),hge=Hc(),uge=Wc(),_ge=Uc(),dge=Wc(),pge=Uc(),fge=Zc($D),mge=Wc(),gge=Uc(),vge=Zc($D),yge=Wc(),xge=Uc(),Sge=Zc($D),Cge=Wc(),Ege=Uc(),Tge=Zc($D),bge=Wc(),Age=Uc(),Pge=Zc([tR]),wge=Wc(),Ige=Uc(),Hme(Rge=kme(Rge=jme(Rge=Wme(Rge=qme(Rge=Ic((Xge=qge=class extends Gh{constructor(...e){super(...e),rc(this,"clickEvents",Oge,this),rc(this,"_interactable",Nge,this),rc(this,"_transition",Mge,this),rc(this,"_normalColor",Lge,this),rc(this,"_hoverColor",Bge,this),rc(this,"_pressedColor",Fge,this),rc(this,"_disabledColor",zge,this),rc(this,"_normalSprite",Uge,this),rc(this,"_hoverSprite",Gge,this),rc(this,"_pressedSprite",Vge,this),rc(this,"_disabledSprite",Hge,this),rc(this,"_duration",kge,this),rc(this,"_zoomScale",jge,this),rc(this,"_target",Wge,this),this._pressed=!1,this._hovered=!1,this._fromColor=new dn,this._toColor=new dn,this._time=0,this._transitionFinished=!0,this._fromScale=new gn,this._toScale=new gn,this._originalScale=null,this._sprite=null,this._targetScale=new gn}get target(){return this._target||this.node}set target(e){this._target!==e&&(this._target&&this._unregisterTargetEvent(this._target),this._target=e,this._applyTarget())}get interactable(){return this._interactable}set interactable(e){this._interactable!==e&&(this._interactable=e,this._updateState(),this._interactable||this._resetState())}set _resizeToTarget(e){e&&this._resizeNodeToTargetNode()}get transition(){return this._transition}set transition(e){this._transition!==e&&(this._transition===Kge.COLOR?this._updateColorTransition($ge.NORMAL):this._transition===Kge.SPRITE&&this._updateSpriteTransition($ge.NORMAL),this._transition=e,this._updateState())}get normalColor(){return this._normalColor}set normalColor(e){this._normalColor!==e&&(this._normalColor.set(e),this._updateState())}get pressedColor(){return this._pressedColor}set pressedColor(e){this._pressedColor!==e&&this._pressedColor.set(e)}get hoverColor(){return this._hoverColor}set hoverColor(e){this._hoverColor!==e&&this._hoverColor.set(e)}get disabledColor(){return this._disabledColor}set disabledColor(e){this._disabledColor!==e&&(this._disabledColor.set(e),this._updateState())}get duration(){return this._duration}set duration(e){this._duration!==e&&(this._duration=e)}get zoomScale(){return this._zoomScale}set zoomScale(e){this._zoomScale!==e&&(this._zoomScale=e)}get normalSprite(){return this._normalSprite}set normalSprite(e){if(this._normalSprite===e)return;this._normalSprite=e;const t=this.node.getComponent(kF);t&&(t.spriteFrame=e),this._updateState()}get pressedSprite(){return this._pressedSprite}set pressedSprite(e){this._pressedSprite!==e&&(this._pressedSprite=e,this._updateState())}get hoverSprite(){return this._hoverSprite}set hoverSprite(e){this._hoverSprite!==e&&(this._hoverSprite=e,this._updateState())}get disabledSprite(){return this._disabledSprite}set disabledSprite(e){this._disabledSprite!==e&&(this._disabledSprite=e,this._updateState())}__preload(){this.target||(this.target=this.node);const e=this.node.getComponent(kF);e&&(this._normalSprite=e.spriteFrame),this._applyTarget(),this._resetState()}onEnable(){this._registerNodeEvent()}onDisable(){this._resetState(),this._unregisterNodeEvent()}onDestroy(){this.target.isValid&&this._unregisterTargetEvent(this.target)}update(e){const t=this.target;if(this._transitionFinished||!t)return;if(this._transition!==Kge.COLOR&&this._transition!==Kge.SCALE)return;this._time+=e;let n=1;if(this._duration>0&&(n=this._time/this._duration),n>=1&&(n=1),this._transition===Kge.COLOR){const e=t._uiProps.uiComp;dn.lerp(Yge,this._fromColor,this._toColor,n),e&&(e.color=Yge)}else this.transition===Kge.SCALE&&(t.getScale(this._targetScale),this._targetScale.x=Kt(this._fromScale.x,this._toScale.x,n),this._targetScale.y=Kt(this._fromScale.y,this._toScale.y,n),t.setScale(this._targetScale));1===n&&(this._transitionFinished=!0)}_resizeNodeToTargetNode(){this.target&&this.target._uiProps.uiTransformComp}_resetState(){this._pressed=!1,this._hovered=!1;const e=this.target;if(!e)return;const t=this._transition;if(t===Kge.COLOR&&this._interactable){const t=e.getComponent(KN);t&&(t.color=this._normalColor)}else t===Kge.SCALE&&this._originalScale&&e.setScale(this._originalScale);this._transitionFinished=!0}_registerNodeEvent(){this.node.on(Ex.TOUCH_START,this._onTouchBegan,this),this.node.on(Ex.TOUCH_MOVE,this._onTouchMove,this),this.node.on(Ex.TOUCH_END,this._onTouchEnded,this),this.node.on(Ex.TOUCH_CANCEL,this._onTouchCancel,this),this.node.on(Ex.MOUSE_ENTER,this._onMouseMoveIn,this),this.node.on(Ex.MOUSE_LEAVE,this._onMouseMoveOut,this)}_registerTargetEvent(e){e.on(Ex.TRANSFORM_CHANGED,this._onTargetTransformChanged,this)}_unregisterNodeEvent(){this.node.off(Ex.TOUCH_START,this._onTouchBegan,this),this.node.off(Ex.TOUCH_MOVE,this._onTouchMove,this),this.node.off(Ex.TOUCH_END,this._onTouchEnded,this),this.node.off(Ex.TOUCH_CANCEL,this._onTouchCancel,this),this.node.off(Ex.MOUSE_ENTER,this._onMouseMoveIn,this),this.node.off(Ex.MOUSE_LEAVE,this._onMouseMoveOut,this)}_unregisterTargetEvent(e){e.off(Ex.TRANSFORM_CHANGED)}_getTargetSprite(e){let t=null;return e&&(t=e.getComponent(kF)),t}_applyTarget(){this.target&&(this._sprite=this._getTargetSprite(this.target),this._originalScale||(this._originalScale=new gn),gn.copy(this._originalScale,this.target.getScale()),this._registerTargetEvent(this.target))}_onTargetSpriteFrameChanged(e){this._transition===Kge.SPRITE&&this._setCurrentStateSpriteFrame(e.spriteFrame)}_setCurrentStateSpriteFrame(e){if(e)switch(this._getButtonState()){case $ge.NORMAL:this._normalSprite=e;break;case $ge.HOVER:this._hoverSprite=e;break;case $ge.PRESSED:this._pressedSprite=e;break;case $ge.DISABLED:this._disabledSprite=e}}_onTargetColorChanged(e){this._transition===Kge.COLOR&&this._setCurrentStateColor(e)}_setCurrentStateColor(e){switch(this._getButtonState()){case $ge.NORMAL:this._normalColor=e;break;case $ge.HOVER:this._hoverColor=e;break;case $ge.PRESSED:this._pressedColor=e;break;case $ge.DISABLED:this._disabledColor=e}}_onTargetTransformChanged(e){e&Iv.SCALE&&this._originalScale&&this._transition===Kge.SCALE&&this._transitionFinished&&gn.copy(this._originalScale,this.target.getScale())}_onTouchBegan(e){this._interactable&&this.enabledInHierarchy&&(this._pressed=!0,this._updateState(),e&&(e.propagationStopped=!0))}_onTouchMove(e){if(!this._interactable||!this.enabledInHierarchy||!this._pressed)return;if(!e)return;const t=e.touch;if(!t)return;const n=this.node._uiProps.uiTransformComp.hitTest(t.getLocation());if(this._transition===Kge.SCALE&&this.target&&this._originalScale)n?(gn.copy(this._fromScale,this._originalScale),gn.multiplyScalar(this._toScale,this._originalScale,this._zoomScale),this._transitionFinished=!1):(this._time=0,this._transitionFinished=!0,this.target.setScale(this._originalScale));else{let e;e=n?$ge.PRESSED:$ge.NORMAL,this._applyTransition(e)}e&&(e.propagationStopped=!0)}_onTouchEnded(e){this._interactable&&this.enabledInHierarchy&&(this._pressed&&(tR.emitEvents(this.clickEvents,e),this.node.emit(Qge.CLICK,this)),this._pressed=!1,this._updateState(),e&&(e.propagationStopped=!0))}_onTouchCancel(e){this._interactable&&this.enabledInHierarchy&&(this._pressed=!1,this._updateState())}_onMouseMoveIn(e){!this._pressed&&this.interactable&&this.enabledInHierarchy&&(this._transition!==Kge.SPRITE||this._hoverSprite)&&(this._hovered||(this._hovered=!0,this._updateState()))}_onMouseMoveOut(e){this._hovered&&(this._hovered=!1,this._updateState())}_updateState(){const e=this._getButtonState();this._applyTransition(e)}_getButtonState(){let e=$ge.NORMAL;return this._interactable?this._pressed?e=$ge.PRESSED:this._hovered&&(e=$ge.HOVER):e=$ge.DISABLED,e.toString()}_updateColorTransition(e){var t;const n=this[`${e}Color`],i=null===(t=this.target)||void 0===t?void 0:t.getComponent(KN);i&&(e===$ge.DISABLED?i.color=n:(this._fromColor=i.color.clone(),this._toColor=n,this._time=0,this._transitionFinished=!1))}_updateSpriteTransition(e){const t=this[`${e}Sprite`];this._sprite&&t&&(this._sprite.spriteFrame=t)}_updateScaleTransition(e){this._interactable&&(e===$ge.PRESSED?this._zoomUp():this._zoomBack())}_zoomUp(){this._originalScale&&(gn.copy(this._fromScale,this._originalScale),gn.multiplyScalar(this._toScale,this._originalScale,this._zoomScale),this._time=0,this._transitionFinished=!1)}_zoomBack(){this.target&&this._originalScale&&(gn.copy(this._fromScale,this.target.getScale()),gn.copy(this._toScale,this._originalScale),this._time=0,this._transitionFinished=!1)}_applyTransition(e){const t=this._transition;t===Kge.COLOR?this._updateColorTransition(e):t===Kge.SPRITE?this._updateSpriteTransition(e):t===Kge.SCALE&&this._updateScaleTransition(e)}},qge.Transition=Kge,qge.EventType=Qge,ac((Dge=Xge).prototype,"target",[Xme,Yme,Kme],Object.getOwnPropertyDescriptor(Dge.prototype,"target"),Dge.prototype),ac(Dge.prototype,"interactable",[$me,Qme],Object.getOwnPropertyDescriptor(Dge.prototype,"interactable"),Dge.prototype),ac(Dge.prototype,"transition",[Jme,Zme,ege],Object.getOwnPropertyDescriptor(Dge.prototype,"transition"),Dge.prototype),ac(Dge.prototype,"normalColor",[tge,nge],Object.getOwnPropertyDescriptor(Dge.prototype,"normalColor"),Dge.prototype),ac(Dge.prototype,"pressedColor",[ige,sge],Object.getOwnPropertyDescriptor(Dge.prototype,"pressedColor"),Dge.prototype),ac(Dge.prototype,"hoverColor",[oge,rge],Object.getOwnPropertyDescriptor(Dge.prototype,"hoverColor"),Dge.prototype),ac(Dge.prototype,"disabledColor",[age,cge],Object.getOwnPropertyDescriptor(Dge.prototype,"disabledColor"),Dge.prototype),ac(Dge.prototype,"duration",[lge,hge,uge,_ge],Object.getOwnPropertyDescriptor(Dge.prototype,"duration"),Dge.prototype),ac(Dge.prototype,"zoomScale",[dge,pge],Object.getOwnPropertyDescriptor(Dge.prototype,"zoomScale"),Dge.prototype),ac(Dge.prototype,"normalSprite",[fge,mge,gge],Object.getOwnPropertyDescriptor(Dge.prototype,"normalSprite"),Dge.prototype),ac(Dge.prototype,"pressedSprite",[vge,yge,xge],Object.getOwnPropertyDescriptor(Dge.prototype,"pressedSprite"),Dge.prototype),ac(Dge.prototype,"hoverSprite",[Sge,Cge,Ege],Object.getOwnPropertyDescriptor(Dge.prototype,"hoverSprite"),Dge.prototype),ac(Dge.prototype,"disabledSprite",[Tge,bge,Age],Object.getOwnPropertyDescriptor(Dge.prototype,"disabledSprite"),Dge.prototype),Oge=ac(Dge.prototype,"clickEvents",[Pge,Tc,wge,Ige],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Nge=ac(Dge.prototype,"_interactable",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Mge=ac(Dge.prototype,"_transition",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Kge.NONE}}),Lge=ac(Dge.prototype,"_normalColor",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return dn.WHITE.clone()}}),Bge=ac(Dge.prototype,"_hoverColor",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new dn(211,211,211,255)}}),Fge=ac(Dge.prototype,"_pressedColor",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return dn.WHITE.clone()}}),zge=ac(Dge.prototype,"_disabledColor",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new dn(124,124,124,255)}}),Uge=ac(Dge.prototype,"_normalSprite",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Gge=ac(Dge.prototype,"_hoverSprite",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Vge=ac(Dge.prototype,"_pressedSprite",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Hge=ac(Dge.prototype,"_disabledSprite",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),kge=ac(Dge.prototype,"_duration",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),jge=ac(Dge.prototype,"_zoomScale",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1.2}}),Wge=ac(Dge.prototype,"_target",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Rge=Dge))||Rge)||Rge)||Rge)||Rge)||Rge)||Rge));u.Button=tve;(function(e){e[e.DEFAULT=0]="DEFAULT",e[e.DONE=1]="DONE",e[e.SEND=2]="SEND",e[e.SEARCH=3]="SEARCH",e[e.GO=4]="GO",e[e.NEXT=5]="NEXT"})(Jge||(Jge={})),qe(Jge),function(e){e[e.ANY=0]="ANY",e[e.EMAIL_ADDR=1]="EMAIL_ADDR",e[e.NUMERIC=2]="NUMERIC",e[e.PHONE_NUMBER=3]="PHONE_NUMBER",e[e.URL=4]="URL",e[e.DECIMAL=5]="DECIMAL",e[e.SINGLE_LINE=6]="SINGLE_LINE"}(Zge||(Zge={})),qe(Zge),function(e){e[e.PASSWORD=0]="PASSWORD",e[e.SENSITIVE=1]="SENSITIVE",e[e.INITIAL_CAPS_WORD=2]="INITIAL_CAPS_WORD",e[e.INITIAL_CAPS_SENTENCE=3]="INITIAL_CAPS_SENTENCE",e[e.INITIAL_CAPS_ALL_CHARACTERS=4]="INITIAL_CAPS_ALL_CHARACTERS",e[e.DEFAULT=5]="DEFAULT"}(eve||(eve={})),qe(eve);var nve,ive,sve,ove,rve,ave,cve,lve,hve,uve,_ve,dve,pve,fve,mve,gve,vve,yve,xve,Sve,Cve,Eve,Tve,bve,Ave,Pve,wve,Ive,Rve,Dve,Ove,Nve,Mve,Lve,Bve,Fve,zve,Uve,Gve,Vve,Hve,kve,jve,Wve,qve,Xve,Yve,Kve,$ve,Qve,Jve,Zve,eye,tye,nye,iye,sye,oye,rye,aye,cye;new On,new On,new gn,function(e){e.EDITING_DID_BEGAN="editing-did-began",e.EDITING_DID_ENDED="editing-did-ended",e.TEXT_CHANGED="text-changed",e.EDITING_RETURN="editing-return"}(cye||(cye={}));let lye=function(t){return e({EditBox:t,EditBoxComponent:t}),t}((nve=mc("cc.EditBox"),ive=Mc(),sve=vc(110),ove=Rc(),rve=gc(PN),ave=Wc(),cve=Uc(),lve=Wc(),hve=Uc(),uve=Zc(fL),_ve=Wc(),dve=Uc(),pve=Zc(fL),fve=Wc(),mve=Uc(),gve=Zc($D),vve=Wc(),yve=Uc(),xve=Zc(eve),Sve=Wc(),Cve=Uc(),Eve=Zc(Zge),Tve=Wc(),bve=Uc(),Ave=Zc(Jge),Pve=Wc(),wve=Uc(),Ive=Wc(),Rve=Uc(),Dve=Wc(),Ove=Uc(),Nve=Zc([tR]),Mve=Wc(),Lve=Uc(),Bve=Zc([tR]),Fve=Wc(),zve=Uc(),Uve=Zc([tR]),Gve=Wc(),Vve=Uc(),Hve=Zc([tR]),kve=Wc(),jve=Uc(),nve(Wve=ive(Wve=sve(Wve=ove(Wve=rve(Wve=Ic((aye=rye=class e extends Gh{constructor(...e){super(...e),rc(this,"editingDidBegan",Xve,this),rc(this,"textChanged",Yve,this),rc(this,"editingDidEnded",Kve,this),rc(this,"editingReturn",$ve,this),this._impl=null,this._background=null,rc(this,"_textLabel",Qve,this),rc(this,"_placeholderLabel",Jve,this),rc(this,"_returnType",Zve,this),rc(this,"_string",eye,this),rc(this,"_tabIndex",tye,this),rc(this,"_backgroundImage",nye,this),rc(this,"_inputFlag",iye,this),rc(this,"_inputMode",sye,this),rc(this,"_maxLength",oye,this),this._isLabelVisible=!1}get string(){return this._string}set string(e){this._maxLength>=0&&e.length>=this._maxLength&&(e=e.slice(0,this._maxLength)),this._string!==e&&(this._string=e,this._updateString(e))}get placeholder(){return this._placeholderLabel?this._placeholderLabel.string:""}set placeholder(e){this._placeholderLabel&&(this._placeholderLabel.string=e)}get textLabel(){return this._textLabel}set textLabel(e){this._textLabel!==e&&(this._textLabel=e,this._textLabel&&(this._updateTextLabel(),this._updateLabels()))}get placeholderLabel(){return this._placeholderLabel}set placeholderLabel(e){this._placeholderLabel!==e&&(this._placeholderLabel=e,this._placeholderLabel&&(this._updatePlaceholderLabel(),this._updateLabels()))}get backgroundImage(){return this._backgroundImage}set backgroundImage(e){this._backgroundImage!==e&&(this._backgroundImage=e,this._ensureBackgroundSprite(),this._background.spriteFrame=e)}get inputFlag(){return this._inputFlag}set inputFlag(e){this._inputFlag!==e&&(this._inputFlag=e,this._updateString(this._string))}get inputMode(){return this._inputMode}set inputMode(e){this._inputMode!==e&&(this._inputMode=e,this._updateTextLabel(),this._updatePlaceholderLabel())}get returnType(){return this._returnType}set returnType(e){this._returnType=e}get maxLength(){return this._maxLength}set maxLength(e){this._maxLength=e}get tabIndex(){return this._tabIndex}set tabIndex(e){this._tabIndex!==e&&(this._tabIndex=e,this._impl&&this._impl.setTabIndex(e))}__preload(){this._init()}onEnable(){this._registerEvent(),this._ensureBackgroundSprite(),this._impl&&this._impl.onEnable()}update(){this._impl&&this._impl.update()}onDisable(){this._unregisterEvent(),this._unregisterBackgroundEvent(),this._impl&&this._impl.onDisable()}onDestroy(){this._impl&&this._impl.clear()}setFocus(){this._impl&&this._impl.setFocus(!0)}focus(){this._impl&&this._impl.setFocus(!0)}blur(){this._impl&&this._impl.setFocus(!1)}isFocused(){return!!this._impl&&this._impl.isFocused()}_editBoxEditingDidBegan(){tR.emitEvents(this.editingDidBegan,this),this.node.emit(cye.EDITING_DID_BEGAN,this)}_editBoxEditingDidEnded(){tR.emitEvents(this.editingDidEnded,this),this.node.emit(cye.EDITING_DID_ENDED,this)}_editBoxTextChanged(e){e=this._updateLabelStringStyle(e,!0),this.string=e,tR.emitEvents(this.textChanged,e,this),this.node.emit(cye.TEXT_CHANGED,this)}_editBoxEditingReturn(){tR.emitEvents(this.editingReturn,this),this.node.emit(cye.EDITING_RETURN,this)}_showLabels(){this._isLabelVisible=!0,this._updateLabels()}_hideLabels(){this._isLabelVisible=!1,this._textLabel&&(this._textLabel.node.active=!1),this._placeholderLabel&&(this._placeholderLabel.node.active=!1)}_onTouchBegan(e){e.propagationStopped=!0}_onTouchCancel(e){e.propagationStopped=!0}_onTouchEnded(e){this._impl&&this._impl.beginEditing(),e.propagationStopped=!0}_init(){this._updatePlaceholderLabel(),this._updateTextLabel(),this._isLabelVisible=!0,this.node.on(Ex.SIZE_CHANGED,this._resizeChildNodes,this),(this._impl=new e._EditBoxImpl).init(this),this._updateString(this._string),this._syncSize()}_ensureBackgroundSprite(){if(!this._background){let e=this.node.getComponent(kF);e||(e=this.node.addComponent(kF)),e!==this._background&&(e.type=kF.Type.SLICED,e.spriteFrame=this._backgroundImage,this._background=e,this._registerBackgroundEvent())}}_updateTextLabel(){let e=this._textLabel;if(!e){let t=this.node.getChildByName("TEXT_LABEL");t||(t=new lS("TEXT_LABEL"),t.layer=this.node.layer),e=t.getComponent(fL),e||(e=t.addComponent(fL)),t.parent=this.node,this._textLabel=e}this._textLabel.node._uiProps.uiTransformComp.setAnchorPoint(0,1),e.overflow=fL.Overflow.CLAMP,this._inputMode===Zge.ANY?(e.verticalAlign=lL.TOP,e.enableWrapText=!0):e.enableWrapText=!1,e.string=this._updateLabelStringStyle(this._string)}_updatePlaceholderLabel(){let e=this._placeholderLabel;if(!e){let t=this.node.getChildByName("PLACEHOLDER_LABEL");t||(t=new lS("PLACEHOLDER_LABEL"),t.layer=this.node.layer),e=t.getComponent(fL),e||(e=t.addComponent(fL)),t.parent=this.node,this._placeholderLabel=e}this._placeholderLabel.node._uiProps.uiTransformComp.setAnchorPoint(0,1),this._inputMode===Zge.ANY?e.enableWrapText=!0:e.enableWrapText=!1,e.string=this.placeholder}_syncSize(){const e=this.node._uiProps.uiTransformComp,t=e.contentSize;if(this._background){const n=this._background.node._uiProps.uiTransformComp;n.anchorPoint=e.anchorPoint,n.setContentSize(t)}this._updateLabelPosition(t),this._impl&&this._impl.setSize(t.width,t.height)}_updateLabels(){if(this._isLabelVisible){const e=this._string;this._textLabel&&(this._textLabel.node.active=""!==e),this._placeholderLabel&&(this._placeholderLabel.node.active=""===e)}}_updateString(e){const t=this._textLabel;if(!t)return;let n=e;n&&(n=this._updateLabelStringStyle(n)),t.string=n,this._updateLabels()}_updateLabelStringStyle(e,t=!1){const n=this._inputFlag;if(t||n!==eve.PASSWORD)n===eve.INITIAL_CAPS_ALL_CHARACTERS?e=e.toUpperCase():n===eve.INITIAL_CAPS_WORD?e=e.replace(/(?:^|\s)\S/g,(e=>e.toUpperCase())):n===eve.INITIAL_CAPS_SENTENCE&&(e=(i=e).charAt(0).toUpperCase()+i.slice(1));else{let t="";const n=e.length;for(let e=0;e<n;++e)t+="●";e=t}var i;return e}_registerEvent(){this.node.on(Ex.TOUCH_START,this._onTouchBegan,this),this.node.on(Ex.TOUCH_END,this._onTouchEnded,this)}_unregisterEvent(){this.node.off(Ex.TOUCH_START,this._onTouchBegan,this),this.node.off(Ex.TOUCH_END,this._onTouchEnded,this)}_onBackgroundSpriteFrameChanged(){this._background&&(this.backgroundImage=this._background.spriteFrame)}_registerBackgroundEvent(){const e=this._background&&this._background.node;null==e||e.on(kF.EventType.SPRITE_FRAME_CHANGED,this._onBackgroundSpriteFrameChanged,this)}_unregisterBackgroundEvent(){const e=this._background&&this._background.node;null==e||e.off(kF.EventType.SPRITE_FRAME_CHANGED,this._onBackgroundSpriteFrameChanged,this)}_updateLabelPosition(e){const t=this.node._uiProps.uiTransformComp,n=-t.anchorX*t.width,i=-t.anchorY*t.height,s=this._placeholderLabel,o=this._textLabel;o&&(o.node._uiProps.uiTransformComp.setContentSize(e.width-2,e.height),o.node.setPosition(n+2,i+e.height,o.node.position.z),this._inputMode===Zge.ANY&&(o.verticalAlign=lL.TOP),o.enableWrapText=this._inputMode===Zge.ANY),s&&(s.node._uiProps.uiTransformComp.setContentSize(e.width-2,e.height),s.lineHeight=e.height,s.node.setPosition(n+2,i+e.height,s.node.position.z),s.enableWrapText=this._inputMode===Zge.ANY)}_resizeChildNodes(){const e=this.node._uiProps.uiTransformComp,t=this._textLabel&&this._textLabel.node;t&&(t.setPosition(-e.width/2,e.height/2,t.position.z),t._uiProps.uiTransformComp.setContentSize(e.contentSize));const n=this._placeholderLabel&&this._placeholderLabel.node;n&&(n.setPosition(-e.width/2,e.height/2,n.position.z),n._uiProps.uiTransformComp.setContentSize(e.contentSize));const i=this._background&&this._background.node;i&&i._uiProps.uiTransformComp.setContentSize(e.contentSize),this._syncSize()}},rye._EditBoxImpl=class{constructor(){this._editing=!1,this._delegate=null}init(e){}onEnable(){}update(){}onDisable(){this._editing&&this.endEditing()}clear(){this._delegate=null}setTabIndex(e){}setSize(e,t){}setFocus(e){e?this.beginEditing():this.endEditing()}isFocused(){return this._editing}beginEditing(){}endEditing(){}},rye.KeyboardReturnType=Jge,rye.InputFlag=eve,rye.InputMode=Zge,rye.EventType=cye,ac((qve=aye).prototype,"string",[ave,cve],Object.getOwnPropertyDescriptor(qve.prototype,"string"),qve.prototype),ac(qve.prototype,"placeholder",[lve,hve],Object.getOwnPropertyDescriptor(qve.prototype,"placeholder"),qve.prototype),ac(qve.prototype,"textLabel",[uve,_ve,dve],Object.getOwnPropertyDescriptor(qve.prototype,"textLabel"),qve.prototype),ac(qve.prototype,"placeholderLabel",[pve,fve,mve],Object.getOwnPropertyDescriptor(qve.prototype,"placeholderLabel"),qve.prototype),ac(qve.prototype,"backgroundImage",[gve,vve,yve],Object.getOwnPropertyDescriptor(qve.prototype,"backgroundImage"),qve.prototype),ac(qve.prototype,"inputFlag",[xve,Sve,Cve],Object.getOwnPropertyDescriptor(qve.prototype,"inputFlag"),qve.prototype),ac(qve.prototype,"inputMode",[Eve,Tve,bve],Object.getOwnPropertyDescriptor(qve.prototype,"inputMode"),qve.prototype),ac(qve.prototype,"returnType",[Ave,Pve,wve],Object.getOwnPropertyDescriptor(qve.prototype,"returnType"),qve.prototype),ac(qve.prototype,"maxLength",[Ive,Rve],Object.getOwnPropertyDescriptor(qve.prototype,"maxLength"),qve.prototype),ac(qve.prototype,"tabIndex",[Dve,Ove],Object.getOwnPropertyDescriptor(qve.prototype,"tabIndex"),qve.prototype),Xve=ac(qve.prototype,"editingDidBegan",[Nve,Tc,Mve,Lve],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Yve=ac(qve.prototype,"textChanged",[Bve,Tc,Fve,zve],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Kve=ac(qve.prototype,"editingDidEnded",[Uve,Tc,Gve,Vve],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),$ve=ac(qve.prototype,"editingReturn",[Hve,Tc,kve,jve],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Qve=ac(qve.prototype,"_textLabel",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Jve=ac(qve.prototype,"_placeholderLabel",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Zve=ac(qve.prototype,"_returnType",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Jge.DEFAULT}}),eye=ac(qve.prototype,"_string",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),tye=ac(qve.prototype,"_tabIndex",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),nye=ac(qve.prototype,"_backgroundImage",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),iye=ac(qve.prototype,"_inputFlag",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return eve.DEFAULT}}),sye=ac(qve.prototype,"_inputMode",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Zge.ANY}}),oye=ac(qve.prototype,"_maxLength",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 20}}),Wve=qve))||Wve)||Wve)||Wve)||Wve)||Wve)||Wve));var hye,uye,_ye,dye,pye,fye,mye,gye,vye,yye,xye,Sye,Cye,Eye,Tye,bye,Aye,Pye,wye,Iye,Rye,Dye,Oye,Nye,Mye,Lye,Bye,Fye,zye,Uye,Gye,Vye,Hye,kye,jye,Wye,qye,Xye,Yye,Kye,$ye,Qye,Jye,Zye,exe,txe,nxe,ixe,sxe,oxe,rxe,axe,cxe,lxe,hxe,uxe,_xe,dxe,pxe,fxe,mxe;u.internal.EditBox=lye,function(e){e[e.NONE=0]="NONE",e[e.HORIZONTAL=1]="HORIZONTAL",e[e.VERTICAL=2]="VERTICAL",e[e.GRID=3]="GRID"}(uxe||(uxe={})),Ke(uxe),function(e){e[e.NONE=0]="NONE",e[e.CONTAINER=1]="CONTAINER",e[e.CHILDREN=2]="CHILDREN"}(_xe||(_xe={})),Ke(_xe),function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL"}(dxe||(dxe={})),Ke(dxe),function(e){e[e.BOTTOM_TO_TOP=0]="BOTTOM_TO_TOP",e[e.TOP_TO_BOTTOM=1]="TOP_TO_BOTTOM"}(pxe||(pxe={})),Ke(pxe),function(e){e[e.LEFT_TO_RIGHT=0]="LEFT_TO_RIGHT",e[e.RIGHT_TO_LEFT=1]="RIGHT_TO_LEFT"}(fxe||(fxe={})),Ke(fxe),function(e){e[e.NONE=0]="NONE",e[e.FIXED_ROW=1]="FIXED_ROW",e[e.FIXED_COL=2]="FIXED_COL"}(mxe||(mxe={})),Ke(mxe);const gxe=new gn;let vxe=function(t){return e({Layout:t,LayoutComponent:t}),t}((hye=mc("cc.Layout"),uye=Mc(),_ye=vc(110),dye=Rc(),pye=gc(PN),fye=Bc(),mye=Uc(),gye=Bc(),vye=Uc(),yye=Zc(uxe),xye=Wc(),Sye=Uc(),Cye=Zc(_xe),Eye=Bc(),Tye=Uc(),bye=Bc(),Aye=Uc(),Pye=Zc(dxe),wye=Uc(),Iye=Uc(),Rye=Uc(),Dye=Uc(),Oye=Uc(),Nye=Uc(),Mye=Uc(),Lye=Zc(pxe),Bye=Uc(),Fye=Zc(fxe),zye=Uc(),Uye=Zc(mxe),Gye=Bc(),Vye=Uc(),Hye=Bc(),kye=Uc(),jye=Uc(),hye(Wye=uye(Wye=_ye(Wye=dye(Wye=pye(Wye=Ic((hxe=lxe=class extends Gh{constructor(...e){super(...e),rc(this,"_resizeMode",Xye,this),rc(this,"_layoutType",Yye,this),rc(this,"_cellSize",Kye,this),rc(this,"_startAxis",$ye,this),rc(this,"_paddingLeft",Qye,this),rc(this,"_paddingRight",Jye,this),rc(this,"_paddingTop",Zye,this),rc(this,"_paddingBottom",exe,this),rc(this,"_spacingX",txe,this),rc(this,"_spacingY",nxe,this),rc(this,"_verticalDirection",ixe,this),rc(this,"_horizontalDirection",sxe,this),rc(this,"_constraint",oxe,this),rc(this,"_constraintNum",rxe,this),rc(this,"_affectedByScale",axe,this),rc(this,"_isAlign",cxe,this),this._layoutSize=new kn(300,200),this._layoutDirty=!0,this._childrenDirty=!1,this._usefulLayoutObj=[],this._init=!1}get alignHorizontal(){return this._isAlign}set alignHorizontal(e){this._layoutType===uxe.HORIZONTAL&&(this._isAlign=e,this._doLayoutDirty())}get alignVertical(){return this._isAlign}set alignVertical(e){this._layoutType===uxe.VERTICAL&&(this._isAlign=e,this._doLayoutDirty())}get type(){return this._layoutType}set type(e){this._layoutType=e,this._doLayoutDirty()}get resizeMode(){return this._resizeMode}set resizeMode(e){this._layoutType!==uxe.NONE&&(this._resizeMode=e,this._doLayoutDirty())}get cellSize(){return this._cellSize}set cellSize(e){this._cellSize!==e&&(this._cellSize.set(e),this._doLayoutDirty())}get startAxis(){return this._startAxis}set startAxis(e){this._startAxis!==e&&(this._startAxis=e,this._doLayoutDirty())}get paddingLeft(){return this._paddingLeft}set paddingLeft(e){this._paddingLeft!==e&&(this._paddingLeft=e,this._doLayoutDirty())}get paddingRight(){return this._paddingRight}set paddingRight(e){this._paddingRight!==e&&(this._paddingRight=e,this._doLayoutDirty())}get paddingTop(){return this._paddingTop}set paddingTop(e){this._paddingTop!==e&&(this._paddingTop=e,this._doLayoutDirty())}get paddingBottom(){return this._paddingBottom}set paddingBottom(e){this._paddingBottom!==e&&(this._paddingBottom=e,this._doLayoutDirty())}get spacingX(){return this._spacingX}set spacingX(e){this._spacingX!==e&&(this._spacingX=e,this._doLayoutDirty())}get spacingY(){return this._spacingY}set spacingY(e){this._spacingY!==e&&(this._spacingY=e,this._doLayoutDirty())}get verticalDirection(){return this._verticalDirection}set verticalDirection(e){this._verticalDirection!==e&&(this._verticalDirection=e,this._doLayoutDirty())}get horizontalDirection(){return this._horizontalDirection}set horizontalDirection(e){this._horizontalDirection!==e&&(this._horizontalDirection=e,this._doLayoutDirty())}get padding(){return this._paddingLeft}set padding(e){this.paddingLeft===e&&this._paddingRight===e&&this._paddingTop===e&&this._paddingBottom===e||(this._paddingLeft=this._paddingRight=this._paddingTop=this._paddingBottom=e,this._doLayoutDirty())}get constraint(){return this._constraint}set constraint(e){this._layoutType!==uxe.NONE&&this._constraint!==e&&(this._constraint=e,this._doLayoutDirty())}get constraintNum(){return this._constraintNum}set constraintNum(e){this._constraint!==mxe.NONE&&this._constraintNum!==e&&(e<=0&&S("Limit values to be greater than 0"),this._constraintNum=e,this._doLayoutDirty())}get affectedByScale(){return this._affectedByScale}set affectedByScale(e){this._affectedByScale=e,this._doLayoutDirty()}updateLayout(e=!1){(this._layoutDirty||e)&&this.node.children.length>0&&(this._doLayout(),this._layoutDirty=!1)}onEnable(){this._addEventListeners();const e=this.node._uiProps.uiTransformComp;e.contentSize.equals(kn.ZERO)&&e.setContentSize(this._layoutSize),this._childrenChanged()}onDisable(){this._usefulLayoutObj.length=0,this._removeEventListeners()}_checkUsefulObj(){this._usefulLayoutObj.length=0;const e=this.node.children;for(let t=0;t<e.length;++t){const n=e[t],i=n._uiProps.uiTransformComp;n.activeInHierarchy&&i&&this._usefulLayoutObj.push(i)}}_addEventListeners(){Sw.on(xw.EVENT_AFTER_UPDATE,this.updateLayout,this),this.node.on(Ex.SIZE_CHANGED,this._resized,this),this.node.on(Ex.ANCHOR_CHANGED,this._doLayoutDirty,this),this.node.on(Ex.CHILD_ADDED,this._childAdded,this),this.node.on(Ex.CHILD_REMOVED,this._childRemoved,this),this.node.on(Ex.SIBLING_ORDER_CHANGED,this._childrenChanged,this),this.node.on("childrenSiblingOrderChanged",this.updateLayout,this),this._addChildrenEventListeners()}_removeEventListeners(){Sw.off(xw.EVENT_AFTER_UPDATE,this.updateLayout,this),this.node.off(Ex.SIZE_CHANGED,this._resized,this),this.node.off(Ex.ANCHOR_CHANGED,this._doLayoutDirty,this),this.node.off(Ex.CHILD_ADDED,this._childAdded,this),this.node.off(Ex.CHILD_REMOVED,this._childRemoved,this),this.node.off(Ex.SIBLING_ORDER_CHANGED,this._childrenChanged,this),this.node.off("childrenSiblingOrderChanged",this.updateLayout,this),this._removeChildrenEventListeners()}_addChildrenEventListeners(){const e=this.node.children;for(let t=0;t<e.length;++t){const n=e[t];n.on(Ex.SIZE_CHANGED,this._doLayoutDirty,this),n.on(Ex.TRANSFORM_CHANGED,this._transformDirty,this),n.on(Ex.ANCHOR_CHANGED,this._doLayoutDirty,this),n.on(Ex.ACTIVE_IN_HIERARCHY_CHANGED,this._childrenChanged,this)}}_removeChildrenEventListeners(){const e=this.node.children;for(let t=0;t<e.length;++t){const n=e[t];n.off(Ex.SIZE_CHANGED,this._doLayoutDirty,this),n.off(Ex.TRANSFORM_CHANGED,this._transformDirty,this),n.off(Ex.ANCHOR_CHANGED,this._doLayoutDirty,this),n.off(Ex.ACTIVE_IN_HIERARCHY_CHANGED,this._childrenChanged,this)}}_childAdded(e){e.on(Ex.SIZE_CHANGED,this._doLayoutDirty,this),e.on(Ex.TRANSFORM_CHANGED,this._transformDirty,this),e.on(Ex.ANCHOR_CHANGED,this._doLayoutDirty,this),e.on(Ex.ACTIVE_IN_HIERARCHY_CHANGED,this._childrenChanged,this),this._childrenChanged()}_childRemoved(e){e.off(Ex.SIZE_CHANGED,this._doLayoutDirty,this),e.off(Ex.TRANSFORM_CHANGED,this._transformDirty,this),e.off(Ex.ANCHOR_CHANGED,this._doLayoutDirty,this),e.off(Ex.ACTIVE_IN_HIERARCHY_CHANGED,this._childrenChanged,this),this._childrenChanged()}_resized(){this._layoutSize.set(this.node._uiProps.uiTransformComp.contentSize),this._doLayoutDirty()}_doLayoutHorizontally(e,t,n,i){const s=this.node._uiProps.uiTransformComp.anchorPoint,o=this._getFixedBreakingNum();let r=1,a=this._paddingLeft;this._horizontalDirection===fxe.RIGHT_TO_LEFT&&(r=-1,a=this._paddingRight);const c=(this._horizontalDirection-s.x)*e+r*a;let l=c-r*this._spacingX,h=0,u=0,_=0,d=0,p=!1;const f=this._usefulLayoutObj.length;let m=this._cellSize.width;const g=this._getPaddingH();this._layoutType!==uxe.GRID&&this._resizeMode===_xe.CHILDREN&&(m=(e-g-(f-1)*this._spacingX)/f);const v=this._usefulLayoutObj;for(let a=0;a<v.length;++a){const f=v[a],y=f.node,x=y.scale,S=this._getUsedScaleValue(x.x),C=this._getUsedScaleValue(x.y);this._resizeMode===_xe.CHILDREN&&(f.width=m/S,this._layoutType===uxe.GRID&&(f.height=this._cellSize.height/C));const E=Math.abs(this._horizontalDirection-f.anchorX),T=f.width*S,b=f.height*C;b>_&&(d=Math.max(_,d),u=_||b,_=b),l+=r*(E*T+this._spacingX);const A=r*(1-E)*T;if(t){if(o>0)p=a/o>0&&a%o==0,p&&(u=_>b?_:u);else if(T>e-g)l>c+r*E*T&&(p=!0);else{const t=(1-this._horizontalDirection-s.x)*e,n=l+A+r*(r>0?this._paddingRight:this._paddingLeft);p=Math.abs(n)>Math.abs(t)}p&&(l=c+r*E*T,b!==_&&(u=_),h+=u+this._spacingY,u=_=b)}const P=n(y,f,h);i&&y.setPosition(l,P),l+=A}return u=Math.max(u,_),Math.max(d,h+u)+this._getPaddingV()}_doLayoutVertically(e,t,n,i){const s=this.node._uiProps.uiTransformComp.anchorPoint,o=this._getFixedBreakingNum();let r=1,a=this._paddingBottom;this._verticalDirection===pxe.TOP_TO_BOTTOM&&(r=-1,a=this._paddingTop);const c=(this._verticalDirection-s.y)*e+r*a;let l=c-r*this._spacingY,h=0,u=0,_=0,d=0,p=!1;const f=this._usefulLayoutObj.length;let m=this._cellSize.height;const g=this._getPaddingV();this._layoutType!==uxe.GRID&&this._resizeMode===_xe.CHILDREN&&(m=(e-g-(f-1)*this._spacingY)/f);const v=this._usefulLayoutObj;for(let a=0;a<v.length;++a){const f=v[a],y=f.node,x=y.scale,S=this._getUsedScaleValue(x.x),C=this._getUsedScaleValue(x.y);this._resizeMode===_xe.CHILDREN&&(f.height=m/C,this._layoutType===uxe.GRID&&(f.width=this._cellSize.width/S));const E=Math.abs(this._verticalDirection-f.anchorY),T=f.width*S,b=f.height*C;T>h&&(u=Math.max(h,u),_=h||T,h=T),l+=r*(E*b+this._spacingY);const A=r*(1-E)*b;if(t){if(o>0)p=a/o>0&&a%o==0,p&&(_=h>b?h:_);else if(b>e-g)l>c+r*E*b&&(p=!0);else{const t=(1-this._verticalDirection-s.y)*e,n=l+A+r*(r>0?this._paddingTop:this._paddingBottom);p=Math.abs(n)>Math.abs(t)}p&&(l=c+r*E*b,T!==h&&(_=h),d+=_+this._spacingX,_=h=T)}const P=n(y,f,d);i&&(y.getPosition(gxe),y.setPosition(P,l,gxe.z)),l+=A}return _=Math.max(_,h),Math.max(u,d+_)+this._getPaddingH()}_doLayoutGridAxisHorizontal(e,t){const n=t.width;let i=1,s=-e.y*t.height,o=this._paddingBottom;this._verticalDirection===pxe.TOP_TO_BOTTOM&&(i=-1,s=(1-e.y)*t.height,o=this._paddingTop);const r=(e,t,n)=>s+i*(n+(1-t.anchorY)*t.height*this._getUsedScaleValue(e.scale.y)+o);let a=0;this._resizeMode===_xe.CONTAINER&&(a=this._doLayoutHorizontally(n,!0,r,!1),s=-e.y*a,this._verticalDirection===pxe.TOP_TO_BOTTOM&&(i=-1,s=(1-e.y)*a)),this._doLayoutHorizontally(n,!0,r,!0),this._resizeMode===_xe.CONTAINER&&this.node._uiProps.uiTransformComp.setContentSize(n,a)}_doLayoutGridAxisVertical(e,t){const n=t.height;let i=1,s=-e.x*t.width,o=this._paddingLeft;this._horizontalDirection===fxe.RIGHT_TO_LEFT&&(i=-1,s=(1-e.x)*t.width,o=this._paddingRight);const r=(e,t,n)=>s+i*(n+(1-t.anchorX)*t.width*this._getUsedScaleValue(e.scale.x)+o);let a=0;this._resizeMode===_xe.CONTAINER&&(a=this._doLayoutVertically(n,!0,r,!1),s=-e.x*a,this._horizontalDirection===fxe.RIGHT_TO_LEFT&&(i=-1,s=(1-e.x)*a)),this._doLayoutVertically(n,!0,r,!0),this._resizeMode===_xe.CONTAINER&&this.node._uiProps.uiTransformComp.setContentSize(a,n)}_doLayoutGrid(){const e=this.node._uiProps.uiTransformComp,t=e.anchorPoint,n=e.contentSize;this.startAxis===dxe.HORIZONTAL?this._doLayoutGridAxisHorizontal(t,n):this.startAxis===dxe.VERTICAL&&this._doLayoutGridAxisVertical(t,n)}_getHorizontalBaseWidth(e=!0){const t=this._usefulLayoutObj;let n=0;const i=t.length;if(this._resizeMode===_xe.CONTAINER){for(let e=0;e<t.length;++e){const i=t[e],s=i.node.scale;n+=i.width*this._getUsedScaleValue(s.x)}n+=(i-1)*this._spacingX+this._getPaddingH()}else n=this.node._uiProps.uiTransformComp.width;return n}_getVerticalBaseHeight(){const e=this._usefulLayoutObj;let t=0;const n=e.length;if(this._resizeMode===_xe.CONTAINER){for(let n=0;n<e.length;++n){const i=e[n],s=i.node.scale;t+=i.height*this._getUsedScaleValue(s.y)}t+=(n-1)*this._spacingY+this._getPaddingV()}else t=this.node._uiProps.uiTransformComp.height;return t}_doLayout(){if(this._init&&!this._childrenDirty||(this._checkUsefulObj(),this._init=!0,this._childrenDirty=!1),this._layoutType===uxe.HORIZONTAL){const e=this._getHorizontalBaseWidth(),t=e=>(this._isAlign?gn.ZERO:e.position).y;this._doLayoutHorizontally(e,!1,t,!0),this.node._uiProps.uiTransformComp.width=e}else if(this._layoutType===uxe.VERTICAL){const e=this._getVerticalBaseHeight(),t=e=>(this._isAlign?gn.ZERO:e.position).x;this._doLayoutVertically(e,!1,t,!0),this.node._uiProps.uiTransformComp.height=e}else this._layoutType===uxe.GRID&&this._doLayoutGrid()}_getUsedScaleValue(e){return this._affectedByScale?Math.abs(e):1}_transformDirty(e){e&Iv.SCALE&&e&Iv.POSITION&&this._affectedByScale&&this._doLayoutDirty()}_doLayoutDirty(){this._layoutDirty=!0}_childrenChanged(){this._childrenDirty=!0,this._doLayoutDirty()}_getPaddingH(){return this._paddingLeft+this._paddingRight}_getPaddingV(){return this._paddingTop+this._paddingBottom}_getFixedBreakingNum(){if(this._layoutType!==uxe.GRID||this._constraint===mxe.NONE||this._constraintNum<=0)return 0;let e=this._constraint===mxe.FIXED_ROW?Math.ceil(this._usefulLayoutObj.length/this._constraintNum):this._constraintNum;return this._startAxis===dxe.VERTICAL&&(e=this._constraint===mxe.FIXED_COL?Math.ceil(this._usefulLayoutObj.length/this._constraintNum):this._constraintNum),e}},lxe.Type=uxe,lxe.VerticalDirection=pxe,lxe.HorizontalDirection=fxe,lxe.ResizeMode=_xe,lxe.AxisDirection=dxe,lxe.Constraint=mxe,ac((qye=hxe).prototype,"alignHorizontal",[fye,mye],Object.getOwnPropertyDescriptor(qye.prototype,"alignHorizontal"),qye.prototype),ac(qye.prototype,"alignVertical",[gye,vye],Object.getOwnPropertyDescriptor(qye.prototype,"alignVertical"),qye.prototype),ac(qye.prototype,"type",[yye,xye,Sye],Object.getOwnPropertyDescriptor(qye.prototype,"type"),qye.prototype),ac(qye.prototype,"resizeMode",[Cye,Eye,Tye],Object.getOwnPropertyDescriptor(qye.prototype,"resizeMode"),qye.prototype),ac(qye.prototype,"cellSize",[bye,Aye],Object.getOwnPropertyDescriptor(qye.prototype,"cellSize"),qye.prototype),ac(qye.prototype,"startAxis",[Pye,wye],Object.getOwnPropertyDescriptor(qye.prototype,"startAxis"),qye.prototype),ac(qye.prototype,"paddingLeft",[Iye],Object.getOwnPropertyDescriptor(qye.prototype,"paddingLeft"),qye.prototype),ac(qye.prototype,"paddingRight",[Rye],Object.getOwnPropertyDescriptor(qye.prototype,"paddingRight"),qye.prototype),ac(qye.prototype,"paddingTop",[Dye],Object.getOwnPropertyDescriptor(qye.prototype,"paddingTop"),qye.prototype),ac(qye.prototype,"paddingBottom",[Oye],Object.getOwnPropertyDescriptor(qye.prototype,"paddingBottom"),qye.prototype),ac(qye.prototype,"spacingX",[Nye],Object.getOwnPropertyDescriptor(qye.prototype,"spacingX"),qye.prototype),ac(qye.prototype,"spacingY",[Mye],Object.getOwnPropertyDescriptor(qye.prototype,"spacingY"),qye.prototype),ac(qye.prototype,"verticalDirection",[Lye,Bye],Object.getOwnPropertyDescriptor(qye.prototype,"verticalDirection"),qye.prototype),ac(qye.prototype,"horizontalDirection",[Fye,zye],Object.getOwnPropertyDescriptor(qye.prototype,"horizontalDirection"),qye.prototype),ac(qye.prototype,"constraint",[Uye,Gye,Vye],Object.getOwnPropertyDescriptor(qye.prototype,"constraint"),qye.prototype),ac(qye.prototype,"constraintNum",[Hye,kye],Object.getOwnPropertyDescriptor(qye.prototype,"constraintNum"),qye.prototype),ac(qye.prototype,"affectedByScale",[jye],Object.getOwnPropertyDescriptor(qye.prototype,"affectedByScale"),qye.prototype),Xye=ac(qye.prototype,"_resizeMode",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return _xe.NONE}}),Yye=ac(qye.prototype,"_layoutType",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return uxe.NONE}}),Kye=ac(qye.prototype,"_cellSize",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new kn(40,40)}}),$ye=ac(qye.prototype,"_startAxis",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return dxe.HORIZONTAL}}),Qye=ac(qye.prototype,"_paddingLeft",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Jye=ac(qye.prototype,"_paddingRight",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Zye=ac(qye.prototype,"_paddingTop",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),exe=ac(qye.prototype,"_paddingBottom",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),txe=ac(qye.prototype,"_spacingX",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),nxe=ac(qye.prototype,"_spacingY",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ixe=ac(qye.prototype,"_verticalDirection",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return pxe.TOP_TO_BOTTOM}}),sxe=ac(qye.prototype,"_horizontalDirection",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return fxe.LEFT_TO_RIGHT}}),oxe=ac(qye.prototype,"_constraint",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return mxe.NONE}}),rxe=ac(qye.prototype,"_constraintNum",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 2}}),axe=ac(qye.prototype,"_affectedByScale",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),cxe=ac(qye.prototype,"_isAlign",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Wye=qye))||Wye)||Wye)||Wye)||Wye)||Wye)||Wye));var yxe,xxe,Sxe,Cxe,Exe,Txe,bxe,Axe,Pxe,wxe,Ixe,Rxe,Dxe,Oxe,Nxe,Mxe,Lxe,Bxe,Fxe,zxe,Uxe,Gxe,Vxe;u.Layout=vxe,function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL",e[e.FILLED=2]="FILLED"}(Vxe||(Vxe={})),qe(Vxe);let Hxe=function(t){return e({ProgressBar:t,ProgressBarComponent:t}),t}((yxe=mc("cc.ProgressBar"),xxe=Mc(),Sxe=vc(110),Cxe=Rc(),Exe=gc(PN),Txe=Zc(kF),bxe=Uc(),Axe=Zc(Vxe),Pxe=Uc(),wxe=Uc(),Ixe=Gc(),Rxe=Uc(),Dxe=Uc(),yxe(Oxe=xxe(Oxe=Sxe(Oxe=Cxe(Oxe=Exe((Gxe=Uxe=class extends Gh{constructor(...e){super(...e),rc(this,"_barSprite",Mxe,this),rc(this,"_mode",Lxe,this),rc(this,"_totalLength",Bxe,this),rc(this,"_progress",Fxe,this),rc(this,"_reverse",zxe,this)}get barSprite(){return this._barSprite}set barSprite(e){this._barSprite!==e&&(this._barSprite=e,this._initBarSprite())}get mode(){return this._mode}set mode(e){if(this._mode!==e&&(this._mode=e,this._barSprite)){const e=this._barSprite.node;if(!e)return;const t=e._uiProps.uiTransformComp.contentSize;this._mode===Vxe.HORIZONTAL?this.totalLength=t.width:this._mode===Vxe.VERTICAL?this.totalLength=t.height:this._mode===Vxe.FILLED&&(this.totalLength=this._barSprite.fillRange)}}get totalLength(){return this._totalLength}set totalLength(e){this._mode===Vxe.FILLED&&(e=Yt(e)),this._totalLength!==e&&(this._totalLength=e,this._updateBarStatus())}get progress(){return this._progress}set progress(e){this._progress!==e&&(this._progress=e,this._updateBarStatus())}get reverse(){return this._reverse}set reverse(e){this._reverse!==e&&(this._reverse=e,this._barSprite&&(this._barSprite.fillStart=1-this._barSprite.fillStart),this._updateBarStatus())}_initBarSprite(){if(this._barSprite){const e=this._barSprite.node;if(!e)return;const t=this.node._uiProps.uiTransformComp,n=t.contentSize,i=t.anchorPoint,s=e._uiProps.uiTransformComp.contentSize;if(this._barSprite.fillType===kF.FillType.RADIAL&&(this._mode=Vxe.FILLED),this._mode===Vxe.HORIZONTAL?this.totalLength=s.width:this._mode===Vxe.VERTICAL?this.totalLength=s.height:this.totalLength=this._barSprite.fillRange,e.parent===this.node){const t=-n.width*i.x;e.setPosition(t,0,0)}}}_updateBarStatus(){if(this._barSprite){const e=this._barSprite.node;if(!e)return;const t=e._uiProps.uiTransformComp,n=t.anchorPoint,i=t.contentSize,s=e.getPosition();let o=new Bn(0,.5);const r=Yt(this._progress);let a=this._totalLength*r,c=i,l=0,h=0;switch(this._mode){case Vxe.HORIZONTAL:this._reverse&&(o=new Bn(1,.5)),c=new kn(a,i.height),l=this._totalLength,h=i.height;break;case Vxe.VERTICAL:o=this._reverse?new Bn(.5,1):new Bn(.5,0),c=new kn(i.width,a),l=i.width,h=this._totalLength}if(this._mode===Vxe.FILLED)this._barSprite.type!==kF.Type.FILLED?S("ProgressBar FILLED mode only works when barSprite's Type is FILLED!"):(this._reverse&&(a*=-1),this._barSprite.fillRange=a);else if(this._barSprite.type!==kF.Type.FILLED){const i=o.x-n.x,r=o.y-n.y,a=new gn(l*i,h*r,0);e.setPosition(s.x+a.x,s.y+a.y,s.z),t.setAnchorPoint(o),t.setContentSize(c)}else S("ProgressBar non-FILLED mode only works when barSprite's Type is non-FILLED!")}}},Uxe.Mode=Vxe,ac((Nxe=Gxe).prototype,"barSprite",[Txe,bxe],Object.getOwnPropertyDescriptor(Nxe.prototype,"barSprite"),Nxe.prototype),ac(Nxe.prototype,"mode",[Axe,Pxe],Object.getOwnPropertyDescriptor(Nxe.prototype,"mode"),Nxe.prototype),ac(Nxe.prototype,"totalLength",[wxe],Object.getOwnPropertyDescriptor(Nxe.prototype,"totalLength"),Nxe.prototype),ac(Nxe.prototype,"progress",[Ixe,jc,Rxe],Object.getOwnPropertyDescriptor(Nxe.prototype,"progress"),Nxe.prototype),ac(Nxe.prototype,"reverse",[Dxe],Object.getOwnPropertyDescriptor(Nxe.prototype,"reverse"),Nxe.prototype),Mxe=ac(Nxe.prototype,"_barSprite",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Lxe=ac(Nxe.prototype,"_mode",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Vxe.HORIZONTAL}}),Bxe=ac(Nxe.prototype,"_totalLength",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),Fxe=ac(Nxe.prototype,"_progress",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),zxe=ac(Nxe.prototype,"_reverse",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Oxe=Nxe))||Oxe)||Oxe)||Oxe)||Oxe)||Oxe));var kxe,jxe,Wxe,qxe,Xxe,Yxe,Kxe,$xe,Qxe,Jxe,Zxe,eSe,tSe,nSe,iSe,sSe,oSe,rSe,aSe,cSe,lSe,hSe,uSe,_Se;u.ProgressBar=Hxe;const dSe=new gn,pSe=new gn,fSe=new gn,mSe=new Bn,gSe=new dn,vSe=new Bn;var ySe;!function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL"}(ySe||(ySe={})),Ke(ySe);let xSe=function(t){return e({ScrollBar:t,ScrollBarComponent:t}),t}((kxe=mc("cc.ScrollBar"),jxe=Mc(),Wxe=vc(110),qxe=Rc(),Xxe=gc(PN),Yxe=Zc(kF),Kxe=Wc(),$xe=Uc(),Qxe=Zc(ySe),Jxe=Wc(),Zxe=Uc(),eSe=Wc(),tSe=Uc(),nSe=Wc(),iSe=Uc(),kxe(sSe=jxe(sSe=Wxe(sSe=qxe(sSe=Xxe((_Se=uSe=class extends Gh{constructor(...e){super(...e),rc(this,"_scrollView",rSe,this),rc(this,"_handle",aSe,this),rc(this,"_direction",cSe,this),rc(this,"_enableAutoHide",lSe,this),rc(this,"_autoHideTime",hSe,this),this._touching=!1,this._opacity=255,this._autoHideRemainingTime=0}get handle(){return this._handle}set handle(e){this._handle!==e&&(this._handle=e,this.onScroll(Bn.ZERO))}get direction(){return this._direction}set direction(e){this._direction!==e&&(this._direction=e,this.onScroll(Bn.ZERO))}get enableAutoHide(){return this._enableAutoHide}set enableAutoHide(e){this._enableAutoHide!==e&&(this._enableAutoHide=e,this._enableAutoHide&&this._setOpacity(0))}get autoHideTime(){return this._autoHideTime}set autoHideTime(e){this._autoHideTime!==e&&(this._autoHideTime=e)}hide(){this._autoHideRemainingTime=0,this._setOpacity(0)}show(){this._autoHideRemainingTime=this._autoHideTime,this._setOpacity(this._opacity)}onScroll(e){if(!this._scrollView)return;const t=this._scrollView.content;if(!t)return;const n=t._uiProps.uiTransformComp.contentSize,i=this._scrollView.node._uiProps.uiTransformComp.contentSize,s=this.node._uiProps.uiTransformComp.contentSize;if(this._conditionalDisableScrollBar(n,i))return;this._enableAutoHide&&(this._autoHideRemainingTime=this._autoHideTime,this._setOpacity(this._opacity));let o=0,r=0,a=0,c=0,l=0;const h=vSe;h.set(0,0),this._direction===ySe.HORIZONTAL?(o=n.width,r=i.width,l=s.width,a=e.x,this._convertToScrollViewSpace(h,t),c=-h.x):this._direction===ySe.VERTICAL&&(o=n.height,r=i.height,l=s.height,a=e.y,this._convertToScrollViewSpace(h,t),c=-h.y);const u=this._calculateLength(o,r,l,a),_=vSe;this._calculatePosition(_,o,r,l,c,a,u),this._updateLength(u),this._updateHandlerPosition(_)}setScrollView(e){this._scrollView=e}onTouchBegan(){this._enableAutoHide&&(this._touching=!0)}onTouchEnded(){if(this._enableAutoHide&&(this._touching=!1,!(this._autoHideTime<=0))){if(this._scrollView){const e=this._scrollView.content;if(e){const t=e._uiProps.uiTransformComp.contentSize,n=this._scrollView.node._uiProps.uiTransformComp.contentSize;if(this._conditionalDisableScrollBar(t,n))return}}this._autoHideRemainingTime=this._autoHideTime}}onEnable(){const e=this.node.getComponent(kF);e&&(this._opacity=e.color.a)}start(){this._enableAutoHide&&this._setOpacity(0)}update(e){this._processAutoHide(e)}_convertToScrollViewSpace(e,t){const n=this._scrollView&&this._scrollView.node._uiProps.uiTransformComp,i=t._uiProps.uiTransformComp;if(n&&i){dSe.set(-i.anchorX*i.width,-i.anchorY*i.height,0),i.convertToWorldSpaceAR(dSe,pSe);const t=n.convertToNodeSpaceAR(pSe);t.x+=n.anchorX*n.width,t.y+=n.anchorY*n.height,e.set(t.x,t.y)}else e.set(Bn.ZERO)}_setOpacity(e){if(this._handle){let t=this.node.getComponent(kF);t&&(gSe.set(t.color),gSe.a=e,t.color=gSe),t=this._handle.getComponent(kF),t&&(gSe.set(t.color),gSe.a=e,t.color=gSe)}}_updateHandlerPosition(e){if(this._handle){const t=fSe;this._fixupHandlerPosition(t),this._handle.node.setPosition(e.x+t.x,e.y+t.y,t.z)}}_fixupHandlerPosition(e){const t=this.node._uiProps.uiTransformComp,n=t.contentSize,i=t.anchorPoint,s=this.handle.node._uiProps.uiTransformComp.contentSize,o=this.handle.node.parent;gn.set(dSe,-n.width*i.x,-n.height*i.y,0);const r=this.node._uiProps.uiTransformComp.convertToWorldSpaceAR(dSe,pSe),a=e;a.set(0,0,0),o._uiProps.uiTransformComp.convertToNodeSpaceAR(r,a),this.direction===ySe.HORIZONTAL?a.set(a.x,a.y+(n.height-s.height)/2,a.z):this.direction===ySe.VERTICAL&&a.set(a.x+(n.width-s.width)/2,a.y,a.z),this.handle.node.setPosition(a)}_conditionalDisableScrollBar(e,t){return e.width<=t.width&&this._direction===ySe.HORIZONTAL||e.height<=t.height&&this._direction===ySe.VERTICAL}_calculateLength(e,t,n,i){let s=e;return i&&(s+=20*(i>0?i:-i)),n*(t/s)}_calculatePosition(e,t,n,i,s,o,r){let a=t-n;o&&(a+=Math.abs(o));let c=0;a&&(c=s/a,c=Yt(c));const l=(i-r)*c;this._direction===ySe.VERTICAL?e.set(0,l):e.set(l,0)}_updateLength(e){if(this._handle){const t=this._handle.node._uiProps.uiTransformComp,n=t.contentSize,i=t.anchorPoint;i.x===mSe.x&&i.y===mSe.y||t.setAnchorPoint(mSe),this._direction===ySe.HORIZONTAL?t.setContentSize(e,n.height):t.setContentSize(n.width,e)}}_processAutoHide(e){if(this._enableAutoHide&&!(this._autoHideRemainingTime<=0)&&!this._touching&&(this._autoHideRemainingTime-=e,this._autoHideRemainingTime<=this._autoHideTime)){this._autoHideRemainingTime=Math.max(0,this._autoHideRemainingTime);const e=this._opacity*(this._autoHideRemainingTime/this._autoHideTime);this._setOpacity(e)}}},uSe.Direction=ySe,ac((oSe=_Se).prototype,"handle",[Yxe,Kxe,$xe],Object.getOwnPropertyDescriptor(oSe.prototype,"handle"),oSe.prototype),ac(oSe.prototype,"direction",[Qxe,Jxe,Zxe],Object.getOwnPropertyDescriptor(oSe.prototype,"direction"),oSe.prototype),ac(oSe.prototype,"enableAutoHide",[eSe,tSe],Object.getOwnPropertyDescriptor(oSe.prototype,"enableAutoHide"),oSe.prototype),ac(oSe.prototype,"autoHideTime",[nSe,iSe],Object.getOwnPropertyDescriptor(oSe.prototype,"autoHideTime"),oSe.prototype),rSe=ac(oSe.prototype,"_scrollView",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),aSe=ac(oSe.prototype,"_handle",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),cSe=ac(oSe.prototype,"_direction",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return ySe.HORIZONTAL}}),lSe=ac(oSe.prototype,"_enableAutoHide",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),hSe=ac(oSe.prototype,"_autoHideTime",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),sSe=oSe))||sSe)||sSe)||sSe)||sSe)||sSe));var SSe;u.ScrollBar=xSe;let CSe=e("ViewGroup",mc("cc.ViewGroup")(SSe=vc(110)(SSe=class extends Gh{})||SSe)||SSe);var ESe,TSe,bSe,ASe,PSe,wSe,ISe,RSe,DSe,OSe,NSe,MSe,LSe,BSe,FSe,zSe,USe,GSe,VSe,HSe,kSe,jSe,WSe,qSe,XSe,YSe,KSe,$Se,QSe,JSe,ZSe,eCe,tCe,nCe,iCe,sCe,oCe,rCe,aCe,cCe,lCe,hCe,uCe,_Ce,dCe,pCe,fCe,mCe;u.ViewGroup=CSe;const gCe=1e-4,vCe=new gn,yCe=new gn,xCe=new Bn,SCe=new Bn,CCe=()=>(new Date).getMilliseconds(),ECe={"scroll-to-top":0,"scroll-to-bottom":1,"scroll-to-left":2,"scroll-to-right":3,scrolling:4,"bounce-bottom":6,"bounce-left":7,"bounce-right":8,"bounce-top":5,"scroll-ended":9,"touch-up":10,"scroll-ended-with-threshold":11,"scroll-began":12};let TCe;!function(e){e.SCROLL_TO_TOP="scroll-to-top",e.SCROLL_TO_BOTTOM="scroll-to-bottom",e.SCROLL_TO_LEFT="scroll-to-left",e.SCROLL_TO_RIGHT="scroll-to-right",e.SCROLL_BEGAN="scroll-began",e.SCROLL_ENDED="scroll-ended",e.BOUNCE_TOP="bounce-top",e.BOUNCE_BOTTOM="bounce-bottom",e.BOUNCE_LEFT="bounce-left",e.BOUNCE_RIGHT="bounce-right",e.SCROLLING="scrolling",e.SCROLL_ENG_WITH_THRESHOLD="scroll-ended-with-threshold",e.TOUCH_UP="touch-up"}(TCe||(TCe={}));let bCe=function(t){return e({ScrollView:t,ScrollViewComponent:t}),t}((ESe=mc("cc.ScrollView"),TSe=Mc(),bSe=vc(110),ASe=Rc(),PSe=gc(PN),wSe=Gc(),ISe=Wc(),RSe=Uc(),DSe=Gc(),OSe=Wc(),NSe=Uc(),MSe=Wc(),LSe=Uc(),BSe=Wc(),FSe=Uc(),zSe=Zc(lS),USe=Wc(),GSe=Uc(),VSe=Wc(),HSe=Uc(),kSe=Zc(xSe),jSe=Wc(),WSe=Uc(),qSe=Wc(),XSe=Uc(),YSe=Zc(xSe),KSe=Wc(),$Se=Uc(),QSe=Wc(),JSe=Uc(),ZSe=Zc([tR]),eCe=Wc(),tCe=Uc(),ESe(nCe=TSe(nCe=bSe(nCe=ASe(nCe=PSe((mCe=fCe=class extends CSe{constructor(...e){super(...e),rc(this,"bounceDuration",sCe,this),rc(this,"brake",oCe,this),rc(this,"elastic",rCe,this),rc(this,"inertia",aCe,this),rc(this,"horizontal",cCe,this),rc(this,"vertical",lCe,this),rc(this,"cancelInnerEvents",hCe,this),rc(this,"scrollEvents",uCe,this),this._autoScrolling=!1,this._scrolling=!1,rc(this,"_content",_Ce,this),rc(this,"_horizontalScrollBar",dCe,this),rc(this,"_verticalScrollBar",pCe,this),this._topBoundary=0,this._bottomBoundary=0,this._leftBoundary=0,this._rightBoundary=0,this._touchMoveDisplacements=[],this._touchMoveTimeDeltas=[],this._touchMovePreviousTimestamp=0,this._touchMoved=!1,this._autoScrollAttenuate=!1,this._autoScrollStartPosition=new gn,this._autoScrollTargetDelta=new gn,this._autoScrollTotalTime=0,this._autoScrollAccumulatedTime=0,this._autoScrollCurrentlyOutOfBoundary=!1,this._autoScrollBraking=!1,this._autoScrollBrakingStartPosition=new gn,this._outOfBoundaryAmount=new gn,this._outOfBoundaryAmountDirty=!0,this._stopMouseWheel=!1,this._mouseWheelEventElapsedTime=0,this._isScrollEndedWithThresholdEventFired=!1,this._scrollEventEmitMask=0,this._isBouncing=!1,this._contentPos=new gn,this._deltaPos=new gn}get content(){return this._content}set content(e){if(this._content===e)return;const t=e&&e.parent&&e.parent._uiProps.uiTransformComp;!e||e&&t?(this._content=e,this._calculateBoundary()):I(4302)}get horizontalScrollBar(){return this._horizontalScrollBar}set horizontalScrollBar(e){this._horizontalScrollBar!==e&&(this._horizontalScrollBar=e,this._horizontalScrollBar&&(this._horizontalScrollBar.setScrollView(this),this._updateScrollBar(Bn.ZERO)))}get verticalScrollBar(){return this._verticalScrollBar}set verticalScrollBar(e){this._verticalScrollBar!==e&&(this._verticalScrollBar=e,this._verticalScrollBar&&(this._verticalScrollBar.setScrollView(this),this._updateScrollBar(Bn.ZERO)))}get view(){const e=this._content&&this._content.parent;return e?e._uiProps.uiTransformComp:null}scrollToBottom(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new Bn(0,0),applyToHorizontal:!1,applyToVertical:!0});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n,!0)}scrollToTop(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new Bn(0,1),applyToHorizontal:!1,applyToVertical:!0});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n)}scrollToLeft(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new Bn(0,0),applyToHorizontal:!0,applyToVertical:!1});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n)}scrollToRight(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new Bn(1,0),applyToHorizontal:!0,applyToVertical:!1});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n)}scrollToTopLeft(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new Bn(0,1),applyToHorizontal:!0,applyToVertical:!0});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n)}scrollToTopRight(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new Bn(1,1),applyToHorizontal:!0,applyToVertical:!0});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n)}scrollToBottomLeft(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new Bn(0,0),applyToHorizontal:!0,applyToVertical:!0});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n)}scrollToBottomRight(e,t=!0){const n=this._calculateMovePercentDelta({anchor:new Bn(1,0),applyToHorizontal:!0,applyToVertical:!0});e?this._startAutoScroll(n,e,!1!==t):this._moveContent(n)}scrollToOffset(e,t,n=!0){const i=this.getMaxScrollOffset(),s=new Bn(0,0);0===i.x?s.x=0:s.x=e.x/i.x,0===i.y?s.y=1:s.y=(i.y-e.y)/i.y,this.scrollTo(s,t,n)}getScrollOffset(){const e=this._getContentTopBoundary()-this._topBoundary,t=this._getContentLeftBoundary()-this._leftBoundary;return new Bn(t,e)}getMaxScrollOffset(){if(!this._content||!this.view)return Bn.ZERO;const e=this._content._uiProps.uiTransformComp.contentSize;let t=e.width-this.view.width,n=e.height-this.view.height;return t=t>=0?t:0,n=n>=0?n:0,new Bn(t,n)}scrollToPercentHorizontal(e,t,n){const i=this._calculateMovePercentDelta({anchor:new Bn(e,0),applyToHorizontal:!0,applyToVertical:!1});t?this._startAutoScroll(i,t,!1!==n):this._moveContent(i)}scrollTo(e,t,n){const i=this._calculateMovePercentDelta({anchor:new Bn(e),applyToHorizontal:!0,applyToVertical:!0});t?this._startAutoScroll(i,t,n):this._moveContent(i)}scrollToPercentVertical(e,t,n){const i=this._calculateMovePercentDelta({anchor:new Bn(0,e),applyToHorizontal:!1,applyToVertical:!0});t?this._startAutoScroll(i,t,n):this._moveContent(i)}stopAutoScroll(){this._autoScrolling=!1,this._autoScrollAccumulatedTime=this._autoScrollTotalTime}setContentPosition(e){this._setContentPosition(e)}_setContentPosition(e){if(!this._content)return;const t=this._getContentPosition();Math.abs(e.x-t.x)<gCe&&Math.abs(e.y-t.y)<gCe||(this._content.setPosition(e),this._outOfBoundaryAmountDirty=!0)}getContentPosition(){return this._getContentPosition()}_getContentPosition(){return this._content?(this._contentPos.set(this._content.position),this._contentPos):gn.ZERO.clone()}isScrolling(){return this._scrolling}isAutoScrolling(){return this._autoScrolling}getScrollEndedEventTiming(){return gCe}start(){this._calculateBoundary(),this._content&&Sw.once(xw.EVENT_BEFORE_DRAW,this._adjustContentOutOfBoundary,this)}onEnable(){this._registerEvent(),this._content&&(this._content.on(Ex.SIZE_CHANGED,this._calculateBoundary,this),this._content.on(Ex.TRANSFORM_CHANGED,this._scaleChanged,this),this.view&&(this.view.node.on(Ex.TRANSFORM_CHANGED,this._scaleChanged,this),this.view.node.on(Ex.SIZE_CHANGED,this._calculateBoundary,this))),this._calculateBoundary(),this._updateScrollBarState()}update(e){this._autoScrolling&&this._processAutoScrolling(e)}onDisable(){this._unregisterEvent(),this._content&&(this._content.off(Ex.SIZE_CHANGED,this._calculateBoundary,this),this._content.off(Ex.TRANSFORM_CHANGED,this._scaleChanged,this),this.view&&(this.view.node.off(Ex.TRANSFORM_CHANGED,this._scaleChanged,this),this.view.node.off(Ex.SIZE_CHANGED,this._calculateBoundary,this))),this._hideScrollBar(),this.stopAutoScroll()}_registerEvent(){this.node.on(Ex.TOUCH_START,this._onTouchBegan,this,!0),this.node.on(Ex.TOUCH_MOVE,this._onTouchMoved,this,!0),this.node.on(Ex.TOUCH_END,this._onTouchEnded,this,!0),this.node.on(Ex.TOUCH_CANCEL,this._onTouchCancelled,this,!0),this.node.on(Ex.MOUSE_WHEEL,this._onMouseWheel,this,!0)}_unregisterEvent(){this.node.off(Ex.TOUCH_START,this._onTouchBegan,this,!0),this.node.off(Ex.TOUCH_MOVE,this._onTouchMoved,this,!0),this.node.off(Ex.TOUCH_END,this._onTouchEnded,this,!0),this.node.off(Ex.TOUCH_CANCEL,this._onTouchCancelled,this,!0),this.node.off(Ex.MOUSE_WHEEL,this._onMouseWheel,this,!0)}_onMouseWheel(e,t){if(!this.enabledInHierarchy)return;if(this._hasNestedViewGroup(e,t))return;const n=new gn,i=e.getScrollY();this.vertical?n.set(0,-.1*i,0):this.horizontal&&n.set(-.1*i,0,0),this._mouseWheelEventElapsedTime=0,this._processDeltaMove(n),this._stopMouseWheel||(this._handlePressLogic(),this.schedule(this._checkMouseWheel,1/60,NaN,0),this._stopMouseWheel=!0),this._stopPropagationIfTargetIsMe(e)}_onTouchBegan(e,t){this.enabledInHierarchy&&this._content&&(this._hasNestedViewGroup(e,t)||(this._handlePressLogic(),this._touchMoved=!1,this._stopPropagationIfTargetIsMe(e)))}_onTouchMoved(e,t){if(!this.enabledInHierarchy||!this._content)return;if(this._hasNestedViewGroup(e,t))return;const n=e.touch;if(this._handleMoveLogic(n),!this.cancelInnerEvents)return;const i=n.getUILocation(xCe);if(i.subtract(n.getUIStartLocation(SCe)),i.length()>7&&!this._touchMoved&&e.target!==this.node){const t=new AA(e.getTouches(),e.bubbles,xE.TOUCH_CANCEL);t.touch=e.touch,t.simulate=!0,e.target.dispatchEvent(t),this._touchMoved=!0}this._stopPropagationIfTargetIsMe(e)}_onTouchEnded(e,t){if(!this.enabledInHierarchy||!this._content||!e)return;if(this._hasNestedViewGroup(e,t))return;this._dispatchEvent(TCe.TOUCH_UP);const n=e.touch;this._handleReleaseLogic(n),this._touchMoved?e.propagationStopped=!0:this._stopPropagationIfTargetIsMe(e)}_onTouchCancelled(e,t){if(this.enabledInHierarchy&&this._content&&!this._hasNestedViewGroup(e,t)){if(e&&!e.simulate){const t=e.touch;this._handleReleaseLogic(t)}this._stopPropagationIfTargetIsMe(e)}}_calculateBoundary(){if(this._content&&this.view){const e=this._content.getComponent(vxe);e&&e.enabledInHierarchy&&e.updateLayout();const t=this.view,n=t.width*t.anchorX,i=t.height*t.anchorY;this._leftBoundary=-n,this._bottomBoundary=-i,this._rightBoundary=this._leftBoundary+t.width,this._topBoundary=this._bottomBoundary+t.height,this._moveContentToTopLeft(t.contentSize)}}_hasNestedViewGroup(e,t){if(!e||e.eventPhase!==SA.CAPTURING_PHASE)return!1;if(t)for(const n of t){const t=n;if(this.node===t)return!(!e.target||!e.target.getComponent(CSe));if(t.getComponent(CSe))return!0}return!1}_startInertiaScroll(e){const t=new gn(e);t.multiplyScalar(.7),this._startAttenuatingAutoScroll(t,e)}_calculateAttenuatedFactor(e){return this.brake<=0?1-this.brake:(1-this.brake)*(1/(1+14e-6*e+e*e*8e-9))}_startAttenuatingAutoScroll(e,t){const n=e.clone();if(n.normalize(),this._content&&this.view){const e=this._content._uiProps.uiTransformComp.contentSize,t=this.view.contentSize,i=e.width-t.width,s=e.height-t.height,o=this._calculateAttenuatedFactor(i),r=this._calculateAttenuatedFactor(s);n.x=n.x*i*(1-this.brake)*o,n.y=n.y*s*r*(1-this.brake),n.z=0}const i=e.length();let s=n.length()/i;if(n.add(e),this.brake>0&&s>7){s=Math.sqrt(s);const t=e.clone();t.multiplyScalar(s),n.set(t),n.add(e)}let o=this._calculateAutoScrollTimeByInitialSpeed(t.length());this.brake>0&&s>3&&(s=3,o*=s),0===this.brake&&s>1&&(o*=s),this._startAutoScroll(n,o,!0)}_calculateAutoScrollTimeByInitialSpeed(e){return Math.sqrt(Math.sqrt(e/5))}_startAutoScroll(e,t,n=!1){const i=this._flattenVectorByDirection(e);this._autoScrolling=!0,this._autoScrollTargetDelta=i,this._autoScrollAttenuate=n,gn.copy(this._autoScrollStartPosition,this._getContentPosition()),this._autoScrollTotalTime=t,this._autoScrollAccumulatedTime=0,this._autoScrollBraking=!1,this._isScrollEndedWithThresholdEventFired=!1,this._autoScrollBrakingStartPosition.set(0,0,0),this._getHowMuchOutOfBoundary().equals(gn.ZERO,gCe)||(this._autoScrollCurrentlyOutOfBoundary=!0)}_calculateTouchMoveVelocity(){const e=new gn;let t=0;if(t=this._touchMoveTimeDeltas.reduce(((e,t)=>e+t),t),t<=0||t>=.5)e.set(gn.ZERO);else{let n=new gn;n=this._touchMoveDisplacements.reduce(((e,t)=>(e.add(t),e)),n),e.set(n.x*(1-this.brake)/t,n.y*(1-this.brake)/t,n.z)}return e}_flattenVectorByDirection(e){const t=e;return t.x=this.horizontal?t.x:0,t.y=this.vertical?t.y:0,t}_moveContent(e,t){const n=this._flattenVectorByDirection(e);vCe.set(this._getContentPosition()),vCe.add(n),vCe.set(Math.round(1e4*vCe.x)*gCe,Math.round(1e4*vCe.y)*gCe,vCe.z),this._setContentPosition(vCe);const i=this._getHowMuchOutOfBoundary();xCe.set(i.x,i.y),this._updateScrollBar(xCe),this.elastic&&t&&this._startBounceBackIfNeeded()}_getContentLeftBoundary(){if(!this._content)return-1;const e=this._getContentPosition(),t=this._content._uiProps.uiTransformComp;return e.x-t.anchorX*t.width}_getContentRightBoundary(){if(!this._content)return-1;const e=this._content._uiProps.uiTransformComp;return this._getContentLeftBoundary()+e.width}_getContentTopBoundary(){if(!this._content)return-1;const e=this._content._uiProps.uiTransformComp;return this._getContentBottomBoundary()+e.height}_getContentBottomBoundary(){if(!this._content)return-1;const e=this._getContentPosition(),t=this._content._uiProps.uiTransformComp;return e.y-t.anchorY*t.height}_getHowMuchOutOfBoundary(e){if((e=e||new gn).equals(gn.ZERO,gCe)&&!this._outOfBoundaryAmountDirty)return this._outOfBoundaryAmount;const t=new gn,n=this._getContentLeftBoundary(),i=this._getContentRightBoundary();n+e.x>this._leftBoundary?t.x=this._leftBoundary-(n+e.x):i+e.x<this._rightBoundary&&(t.x=this._rightBoundary-(i+e.x));const s=this._getContentTopBoundary(),o=this._getContentBottomBoundary();return s+e.y<this._topBoundary?t.y=this._topBoundary-(s+e.y):o+e.y>this._bottomBoundary&&(t.y=this._bottomBoundary-(o+e.y)),e.equals(gn.ZERO,gCe)&&(this._outOfBoundaryAmount=t,this._outOfBoundaryAmountDirty=!1),this._clampDelta(t),t}_updateScrollBar(e){this._horizontalScrollBar&&this._horizontalScrollBar.onScroll(e),this.verticalScrollBar&&this.verticalScrollBar.onScroll(e)}_onScrollBarTouchBegan(){this._horizontalScrollBar&&this._horizontalScrollBar.onTouchBegan(),this.verticalScrollBar&&this.verticalScrollBar.onTouchBegan()}_onScrollBarTouchEnded(){this._horizontalScrollBar&&this._horizontalScrollBar.onTouchEnded(),this.verticalScrollBar&&this.verticalScrollBar.onTouchEnded()}_dispatchEvent(e){if(e===TCe.SCROLL_ENDED)this._scrollEventEmitMask=0;else if(e===TCe.SCROLL_TO_TOP||e===TCe.SCROLL_TO_BOTTOM||e===TCe.SCROLL_TO_LEFT||e===TCe.SCROLL_TO_RIGHT){const t=1<<ECe[e];if(this._scrollEventEmitMask&t)return;this._scrollEventEmitMask|=t}tR.emitEvents(this.scrollEvents,this,ECe[e]),this.node.emit(e,this)}_adjustContentOutOfBoundary(){if(this._content&&(this._outOfBoundaryAmountDirty=!0,this._isOutOfBoundary())){const e=this._getHowMuchOutOfBoundary();vCe.set(this._getContentPosition()),vCe.add(e),this._content.setPosition(vCe),this._updateScrollBar(Bn.ZERO)}}_hideScrollBar(){this._horizontalScrollBar&&this._horizontalScrollBar.hide(),this._verticalScrollBar&&this._verticalScrollBar.hide()}_updateScrollBarState(){if(!this._content||!this.view)return;const e=this.view,t=this._content._uiProps.uiTransformComp;this.verticalScrollBar&&(t.height<e.height?this.verticalScrollBar.hide():this.verticalScrollBar.show()),this.horizontalScrollBar&&(t.width<e.width?this.horizontalScrollBar.hide():this.horizontalScrollBar.show())}_stopPropagationIfTargetIsMe(e){e.eventPhase===SA.AT_TARGET&&e.target===this.node&&(e.propagationStopped=!0)}_processDeltaMove(e){this._scrollChildren(e),this._gatherTouchMove(e)}_handleMoveLogic(e){this._getLocalAxisAlignDelta(this._deltaPos,e),this._processDeltaMove(this._deltaPos)}_handleReleaseLogic(e){this._getLocalAxisAlignDelta(this._deltaPos,e),this._gatherTouchMove(this._deltaPos),this._processInertiaScroll(),this._scrolling&&(this._scrolling=!1,this._autoScrolling||this._dispatchEvent(TCe.SCROLL_ENDED))}_getLocalAxisAlignDelta(e,t){const n=this.node._uiProps.uiTransformComp,i=new gn;n&&(t.getUILocation(xCe),t.getUIPreviousLocation(SCe),vCe.set(xCe.x,xCe.y,0),yCe.set(SCe.x,SCe.y,0),n.convertToNodeSpaceAR(vCe,vCe),n.convertToNodeSpaceAR(yCe,yCe),gn.subtract(i,vCe,yCe)),e.set(i)}_scrollChildren(e){this._clampDelta(e);const t=e;let n;this.elastic&&(n=this._getHowMuchOutOfBoundary(),t.x*=0===n.x?1:.5,t.y*=0===n.y?1:.5),this.elastic||(n=this._getHowMuchOutOfBoundary(t),t.add(n));let i="",s="";if(this._content){const{anchorX:e,anchorY:n,width:o,height:r}=this._content._uiProps.uiTransformComp,a=this._content.position||gn.ZERO;this.vertical&&(t.y>0?a.y-n*r+t.y>=this._bottomBoundary&&(i=TCe.SCROLL_TO_BOTTOM):t.y<0&&a.y-n*r+r+t.y<=this._topBoundary&&(i=TCe.SCROLL_TO_TOP)),this.horizontal&&(t.x<0?a.x-e*o+o+t.x<=this._rightBoundary&&(s=TCe.SCROLL_TO_RIGHT):t.x>0&&a.x-e*o+t.x>=this._leftBoundary&&(s=TCe.SCROLL_TO_LEFT))}this._moveContent(t,!1),(this.horizontal&&0!==t.x||this.vertical&&0!==t.y)&&(this._scrolling||(this._scrolling=!0,this._dispatchEvent(TCe.SCROLL_BEGAN)),this._dispatchEvent(TCe.SCROLLING)),""!==i&&this._dispatchEvent(i),""!==s&&this._dispatchEvent(s)}_handlePressLogic(){this._autoScrolling&&this._dispatchEvent(TCe.SCROLL_ENDED),this._autoScrolling=!1,this._isBouncing=!1,this._touchMovePreviousTimestamp=CCe(),this._touchMoveDisplacements.length=0,this._touchMoveTimeDeltas.length=0,this._onScrollBarTouchBegan()}_clampDelta(e){if(this._content&&this.view){const t=this.view.contentSize,n=this._content._uiProps.uiTransformComp;n.width<t.width&&(e.x=0),n.height<t.height&&(e.y=0)}}_gatherTouchMove(e){const t=e.clone();for(this._clampDelta(t);this._touchMoveDisplacements.length>=5;)this._touchMoveDisplacements.shift(),this._touchMoveTimeDeltas.shift();this._touchMoveDisplacements.push(t);const n=CCe();this._touchMoveTimeDeltas.push((n-this._touchMovePreviousTimestamp)/1e3),this._touchMovePreviousTimestamp=n}_startBounceBackIfNeeded(){if(!this.elastic)return!1;const e=this._getHowMuchOutOfBoundary();if(this._clampDelta(e),e.equals(gn.ZERO,gCe))return!1;const t=Math.max(this.bounceDuration,0);return this._startAutoScroll(e,t,!0),this._isBouncing||(e.y>0&&this._dispatchEvent(TCe.BOUNCE_TOP),e.y<0&&this._dispatchEvent(TCe.BOUNCE_BOTTOM),e.x>0&&this._dispatchEvent(TCe.BOUNCE_RIGHT),e.x<0&&this._dispatchEvent(TCe.BOUNCE_LEFT),this._isBouncing=!0),!0}_processInertiaScroll(){if(!this._startBounceBackIfNeeded()&&this.inertia){const e=this._calculateTouchMoveVelocity();!e.equals(vCe,gCe)&&this.brake<1&&this._startInertiaScroll(e)}this._onScrollBarTouchEnded()}_isOutOfBoundary(){return!this._getHowMuchOutOfBoundary().equals(gn.ZERO,gCe)}_isNecessaryAutoScrollBrake(){if(this._autoScrollBraking)return!0;if(this._isOutOfBoundary()){if(!this._autoScrollCurrentlyOutOfBoundary)return this._autoScrollCurrentlyOutOfBoundary=!0,this._autoScrollBraking=!0,gn.copy(this._autoScrollBrakingStartPosition,this._getContentPosition()),!0}else this._autoScrollCurrentlyOutOfBoundary=!1;return!1}_processAutoScrolling(e){const t=this._isNecessaryAutoScrollBrake(),n=t?.05:1;this._autoScrollAccumulatedTime+=e*(1/n);let i=Math.min(1,this._autoScrollAccumulatedTime/this._autoScrollTotalTime);var s;this._autoScrollAttenuate&&(s=i,i=(s-=1)*s*s*s*s+1);const o=this._autoScrollTargetDelta.clone();o.multiplyScalar(i);const r=this._autoScrollStartPosition.clone();r.add(o);let a=Math.abs(i-1)<=gCe;if(Math.abs(i-1)<=this.getScrollEndedEventTiming()&&!this._isScrollEndedWithThresholdEventFired&&(this._dispatchEvent(TCe.SCROLL_ENG_WITH_THRESHOLD),this._isScrollEndedWithThresholdEventFired=!0),this.elastic){const e=r.clone();e.subtract(this._autoScrollBrakingStartPosition),t&&e.multiplyScalar(n),r.set(this._autoScrollBrakingStartPosition),r.add(e)}else{const e=r.clone();e.subtract(this.getContentPosition());const t=this._getHowMuchOutOfBoundary(e);t.equals(gn.ZERO,gCe)||(r.add(t),a=!0)}a&&(this._autoScrolling=!1);const c=r.clone();c.subtract(this._getContentPosition()),this._clampDelta(c),this._moveContent(c,a),this._dispatchEvent(TCe.SCROLLING),this._autoScrolling||(this._isBouncing=!1,this._scrolling=!1,this._dispatchEvent(TCe.SCROLL_ENDED))}_checkMouseWheel(e){if(!this._getHowMuchOutOfBoundary().equals(gn.ZERO,gCe))return this._processInertiaScroll(),this.unschedule(this._checkMouseWheel),this._dispatchEvent(TCe.SCROLL_ENDED),void(this._stopMouseWheel=!1);this._mouseWheelEventElapsedTime+=e,this._mouseWheelEventElapsedTime>.1&&(this._onScrollBarTouchEnded(),this.unschedule(this._checkMouseWheel),this._dispatchEvent(TCe.SCROLL_ENDED),this._stopMouseWheel=!1)}_calculateMovePercentDelta(e){const t=e.anchor,n=e.applyToHorizontal,i=e.applyToVertical;this._calculateBoundary(),t.clampf(Bn.ZERO,Bn.ONE);let s=this._getContentBottomBoundary()-this._bottomBoundary;s=-s;let o=this._getContentLeftBoundary()-this._leftBoundary;o=-o;const r=new gn;if(this._content&&this.view){let e=0;const a=this._content._uiProps.uiTransformComp.contentSize,c=this.view.contentSize;n&&(e=a.width-c.width,r.x=o-e*t.x),i&&(e=a.height-c.height,r.y=s-e*t.y)}return r}_moveContentToTopLeft(e){let t=this._getContentBottomBoundary()-this._bottomBoundary;t=-t;const n=new gn;let i=0,s=this._getContentLeftBoundary()-this._leftBoundary;if(s=-s,this._content){const o=this._content._uiProps.uiTransformComp.contentSize;o.height<e.height&&(i=o.height-e.height,n.y=t-i),o.width<e.width&&(i=o.width-e.width,n.x=s)}this._updateScrollBarState(),this._moveContent(n),this._adjustContentOutOfBoundary()}_scaleChanged(e){e===Iv.SCALE&&this._calculateBoundary()}},fCe.EventType=TCe,sCe=ac((iCe=mCe).prototype,"bounceDuration",[Tc,wSe,ISe,RSe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),oCe=ac(iCe.prototype,"brake",[Tc,DSe,OSe,NSe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.5}}),rCe=ac(iCe.prototype,"elastic",[Tc,MSe,LSe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),aCe=ac(iCe.prototype,"inertia",[Tc,BSe,FSe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),ac(iCe.prototype,"content",[zSe,USe,GSe],Object.getOwnPropertyDescriptor(iCe.prototype,"content"),iCe.prototype),cCe=ac(iCe.prototype,"horizontal",[Tc,VSe,HSe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),ac(iCe.prototype,"horizontalScrollBar",[kSe,jSe,WSe],Object.getOwnPropertyDescriptor(iCe.prototype,"horizontalScrollBar"),iCe.prototype),lCe=ac(iCe.prototype,"vertical",[Tc,qSe,XSe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),ac(iCe.prototype,"verticalScrollBar",[YSe,KSe,$Se],Object.getOwnPropertyDescriptor(iCe.prototype,"verticalScrollBar"),iCe.prototype),hCe=ac(iCe.prototype,"cancelInnerEvents",[Tc,QSe,JSe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),uCe=ac(iCe.prototype,"scrollEvents",[ZSe,Tc,eCe,tCe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),_Ce=ac(iCe.prototype,"_content",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),dCe=ac(iCe.prototype,"_horizontalScrollBar",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),pCe=ac(iCe.prototype,"_verticalScrollBar",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),nCe=iCe))||nCe)||nCe)||nCe)||nCe)||nCe));var ACe,PCe,wCe,ICe,RCe,DCe,OCe,NCe,MCe,LCe,BCe,FCe,zCe,UCe,GCe,VCe,HCe,kCe,jCe,WCe,qCe;u.ScrollView=bCe;const XCe=new gn;var YCe;!function(e){e[e.Horizontal=0]="Horizontal",e[e.Vertical=1]="Vertical"}(YCe||(YCe={})),Ke(YCe);let KCe=function(t){return e({Slider:t,SliderComponent:t}),t}((ACe=mc("cc.Slider"),PCe=Mc(),wCe=vc(110),ICe=Rc(),RCe=gc(PN),DCe=Zc(kF),OCe=Uc(),NCe=Zc(YCe),MCe=Uc(),LCe=Gc(),BCe=Uc(),FCe=Zc([tR]),zCe=Uc(),ACe(UCe=PCe(UCe=wCe(UCe=ICe(UCe=RCe((qCe=WCe=class extends Gh{constructor(...e){super(...e),rc(this,"slideEvents",VCe,this),rc(this,"_handle",HCe,this),rc(this,"_direction",kCe,this),rc(this,"_progress",jCe,this),this._offset=new gn,this._dragging=!1,this._touchHandle=!1,this._handleLocalPos=new gn,this._touchPos=new gn}get handle(){return this._handle}set handle(e){this._handle!==e&&(this._handle=e)}get direction(){return this._direction}set direction(e){this._direction!==e&&(this._direction=e,this._changeLayout())}get progress(){return this._progress}set progress(e){this._progress!==e&&(this._progress=e,this._updateHandlePosition())}__preload(){this._updateHandlePosition()}onEnable(){this._updateHandlePosition(),this.node.on(Ex.TOUCH_START,this._onTouchBegan,this),this.node.on(Ex.TOUCH_MOVE,this._onTouchMoved,this),this.node.on(Ex.TOUCH_END,this._onTouchEnded,this),this.node.on(Ex.TOUCH_CANCEL,this._onTouchCancelled,this),this._handle&&this._handle.isValid&&(this._handle.node.on(Ex.TOUCH_START,this._onHandleDragStart,this),this._handle.node.on(Ex.TOUCH_MOVE,this._onTouchMoved,this),this._handle.node.on(Ex.TOUCH_END,this._onTouchEnded,this))}onDisable(){this.node.off(Ex.TOUCH_START,this._onTouchBegan,this),this.node.off(Ex.TOUCH_MOVE,this._onTouchMoved,this),this.node.off(Ex.TOUCH_END,this._onTouchEnded,this),this.node.off(Ex.TOUCH_CANCEL,this._onTouchCancelled,this),this._handle&&this._handle.isValid&&(this._handle.node.off(Ex.TOUCH_START,this._onHandleDragStart,this),this._handle.node.off(Ex.TOUCH_MOVE,this._onTouchMoved,this),this._handle.node.off(Ex.TOUCH_END,this._onTouchEnded,this))}_onHandleDragStart(e){if(!e||!this._handle||!this._handle.node._uiProps.uiTransformComp)return;this._dragging=!0,this._touchHandle=!0;const t=e.touch.getUILocation();gn.set(this._touchPos,t.x,t.y,0),this._handle.node._uiProps.uiTransformComp.convertToNodeSpaceAR(this._touchPos,this._offset),e.propagationStopped=!0}_onTouchBegan(e){this._handle&&e&&(this._dragging=!0,this._touchHandle||this._handleSliderLogic(e.touch),e.propagationStopped=!0)}_onTouchMoved(e){this._dragging&&e&&(this._handleSliderLogic(e.touch),e.propagationStopped=!0)}_onTouchEnded(e){this._dragging=!1,this._touchHandle=!1,this._offset=new gn,e&&(e.propagationStopped=!0)}_onTouchCancelled(e){this._dragging=!1,e&&(e.propagationStopped=!0)}_handleSliderLogic(e){this._updateProgress(e),this._emitSlideEvent()}_emitSlideEvent(){tR.emitEvents(this.slideEvents,this),this.node.emit("slide",this)}_updateProgress(e){if(!this._handle||!e)return;const t=e.getUILocation();gn.set(this._touchPos,t.x,t.y,0);const n=this.node._uiProps.uiTransformComp,i=n.convertToNodeSpaceAR(this._touchPos,XCe);this.direction===YCe.Horizontal?this.progress=Yt(.5+(i.x-this._offset.x)/n.width):this.progress=Yt(.5+(i.y-this._offset.y)/n.height)}_updateHandlePosition(){if(!this._handle)return;this._handleLocalPos.set(this._handle.node.getPosition());const e=this.node._uiProps.uiTransformComp;this._direction===YCe.Horizontal?this._handleLocalPos.x=-e.width*e.anchorX+this.progress*e.width:this._handleLocalPos.y=-e.height*e.anchorY+this.progress*e.height,this._handle.node.setPosition(this._handleLocalPos)}_changeLayout(){const e=this.node._uiProps.uiTransformComp,t=e.contentSize;if(e.setContentSize(t.height,t.width),this._handle){const e=this._handle.node.position;this._direction===YCe.Horizontal?this._handle.node.setPosition(e.x,0,e.z):this._handle.node.setPosition(0,e.y,e.z),this._updateHandlePosition()}}},WCe.Direction=YCe,ac((GCe=qCe).prototype,"handle",[DCe,OCe],Object.getOwnPropertyDescriptor(GCe.prototype,"handle"),GCe.prototype),ac(GCe.prototype,"direction",[NCe,MCe],Object.getOwnPropertyDescriptor(GCe.prototype,"direction"),GCe.prototype),ac(GCe.prototype,"progress",[jc,LCe,BCe],Object.getOwnPropertyDescriptor(GCe.prototype,"progress"),GCe.prototype),VCe=ac(GCe.prototype,"slideEvents",[FCe,Tc,zCe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),HCe=ac(GCe.prototype,"_handle",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),kCe=ac(GCe.prototype,"_direction",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return YCe.Horizontal}}),jCe=ac(GCe.prototype,"_progress",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),UCe=GCe))||UCe)||UCe)||UCe)||UCe)||UCe));function $Ce(...e){return Object.assign({},...e)}var QCe,JCe,ZCe,eEe,tEe,nEe,iEe,sEe,oEe,rEe,aEe,cEe,lEe,hEe,uEe,_Ee,dEe,pEe,fEe,mEe;u.Slider=KCe,function(e){e.TOGGLE="toggle"}(mEe||(mEe={}));let gEe=function(t){return e({Toggle:t,ToggleComponent:t}),t}((QCe=mc("cc.Toggle"),JCe=Mc(),ZCe=vc(110),eEe=Rc(),tEe=gc(PN),nEe=Wc(),iEe=Uc(),sEe=Zc(kF),oEe=Wc(),rEe=Uc(),aEe=Zc([tR]),cEe=Uc(),QCe(lEe=JCe(lEe=ZCe(lEe=eEe(lEe=tEe((fEe=pEe=class e extends tve{constructor(...e){super(...e),rc(this,"checkEvents",uEe,this),rc(this,"_isChecked",_Ee,this),rc(this,"_checkMark",dEe,this)}get isChecked(){return this._isChecked}set isChecked(e){this._set(e)}get checkMark(){return this._checkMark}set checkMark(e){this._checkMark!==e&&(this._checkMark=e)}set _resizeToTarget(e){e&&this._resizeNodeToTargetNode()}get _toggleContainer(){const e=this.node.parent;return u.Node.isNode(e)?e.getComponent("cc.ToggleContainer"):null}_internalToggle(){this.isChecked=!this.isChecked}_set(e,t=!0){if(this._isChecked==e)return;this._isChecked=e;const n=this._toggleContainer;n&&n.enabled&&this.enabled&&(e||!n.anyTogglesChecked()&&!n.allowSwitchOff)&&(this._isChecked=!0,n.notifyToggleCheck(this,t)),this.playEffect(),t&&this._emitToggleEvents()}playEffect(){this._checkMark&&(this._checkMark.node.active=this._isChecked)}setIsCheckedWithoutNotify(e){this._set(e,!1)}onEnable(){super.onEnable(),this.playEffect(),this.node.on(e.EventType.CLICK,this._internalToggle,this)}onDisable(){super.onDisable(),this.node.off(e.EventType.CLICK,this._internalToggle,this)}OnDestroy(){const e=this._toggleContainer;e&&e.ensureValidState()}_emitToggleEvents(){this.node.emit(e.EventType.TOGGLE,this),this.checkEvents&&tR.emitEvents(this.checkEvents,this)}},pEe.EventType=$Ce(mEe,Qge),ac((hEe=fEe).prototype,"isChecked",[nEe,iEe],Object.getOwnPropertyDescriptor(hEe.prototype,"isChecked"),hEe.prototype),ac(hEe.prototype,"checkMark",[sEe,oEe,rEe],Object.getOwnPropertyDescriptor(hEe.prototype,"checkMark"),hEe.prototype),uEe=ac(hEe.prototype,"checkEvents",[aEe,Tc,cEe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),_Ee=ac(hEe.prototype,"_isChecked",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),dEe=ac(hEe.prototype,"_checkMark",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),lEe=hEe))||lEe)||lEe)||lEe)||lEe)||lEe));var vEe,yEe,xEe,SEe,CEe,EEe,TEe,bEe,AEe,PEe,wEe;u.Toggle=gEe;let IEe=function(t){return e({ToggleContainer:t,ToggleContainerComponent:t}),t}((vEe=mc("cc.ToggleContainer"),yEe=Mc(),xEe=vc(110),SEe=Rc(),CEe=Uc(),EEe=Zc([tR]),TEe=Uc(),vEe(bEe=yEe(bEe=xEe(bEe=SEe(bEe=Ic((PEe=ac((AEe=class extends Gh{constructor(...e){super(...e),rc(this,"_allowSwitchOff",PEe,this),rc(this,"checkEvents",wEe,this)}get allowSwitchOff(){return this._allowSwitchOff}set allowSwitchOff(e){this._allowSwitchOff=e}get toggleItems(){return this.node.children.map((e=>{const t=e.getComponent("cc.Toggle");return t&&t.enabled?t:null})).filter(Boolean)}onEnable(){this.ensureValidState(),this.node.on(Ex.CHILD_ADDED,this.ensureValidState,this),this.node.on(Ex.CHILD_REMOVED,this.ensureValidState,this)}onDisable(){this.node.off(Ex.CHILD_ADDED,this.ensureValidState,this),this.node.off(Ex.CHILD_REMOVED,this.ensureValidState,this)}activeToggles(){return this.toggleItems.filter((e=>e.isChecked))}anyTogglesChecked(){return!!this.toggleItems.find((e=>e.isChecked))}notifyToggleCheck(e,t=!0){if(this.enabledInHierarchy){for(let n=0;n<this.toggleItems.length;n++){const i=this.toggleItems[n];i!==e&&(t?i.isChecked=!1:i.setIsCheckedWithoutNotify(!1))}this.checkEvents&&u.Component.EventHandler.emitEvents(this.checkEvents,e)}}ensureValidState(){const e=this.toggleItems;if(!this._allowSwitchOff&&!this.anyTogglesChecked()&&0!==e.length){const t=e[0];t.isChecked=!0,this.notifyToggleCheck(t)}const t=this.activeToggles();if(t.length>1){const e=t[0];for(let n=0;n<t.length;++n){const i=t[n];i!==e&&(i.isChecked=!1)}}}}).prototype,"_allowSwitchOff",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),ac(AEe.prototype,"allowSwitchOff",[CEe],Object.getOwnPropertyDescriptor(AEe.prototype,"allowSwitchOff"),AEe.prototype),wEe=ac(AEe.prototype,"checkEvents",[EEe,Tc,TEe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),bEe=AEe))||bEe)||bEe)||bEe)||bEe)||bEe));var REe,DEe,OEe,NEe,MEe,LEe,BEe,FEe,zEe,UEe,GEe,VEe,HEe,kEe,jEe,WEe,qEe,XEe,YEe,KEe,$Ee,QEe,JEe,ZEe,eTe,tTe,nTe,iTe,sTe,oTe,rTe,aTe,cTe,lTe,hTe,uTe,_Te,dTe,pTe,fTe,mTe,gTe,vTe,yTe,xTe;u.ToggleContainer=IEe;const STe=new Bn;function CTe(e){return e instanceof eP?Ew:e._uiProps.uiTransformComp?e._uiProps.uiTransformComp.contentSize:kn.ZERO}function ETe(e,t,n,i){e.parent?STe.set(e.parent.getScale().x,e.parent.getScale().y):STe.set(0,0);let s=STe.x,o=STe.y,r=0,a=0;for(let c=e.parent;;){if(!c)return n.x=n.y=0,void(i.x=i.y=1);const e=c.getPosition();if(r+=e.x,a+=e.y,c=c.parent,c===t)break;{c?STe.set(c.getScale().x,c.getScale().y):STe.set(0,0);const e=STe.x,t=STe.y;r*=e,a*=t,s*=e,o*=t}}i.x=0!==s?1/s:1,i.y=0!==o?1/o:1,n.x=-r,n.y=-a}let TTe,bTe;!function(e){e[e.ONCE=0]="ONCE",e[e.ALWAYS=1]="ALWAYS",e[e.ON_WINDOW_RESIZE=2]="ON_WINDOW_RESIZE"}(TTe||(TTe={})),Ke(TTe),function(e){e[e.TOP=1]="TOP",e[e.MID=2]="MID",e[e.BOT=4]="BOT",e[e.LEFT=8]="LEFT",e[e.CENTER=16]="CENTER",e[e.RIGHT=32]="RIGHT",e[e.HORIZONTAL=56]="HORIZONTAL",e[e.VERTICAL=7]="VERTICAL"}(bTe||(bTe={}));const ATe=bTe.TOP|bTe.BOT,PTe=bTe.LEFT|bTe.RIGHT;let wTe=function(t){return e({Widget:t,WidgetComponent:t}),t}((REe=mc("cc.Widget"),DEe=Mc(),OEe=vc(110),NEe=Rc(),MEe=gc(PN),LEe=Zc(lS),BEe=Uc(),FEe=Uc(),zEe=Uc(),UEe=Uc(),GEe=Uc(),VEe=Uc(),HEe=Uc(),kEe=Bc(),jEe=Bc(),WEe=Uc(),qEe=Uc(),XEe=Uc(),YEe=Uc(),KEe=Uc(),$Ee=Uc(),QEe=Zc(TTe),JEe=Uc(),REe(ZEe=DEe(ZEe=OEe(ZEe=NEe(ZEe=MEe(ZEe=Ic((xTe=yTe=class extends Gh{constructor(...e){super(...e),this._lastPos=new gn,this._lastSize=new kn,this._dirty=!0,this._hadAlignOnce=!1,rc(this,"_alignFlags",tTe,this),rc(this,"_target",nTe,this),rc(this,"_left",iTe,this),rc(this,"_right",sTe,this),rc(this,"_top",oTe,this),rc(this,"_bottom",rTe,this),rc(this,"_horizontalCenter",aTe,this),rc(this,"_verticalCenter",cTe,this),rc(this,"_isAbsLeft",lTe,this),rc(this,"_isAbsRight",hTe,this),rc(this,"_isAbsTop",uTe,this),rc(this,"_isAbsBottom",_Te,this),rc(this,"_isAbsHorizontalCenter",dTe,this),rc(this,"_isAbsVerticalCenter",pTe,this),rc(this,"_originalWidth",fTe,this),rc(this,"_originalHeight",mTe,this),rc(this,"_alignMode",gTe,this),rc(this,"_lockFlags",vTe,this)}get target(){return this._target}set target(e){this._target!==e&&(this._unregisterTargetEvents(),this._target=e,this._registerTargetEvents(),this._validateTargetInDEV(),this._recursiveDirty())}get isAlignTop(){return(this._alignFlags&bTe.TOP)>0}set isAlignTop(e){this._setAlign(bTe.TOP,e),this._recursiveDirty()}get isAlignBottom(){return(this._alignFlags&bTe.BOT)>0}set isAlignBottom(e){this._setAlign(bTe.BOT,e),this._recursiveDirty()}get isAlignLeft(){return(this._alignFlags&bTe.LEFT)>0}set isAlignLeft(e){this._setAlign(bTe.LEFT,e),this._recursiveDirty()}get isAlignRight(){return(this._alignFlags&bTe.RIGHT)>0}set isAlignRight(e){this._setAlign(bTe.RIGHT,e),this._recursiveDirty()}get isAlignVerticalCenter(){return(this._alignFlags&bTe.MID)>0}set isAlignVerticalCenter(e){e?(this.isAlignTop=!1,this.isAlignBottom=!1,this._alignFlags|=bTe.MID):this._alignFlags&=~bTe.MID,this._recursiveDirty()}get isAlignHorizontalCenter(){return(this._alignFlags&bTe.CENTER)>0}set isAlignHorizontalCenter(e){e?(this.isAlignLeft=!1,this.isAlignRight=!1,this._alignFlags|=bTe.CENTER):this._alignFlags&=~bTe.CENTER,this._recursiveDirty()}get isStretchWidth(){return(this._alignFlags&PTe)===PTe}get isStretchHeight(){return(this._alignFlags&ATe)===ATe}get top(){return this._top}set top(e){this._top=e,this._recursiveDirty()}get editorTop(){return this._isAbsTop?this._top:100*this._top}set editorTop(e){this._top=this._isAbsTop?e:e/100,this._recursiveDirty()}get bottom(){return this._bottom}set bottom(e){this._bottom=e,this._recursiveDirty()}get editorBottom(){return this._isAbsBottom?this._bottom:100*this._bottom}set editorBottom(e){this._bottom=this._isAbsBottom?e:e/100,this._recursiveDirty()}get left(){return this._left}set left(e){this._left=e,this._recursiveDirty()}get editorLeft(){return this._isAbsLeft?this._left:100*this._left}set editorLeft(e){this._left=this._isAbsLeft?e:e/100,this._recursiveDirty()}get right(){return this._right}set right(e){this._right=e,this._recursiveDirty()}get editorRight(){return this._isAbsRight?this._right:100*this._right}set editorRight(e){this._right=this._isAbsRight?e:e/100,this._recursiveDirty()}get horizontalCenter(){return this._horizontalCenter}set horizontalCenter(e){this._horizontalCenter=e,this._recursiveDirty()}get editorHorizontalCenter(){return this._isAbsHorizontalCenter?this._horizontalCenter:100*this._horizontalCenter}set editorHorizontalCenter(e){this._horizontalCenter=this._isAbsHorizontalCenter?e:e/100,this._recursiveDirty()}get verticalCenter(){return this._verticalCenter}set verticalCenter(e){this._verticalCenter=e,this._recursiveDirty()}get editorVerticalCenter(){return this._isAbsVerticalCenter?this._verticalCenter:100*this._verticalCenter}set editorVerticalCenter(e){this._verticalCenter=this._isAbsVerticalCenter?e:e/100,this._recursiveDirty()}get isAbsoluteTop(){return this._isAbsTop}set isAbsoluteTop(e){this._isAbsTop!==e&&(this._isAbsTop=e,this._autoChangedValue(bTe.TOP,this._isAbsTop))}get isAbsoluteBottom(){return this._isAbsBottom}set isAbsoluteBottom(e){this._isAbsBottom!==e&&(this._isAbsBottom=e,this._autoChangedValue(bTe.BOT,this._isAbsBottom))}get isAbsoluteLeft(){return this._isAbsLeft}set isAbsoluteLeft(e){this._isAbsLeft!==e&&(this._isAbsLeft=e,this._autoChangedValue(bTe.LEFT,this._isAbsLeft))}get isAbsoluteRight(){return this._isAbsRight}set isAbsoluteRight(e){this._isAbsRight!==e&&(this._isAbsRight=e,this._autoChangedValue(bTe.RIGHT,this._isAbsRight))}get isAbsoluteHorizontalCenter(){return this._isAbsHorizontalCenter}set isAbsoluteHorizontalCenter(e){this._isAbsHorizontalCenter!==e&&(this._isAbsHorizontalCenter=e,this._autoChangedValue(bTe.CENTER,this._isAbsHorizontalCenter))}get isAbsoluteVerticalCenter(){return this._isAbsVerticalCenter}set isAbsoluteVerticalCenter(e){this._isAbsVerticalCenter!==e&&(this._isAbsVerticalCenter=e,this._autoChangedValue(bTe.MID,this._isAbsVerticalCenter))}get alignMode(){return this._alignMode}set alignMode(e){this._alignMode=e,this._recursiveDirty()}get alignFlags(){return this._alignFlags}set alignFlags(e){this._alignFlags!==e&&(this._alignFlags=e,this._recursiveDirty())}updateAlignment(){u._widgetManager.updateAlignment(this.node)}_validateTargetInDEV(){}setDirty(){this._recursiveDirty()}onEnable(){this.node.getPosition(this._lastPos),this._lastSize.set(this.node._uiProps.uiTransformComp.contentSize),u._widgetManager.add(this),this._hadAlignOnce=!1,this._registerEvent(),this._registerTargetEvents()}onDisable(){u._widgetManager.remove(this),this._unregisterEvent(),this._unregisterTargetEvents()}onDestroy(){this._removeParentEvent()}_adjustWidgetToAllowMovingInEditor(e){}_adjustWidgetToAllowResizingInEditor(){}_adjustWidgetToAnchorChanged(){this.setDirty()}_adjustTargetToParentChanged(e){e&&this._unregisterOldParentEvents(e),this.node.getParent()&&this._registerTargetEvents(),this._setDirtyByMode()}_registerEvent(){this.node.on(Ex.TRANSFORM_CHANGED,this._setDirtyByMode,this),this.node.on(Ex.SIZE_CHANGED,this._setDirtyByMode,this),this.node.on(Ex.ANCHOR_CHANGED,this._adjustWidgetToAnchorChanged,this),this.node.on(Ex.PARENT_CHANGED,this._adjustTargetToParentChanged,this)}_unregisterEvent(){this.node.off(Ex.TRANSFORM_CHANGED,this._setDirtyByMode,this),this.node.off(Ex.SIZE_CHANGED,this._setDirtyByMode,this),this.node.off(Ex.ANCHOR_CHANGED,this._adjustWidgetToAnchorChanged,this)}_removeParentEvent(){this.node.off(Ex.PARENT_CHANGED,this._adjustTargetToParentChanged,this)}_autoChangedValue(e,t){if(!((this._alignFlags&e)>0))return;const n=this.node.parent&&this.node.parent._uiProps,i=n&&n.uiTransformComp,s=i?i.contentSize:Ew;this.isAlignLeft&&e===bTe.LEFT?this._left=t?this._left*s.width:this._left/s.width:this.isAlignRight&&e===bTe.RIGHT?this._right=t?this._right*s.width:this._right/s.width:this.isAlignHorizontalCenter&&e===bTe.CENTER?this._horizontalCenter=t?this._horizontalCenter*s.width:this._horizontalCenter/s.width:this.isAlignTop&&e===bTe.TOP?this._top=t?this._top*s.height:this._top/s.height:this.isAlignBottom&&e===bTe.BOT?this._bottom=t?this._bottom*s.height:this._bottom/s.height:this.isAbsoluteVerticalCenter&&e===bTe.MID&&(this._verticalCenter=this._verticalCenter/s.height),this._recursiveDirty()}_registerTargetEvents(){const e=this._target||this.node.parent;e&&e.getComponent(PN)&&(e.on(Ex.TRANSFORM_CHANGED,this._setDirtyByMode,this),e.on(Ex.SIZE_CHANGED,this._setDirtyByMode,this),e.on(Ex.ANCHOR_CHANGED,this._setDirtyByMode,this))}_unregisterTargetEvents(){const e=this._target||this.node.parent;e&&(e.off(Ex.TRANSFORM_CHANGED,this._setDirtyByMode,this),e.off(Ex.SIZE_CHANGED,this._setDirtyByMode,this),e.off(Ex.ANCHOR_CHANGED,this._setDirtyByMode,this))}_unregisterOldParentEvents(e){const t=this._target||e;t&&(t.off(Ex.TRANSFORM_CHANGED,this._setDirtyByMode,this),t.off(Ex.SIZE_CHANGED,this._setDirtyByMode,this))}_setDirtyByMode(){this.alignMode===TTe.ALWAYS&&this._recursiveDirty()}_setAlign(e,t){if(t===(this._alignFlags&e)>0)return;const n=(e&PTe)>0,i=this.node._uiProps.uiTransformComp;t?(this._alignFlags|=e,n?(this.isAlignHorizontalCenter=!1,this.isStretchWidth&&(this._originalWidth=i.width)):(this.isAlignVerticalCenter=!1,this.isStretchHeight&&(this._originalHeight=i.height))):(n?this.isStretchWidth&&(i.width=this._originalWidth):this.isStretchHeight&&(i.height=this._originalHeight),this._alignFlags&=~e)}_recursiveDirty(){this._dirty||(this._dirty=!0)}},yTe.AlignMode=TTe,ac((eTe=xTe).prototype,"target",[LEe,BEe],Object.getOwnPropertyDescriptor(eTe.prototype,"target"),eTe.prototype),ac(eTe.prototype,"isAlignTop",[FEe],Object.getOwnPropertyDescriptor(eTe.prototype,"isAlignTop"),eTe.prototype),ac(eTe.prototype,"isAlignBottom",[zEe],Object.getOwnPropertyDescriptor(eTe.prototype,"isAlignBottom"),eTe.prototype),ac(eTe.prototype,"isAlignLeft",[UEe],Object.getOwnPropertyDescriptor(eTe.prototype,"isAlignLeft"),eTe.prototype),ac(eTe.prototype,"isAlignRight",[GEe],Object.getOwnPropertyDescriptor(eTe.prototype,"isAlignRight"),eTe.prototype),ac(eTe.prototype,"isAlignVerticalCenter",[VEe],Object.getOwnPropertyDescriptor(eTe.prototype,"isAlignVerticalCenter"),eTe.prototype),ac(eTe.prototype,"isAlignHorizontalCenter",[HEe],Object.getOwnPropertyDescriptor(eTe.prototype,"isAlignHorizontalCenter"),eTe.prototype),ac(eTe.prototype,"isStretchWidth",[kEe],Object.getOwnPropertyDescriptor(eTe.prototype,"isStretchWidth"),eTe.prototype),ac(eTe.prototype,"isStretchHeight",[jEe],Object.getOwnPropertyDescriptor(eTe.prototype,"isStretchHeight"),eTe.prototype),ac(eTe.prototype,"top",[WEe],Object.getOwnPropertyDescriptor(eTe.prototype,"top"),eTe.prototype),ac(eTe.prototype,"editorTop",[Lc],Object.getOwnPropertyDescriptor(eTe.prototype,"editorTop"),eTe.prototype),ac(eTe.prototype,"bottom",[qEe],Object.getOwnPropertyDescriptor(eTe.prototype,"bottom"),eTe.prototype),ac(eTe.prototype,"editorBottom",[Lc],Object.getOwnPropertyDescriptor(eTe.prototype,"editorBottom"),eTe.prototype),ac(eTe.prototype,"left",[XEe],Object.getOwnPropertyDescriptor(eTe.prototype,"left"),eTe.prototype),ac(eTe.prototype,"editorLeft",[Lc],Object.getOwnPropertyDescriptor(eTe.prototype,"editorLeft"),eTe.prototype),ac(eTe.prototype,"right",[YEe],Object.getOwnPropertyDescriptor(eTe.prototype,"right"),eTe.prototype),ac(eTe.prototype,"editorRight",[Lc],Object.getOwnPropertyDescriptor(eTe.prototype,"editorRight"),eTe.prototype),ac(eTe.prototype,"horizontalCenter",[KEe],Object.getOwnPropertyDescriptor(eTe.prototype,"horizontalCenter"),eTe.prototype),ac(eTe.prototype,"editorHorizontalCenter",[Lc],Object.getOwnPropertyDescriptor(eTe.prototype,"editorHorizontalCenter"),eTe.prototype),ac(eTe.prototype,"verticalCenter",[$Ee],Object.getOwnPropertyDescriptor(eTe.prototype,"verticalCenter"),eTe.prototype),ac(eTe.prototype,"editorVerticalCenter",[Lc],Object.getOwnPropertyDescriptor(eTe.prototype,"editorVerticalCenter"),eTe.prototype),ac(eTe.prototype,"isAbsoluteTop",[Lc],Object.getOwnPropertyDescriptor(eTe.prototype,"isAbsoluteTop"),eTe.prototype),ac(eTe.prototype,"isAbsoluteBottom",[Lc],Object.getOwnPropertyDescriptor(eTe.prototype,"isAbsoluteBottom"),eTe.prototype),ac(eTe.prototype,"isAbsoluteLeft",[Lc],Object.getOwnPropertyDescriptor(eTe.prototype,"isAbsoluteLeft"),eTe.prototype),ac(eTe.prototype,"isAbsoluteRight",[Lc],Object.getOwnPropertyDescriptor(eTe.prototype,"isAbsoluteRight"),eTe.prototype),ac(eTe.prototype,"isAbsoluteHorizontalCenter",[Lc],Object.getOwnPropertyDescriptor(eTe.prototype,"isAbsoluteHorizontalCenter"),eTe.prototype),ac(eTe.prototype,"isAbsoluteVerticalCenter",[Lc],Object.getOwnPropertyDescriptor(eTe.prototype,"isAbsoluteVerticalCenter"),eTe.prototype),ac(eTe.prototype,"alignMode",[QEe,JEe],Object.getOwnPropertyDescriptor(eTe.prototype,"alignMode"),eTe.prototype),ac(eTe.prototype,"alignFlags",[Lc],Object.getOwnPropertyDescriptor(eTe.prototype,"alignFlags"),eTe.prototype),tTe=ac(eTe.prototype,"_alignFlags",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),nTe=ac(eTe.prototype,"_target",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),iTe=ac(eTe.prototype,"_left",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),sTe=ac(eTe.prototype,"_right",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),oTe=ac(eTe.prototype,"_top",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),rTe=ac(eTe.prototype,"_bottom",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),aTe=ac(eTe.prototype,"_horizontalCenter",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),cTe=ac(eTe.prototype,"_verticalCenter",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),lTe=ac(eTe.prototype,"_isAbsLeft",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),hTe=ac(eTe.prototype,"_isAbsRight",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),uTe=ac(eTe.prototype,"_isAbsTop",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),_Te=ac(eTe.prototype,"_isAbsBottom",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),dTe=ac(eTe.prototype,"_isAbsHorizontalCenter",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),pTe=ac(eTe.prototype,"_isAbsVerticalCenter",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),fTe=ac(eTe.prototype,"_originalWidth",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),mTe=ac(eTe.prototype,"_originalHeight",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),gTe=ac(eTe.prototype,"_alignMode",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return TTe.ON_WINDOW_RESIZE}}),vTe=ac(eTe.prototype,"_lockFlags",[Tc,Ac],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),ZEe=eTe))||ZEe)||ZEe)||ZEe)||ZEe)||ZEe)||ZEe));var ITe,RTe,DTe,OTe,NTe,MTe,LTe,BTe,FTe,zTe,UTe,GTe,VTe,HTe,kTe,jTe,WTe,qTe,XTe;u.internal.computeInverseTransForTarget=ETe,u.internal.getReadonlyNodeSize=CTe,u.Widget=wTe;const YTe=new dn;var KTe;!function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL"}(KTe||(KTe={})),Ke(KTe);let $Te=function(t){return e({PageViewIndicator:t,PageViewIndicatorComponent:t}),t}((ITe=mc("cc.PageViewIndicator"),RTe=Mc(),DTe=vc(110),OTe=Rc(),NTe=Zc($D),MTe=Uc(),LTe=Zc(KTe),BTe=Uc(),FTe=Zc(kn),zTe=Uc(),UTe=Uc(),ITe(GTe=RTe(GTe=DTe(GTe=OTe((XTe=qTe=class extends Gh{constructor(...e){super(...e),rc(this,"spacing",HTe,this),rc(this,"_spriteFrame",kTe,this),rc(this,"_direction",jTe,this),rc(this,"_cellSize",WTe,this),this._layout=null,this._pageView=null,this._indicators=[]}get spriteFrame(){return this._spriteFrame}set spriteFrame(e){this._spriteFrame!==e&&(this._spriteFrame=e)}get direction(){return this._direction}set direction(e){this._direction!==e&&(this._direction=e)}get cellSize(){return this._cellSize}set cellSize(e){this._cellSize!==e&&(this._cellSize=e)}onLoad(){this._updateLayout()}setPageView(e){this._pageView=e,this._refresh()}_updateLayout(){this._layout=this.getComponent(vxe),this._layout||(this._layout=this.addComponent(vxe));const e=this._layout;this.direction===KTe.HORIZONTAL?(e.type=vxe.Type.HORIZONTAL,e.spacingX=this.spacing):this.direction===KTe.VERTICAL&&(e.type=vxe.Type.VERTICAL,e.spacingY=this.spacing),e.resizeMode=vxe.ResizeMode.CONTAINER}_createIndicator(){const e=new lS;e.layer=this.node.layer;const t=e.addComponent(kF);return t.spriteFrame=this.spriteFrame,t.sizeMode=kF.SizeMode.CUSTOM,e.parent=this.node,e._uiProps.uiTransformComp.setContentSize(this._cellSize),e}_changedState(){const e=this._indicators;if(0===e.length||!this._pageView)return;const t=this._pageView.curPageIdx;if(!(t>=e.length)){for(let t=0;t<e.length;++t){const n=e[t];if(!n._uiProps.uiComp)continue;const i=n._uiProps.uiComp;YTe.set(i.color),YTe.a=127.5,i.color=YTe}if(e[t]._uiProps.uiComp){const n=e[t]._uiProps.uiComp;YTe.set(n.color),YTe.a=255,n.color=YTe}}}_refresh(){if(!this._pageView)return;const e=this._indicators,t=this._pageView.getPages();if(t.length===e.length)return;let n=0;if(t.length>e.length)for(n=0;n<t.length;++n)e[n]||(e[n]=this._createIndicator());else for(n=e.length-t.length;n>0;--n){const t=e[n-1];this.node.removeChild(t),e.splice(n-1,1)}this._layout&&this._layout.enabledInHierarchy&&this._layout.updateLayout(),this._changedState()}},qTe.Direction=KTe,ac((VTe=XTe).prototype,"spriteFrame",[NTe,MTe],Object.getOwnPropertyDescriptor(VTe.prototype,"spriteFrame"),VTe.prototype),ac(VTe.prototype,"direction",[LTe,BTe],Object.getOwnPropertyDescriptor(VTe.prototype,"direction"),VTe.prototype),ac(VTe.prototype,"cellSize",[FTe,zTe],Object.getOwnPropertyDescriptor(VTe.prototype,"cellSize"),VTe.prototype),HTe=ac(VTe.prototype,"spacing",[Tc,UTe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),kTe=ac(VTe.prototype,"_spriteFrame",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),jTe=ac(VTe.prototype,"_direction",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return KTe.HORIZONTAL}}),WTe=ac(VTe.prototype,"_cellSize",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new kn(20,20)}}),GTe=VTe))||GTe)||GTe)||GTe)||GTe));var QTe,JTe,ZTe,ebe,tbe,nbe,ibe,sbe,obe,rbe,abe,cbe,lbe,hbe,ube,_be,dbe,pbe,fbe,mbe,gbe,vbe,ybe,xbe,Sbe,Cbe,Ebe,Tbe,bbe,Abe,Pbe,wbe,Ibe,Rbe,Dbe,Obe,Nbe,Mbe,Lbe,Bbe,Fbe,zbe,Ube;u.PageViewIndicator=$Te;const Gbe=new Bn;var Vbe,Hbe,kbe;!function(e){e[e.Unified=0]="Unified",e[e.Free=1]="Free"}(Vbe||(Vbe={})),Ke(Vbe),function(e){e[e.Horizontal=0]="Horizontal",e[e.Vertical=1]="Vertical"}(Hbe||(Hbe={})),Ke(Hbe),function(e){e.PAGE_TURNING="page-turning"}(kbe||(kbe={}));let jbe=function(t){return e({PageView:t,PageViewComponent:t}),t}((QTe=mc("cc.PageView"),JTe=Mc(),ZTe=vc(110),ebe=Rc(),tbe=Zc(Vbe),nbe=Uc(),ibe=Zc(Hbe),sbe=Uc(),obe=Gc(),rbe=Uc(),abe=Gc(),cbe=Uc(),lbe=Zc($Te),hbe=Uc(),ube=Uc(),_be=Zc(xSe),dbe=Bc(),pbe=Zc(xSe),fbe=Bc(),mbe=Bc(),gbe=Bc(),vbe=Bc(),ybe=Zc([tR]),xbe=Bc(),Sbe=Uc(),Cbe=Zc([tR]),Ebe=Uc(),QTe(Tbe=JTe(Tbe=ZTe(Tbe=ebe((Ube=zbe=class e extends bCe{constructor(...e){super(...e),rc(this,"autoPageTurningThreshold",Abe,this),rc(this,"horizontal",Pbe,this),rc(this,"vertical",wbe,this),rc(this,"cancelInnerEvents",Ibe,this),rc(this,"scrollEvents",Rbe,this),rc(this,"pageTurningSpeed",Dbe,this),rc(this,"pageEvents",Obe,this),rc(this,"_sizeMode",Nbe,this),rc(this,"_direction",Mbe,this),rc(this,"_scrollThreshold",Lbe,this),rc(this,"_pageTurningEventTiming",Bbe,this),rc(this,"_indicator",Fbe,this),this._curPageIdx=0,this._lastPageIdx=0,this._pages=[],this._initContentPos=new gn,this._scrollCenterOffsetX=[],this._scrollCenterOffsetY=[],this._touchBeganPosition=new Bn,this._touchEndPosition=new Bn}get sizeMode(){return this._sizeMode}set sizeMode(e){this._sizeMode!==e&&(this._sizeMode=e,this._syncSizeMode())}get direction(){return this._direction}set direction(e){this._direction!==e&&(this._direction=e,this._syncScrollDirection())}get scrollThreshold(){return this._scrollThreshold}set scrollThreshold(e){this._scrollThreshold!==e&&(this._scrollThreshold=e)}get pageTurningEventTiming(){return this._pageTurningEventTiming}set pageTurningEventTiming(e){this._pageTurningEventTiming!==e&&(this._pageTurningEventTiming=e)}get indicator(){return this._indicator}set indicator(e){this._indicator!==e&&(this._indicator=e,this.indicator&&this.indicator.setPageView(this))}get curPageIdx(){return this._curPageIdx}get verticalScrollBar(){return super.verticalScrollBar}set verticalScrollBar(e){super.verticalScrollBar=e}get horizontalScrollBar(){return super.horizontalScrollBar}set horizontalScrollBar(e){super.horizontalScrollBar=e}onEnable(){super.onEnable(),this.node.on(Ex.SIZE_CHANGED,this._updateAllPagesSize,this),this.node.on(e.EventType.SCROLL_ENG_WITH_THRESHOLD,this._dispatchPageTurningEvent,this)}onDisable(){super.onDisable(),this.node.off(Ex.SIZE_CHANGED,this._updateAllPagesSize,this),this.node.off(e.EventType.SCROLL_ENG_WITH_THRESHOLD,this._dispatchPageTurningEvent,this)}onLoad(){this._initPages(),this.indicator&&this.indicator.setPageView(this)}getCurrentPageIndex(){return this._curPageIdx}setCurrentPageIndex(e){this.scrollToPage(e,1)}getPages(){return this._pages}addPage(e){e&&-1===this._pages.indexOf(e)&&this.content&&(e._uiProps.uiTransformComp?(this.content.addChild(e),this._pages.push(e),this._updatePageView()):I(4301))}insertPage(e,t){if(!(t<0)&&e&&-1===this._pages.indexOf(e)&&this.content)if(t>=this._pages.length)this.addPage(e);else{if(!e._uiProps.uiTransformComp)return void I(4301);this._pages.splice(t,0,e),this.content.insertChild(e,t),this._updatePageView()}}removePage(e){if(!e||!this.content)return;const t=this._pages.indexOf(e);-1!==t?this.removePageAtIndex(t):D(4300,e.name)}removePageAtIndex(e){const t=this._pages;if(e<0||e>=t.length)return;const n=t[e];n&&this.content&&(this.content.removeChild(n),t.splice(e,1),this._updatePageView())}removeAllPages(){if(!this.content)return;const e=this._pages;for(let t=0,n=e.length;t<n;t++)this.content.removeChild(e[t]);this._pages.length=0,this._updatePageView()}scrollToPage(e,t=.3){e<0||e>=this._pages.length||(this._curPageIdx=e,this.scrollToOffset(this._moveOffsetValue(e),t,!0),this.indicator&&this.indicator._changedState())}getScrollEndedEventTiming(){return this.pageTurningEventTiming}_updatePageView(){if(!this.content)return;const e=this.content.getComponent(vxe);e&&e.enabled&&e.updateLayout();const t=this._pages.length;this._curPageIdx>=t&&(this._curPageIdx=0===t?0:t-1,this._lastPageIdx=this._curPageIdx);const n=this._initContentPos;for(let e=0;e<t;++e){const t=this._pages[e].position;this.direction===Hbe.Horizontal?this._scrollCenterOffsetX[e]=Math.abs(n.x+t.x):this._scrollCenterOffsetY[e]=Math.abs(n.y+t.y)}this.indicator&&this.indicator._refresh()}_updateAllPagesSize(){const e=this.view;if(!this.content||!e)return;if(this._sizeMode!==Vbe.Unified)return;const t=this._pages,n=e.contentSize;for(let e=0,i=t.length;e<i;e++)t[e]._uiProps.uiTransformComp.setContentSize(n)}_handleReleaseLogic(){this._autoScrollToPage(),this._scrolling&&(this._scrolling=!1,this._autoScrolling||this._dispatchEvent(e.EventType.SCROLL_ENDED))}_onTouchBegan(e,t){e.touch.getUILocation(Gbe),Bn.set(this._touchBeganPosition,Gbe.x,Gbe.y),super._onTouchBegan(e,t)}_onTouchMoved(e,t){super._onTouchMoved(e,t)}_onTouchEnded(e,t){e.touch.getUILocation(Gbe),Bn.set(this._touchEndPosition,Gbe.x,Gbe.y),super._onTouchEnded(e,t)}_onTouchCancelled(e,t){e.touch.getUILocation(Gbe),Bn.set(this._touchEndPosition,Gbe.x,Gbe.y),super._onTouchCancelled(e,t)}_onMouseWheel(){}_syncScrollDirection(){this.horizontal=this.direction===Hbe.Horizontal,this.vertical=this.direction===Hbe.Vertical}_syncSizeMode(){const e=this.view;if(!this.content||!e)return;const t=this.content.getComponent(vxe);if(t){if(this._sizeMode===Vbe.Free&&this._pages.length>0){const n=this._pages[0]._uiProps.uiTransformComp,i=this._pages[this._pages.length-1]._uiProps.uiTransformComp;this.direction===Hbe.Horizontal?(t.paddingLeft=(e.width-n.width)/2,t.paddingRight=(e.width-i.width)/2):this.direction===Hbe.Vertical&&(t.paddingTop=(e.height-n.height)/2,t.paddingBottom=(e.height-i.height)/2)}t.updateLayout()}}_initPages(){if(!this.content)return;this._initContentPos=this.content.position;const e=this.content.children;for(let t=0;t<e.length;++t){const n=e[t];this._pages.indexOf(n)>=0||this._pages.push(n)}this._syncScrollDirection(),this._syncSizeMode(),this._updatePageView()}_dispatchPageTurningEvent(){this._lastPageIdx!==this._curPageIdx&&(this._lastPageIdx=this._curPageIdx,tR.emitEvents(this.pageEvents,this,kbe.PAGE_TURNING),this.node.emit(kbe.PAGE_TURNING,this))}_isQuicklyScrollable(e){if(this.direction===Hbe.Horizontal){if(Math.abs(e.x)>this.autoPageTurningThreshold)return!0}else if(this.direction===Hbe.Vertical&&Math.abs(e.y)>this.autoPageTurningThreshold)return!0;return!1}_moveOffsetValue(e){const t=new Bn;if(this._sizeMode===Vbe.Free)this.direction===Hbe.Horizontal?t.x=this._scrollCenterOffsetX[e]:this.direction===Hbe.Vertical&&(t.y=this._scrollCenterOffsetY[e]);else{const n=this.view;if(!n)return t;this.direction===Hbe.Horizontal?t.x=e*n.width:this.direction===Hbe.Vertical&&(t.y=e*n.height)}return t}_getDragDirection(e){return this._direction===Hbe.Horizontal?0===e.x?0:e.x>0?1:-1:0===e.y?0:e.y<0?1:-1}_isScrollable(e,t,n){if(this._sizeMode===Vbe.Free){let i=0,s=0;if(this.direction===Hbe.Horizontal)return i=this._scrollCenterOffsetX[t],s=this._scrollCenterOffsetX[n],Math.abs(e.x)>=Math.abs(i-s)*this.scrollThreshold;if(this.direction===Hbe.Vertical)return i=this._scrollCenterOffsetY[t],s=this._scrollCenterOffsetY[n],Math.abs(e.y)>=Math.abs(i-s)*this.scrollThreshold}else{const t=this.view;if(!t)return!1;if(this.direction===Hbe.Horizontal)return Math.abs(e.x)>=t.width*this.scrollThreshold;if(this.direction===Hbe.Vertical)return Math.abs(e.y)>=t.height*this.scrollThreshold}return!1}_autoScrollToPage(){if(this._startBounceBackIfNeeded()){const e=this._getHowMuchOutOfBoundary();this._clampDelta(e),(e.x>0||e.y<0)&&(this._curPageIdx=0===this._pages.length?0:this._pages.length-1),(e.x<0||e.y>0)&&(this._curPageIdx=0),this.indicator&&this.indicator._changedState()}else{const e=new Bn;Bn.subtract(e,this._touchBeganPosition,this._touchEndPosition);const t=this._curPageIdx,n=t+this._getDragDirection(e),i=this.pageTurningSpeed*Math.abs(t-n);if(n<this._pages.length){if(this._isScrollable(e,t,n))return void this.scrollToPage(n,i);{const e=this._calculateTouchMoveVelocity();if(this._isQuicklyScrollable(e))return void this.scrollToPage(n,i)}}this.scrollToPage(t,i)}}},zbe.SizeMode=Vbe,zbe.Direction=Hbe,zbe.EventType=$Ce(kbe,TCe),ac((bbe=Ube).prototype,"sizeMode",[tbe,nbe],Object.getOwnPropertyDescriptor(bbe.prototype,"sizeMode"),bbe.prototype),ac(bbe.prototype,"direction",[ibe,sbe],Object.getOwnPropertyDescriptor(bbe.prototype,"direction"),bbe.prototype),ac(bbe.prototype,"scrollThreshold",[jc,obe,rbe],Object.getOwnPropertyDescriptor(bbe.prototype,"scrollThreshold"),bbe.prototype),ac(bbe.prototype,"pageTurningEventTiming",[jc,abe,cbe],Object.getOwnPropertyDescriptor(bbe.prototype,"pageTurningEventTiming"),bbe.prototype),ac(bbe.prototype,"indicator",[lbe,hbe],Object.getOwnPropertyDescriptor(bbe.prototype,"indicator"),bbe.prototype),Abe=ac(bbe.prototype,"autoPageTurningThreshold",[Tc,ube],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 100}}),ac(bbe.prototype,"verticalScrollBar",[_be,el,dbe],Object.getOwnPropertyDescriptor(bbe.prototype,"verticalScrollBar"),bbe.prototype),ac(bbe.prototype,"horizontalScrollBar",[pbe,el,fbe],Object.getOwnPropertyDescriptor(bbe.prototype,"horizontalScrollBar"),bbe.prototype),Pbe=ac(bbe.prototype,"horizontal",[el,Tc,mbe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),wbe=ac(bbe.prototype,"vertical",[el,Tc,gbe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Ibe=ac(bbe.prototype,"cancelInnerEvents",[el,Tc,vbe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),Rbe=ac(bbe.prototype,"scrollEvents",[ybe,Tc,el,xbe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Dbe=ac(bbe.prototype,"pageTurningSpeed",[Tc,Lc,Sbe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.3}}),Obe=ac(bbe.prototype,"pageEvents",[Cbe,Tc,Ebe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Nbe=ac(bbe.prototype,"_sizeMode",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Vbe.Unified}}),Mbe=ac(bbe.prototype,"_direction",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return Hbe.Horizontal}}),Lbe=ac(bbe.prototype,"_scrollThreshold",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.5}}),Bbe=ac(bbe.prototype,"_pageTurningEventTiming",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return.1}}),Fbe=ac(bbe.prototype,"_indicator",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Tbe=bbe))||Tbe)||Tbe)||Tbe)||Tbe));u.PageView=jbe;const Wbe=new gn,qbe=new Bn,Xbe=new Bn,Ybe=new Bn(1,1),Kbe=new Bn,$be=new Bn;function Qbe(e,t){if(t._hadAlignOnce)return;t.alignMode===TTe.ONCE&&(t._hadAlignOnce=!0);const n=t.target;let i;const s=Xbe,o=Ybe;n?(i=n,ETe(e,i,s,o)):i=e.parent;const r=CTe(i),a=i instanceof eP||!i.getComponent(PN),c=a?qbe:i.getComponent(PN).anchorPoint,l=a;e.getPosition(Wbe);const h=e._uiProps.uiTransformComp;let u=Wbe.x,_=Wbe.y;const d=h.anchorPoint,p=e.getScale();if(t.alignFlags&bTe.HORIZONTAL){let e=0,i=0;const a=r.width;l?(e=Ew.left.x,i=Ew.right.x):(e=-c.x*a,i=e+a),e+=t.isAbsoluteLeft?t.left:t.left*a,i-=t.isAbsoluteRight?t.right:t.right*a,n&&(e+=s.x,e*=o.x,i+=s.x,i*=o.x);let _=0,f=d.x,m=p.x;if(m<0&&(f=1-f,m=-m),t.isStretchWidth)_=i-e,0!==m&&(h.width=_/m),u=e+f*_;else if(_=h.width*m,t.isAlignHorizontalCenter){let e=t.isAbsoluteHorizontalCenter?t.horizontalCenter:t.horizontalCenter*a,i=(.5-c.x)*r.width;n&&(e*=o.x,i+=s.x,i*=o.x),u=i+(f-.5)*_+e}else u=t.isAlignLeft?e+f*_:i+(f-1)*_;t._lastSize.width=_}if(t.alignFlags&bTe.VERTICAL){let e=0,i=0;const a=r.height;l?(i=Ew.bottom.y,e=Ew.top.y):(i=-c.y*a,e=i+a),i+=t.isAbsoluteBottom?t.bottom:t.bottom*a,e-=t.isAbsoluteTop?t.top:t.top*a,n&&(i+=s.y,i*=o.y,e+=s.y,e*=o.y);let u=0,f=d.y,m=p.y;if(m<0&&(f=1-f,m=-m),t.isStretchHeight)u=e-i,0!==m&&(h.height=u/m),_=i+f*u;else if(u=h.height*m,t.isAlignVerticalCenter){let e=t.isAbsoluteVerticalCenter?t.verticalCenter:t.verticalCenter*a,i=(.5-c.y)*r.height;n&&(e*=o.y,i+=s.y,i*=o.y),_=i+(f-.5)*u+e}else _=t.isAlignBottom?i+f*u:e+(f-1)*u;t._lastSize.height=u}e.setPosition(u,_,Wbe.z),gn.set(t._lastPos,u,_,Wbe.z)}function Jbe(e){const t=e.getComponent(wTe);if(t&&t.enabled){if(!u.isValid(e,!0))return;eAe.push(t)}const n=e.children;for(const e of n)e.active&&Jbe(e)}function Zbe(){const e=Sw.getScene();if(e){tAe.isAligning=!0,tAe._nodesOrderDirty&&(eAe.length=0,Jbe(e),tAe._nodesOrderDirty=!1);let t=null;const n=tAe._activeWidgetsIterator;for(n.i=0;n.i<eAe.length;++n.i)t=eAe[n.i],t._dirty&&(Qbe(t.node,t),t._dirty=!1);tAe.isAligning=!1}}const eAe=[],tAe=e("widgetManager",u._widgetManager={isAligning:!1,_nodesOrderDirty:!1,_activeWidgetsIterator:new He.MutableForwardIterator(eAe),animationState:null,init(){Sw.on(xw.EVENT_AFTER_SCENE_LAUNCH,Zbe),Sw.on(xw.EVENT_AFTER_UPDATE,Zbe),Aw.instance.on("design-resolution-changed",this.onResized,this);{const e=this.onResized.bind(this);Aw.instance.on("canvas-resize",e),Yh.on("orientation-change",e)}},add(e){this._nodesOrderDirty=!0},remove(e){this._activeWidgetsIterator.remove(e)},onResized(){const e=Sw.getScene();e&&this.refreshWidgetOnResized(e)},refreshWidgetOnResized(e){const t=lS.isNode(e)&&e.getComponent(wTe);t&&t.enabled&&(t.alignMode===TTe.ON_WINDOW_RESIZE||t.alignMode===TTe.ALWAYS)&&t.setDirty();const n=e.children;for(const e of n)this.refreshWidgetOnResized(e)},updateOffsetsToStayPut(e,t){function n(e,t){return Math.abs(e-t)>1e-10?t:e}const i=e.node;let s=i.parent;if(s){const o=Kbe;o.set(0,0);const r=$be;if(r.set(1,1),e.target&&(s=e.target,ETe(i,s,o,r)),!t)return;const a=s._uiProps&&s._uiProps.uiTransformComp,c=a?a.anchorPoint:qbe,l=i._uiProps.uiTransformComp,h=CTe(s),u=l.anchorPoint,_=i.getPosition(),d=bTe,p=i.getScale();let f=0;if(t&d.LEFT){let t=-c.x*h.width;t+=o.x,t*=r.x,f=_.x-u.x*l.width*Math.abs(p.x)-t,e.isAbsoluteLeft||(f/=h.width),f/=r.x,e.left=n(e.left,f)}if(t&d.RIGHT){let t=(1-c.x)*h.width;t+=o.x,f=(t*=r.x)-(_.x+(1-u.x)*l.width*Math.abs(p.x)),e.isAbsoluteRight||(f/=h.width),f/=r.x,e.right=n(e.right,f)}if(t&d.TOP){let t=(1-c.y)*h.height;t+=o.y,f=(t*=r.y)-(_.y+(1-u.y)*l.height*Math.abs(p.y)),e.isAbsoluteTop||(f/=h.height),f/=r.y,e.top=n(e.top,f)}if(t&d.BOT){let t=-c.y*h.height;t+=o.y,t*=r.y,f=_.y-u.y*l.height*Math.abs(p.y)-t,e.isAbsoluteBottom||(f/=h.height),f/=r.y,e.bottom=n(e.bottom,f)}}},updateAlignment:function e(t){const n=t.parent;n&&lS.isNode(n)&&e(n);const i=t.getComponent(wTe);i&&n&&Qbe(t,i)},AlignMode:TTe,AlignFlags:bTe});var nAe;Sw.on(xw.EVENT_INIT,(()=>{tAe.init()}));let iAe=function(t){return e({SafeArea:t,SafeAreaComponent:t}),t}(mc("cc.SafeArea")(nAe=Mc()(nAe=vc(110)(nAe=Ic(nAe=Rc()(nAe=gc(wTe)(nAe=class extends Gh{onEnable(){this.updateArea(),Yh.on("window-resize",this.updateArea,this),Yh.on("orientation-change",this.updateArea,this)}onDisable(){Yh.off("window-resize",this.updateArea,this),Yh.off("orientation-change",this.updateArea,this)}updateArea(){const e=this.node.getComponent(wTe),t=this.node.getComponent(PN);if(!e||!t)return;e.updateAlignment();const n=this.node.position.clone(),i=t.anchorPoint.clone();e.isAlignTop=e.isAlignBottom=e.isAlignLeft=e.isAlignRight=!0;const s=Rw.getVisibleSize(),o=s.width,r=s.height,a=$h.getSafeAreaRect();e.top=r-a.y-a.height,e.bottom=a.y,e.left=a.x,e.right=o-a.x-a.width,e.updateAlignment();const c=this.node.position.clone(),l=i.x-(c.x-n.x)/t.width,h=i.y-(c.y-n.y)/t.height;t.setAnchorPoint(l,h),tAe.add(e)}})||nAe)||nAe)||nAe)||nAe)||nAe)||nAe);var sAe,oAe,rAe,aAe,cAe,lAe,hAe,uAe,_Ae,dAe,pAe,fAe,mAe,gAe,vAe,yAe,xAe,SAe,CAe;u.SafeArea=iAe;let EAe=function(t){return e({UICoordinateTracker:t,UICoordinateTrackerComponent:t}),t}((sAe=mc("cc.UICoordinateTracker"),oAe=Mc(),rAe=Rc(),aAe=vc(110),cAe=Zc(lS),lAe=Uc(),hAe=Zc(bD),uAe=Uc(),_Ae=Uc(),dAe=Uc(),pAe=Zc([tR]),fAe=Uc(),sAe(mAe=oAe(mAe=rAe(mAe=aAe((ac((gAe=class extends Gh{constructor(...e){super(...e),rc(this,"syncEvents",vAe,this),rc(this,"_target",yAe,this),rc(this,"_camera",xAe,this),rc(this,"_useScale",SAe,this),rc(this,"_distance",CAe,this),this._transformPos=new gn,this._viewPos=new gn,this._canMove=!0,this._lastWPos=new gn,this._lastCameraPos=new gn}get target(){return this._target}set target(e){this._target!==e&&(this._target=e,this._checkCanMove())}get camera(){return this._camera}set camera(e){this._camera!==e&&(this._camera=e,this._checkCanMove())}get useScale(){return this._useScale}set useScale(e){this._useScale!==e&&(this._useScale=e)}get distance(){return this._distance}set distance(e){this._distance!==e&&(this._distance=e)}onEnable(){this._checkCanMove()}update(){const e=this.node.worldPosition,t=this._camera;if(this._canMove&&t&&t.camera&&(!this._lastWPos.equals(e)||!this._lastCameraPos.equals(t.node.worldPosition))&&(this._lastWPos.set(e),this._lastCameraPos.set(t.node.worldPosition),t.camera.update(),t.convertToUINode(e,this._target,this._transformPos),this._useScale&&gn.transformMat4(this._viewPos,this.node.worldPosition,t.camera.matView),this.syncEvents.length>0)){const e=this._distance/Math.abs(this._viewPos.z);tR.emitEvents(this.syncEvents,this._transformPos,e)}}_checkCanMove(){this._canMove=!(!this._camera||!this._target)}}).prototype,"target",[cAe,lAe],Object.getOwnPropertyDescriptor(gAe.prototype,"target"),gAe.prototype),ac(gAe.prototype,"camera",[hAe,uAe],Object.getOwnPropertyDescriptor(gAe.prototype,"camera"),gAe.prototype),ac(gAe.prototype,"useScale",[_Ae],Object.getOwnPropertyDescriptor(gAe.prototype,"useScale"),gAe.prototype),ac(gAe.prototype,"distance",[dAe],Object.getOwnPropertyDescriptor(gAe.prototype,"distance"),gAe.prototype),vAe=ac(gAe.prototype,"syncEvents",[pAe,Tc,fAe],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),yAe=ac(gAe.prototype,"_target",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),xAe=ac(gAe.prototype,"_camera",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),SAe=ac(gAe.prototype,"_useScale",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!0}}),CAe=ac(gAe.prototype,"_distance",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),mAe=gAe))||mAe)||mAe)||mAe)||mAe));var TAe;const bAe=[Ex.TOUCH_START,Ex.TOUCH_END,Ex.TOUCH_MOVE,Ex.MOUSE_DOWN,Ex.MOUSE_MOVE,Ex.MOUSE_UP,Ex.MOUSE_ENTER,Ex.MOUSE_LEAVE,Ex.MOUSE_WHEEL];function AAe(e){e.propagationStopped=!0}let PAe=function(t){return e({BlockInputEvents:t,BlockInputEventsComponent:t}),t}(mc("cc.BlockInputEvents")(TAe=Mc()(TAe=Rc()(TAe=class extends Gh{onEnable(){for(let e=0;e<bAe.length;e++)this.node.on(bAe[e],AAe,this)}onDisable(){for(let e=0;e<bAe.length;e++)this.node.off(bAe[e],AAe,this)}})||TAe)||TAe)||TAe);var wAe,IAe,RAe,DAe,OAe,NAe,MAe,LAe,BAe,FAe,zAe;let UAe=e("SubContextView",(wAe=mc("cc.SubContextView"),IAe=Mc(),RAe=vc(110),DAe=gc(PN),OAe=Rc(),NAe=Uc(),MAe=Uc(),wAe(LAe=IAe(LAe=RAe(LAe=DAe(LAe=OAe((ac((BAe=class extends Gh{get designResolutionSize(){return this._designResolutionSize}set designResolutionSize(e){}get fps(){return this._fps}set fps(e){this._fps!==e&&(this._fps=e,this._updateInterval=1e3/e)}constructor(){super(),rc(this,"_fps",FAe,this),this._sprite=void 0,this._imageAsset=void 0,this._texture=void 0,this._updatedTime=0,this._updateInterval=0,this._openDataContext=void 0,this._content=void 0,rc(this,"_designResolutionSize",zAe,this),this._content=new lS("content"),this._content.hideFlags|=rl.Flags.DontSave|rl.Flags.HideInHierarchy,this._sprite=null,this._imageAsset=new hm,this._openDataContext=null,this._updatedTime=performance.now(),this._texture=new bm}onLoad(){VD.getOpenDataContext?(this._updateInterval=1e3/this._fps,this._openDataContext=VD.getOpenDataContext(),this._initSharedCanvas(),this._initContentNode(),this._updateSubContextView(),this._updateContentLayer()):this.enabled=!1}onEnable(){this._registerNodeEvent()}onDisable(){this._unregisterNodeEvent()}_initSharedCanvas(){if(this._openDataContext){const e=this._openDataContext.canvas;let t=this._designResolutionSize.width,n=this._designResolutionSize.height;e.width=t,e.height=n}}_initContentNode(){if(this._openDataContext){const e=this._openDataContext.canvas,t=this._imageAsset;if(t.reset(e),this._texture.image=t,this._texture.create(e.width,e.height),this._sprite=this._content.getComponent(kF),this._sprite||(this._sprite=this._content.addComponent(kF)),this._sprite.spriteFrame)this._sprite.spriteFrame.texture=this._texture;else{const e=new $D;e.texture=this._texture,this._sprite.spriteFrame=e}this._content.parent=this.node}}_updateSubContextView(){if(!this._openDataContext)return;const e=this.node.getComponent(PN),t=this._content.getComponent(PN),n=e.width/t.width,i=e.height/t.height,s=n>i?i:n;t.width*=s,t.height*=s;const o=Rw.getViewportRect(),r=t.getBoundingBoxToWorld(),a=Rw.getVisibleSize(),c=Yh.devicePixelRatio,l=(o.width*(r.x/a.width)+o.x)/c,h=(o.height*(r.y/a.height)+o.y)/c,u=o.width*(r.width/a.width)/c,_=o.height*(r.height/a.height)/c;this._openDataContext.postMessage({fromEngine:!0,type:"engine",event:"viewport",x:l,y:h,width:u,height:_})}_updateSubContextTexture(){const e=this._imageAsset;if(!e||!this._openDataContext)return;if(e.width<=0||e.height<=0)return;const t=this._openDataContext.canvas;e.reset(t),(t.width>e.width||t.height>e.height)&&this._texture.create(t.width,t.height),this._texture.uploadData(t)}_registerNodeEvent(){this.node.on(Ex.TRANSFORM_CHANGED,this._updateSubContextView,this),this.node.on(Ex.SIZE_CHANGED,this._updateSubContextView,this),this.node.on(Ex.LAYER_CHANGED,this._updateContentLayer,this)}_unregisterNodeEvent(){this.node.off(Ex.TRANSFORM_CHANGED,this._updateSubContextView,this),this.node.off(Ex.SIZE_CHANGED,this._updateSubContextView,this),this.node.off(Ex.LAYER_CHANGED,this._updateContentLayer,this)}_updateContentLayer(){this._content.layer=this.node.layer}update(e){void 0!==e?performance.now()-this._updatedTime>=this._updateInterval&&(this._updatedTime+=this._updateInterval,this._updateSubContextTexture()):this._updateSubContextTexture()}onDestroy(){this._content.destroy(),this._texture.destroy(),this._sprite&&this._sprite.destroy(),this._imageAsset.destroy(),this._openDataContext=null}}).prototype,"designResolutionSize",[NAe],Object.getOwnPropertyDescriptor(BAe.prototype,"designResolutionSize"),BAe.prototype),ac(BAe.prototype,"fps",[MAe],Object.getOwnPropertyDescriptor(BAe.prototype,"fps"),BAe.prototype),FAe=ac(BAe.prototype,"_fps",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 60}}),zAe=ac(BAe.prototype,"_designResolutionSize",[Tc],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new kn(640,960)}}),LAe=BAe))||LAe)||LAe)||LAe)||LAe)||LAe));var GAe;u.SubContextView=UAe;let VAe=e("UIReorderComponent",mc("cc.UIReorderComponent")(GAe=class{constructor(){D(1408,"UIReorderComponent")}})||GAe);u.UIReorderComponent=VAe,u.ButtonComponent=tve,ke.setClassAlias(tve,"cc.ButtonComponent"),u.EditBoxComponent=lye,ke.setClassAlias(lye,"cc.EditBoxComponent"),u.LayoutComponent=vxe,ke.setClassAlias(vxe,"cc.LayoutComponent"),u.ProgressBarComponent=Hxe,ke.setClassAlias(Hxe,"cc.ProgressBarComponent"),u.ScrollViewComponent=bCe,ke.setClassAlias(bCe,"cc.ScrollViewComponent"),u.ScrollBarComponent=xSe,ke.setClassAlias(xSe,"cc.ScrollBarComponent"),u.SliderComponent=KCe,ke.setClassAlias(KCe,"cc.SliderComponent"),u.ToggleComponent=gEe,ke.setClassAlias(gEe,"cc.ToggleComponent"),u.ToggleContainerComponent=IEe,ke.setClassAlias(IEe,"cc.ToggleContainerComponent"),u.WidgetComponent=wTe,ke.setClassAlias(wTe,"cc.WidgetComponent"),u.PageViewComponent=jbe,ke.setClassAlias(jbe,"cc.PageViewComponent"),u.PageViewIndicatorComponent=$Te,ke.setClassAlias($Te,"cc.PageViewIndicatorComponent"),u.SafeAreaComponent=iAe,ke.setClassAlias(iAe,"cc.SafeAreaComponent"),ke.setClassAlias(EAe,"cc.UICoordinateTrackerComponent"),u.BlockInputEventsComponent=PAe,ke.setClassAlias(PAe,"cc.BlockInputEventsComponent")}}}));
